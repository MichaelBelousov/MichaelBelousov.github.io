{"version":3,"sources":["webpack:///./src/pages/blog.tsx","webpack:///./src/pages/blog.module.scss"],"names":["props","perYear","React","useMemo","data","allMarkdownRemark","edges","reduce","prev","node","frontmatter","date","match","year","key","has","set","get","push","Map","Array","from","entries","map","fields","slug","styles","blogLink","title","pageQuery"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEe,yEAASA,KAAT,EAAqB;AAClC,MAAMC,OAAO,GAAGC,4CAAK,CAACC,OAAN,CACd;AAAA,WACEH,KAAK,CAACI,IAAN,CAAWC,iBAAX,CAA6BC,KAA7B,CAAmCC,MAAnC,CAA0C,UAACC,IAAD,QAAoB;AAAA,UAAXC,IAAW,QAAXA,IAAW;;AAAA,kCAC7CA,IAAI,CAACC,WAAL,CAAiBC,IAAjB,CAAsBC,KAAtB,CAA4B,MAA5B,CAD6C;AAAA,UACrDC,IADqD;;AAE5D,UAAMC,GAAG,GAAGD,IAAZ;AACA,UAAI,CAACL,IAAI,CAACO,GAAL,CAASD,GAAT,CAAL,EAAoBN,IAAI,CAACQ,GAAL,CAASF,GAAT,EAAc,EAAd;AACpBN,UAAI,CAACS,GAAL,CAASH,GAAT,EAAcI,IAAd,CAAmBT,IAAnB;AACA,aAAOD,IAAP;AACD,KAND,EAMG,IAAIW,GAAJ,EANH,CADF;AAAA,GADc,EASd,EATc,CAAhB;AAYA,sBACE,2DAAC,kEAAD;AAAQ,aAAS,EAAC;AAAlB,KACGC,KAAK,CAACC,IAAN,CAAWpB,OAAO,CAACqB,OAAR,EAAX,EAA8B;AAAA,QAAET,IAAF;AAAA,QAAQP,KAAR;AAAA,wBAC7B;AAAK,SAAG,EAAEO;AAAV,OACGA,IADH,eAEE,uEACGP,KAAK,CAACiB,GAAN,CAAU,UAACd,IAAD,EAAOK,GAAP;AAAA,0BACT;AAAI,WAAG,EAAEA;AAAT,sBACE;AAAG,YAAI,EAAEL,IAAI,CAACe,MAAL,CAAYC,IAArB;AAA2B,iBAAS,EAAEC,wDAAM,CAACC;AAA7C,sBACE,2EAASlB,IAAI,CAACC,WAAL,CAAiBkB,KAA1B,CADF,CADF,CADS;AAAA,KAAV,CADH,CAFF,CAD6B;AAAA,GAA9B,CADH,CADF;AAkBD;AAEM,IAAMC,SAAS,eAAf,C;;;;;;;ACtCP;AACA,kBAAkB,2C","file":"component---src-pages-blog-tsx-372619fcd7f06bb25176.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport styles from './blog.module.scss'\n\nexport default function(props: any) {\n  const perYear = React.useMemo(\n    () =>\n      props.data.allMarkdownRemark.edges.reduce((prev, { node }) => {\n        const [year] = node.frontmatter.date.match(/\\d+$/)\n        const key = year\n        if (!prev.has(key)) prev.set(key, [])\n        prev.get(key).push(node)\n        return prev\n      }, new Map<string, string[]>()),\n    []\n  )\n\n  return (\n    <Layout pageTitle=\"Blog\">\n      {Array.from(perYear.entries(), ([year, edges]) => (\n        <div key={year}>\n          {year}\n          <ul>\n            {edges.map((node, key) => (\n              <li key={key}>\n                <a href={node.fields.slug} className={styles.blogLink}>\n                  <strong>{node.frontmatter.title}</strong>\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ))}\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      limit: 100\n    ) {\n      edges {\n        node {\n          html\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blogLink\":\"blog-module--blogLink--1dLLs\"};"],"sourceRoot":""}