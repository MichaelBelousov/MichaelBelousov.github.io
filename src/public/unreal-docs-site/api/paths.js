(function() {
var exports = {};
exports.id = 9763;
exports.ids = [9763,347];
exports.modules = {

/***/ 75214:
/***/ (function(module) {

"use strict";
module.exports = require("@itwin/itwinui-illustrations-react/cjs/illustrations/401");

/***/ }),

/***/ 23563:
/***/ (function(module) {

"use strict";
module.exports = require("@itwin/itwinui-illustrations-react/cjs/illustrations/403");

/***/ }),

/***/ 5142:
/***/ (function(module) {

"use strict";
module.exports = require("@itwin/itwinui-illustrations-react/cjs/illustrations/404");

/***/ }),

/***/ 26595:
/***/ (function(module) {

"use strict";
module.exports = require("@itwin/itwinui-illustrations-react/cjs/illustrations/500");

/***/ }),

/***/ 75777:
/***/ (function(module) {

"use strict";
module.exports = require("@itwin/itwinui-illustrations-react/cjs/illustrations/502");

/***/ }),

/***/ 4142:
/***/ (function(module) {

"use strict";
module.exports = require("@itwin/itwinui-illustrations-react/cjs/illustrations/503");

/***/ }),

/***/ 42777:
/***/ (function(module) {

"use strict";
module.exports = require("@itwin/itwinui-illustrations-react/cjs/illustrations/Error");

/***/ }),

/***/ 29165:
/***/ (function(module) {

"use strict";
module.exports = require("@itwin/itwinui-illustrations-react/cjs/illustrations/Redirect");

/***/ }),

/***/ 46573:
/***/ (function(module) {

"use strict";
module.exports = require("@itwin/itwinui-illustrations-react/cjs/illustrations/TimedOut");

/***/ }),

/***/ 57425:
/***/ (function(module) {

"use strict";
module.exports = require("@mdx-js/react");

/***/ }),

/***/ 44787:
/***/ (function(module) {

"use strict";
module.exports = require("@tippyjs/react");

/***/ }),

/***/ 52167:
/***/ (function(module) {

"use strict";
module.exports = require("axios");

/***/ }),

/***/ 66303:
/***/ (function(module) {

"use strict";
module.exports = require("chroma-js");

/***/ }),

/***/ 59003:
/***/ (function(module) {

"use strict";
module.exports = require("classnames");

/***/ }),

/***/ 14464:
/***/ (function(module) {

"use strict";
module.exports = require("client-oauth2");

/***/ }),

/***/ 11004:
/***/ (function(module) {

"use strict";
module.exports = require("js-beautify");

/***/ }),

/***/ 46517:
/***/ (function(module) {

"use strict";
module.exports = require("lodash");

/***/ }),

/***/ 44150:
/***/ (function(module) {

"use strict";
module.exports = require("natsort");

/***/ }),

/***/ 3280:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/app-router-context.js");

/***/ }),

/***/ 92796:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/head-manager-context.js");

/***/ }),

/***/ 34014:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/i18n/normalize-locale-path.js");

/***/ }),

/***/ 78524:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/is-plain-object.js");

/***/ }),

/***/ 95832:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/loadable.js");

/***/ }),

/***/ 78020:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/mitt.js");

/***/ }),

/***/ 64406:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/page-path/denormalize-page-path.js");

/***/ }),

/***/ 24964:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/router-context.js");

/***/ }),

/***/ 11751:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/add-path-prefix.js");

/***/ }),

/***/ 10299:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/format-next-pathname-info.js");

/***/ }),

/***/ 23938:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/format-url.js");

/***/ }),

/***/ 29565:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/get-asset-path-from-route.js");

/***/ }),

/***/ 35789:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/get-next-pathname-info.js");

/***/ }),

/***/ 1428:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/is-dynamic.js");

/***/ }),

/***/ 28854:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/parse-path.js");

/***/ }),

/***/ 91292:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/parse-relative-url.js");

/***/ }),

/***/ 34567:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/path-has-prefix.js");

/***/ }),

/***/ 80979:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/querystring.js");

/***/ }),

/***/ 93297:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/remove-trailing-slash.js");

/***/ }),

/***/ 36052:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/resolve-rewrites.js");

/***/ }),

/***/ 84226:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/route-matcher.js");

/***/ }),

/***/ 95052:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/route-regex.js");

/***/ }),

/***/ 59232:
/***/ (function(module) {

"use strict";
module.exports = require("next/dist/shared/lib/utils.js");

/***/ }),

/***/ 40968:
/***/ (function(module) {

"use strict";
module.exports = require("next/head");

/***/ }),

/***/ 71853:
/***/ (function(module) {

"use strict";
module.exports = require("next/router");

/***/ }),

/***/ 3712:
/***/ (function(module) {

"use strict";
module.exports = require("oidc-client");

/***/ }),

/***/ 16689:
/***/ (function(module) {

"use strict";
module.exports = require("react");

/***/ }),

/***/ 66405:
/***/ (function(module) {

"use strict";
module.exports = require("react-dom");

/***/ }),

/***/ 62154:
/***/ (function(module) {

"use strict";
module.exports = require("react-table");

/***/ }),

/***/ 84466:
/***/ (function(module) {

"use strict";
module.exports = require("react-transition-group");

/***/ }),

/***/ 20997:
/***/ (function(module) {

"use strict";
module.exports = require("react/jsx-runtime");

/***/ }),

/***/ 67915:
/***/ (function(module) {

"use strict";
module.exports = require("styled-jsx");

/***/ }),

/***/ 99816:
/***/ (function(module) {

"use strict";
module.exports = require("styled-jsx/style");

/***/ }),

/***/ 23617:
/***/ (function(module) {

"use strict";
module.exports = import("axios-retry");;

/***/ }),

/***/ 61024:
/***/ (function(module) {

"use strict";
module.exports = import("mermaid");;

/***/ }),

/***/ 15941:
/***/ (function(module) {

"use strict";
module.exports = import("swr");;

/***/ }),

/***/ 9926:
/***/ (function(module) {

"use strict";
module.exports = import("zod");;

/***/ }),

/***/ 24932:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: default

;// CONCATENATED MODULE: external "@itwin/itwinui-illustrations-react"
var itwinui_illustrations_react_namespaceObject = require("@itwin/itwinui-illustrations-react");
// EXTERNAL MODULE: ./src/components/Theme.tsx
var components_Theme = __webpack_require__(39623);
// EXTERNAL MODULE: consume shared module (default) itwinui-v2@^2.12.0 (singleton) (fallback: ./node_modules/itwinui-v2/esm/index.js) (eager)
var index_js_eager_ = __webpack_require__(6227);
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/pages/NotFound/NotFound.tsx




function NotFound_NotFound() {
  return /*#__PURE__*/_jsx(Theme, {
    id: "error-page",
    children: /*#__PURE__*/_jsx(NonIdealState, {
      svg: /*#__PURE__*/_jsx(Svg404, {}),
      heading: "Page not found",
      description: "You don't have permissions to this page or this page does not exist."
    })
  });
}
// EXTERNAL MODULE: ./src/components/PageMetadata/PageMetadata.tsx
var PageMetadata_PageMetadata = __webpack_require__(45744);
// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
;// CONCATENATED MODULE: ./src/hooks/useWait.ts

function useWait_useWait(ms) {
  const {
    0: isLoaded,
    1: setIsLoaded
  } = useState(false);
  useEffect(() => {
    if (false) {}
  }, [setIsLoaded, ms]);
  return isLoaded;
}
;// CONCATENATED MODULE: ./src/pages/404.tsx
__webpack_require__(86292);










function NotFoundPage() {
  const isFakeLoaded = useWait(1000);
  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [/*#__PURE__*/_jsx(PageMetadata, {
      title: "Page Not Found | iTwin Platform"
    }), isFakeLoaded ? /*#__PURE__*/_jsx(NotFound, {}) : /*#__PURE__*/_jsx("div", {
      id: "error-page",
      children: /*#__PURE__*/_jsx(Theme, {
        children: /*#__PURE__*/_jsx(ProgressRadial, {
          indeterminate: true,
          className: "page-center-container"
        })
      })
    })]
  });
}

/* harmony default export */ var _404 = ((/* unused pure expression or super */ null && (NotFoundPage)));

/***/ }),

/***/ 57233:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export ApiKeysApi */
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52167);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2599);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_1__]);
_client_env__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



class ApiKeysApi {
  constructor(token) {
    this.token = token;
  }

  get baseUrl() {
    return env.REPORTING_API_KEYS_URL;
  }

  async getAllApiKeys() {
    const result = await this.getAll('/keys');
    return result;
  }

  async getAll(path) {
    const result = [];
    let continuationToken = '';
    const params = new URLSearchParams({
      $continuationToken: '',
      revoked: 'false'
    });

    do {
      const response = await axios.get(path, {
        params: params,
        headers: this.getAuthorizationHeaders(),
        baseURL: this.baseUrl
      });
      continuationToken = response.data.continuationToken;
      params.set('$continuationToken', continuationToken ? continuationToken : '');
      result.push(...response.data.apiKeys);
    } while (continuationToken);

    return result;
  }

  async createApiKey(apiKey) {
    return await axios.post('/keys', apiKey, {
      baseURL: this.baseUrl,
      headers: _objectSpread(_objectSpread({}, this.getAuthorizationHeaders()), {}, {
        'Content-Type': 'application/json'
      })
    });
  }

  async updateApiKey(apiKeyId, apiKey) {
    await axios.patch(`/keys/${apiKeyId}`, apiKey, {
      baseURL: this.baseUrl,
      headers: _objectSpread(_objectSpread({}, this.getAuthorizationHeaders()), {}, {
        'Content-Type': 'application/json'
      })
    });
  }

  async getApiKey(apiKey) {
    const response = await axios.get(`/keys/${apiKey}`, {
      baseURL: this.baseUrl,
      headers: _objectSpread({}, this.getAuthorizationHeaders())
    });
    return response.data;
  }

  async revokeApiKey(id) {
    await axios.delete(`keys/${id}`, {
      headers: this.getAuthorizationHeaders(),
      baseURL: this.baseUrl
    });
  }

  getAuthorizationHeaders() {
    return {
      Authorization: `Bearer ${this.token}`
    };
  }

}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 59923:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony exports ApiMetadata, apiMetadata */
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52167);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2599);
/* harmony import */ var _constants_SchemaExport__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(66053);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_1__]);
_client_env__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];



class ApiMetadata {
  constructor(token) {
    this.token = token;
  }

  get authHeader() {
    return this.token ? {
      Authorization: `Bearer ${this.token}`
    } : {};
  }

  get baseUrl() {
    return _client_env__WEBPACK_IMPORTED_MODULE_1__/* ["default"].API_METADATA_API_URL */ .Z.API_METADATA_API_URL;
  }
  /**
   * Returns a document of exported API in specified format.
   * @param apiId {string} Unique identifier.
   * @param format {SchemaExportNames} Export format.
   */


  async exportApi(apiId, format) {
    if (!apiId) {
      throw new Error(`Parameter "apiId" not specified.`);
    }

    let operation;

    switch (format) {
      case _constants_SchemaExport__WEBPACK_IMPORTED_MODULE_2__/* .SchemaExportNames.Swagger */ .l.Swagger:
        operation = _constants_SchemaExport__WEBPACK_IMPORTED_MODULE_2__/* .SchemaExportOperations.Swagger */ .d.Swagger;
        break;

      case _constants_SchemaExport__WEBPACK_IMPORTED_MODULE_2__/* .SchemaExportNames.OpenapiJson */ .l.OpenapiJson:
        operation = _constants_SchemaExport__WEBPACK_IMPORTED_MODULE_2__/* .SchemaExportOperations.OpenapiJson */ .d.OpenapiJson;
        break;

      default:
        operation = _constants_SchemaExport__WEBPACK_IMPORTED_MODULE_2__/* .SchemaExportOperations.Swagger */ .d.Swagger;
        break;
    }

    const query = `${apiId}/${operation}`;
    const headers = this.authHeader;
    const apiResponse = await axios__WEBPACK_IMPORTED_MODULE_0___default().get(query, {
      headers: headers,
      baseURL: this.baseUrl
    });
    return apiResponse.data;
  }

}
const apiMetadata = new ApiMetadata(); // creates singleton


__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 14096:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u": function() { return /* binding */ apisApi; }
/* harmony export */ });
/* unused harmony export ApisApi */
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52167);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var axios_retry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(23617);
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2599);
/* harmony import */ var _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(67105);
/* harmony import */ var _constants_Tags__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(54826);
/* harmony import */ var _constants_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(75767);
/* harmony import */ var _constants_defaultApiGroups__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(35735);
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(93266);
/* harmony import */ var _models_apiWithTag__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(88983);
/* harmony import */ var _next_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(50743);
/* harmony import */ var _services_mdService__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(88252);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(35797);
/* harmony import */ var _utils_NextCache__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(87901);
/* harmony import */ var _hooks_swr__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(44273);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios_retry__WEBPACK_IMPORTED_MODULE_1__, _client_env__WEBPACK_IMPORTED_MODULE_2__, _hooks_swr__WEBPACK_IMPORTED_MODULE_11__]);
([axios_retry__WEBPACK_IMPORTED_MODULE_1__, _client_env__WEBPACK_IMPORTED_MODULE_2__, _hooks_swr__WEBPACK_IMPORTED_MODULE_11__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
















class ApisApi {
  constructor(sasToken) {
    this.sasToken = sasToken;
  }

  get authHeader() {
    return this.sasToken ? {
      Authorization: `SharedAccessSignature ${this.sasToken}`
    } : {};
  }

  get baseUrl() {
    return _client_env__WEBPACK_IMPORTED_MODULE_2__/* ["default"].APIM_MANAGEMENT_URL */ .Z.APIM_MANAGEMENT_URL;
  }

  get apisApiClient() {
    const client = axios__WEBPACK_IMPORTED_MODULE_0___default().create({
      headers: this.authHeader,
      baseURL: this.baseUrl,
      timeout: _next_utils__WEBPACK_IMPORTED_MODULE_12__/* .NextUtils.isPreloading */ .l.isPreloading ? _constants_constants__WEBPACK_IMPORTED_MODULE_4__/* .REQUEST_TIMEOUT */ .Gf : 0
    });

    if (_next_utils__WEBPACK_IMPORTED_MODULE_12__/* .NextUtils.isPreloading */ .l.isPreloading) {
      (0,axios_retry__WEBPACK_IMPORTED_MODULE_1__["default"])(client, {
        retries: 3,
        shouldResetTimeout: true,
        retryDelay: (retryCount, error) => {
          console.log(`${error.message}. Error: ${JSON.stringify(error)}`);
          console.log(`retry attempt: ${retryCount}`);
          return 5000; // time interval between retries
        }
      });
    }

    return client;
  }

  async getApisList() {
    const key = `getApisList:${this.sasToken}`;
    return await _utils_NextCache__WEBPACK_IMPORTED_MODULE_10__/* .nextCache.getOrCreate */ .c.getOrCreate(key, async () => {
      const params = new URLSearchParams({
        '$filter': 'api/isCurrent eq true',
        'api-version': '2021-08-01',
        '$top': _constants_constants__WEBPACK_IMPORTED_MODULE_4__/* .defaultPageSize.toString */ .dG.toString()
      });
      const apis = [];
      let nextLink;

      try {
        do {
          const response = await this.apisApiClient.get(`/apisByTags`, {
            params: params
          });
          nextLink = response.data.nextLink;
          response.data.value.forEach(api => apis.push(new _models_apiWithTag__WEBPACK_IMPORTED_MODULE_7__/* .ApiWithTag */ .o(api)));
          params.set('$skip', apis.length.toString());
        } while (nextLink);

        return apis;
      } catch (err) {
        return [];
      }
    });
  }

  async getApisByTag(tag) {
    const apis = await this.getApisList();

    try {
      if (tag !== null) {
        const apisByTag = apis.filter(api => api.tags.includes(tag)).map(x => ({
          id: x.id,
          name: x.name,
          displayName: x.displayName,
          serviceUrl: x.serviceUrl,
          protocols: x.protocols,
          description: x.description,
          path: x.path,
          apiVersion: x.apiVersion,
          apiRevision: x.apiRevision,
          authenticationSettings: x.authenticationSettings,
          tags: apis.filter(api => api.id === x.id).flatMap(api => api.tags)
        }));
        return apisByTag;
      } else return [];
    } catch (err) {
      return [];
    }
  }

  async getUniqueApisByTag(tag, includeTechPreview = true) {
    const apis = await this.getApisByTag(tag);
    return (0,_hooks_swr__WEBPACK_IMPORTED_MODULE_11__/* .filterUniqueApis */ .lc)(apis, includeTechPreview);
  }

  async getApiVersions(path, searchQuery) {
    const key = `getApiVersions:${path}:${this.sasToken}`;
    return await _utils_NextCache__WEBPACK_IMPORTED_MODULE_10__/* .nextCache.getOrCreate */ .c.getOrCreate(key, async () => {
      const params = new URLSearchParams({
        'api-version': '2021-08-01',
        '$filter': `isCurrent eq true and path eq '${path}'`
      });

      if (searchQuery?.skip) {
        params.append('$skip', searchQuery.skip.toString());
      }

      if (searchQuery?.top) {
        params.append('$top', searchQuery.top.toString());
      }

      try {
        const response = await this.apisApiClient.get(`/apis`, {
          params: params
        });
        const page = response.data.value.map(x => new _models__WEBPACK_IMPORTED_MODULE_6__.Api(x));
        return page;
      } catch (err) {
        return [];
      }
    });
  }
  /**
   * Returns tags associated with specified operation.
   * @param operationId {string} ARM-formatted operation identifier.
   */


  async getOperationTags(operationId) {
    if (!operationId) {
      throw new Error(`Parameter "operationId" not specified.`);
    }

    const params = new URLSearchParams();
    params.append('api-version', '2021-08-01');

    try {
      const result = await this.apisApiClient.get(`${operationId}/tags`, {
        params: params
      });
      return result.data.value.map(contract => new _models__WEBPACK_IMPORTED_MODULE_6__.Tag(contract));
    } catch (err) {
      return [];
    }
  }

  async getOperations(apiName, searchQuery = {
    pattern: '',
    tags: [],
    grouping: 'none'
  }) {
    if (!apiName) {
      throw new Error(`Parameter "apiId" not specified.`);
    }

    const key = `getOperations:${apiName}:${this.sasToken}`;
    return await _utils_NextCache__WEBPACK_IMPORTED_MODULE_10__/* .nextCache.getOrCreate */ .c.getOrCreate(key, async () => {
      const params = new URLSearchParams();
      params.append('api-version', '2021-08-01');
      const skip = searchQuery && searchQuery.skip || 0;
      const take = searchQuery && searchQuery.take || _constants_constants__WEBPACK_IMPORTED_MODULE_4__/* .defaultPageSize.toString */ .dG.toString();
      let query = `/apis/${apiName}/operations?$top=${take}&$skip=${skip}`;
      const operations = [];
      let nextLink;

      try {
        do {
          const result = await this.apisApiClient.get(query, {
            params: params
          });
          nextLink = result.data.nextLink;
          result.data.value.forEach(c => operations.push(new _models__WEBPACK_IMPORTED_MODULE_6__.Operation(c)));
          query = `/apis/${apiName}/operations?$top=${take}&$skip=${operations.length}`;
        } while (nextLink);
      } catch (err) {
        console.log(err);
      }

      return operations;
    });
  }
  /**
   * Returns Tag/Operation pairs matching search request (if specified).
   * @param searchRequest Search request definition.
   */


  async getOperationsByTags(apiId, searchQuery = {}) {
    if (!apiId) {
      throw new Error(`Parameter "apiId" not specified.`);
    }

    const key = `getOperationsByTags:${apiId}:${this.sasToken}`;
    return await _utils_NextCache__WEBPACK_IMPORTED_MODULE_10__/* .nextCache.getOrCreate */ .c.getOrCreate(key, async () => {
      const params = new URLSearchParams({
        'api-version': '2021-08-01',
        '$skip': (searchQuery.skip ?? 0).toString(),
        '$top': (searchQuery.take ?? _constants_constants__WEBPACK_IMPORTED_MODULE_4__/* .defaultPageSize */ .dG).toString(),
        'includeNotTaggedOperations': 'true'
      });
      const odataFilterEntries = [];

      if (searchQuery.tags && searchQuery.tags.length > 0) {
        const tagFilterEntries = searchQuery.tags.map(tag => `tag/id eq '${_utils__WEBPACK_IMPORTED_MODULE_9__/* .Utils.getResourceName */ .c.getResourceName('tags', tag.id)}'`);
        odataFilterEntries.push(`(${tagFilterEntries.join(' or ')})`);
      }

      if (searchQuery.pattern) {
        const pattern = _utils__WEBPACK_IMPORTED_MODULE_9__/* .Utils.escapeValueForODataFilter */ .c.escapeValueForODataFilter(searchQuery.pattern);
        odataFilterEntries.push(`(contains(operation/${searchQuery.propertyName || 'name'},'${encodeURIComponent(pattern)}'))`);
      }

      if (odataFilterEntries.length > 0) {
        params.append('$filter', odataFilterEntries.join(' and '));
      }

      let nextLink;
      const taggedOperations = [];

      try {
        do {
          const result = await this.apisApiClient.get(`apis/${apiId}/operationsByTags`, {
            params: params
          });
          nextLink = result.data.nextLink;
          taggedOperations.push(...result.data.value);
          params.set('$skip', taggedOperations.length.toString());
        } while (nextLink);
      } catch (err) {
        console.log(err);
      }

      const operations = taggedOperations.map(operationWithTag => {
        const tagContract = operationWithTag.tag ? _utils__WEBPACK_IMPORTED_MODULE_9__/* .Utils.armifyContract */ .c.armifyContract('tags', operationWithTag.tag) : null;
        const operationContract = _utils__WEBPACK_IMPORTED_MODULE_9__/* .Utils.armifyContract */ .c.armifyContract('operations', operationWithTag.operation);
        const operation = new _models__WEBPACK_IMPORTED_MODULE_6__.Operation(operationContract);
        operation.tags = tagContract ? [tagContract.properties.displayName] : [];
        return operation;
      });
      const operationsWithTags = operations.map(operation => {
        const tags = new Set(operations.filter(o => o.id === operation.id).flatMap(operation => operation.tags));
        operation.tags = Array.from(tags);
        return operation;
      });
      const tagGroups = operationsWithTags.reduce((tagGroups, operation) => {
        const hasDisplayableTags = operation.tags.filter(tag => tag !== _constants_Tags__WEBPACK_IMPORTED_MODULE_13__/* .TechPreviewTag */ .n && tag !== _constants_Tags__WEBPACK_IMPORTED_MODULE_13__/* .DeprecatedTag */ .l).length !== 0;

        if (hasDisplayableTags) {
          for (const tagName of operation.tags) {
            if (tagName !== _constants_Tags__WEBPACK_IMPORTED_MODULE_13__/* .TechPreviewTag */ .n && tagName !== _constants_Tags__WEBPACK_IMPORTED_MODULE_13__/* .DeprecatedTag */ .l) {
              let tagGroup = tagGroups.filter(tag => tag.tag === tagName)[0];

              if (!tagGroup) {
                tagGroup = new _models__WEBPACK_IMPORTED_MODULE_6__.TagGroup();
                tagGroup.tag = tagName;
                tagGroups.push(tagGroup);
              }

              const existingOperation = tagGroup.items.filter(op => op.id === operation.id).length > 0;

              if (!existingOperation) {
                tagGroup.items.push(operation);
              }
            }
          }
        } else {
          let tagGroup = tagGroups.filter(tag => tag.tag === 'Untagged')[0];

          if (!tagGroup) {
            tagGroup = new _models__WEBPACK_IMPORTED_MODULE_6__.TagGroup();
            tagGroup.tag = 'Untagged';
            tagGroups.push(tagGroup);
          }

          const existingOperation = tagGroup.items.filter(op => op.id === operation.id).length > 0;

          if (!existingOperation) {
            tagGroup.items.push(operation);
          }
        }

        return tagGroups;
      }, []);
      return tagGroups;
    });
  }

  async getOperationsByTagsFullData(apiName) {
    const [operations, operationsByTag] = await Promise.all([this.getOperations(apiName), this.getOperationsByTags(apiName)]);

    for (const tagGroup of operationsByTag) {
      tagGroup.items = tagGroup.items.map(taggedOperation => {
        const fullOperationData = operations.find(o => o.id === taggedOperation.id);

        if (fullOperationData) {
          fullOperationData.tags = taggedOperation.tags;
        }

        return fullOperationData;
      }).filter(_utils__WEBPACK_IMPORTED_MODULE_9__/* .Utils.isNotNullOrUndefined */ .c.isNotNullOrUndefined);
    }

    return operationsByTag;
  }
  /**
   * Returns API schema with specified identifier.
   * @param schemaId {string} ARM-formatted schema identifier.
   */


  async getApiSchema(apiName, schemaId) {
    const key = `schema:${apiName}:${schemaId}:${this.sasToken}`;
    const schema = _utils_NextCache__WEBPACK_IMPORTED_MODULE_10__/* .nextCache.getOrCreate */ .c.getOrCreate(key, async () => {
      const params = new URLSearchParams({
        'api-version': '2021-08-01'
      });
      const response = await this.apisApiClient.get(`apis/${apiName}/schemas/${schemaId}`, {
        params: params
      });
      const model = new _models__WEBPACK_IMPORTED_MODULE_6__.Schema(response.data);
      return model;
    });
    return schema;
  }

  async getApi(apiName, cancelToken) {
    const key = `getApi:${apiName}:${this.sasToken}`;
    return await _utils_NextCache__WEBPACK_IMPORTED_MODULE_10__/* .nextCache.getOrCreate */ .c.getOrCreate(key, async () => {
      const params = new URLSearchParams({
        'api-version': '2021-08-01'
      });
      const query = `/apis/${apiName}`;

      try {
        const apiResponse = await this.apisApiClient.get(query, {
          params: params,
          cancelToken: cancelToken
        });
        const apiTags = await this.getApiTags(apiName);
        const response = new _models__WEBPACK_IMPORTED_MODULE_6__.Api(apiResponse.data, apiTags);
        return response;
      } catch (err) {
        return undefined;
      }
    });
  }

  async getApiReleases(apiName, searchQuery) {
    const key = `getApiReleases:${apiName}:${this.sasToken}`;
    return await _utils_NextCache__WEBPACK_IMPORTED_MODULE_10__/* .nextCache.getOrCreate */ .c.getOrCreate(key, async () => {
      const params = new URLSearchParams();
      params.append('api-version', '2021-08-01');
      const skip = searchQuery && searchQuery.skip || 0;
      const take = searchQuery && searchQuery.take || _constants_constants__WEBPACK_IMPORTED_MODULE_4__/* .defaultPageSize.toString */ .dG.toString();
      let query = `/apis/${apiName}/releases?$top=${take}&$skip=${skip}`;
      const releases = [];
      let next = undefined;

      try {
        do {
          const page = await this.apisApiClient.get(query, {
            params: params
          });
          page.data.value.forEach(release => releases.push(release));
          next = page.data.nextLink;
          query = `/apis/${apiName}/releases?$top=${take}&$skip=${releases.length}`;
        } while (next);
      } catch (err) {
        console.log(err);
      }

      return releases;
    });
  }

  async getApiLogEntries(apiName) {
    const logEntries = [];

    if (!apiName) {
      return logEntries;
    }

    const releases = await this.getApiReleases(apiName);

    for (const release of releases) {
      try {
        const parsed = JSON.parse(release.properties.notes);
        if (parsed && parsed.changelogs.length > 0) logEntries.push(parsed);
      } catch {
        /* empty */
      }
    }

    return logEntries;
  }

  async getAllDefinitionsByOperation(operation, apiName) {
    if (!operation) {
      return [];
    }

    const representations = [...(operation.responses?.map(response => response.representations || []).reduce((a, b) => [...a, ...(b || [])], []) || []), ...(operation.request?.representations?.reduce((a, b) => [...a, ...(b ? [b] : [])], []) || [])];
    const schemaIds = representations.map(representation => representation.schemaId).filter(_utils__WEBPACK_IMPORTED_MODULE_9__/* .Utils.isNotNullOrUndefined */ .c.isNotNullOrUndefined).filter((schemaId, index, arr) => schemaId && arr.indexOf(schemaId) === index // unique
    );
    const typeNames = representations.map(p => p.typeName).filter(_utils__WEBPACK_IMPORTED_MODULE_9__/* .Utils.isNotNullOrUndefined */ .c.isNotNullOrUndefined).filter((item, index, arr) => arr.indexOf(item) === index); // unique;

    const schemas = await Promise.all(schemaIds.map(schemaId => this.getApiSchema(apiName, schemaId)));
    const definitions = schemas.map(x => x.definitions).reduce((a, b) => [...a, ...(b || [])], []); // .flat()

    let lookupResult = [...typeNames];

    while (lookupResult.length > 0) {
      const references = definitions.filter(definition => lookupResult.indexOf(definition.name) !== -1);
      lookupResult = references.length === 0 ? [] : this.lookupReferences(references, typeNames);

      if (lookupResult.length > 0) {
        typeNames.push(...lookupResult);
      }
    }

    return definitions.filter(d => typeNames.indexOf(d.name) !== -1);
  }

  async getAllDefinitionsByApi(apiName) {
    const key = `getApiDefinitions:${apiName}:${this.sasToken}`;
    const openApiSchemaContentType = 'application/vnd.oai.openapi.components+json';
    return await _utils_NextCache__WEBPACK_IMPORTED_MODULE_10__/* .nextCache.getOrCreate */ .c.getOrCreate(key, async () => {
      const schemas = await this.getAllSchemasByApi(apiName);
      const openApiSchema = schemas.find(schema => schema.properties.contentType === openApiSchemaContentType);
      if (!openApiSchema) return [];
      const schema = await this.getApiSchema(apiName, openApiSchema.name);
      return schema.definitions;
    });
  }

  async getAllSchemasByApi(apiName) {
    const key = `getApiSchemas:${apiName}:${this.sasToken}`;
    return await _utils_NextCache__WEBPACK_IMPORTED_MODULE_10__/* .nextCache.getOrCreate */ .c.getOrCreate(key, async () => {
      const params = new URLSearchParams();
      params.append('api-version', '2022-08-01');
      let query = `/apis/${apiName}/schemas`;
      let next = undefined;
      const schemas = [];

      try {
        do {
          const page = await this.apisApiClient.get(query, {
            params
          });
          schemas.push(...page.data.value);
          next = page.data.nextLink;
          query = `/apis/${apiName}/schemas?$skip=${schemas.length}`;
        } while (next);
      } catch (err) {
        console.log(err);
      }

      return schemas;
    });
  }

  mapApiArrayToApiDetailsArray(apis) {
    return apis.map(api => ({
      id: api.id,
      description: api.description ?? '',
      displayName: api.displayName,
      name: api.name,
      path: api.path,
      tags: api.tags
    }));
  }

  async getReleasedApiMap(preloadAPIDescription = true, includeTechPreview = true) {
    const responseDictionary = {};
    const apiGroupPromises = _constants_defaultApiGroups__WEBPACK_IMPORTED_MODULE_5__/* .DefaultApiGroups.publicApiGroups.map */ .q.publicApiGroups.map(group => this.getUniqueApisByTag(group.name, includeTechPreview).then(apisInGroup => {
      responseDictionary[group.name] = this.mapApiArrayToApiDetailsArray(apisInGroup);

      if (preloadAPIDescription) {
        const apiPromises = responseDictionary[group.name].map(api => (0,_services_mdService__WEBPACK_IMPORTED_MODULE_8__/* .preloadAPIContent */ .hW)(api.path).then(content => api.description = content || api.description));
        return Promise.all(apiPromises);
      }
    }));
    await Promise.all(apiGroupPromises);
    return responseDictionary;
  }

  async getReleasedGroupApis(groupName, preloadAPIDescription = true, includeTechPreview = true) {
    const groupApis = await this.getUniqueApisByTag(groupName, includeTechPreview);
    const apisDetails = this.mapApiArrayToApiDetailsArray(groupApis);

    if (preloadAPIDescription) {
      const apiPromises = apisDetails.map(api => (0,_services_mdService__WEBPACK_IMPORTED_MODULE_8__/* .preloadAPIContent */ .hW)(api.path).then(content => api.description = content || api.description));
      await Promise.all(apiPromises);
    }

    return apisDetails;
  }

  async getPricedApiMap() {
    const responseDictionary = {};
    const apiGroupPromises = _constants_defaultApiGroups__WEBPACK_IMPORTED_MODULE_5__/* .DefaultApiGroups.publicApiGroups.map */ .q.publicApiGroups.map(group => this.getUniqueApisByTag(group.name).then(apisInGroup => {
      responseDictionary[group.name] = this.mapApiArrayToApiDetailsArray(apisInGroup);
    }));
    await Promise.all(apiGroupPromises);
    return responseDictionary;
  }

  async getGroupedApiDictionary(preloadAPIDescription = true) {
    const responseDictionary = await this.getReleasedApiMap(preloadAPIDescription);
    responseDictionary['Visualization'] = [{
      name: _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_3__/* .ApiGroupId.Visualization */ .mV.Visualization,
      path: _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_3__/* .ApiGroupId.Visualization */ .mV.Visualization,
      displayName: 'Visualization',
      description: preloadAPIDescription ? await (0,_services_mdService__WEBPACK_IMPORTED_MODULE_8__/* .preloadAPIContent */ .hW)('visualization') : '',
      tags: []
    }];
    responseDictionary['ITwinUnreal'] = [{
      name: _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_3__/* .ApiGroupId.ITwinUnreal */ .mV.ITwinUnreal,
      path: _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_3__/* .ApiGroupId.ITwinUnreal */ .mV.ITwinUnreal,
      displayName: 'iTwin for Unreal',
      description: 'Bring your iTwin data into Unreal',
      tags: []
    }];
    return responseDictionary;
  }

  async getAllApisWithGroups(preloadAPIDescription = true) {
    const apisDict = await this.getGroupedApiDictionary(preloadAPIDescription);
    return _constants_defaultApiGroups__WEBPACK_IMPORTED_MODULE_5__/* .DefaultApiGroups.publicApiGroups.filter */ .q.publicApiGroups.filter(group => group.name in apisDict && apisDict[group.name]?.length > 0).flatMap(group => {
      return apisDict[group.name].flatMap(x => {
        return _objectSpread({
          apiGroupId: group.id
        }, x);
      });
    });
  }

  lookupReferences(definitions, skipNames) {
    const result = [];
    const objectDefinitions = definitions.map(definition => definition.properties).filter(_utils__WEBPACK_IMPORTED_MODULE_9__/* .Utils.isNotNullOrUndefined */ .c.isNotNullOrUndefined).reduce((a, b) => [...a, ...(b || [])], []) // .flat()
    .filter(definition => definition);
    objectDefinitions.forEach(definition => {
      if (definition.type?.displayAs === 'combination') {
        const definitionOfCombination = definition;
        definitionOfCombination.type.combination.forEach(combination => {
          if (combination.name) {
            result.push(combination.name);
          }
        });
      } else if (definition.type?.name) {
        result.push(definition.type.name);
      }
    });
    return result.filter(x => skipNames.indexOf(x) === -1);
  }

  async getApiTags(apiName) {
    const key = `getApiTags:${apiName}:${this.sasToken}`;
    return await _utils_NextCache__WEBPACK_IMPORTED_MODULE_10__/* .nextCache.getOrCreate */ .c.getOrCreate(key, async () => {
      const params = new URLSearchParams();
      params.append('api-version', '2021-08-01');

      try {
        const result = await this.apisApiClient.get(`/apis/${apiName}/tags`, {
          params: params
        });
        const tags = result.data.value.map(contract => new _models__WEBPACK_IMPORTED_MODULE_6__.Tag(contract));
        return tags;
      } catch (err) {
        return [];
      }
    });
  }

}
const apisApi = new ApisApi(); // creates singleton


__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 30521:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export ApplicationApi */
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52167);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85217);
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(itwinui_v1__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2599);
/* harmony import */ var _constants_ApimProduct__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(74586);
/* harmony import */ var _utils_NextCache__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(87901);
/* harmony import */ var _providers_SessionProvider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(66189);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_2__, _providers_SessionProvider__WEBPACK_IMPORTED_MODULE_5__]);
([_client_env__WEBPACK_IMPORTED_MODULE_2__, _providers_SessionProvider__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }







class ApplicationApi {
  constructor(token) {
    this.token = token;
  }

  get baseUrl() {
    return env.APPLICATIONS_API_URL;
  }

  async getAllOrganizationApplications() {
    try {
      const response = await axios.get(`/organization`, {
        headers: this.getAuthorizationHeaders(),
        baseURL: this.baseUrl
      });
      return this.ConvertApplicationTierNames(response.data);
    } catch {
      return [];
    }
  }

  async getAllUserApplications() {
    try {
      const response = await axios.get(`/apps`, {
        headers: this.getAuthorizationHeaders(),
        baseURL: this.baseUrl
      });
      return this.ConvertApplicationTierNames(response.data);
    } catch {
      return [];
    }
  }

  async getTaggedScopes() {
    const key = `taggedScopeMap:${this.token}`;
    return nextCache.getOrCreate(key, async () => {
      try {
        const response = await axios.get('/scopes/tags', {
          headers: this.getAuthorizationHeaders(),
          baseURL: this.baseUrl
        }).catch(err => {
          toaster.negative(`Failed to retrieve scopes with response code: ${err.response.status}.`);
        });

        if (response?.data) {
          const result = response.data.result;
          nextCache.put(key, JSON.stringify(result));
          return result;
        } else {
          return [];
        }
      } catch {
        return [];
      }
    });
  }

  async createSpaApplication(request) {
    return await axios.post('/spa', request, {
      baseURL: this.baseUrl,
      headers: _objectSpread(_objectSpread({}, this.getAuthorizationHeaders()), {}, {
        'Content-Type': 'application/json'
      })
    });
  }

  async createNativeApplication(request) {
    return await axios.post('/native', request, {
      baseURL: this.baseUrl,
      headers: _objectSpread(_objectSpread({}, this.getAuthorizationHeaders()), {}, {
        'Content-Type': 'application/json'
      })
    });
  }

  async createServiceApplication(request) {
    return await axios.post('/service', request, {
      baseURL: this.baseUrl,
      headers: _objectSpread(_objectSpread({}, this.getAuthorizationHeaders()), {}, {
        'Content-Type': 'application/json'
      })
    });
  }

  async createWebApplication(request) {
    return await axios.post('/webapp', request, {
      baseURL: this.baseUrl,
      headers: _objectSpread(_objectSpread({}, this.getAuthorizationHeaders()), {}, {
        'Content-Type': 'application/json'
      })
    });
  }

  async getSpaApplication(id) {
    try {
      const response = await axios.get(`/spa/${id}`, {
        headers: this.getAuthorizationHeaders(),
        baseURL: this.baseUrl
      });
      return _objectSpread(_objectSpread({}, response.data), {}, {
        tier: mapTierNames(response.data.tier)
      });
    } catch {
      return undefined;
    }
  }

  async getNativeApplication(id) {
    try {
      const response = await axios.get(`/native/${id}`, {
        headers: this.getAuthorizationHeaders(),
        baseURL: this.baseUrl
      });
      return _objectSpread(_objectSpread({}, response.data), {}, {
        tier: mapTierNames(response.data.tier)
      });
    } catch {
      return undefined;
    }
  }

  async getServiceApplication(id) {
    try {
      const response = await axios.get(`/service/${id}`, {
        headers: this.getAuthorizationHeaders(),
        baseURL: this.baseUrl
      });
      return _objectSpread(_objectSpread({}, response.data), {}, {
        tier: mapTierNames(response.data.tier)
      });
    } catch {
      return undefined;
    }
  }

  async getWebApplication(id) {
    try {
      const response = await axios.get(`/webapp/${id}`, {
        headers: this.getAuthorizationHeaders(),
        baseURL: this.baseUrl
      });
      return _objectSpread(_objectSpread({}, response.data), {}, {
        tier: mapTierNames(response.data.tier)
      });
    } catch {
      return undefined;
    }
  }

  async updateSpaApplication(id, request) {
    const response = await axios.patch(`/spa/${id}`, this.ConvertBackApplicationRequestTiers(request), {
      baseURL: this.baseUrl,
      headers: _objectSpread(_objectSpread({}, this.getAuthorizationHeaders()), {}, {
        'Content-Type': 'application/json'
      })
    });
    return _objectSpread(_objectSpread({}, response), {}, {
      data: this.ConvertApplicationBaseTiers(response.data)
    });
  }

  async updateNativeApplication(id, request) {
    const response = await axios.patch(`/native/${id}`, this.ConvertBackApplicationRequestTiers(request), {
      baseURL: this.baseUrl,
      headers: _objectSpread(_objectSpread({}, this.getAuthorizationHeaders()), {}, {
        'Content-Type': 'application/json'
      })
    });
    return _objectSpread(_objectSpread({}, response), {}, {
      data: this.ConvertApplicationBaseTiers(response.data)
    });
  }

  async updateServiceApplication(id, request) {
    const response = await axios.patch(`/service/${id}`, this.ConvertBackApplicationRequestTiers(request), {
      headers: _objectSpread(_objectSpread({}, this.getAuthorizationHeaders()), {}, {
        'Content-Type': 'application/json'
      }),
      baseURL: this.baseUrl
    });
    return _objectSpread(_objectSpread({}, response), {}, {
      data: this.ConvertApplicationBaseTiers(response.data)
    });
  }

  async updateWebApplication(id, request) {
    const response = await axios.patch(`/webapp/${id}`, this.ConvertBackApplicationRequestTiers(request), {
      headers: _objectSpread(_objectSpread({}, this.getAuthorizationHeaders()), {}, {
        'Content-Type': 'application/json'
      }),
      baseURL: this.baseUrl
    });
    return _objectSpread(_objectSpread({}, response), {}, {
      data: this.ConvertApplicationBaseTiers(response.data)
    });
  }

  async updateSpaApplicationOwners(id, request) {
    const response = await axios.patch(`/spa/${id}`, this.ConvertBackApplicationRequestTiers(request), {
      baseURL: this.baseUrl,
      headers: _objectSpread(_objectSpread({}, this.getAuthorizationHeaders()), {}, {
        'Content-Type': 'application/json'
      })
    });
    return _objectSpread(_objectSpread({}, response), {}, {
      data: this.ConvertApplicationBaseTiers(response.data)
    });
  }

  async updateNativeApplicationOwners(id, request) {
    const response = await axios.patch(`/native/${id}`, this.ConvertBackApplicationRequestTiers(request), {
      baseURL: this.baseUrl,
      headers: _objectSpread(_objectSpread({}, this.getAuthorizationHeaders()), {}, {
        'Content-Type': 'application/json'
      })
    });
    return _objectSpread(_objectSpread({}, response), {}, {
      data: this.ConvertApplicationBaseTiers(response.data)
    });
  }

  async updateServiceApplicationOwners(id, request) {
    const response = await axios.patch(`/service/${id}`, this.ConvertBackApplicationRequestTiers(request), {
      baseURL: this.baseUrl,
      headers: _objectSpread(_objectSpread({}, this.getAuthorizationHeaders()), {}, {
        'Content-Type': 'application/json'
      })
    });
    return _objectSpread(_objectSpread({}, response), {}, {
      data: this.ConvertApplicationBaseTiers(response.data)
    });
  }

  async updateWebApplicationOwners(id, request) {
    const response = await axios.patch(`/webapp/${id}`, this.ConvertBackApplicationRequestTiers(request), {
      baseURL: this.baseUrl,
      headers: _objectSpread(_objectSpread({}, this.getAuthorizationHeaders()), {}, {
        'Content-Type': 'application/json'
      })
    });
    return _objectSpread(_objectSpread({}, response), {}, {
      data: this.ConvertApplicationBaseTiers(response.data)
    });
  }

  async deleteApplication(clientType, clientId) {
    return await axios.delete(`/${clientType}/${clientId}`, {
      baseURL: this.baseUrl,
      headers: _objectSpread(_objectSpread({}, this.getAuthorizationHeaders()), {}, {
        'Content-Type': 'application/json'
      })
    });
  }

  async regenerateApplicationSecret(appType, id) {
    return await axios.put(`/${appType}/${id}/secret`, {}, {
      baseURL: this.baseUrl,
      headers: this.getAuthorizationHeaders()
    });
  }

  changeBackendTermsToHumanReadable(text) {
    if (!text) {
      return '';
    }

    return text.replace('ClientName', 'Application name').replace('PostLogoutRedirectUris', 'Post logout redirect URIs').replace('RedirectUris', 'Redirect URIs').replace('AllowedScopes', 'Allowed scopes').replace('AllowedCorsOrigins', 'Redirect URIs').replace(ApimProduct.Default, 'Default').replace(ApimProduct.iTwinJs, 'iTwinJs');
  }

  getAuthorizationHeaders() {
    return {
      Authorization: `Bearer ${this.token}`
    };
  }

  ConvertApplicationBaseTiers(data) {
    return _objectSpread(_objectSpread({}, data), {}, {
      tier: mapTierNames(data.tier)
    });
  }

  ConvertBackApplicationRequestTiers(data) {
    return _objectSpread(_objectSpread({}, data), {}, {
      tier: data.tier ? backwardsMapTierName(data.tier) : undefined
    });
  }

  ConvertApplicationTierNames(data) {
    data.forEach(application => {
      application.tier = application.tier ? mapTierNames(application.tier) : undefined;
    });
    return data;
  }

}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 68232:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "D": function() { return /* binding */ iTwinSandboxApi; }
/* harmony export */ });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52167);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2599);
/* harmony import */ var _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(67105);
/* harmony import */ var _constants_sandbox__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(50982);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_1__]);
_client_env__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];





class ITwinSandboxApi {
  get baseUrl() {
    return _client_env__WEBPACK_IMPORTED_MODULE_1__/* ["default"].SANDBOX_BACKEND_URL */ .Z.SANDBOX_BACKEND_URL;
  }

  async getOfficialSamples() {
    const parameters = new URLSearchParams({
      attributes: _constants_sandbox__WEBPACK_IMPORTED_MODULE_3__/* .playlistAttribute */ .fQ,
      codesharesIncluded: 'true',
      orderBy: _constants_sandbox__WEBPACK_IMPORTED_MODULE_3__/* .playlistSortAttribute */ .AP,
      codeshareOrderBy: 'name'
    });
    const response = await axios__WEBPACK_IMPORTED_MODULE_0___default().get(`/api/user/${_constants_sandbox__WEBPACK_IMPORTED_MODULE_3__/* .iTwinPlatformUserId */ .sI}/playlist`, {
      baseURL: this.baseUrl,
      params: parameters
    });
    return response.data.map(playlist => {
      const group = {
        id: playlist.id,
        groupName: playlist.name,
        samples: playlist.codeshares.map(codeshare => {
          const sample = {
            name: codeshare.id,
            label: codeshare.name,
            description: codeshare.description?.replace(/#/g, ''),
            image: `${this.baseUrl}/api/user/${codeshare.userId}/codeshare/${codeshare.id}/thumbnail`,
            relatedApiPaths: this.extractApiPath(codeshare.attributes),
            apiGroupId: this.extractApiGroupId(codeshare.attributes) || _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_2__/* .ApiGroupId.Visualization */ .mV.Visualization,
            url: `${_client_env__WEBPACK_IMPORTED_MODULE_1__/* ["default"].SANDBOX_FRONTEND_URL */ .Z.SANDBOX_FRONTEND_URL}/${codeshare.username}/${codeshare.name}`
          };
          return sample;
        })
      };
      return group;
    });
  }

  extractApiPath(attributes) {
    if (!attributes || attributes.length === 0) return undefined;
    const items = attributes.filter(a => a.startsWith(_constants_sandbox__WEBPACK_IMPORTED_MODULE_3__/* .apiPathAttrPrefix */ .eD));
    if (!items || items.length === 0) return undefined;
    return items.map(value => value.replace(_constants_sandbox__WEBPACK_IMPORTED_MODULE_3__/* .apiPathAttrPrefix */ .eD, ''));
  }

  extractApiGroupId(attributes) {
    if (!attributes || attributes.length === 0) return undefined;
    const value = attributes.find(a => a.startsWith(_constants_sandbox__WEBPACK_IMPORTED_MODULE_3__/* .apiGroupIdAttrPrefix */ .Qm));
    return value?.replace(_constants_sandbox__WEBPACK_IMPORTED_MODULE_3__/* .apiGroupIdAttrPrefix */ .Qm, '');
  }

}

const iTwinSandboxApi = new ITwinSandboxApi();

__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 44354:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DU": function() { return /* reexport safe */ _iTwinSandboxApi__WEBPACK_IMPORTED_MODULE_4__.D; },
/* harmony export */   "u": function() { return /* reexport safe */ _apisApi__WEBPACK_IMPORTED_MODULE_2__.u; }
/* harmony export */ });
/* harmony import */ var _productApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(78712);
/* harmony import */ var _applicationApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(30521);
/* harmony import */ var _apisApi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(14096);
/* harmony import */ var _apiKeysApi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(57233);
/* harmony import */ var _iTwinSandboxApi__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(68232);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_productApi__WEBPACK_IMPORTED_MODULE_0__, _applicationApi__WEBPACK_IMPORTED_MODULE_1__, _apisApi__WEBPACK_IMPORTED_MODULE_2__, _apiKeysApi__WEBPACK_IMPORTED_MODULE_3__, _iTwinSandboxApi__WEBPACK_IMPORTED_MODULE_4__]);
([_productApi__WEBPACK_IMPORTED_MODULE_0__, _applicationApi__WEBPACK_IMPORTED_MODULE_1__, _apisApi__WEBPACK_IMPORTED_MODULE_2__, _apiKeysApi__WEBPACK_IMPORTED_MODULE_3__, _iTwinSandboxApi__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);





__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 78712:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export ProductApi */
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52167);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2599);
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(93266);
/* harmony import */ var _hooks_swr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(44273);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_1__, _hooks_swr__WEBPACK_IMPORTED_MODULE_3__]);
([_client_env__WEBPACK_IMPORTED_MODULE_1__, _hooks_swr__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);




class ProductApi {
  constructor(sasToken) {
    this.sasToken = sasToken;
  }

  get authHeader() {
    return this.sasToken ? {
      Authorization: `SharedAccessSignature ${this.sasToken}`
    } : {};
  }

  get baseUrl() {
    return env.APIM_MANAGEMENT_URL;
  }

  async getProductApis(productId, searchQuery) {
    const params = new URLSearchParams({
      'api-version': '2021-08-01',
      '$skip': `${searchQuery?.skip || 0}`,
      '$top': `${searchQuery?.top || 100}`
    });
    const result = await this.getAll(`/products/${productId}/apis`, params);
    return result.map(x => new Api(x));
  }

  async getUniqueProductApis(productId, searchQuery, includeTechPreview = true) {
    const apis = await this.getProductApis(productId, searchQuery);
    return filterUniqueApis(apis, includeTechPreview);
  }

  async getAll(path, params) {
    const result = [];
    const parameters = new URLSearchParams(params);
    let nextLink = undefined;
    let skip = 0;

    if (!parameters.get('$skip')) {
      parameters.set('$skip', `${skip}`);
    }

    do {
      const response = await axios.get(path, {
        params: parameters,
        headers: this.authHeader,
        baseURL: this.baseUrl
      });
      nextLink = response.data.nextLink;
      const currentSkip = parameters.get('$skip');
      skip = currentSkip ? +currentSkip : -1;
      const count = response.data.value.length;
      result.push(...response.data.value);
      parameters.set('$skip', `${skip + count}`);
    } while (nextLink && skip >= 0);

    return result;
  }

}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 2599:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9926);
/* harmony import */ var _zod_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(72581);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([zod__WEBPACK_IMPORTED_MODULE_0__, _zod_utils__WEBPACK_IMPORTED_MODULE_1__]);
([zod__WEBPACK_IMPORTED_MODULE_0__, _zod_utils__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);


const schema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({
  ALGOLIA_APPLICATION_ID: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .string */ .Z_)('NEXT_PUBLIC_ALGOLIA_APPLICATION_ID'),
  ALGOLIA_INDEX: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .string */ .Z_)('NEXT_PUBLIC_ALGOLIA_INDEX'),
  ALGOLIA_READ_KEY: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .string */ .Z_)('NEXT_PUBLIC_ALGOLIA_READ_KEY'),
  API_BASE_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_API_BASE_URL'),
  API_METADATA_API_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_API_METADATA_API_URL'),
  API_STATUS_BLOB_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_API_STATUS_BLOB_URL'),
  APIM_MANAGEMENT_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_APIM_MANAGEMENT_URL'),
  APPLICATIONS_API_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_APPLICATIONS_API_URL'),
  BENTLEY_OAUTH_AUTHORIZATION_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_BENTLEY_OAUTH_AUTHORIZATION_URL'),
  BENTLEY_OAUTH_CONSOLE_CLIENT: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .string */ .Z_)('NEXT_PUBLIC_BENTLEY_OAUTH_CONSOLE_CLIENT'),
  BENTLEY_OAUTH_TOKEN_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_BENTLEY_OAUTH_TOKEN_URL'),
  DEVELOPER_PORTAL_API_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_DEVELOPER_PORTAL_API_URL'),
  ENVIRONMENT: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .string */ .Z_)('NEXT_PUBLIC_ENVIRONMENT'),
  FUNCTION_APP_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_FUNCTION_APP_URL'),
  GITHUB_ITWIN_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_GITHUB_ITWIN_URL'),
  GITHUB_DISCUSSIONS_ITWIN_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_GITHUB_DISCUSSIONS_ITWIN_URL'),
  IDEAS_PORTAL_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_IDEAS_PORTAL_URL'),
  IMODEL_HUB_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_IMODEL_HUB_URL'),
  IMS_PROFILE_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_IMS_PROFILE_URL'),
  INSIGHTS_API_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_INSIGHTS_API_URL'),
  ITWINJS_INDEX: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .string */ .Z_)('NEXT_PUBLIC_ITWINJS_INDEX'),
  ITWINJS_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_ITWINJS_URL'),
  LAUNCHDARKLY_CLIENT_ID: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .string */ .Z_)('NEXT_PUBLIC_LAUNCHDARKLY_CLIENT_ID'),
  OIDC_AUTHORITY: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_OIDC_AUTHORITY'),
  OIDC_CLIENT_ID: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .string */ .Z_)('NEXT_PUBLIC_OIDC_CLIENT_ID'),
  OIDC_SCOPE: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .string */ .Z_)('NEXT_PUBLIC_OIDC_SCOPE'),
  ITWINS_API_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_ITWINS_API_URL'),
  RECAPTCHA_SITE_KEY: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .string */ .Z_)('NEXT_PUBLIC_RECAPTCHA_SITE_KEY'),
  REPORTING_API_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_REPORTING_API_URL'),
  REPORTING_API_KEYS_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_REPORTING_API_KEYS_URL'),
  SAMPLE_IMODEL_NAME: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .string */ .Z_)('NEXT_PUBLIC_SAMPLE_IMODEL_NAME'),
  SANDBOX_BACKEND_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_SANDBOX_BACKEND_URL'),
  SANDBOX_FRONTEND_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_SANDBOX_FRONTEND_URL'),
  AGREEMENT_SERVICE_URL: (0,_zod_utils__WEBPACK_IMPORTED_MODULE_1__/* .url */ .HQ)('NEXT_PUBLIC_AGREEMENT_SERVICE_URL')
});
const data = {
  ALGOLIA_APPLICATION_ID: "MUMMM8WBE5",
  ALGOLIA_INDEX: "dev_iTwinPlatformPortal",
  ALGOLIA_READ_KEY: "e4bd9db94dfe5da797ab011d2a3d9f9f",
  API_BASE_URL: "https://dev-api.bentley.com",
  API_METADATA_API_URL: "https://dev-api.bentley.com/api-metadata/v2",
  API_STATUS_BLOB_URL: "https://apimdeveussa03.blob.core.windows.net/",
  APIM_MANAGEMENT_URL: "https://dev-api-wcus-apim-01.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid",
  APPLICATIONS_API_URL: "https://dev-api.bentley.com/apps/v2",
  BENTLEY_OAUTH_AUTHORIZATION_URL: "https://qa-ims.bentley.com/connect/authorize",
  BENTLEY_OAUTH_CONSOLE_CLIENT: "itwin-developer-console-dev",
  BENTLEY_OAUTH_TOKEN_URL: "https://qa-ims.bentley.com/connect/token",
  DEVELOPER_PORTAL_API_URL: "https://dev-api.bentley.com/itwin-developer-portal/v1",
  ENVIRONMENT: "dev",
  FUNCTION_APP_URL: "https://dev-apim2-wcus.azurewebsites.net",
  GITHUB_ITWIN_URL: "https://github.com/iTwin",
  GITHUB_DISCUSSIONS_ITWIN_URL: "https://github.com/orgs/iTwin/discussions",
  IDEAS_PORTAL_URL: "https://itwinplatform.ideas.aha.io/",
  IMODEL_HUB_URL: "https://dev-connect-imodelhubwebsite.bentley.com",
  IMS_PROFILE_URL: "https://dev-usermanagement.bentley.com/Profile",
  INSIGHTS_API_URL: "https://dev-api.bentley.com/insights",
  ITWINJS_INDEX: "dev_documentation",
  ITWINJS_URL: "https://dev.imodeljs.org",
  LAUNCHDARKLY_CLIENT_ID: "60f6c6f2379d910d480da5fb",
  OIDC_AUTHORITY: "https://qa-ims.bentley.com",
  OIDC_CLIENT_ID: "apim-developer-portal",
  OIDC_SCOPE: "openid profile global_roles email insights:read itwin-apps:modify itwin-apps:read itwin-products:read projects:read projects:modify users:read feature_tracking storage:modify storage:read synchronization:read synchronization:modify imodels:read imodels:modify imodelaccess:read realitydata:read itwins:read itwins:modify itwin-developer-portal",
  ITWINS_API_URL: "https://dev-api.bentley.com/itwins",
  RECAPTCHA_SITE_KEY: "6LefG_EUAAAAAIswZ_2WjsAUfMg2VdCe0qEFKfCS",
  REPORTING_API_URL: "https://dev-api.bentley.com/insights/reporting",
  REPORTING_API_KEYS_URL: "https://dev-api.bentley.com/insights/keys/v1",
  SAMPLE_IMODEL_NAME: "Test IModel",
  SANDBOX_BACKEND_URL: "https://connect-itwinjscodesandbox.bentley.com",
  SANDBOX_FRONTEND_URL: "https://www.itwinjs.org/sandboxes",
  AGREEMENT_SERVICE_URL: "https://qa-connect-agreement.bentley.com"
};
const env = schema.safeParse(data);
if (!env.success) throw new Error(JSON.stringify(env.error.issues, null, 2));
/* harmony default export */ __webpack_exports__["Z"] = (env.data);
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 80862:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: CodeSample, default

// EXTERNAL MODULE: consume shared module (default) itwinui-v2@^2.12.0 (singleton) (fallback: ./node_modules/itwinui-v2/esm/index.js) (eager)
var index_js_eager_ = __webpack_require__(6227);
// EXTERNAL MODULE: ./src/services/templatingService.ts + 22 modules
var templatingService = __webpack_require__(93332);
// EXTERNAL MODULE: ./src/components/operationConsole/operationParameters.tsx
var operationParameters = __webpack_require__(25078);
// EXTERNAL MODULE: ./node_modules/@itwin/itwinui-icons-react/cjs/index.js
var cjs = __webpack_require__(59994);
// EXTERNAL MODULE: ./src/utils.ts
var utils = __webpack_require__(35797);
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/CodeBlocks/utils.tsx




function utils_copyToClipboard(value) {
  Utils.copyToClipboard(value, () => {
    toaster.positive( /*#__PURE__*/_jsxs("span", {
      children: [/*#__PURE__*/_jsx("strong", {
        children: "Code block content"
      }), " was copied to clipboard."]
    }), {
      type: 'temporary',
      hasCloseButton: true,
      duration: 3000
    });
  }, () => {
    toaster.negative( /*#__PURE__*/_jsxs("span", {
      children: ["Could not copy ", /*#__PURE__*/_jsx("strong", {
        children: "Code block content"
      }), " to clipboard."]
    }));
  });
}
;// CONCATENATED MODULE: ./src/components/CodeBlocks/CodeSample/CodeSampleContainer.tsx






function CodeSampleContainer_CodeSampleContainer({
  sample,
  children,
  language,
  select,
  title,
  showCopyButton = true
}) {
  const onCopyButtonClick = () => copyToClipboard(sample);

  return /*#__PURE__*/_jsxs("div", {
    className: "operation-code-sample",
    children: [/*#__PURE__*/_jsx("div", {
      className: "flex code-sample-block code-sample-block-bordered",
      children: /*#__PURE__*/_jsxs("div", {
        className: "code-sample-block-heading",
        children: [/*#__PURE__*/_jsxs("div", {
          className: "code-sample-title",
          children: [title ? /*#__PURE__*/_jsx("span", {
            className: "language strong",
            children: title
          }) : /*#__PURE__*/_jsx("span", {
            className: "language",
            children: language
          }), select]
        }), showCopyButton && /*#__PURE__*/_jsx(IconButton, {
          size: "small",
          styleType: "borderless",
          onClick: onCopyButtonClick,
          label: "Copy",
          children: /*#__PURE__*/_jsx(SvgCopy, {})
        })]
      })
    }), children]
  });
}
// EXTERNAL MODULE: ./src/components/Theme.tsx
var components_Theme = __webpack_require__(39623);
;// CONCATENATED MODULE: ./src/components/CodeBlocks/CodeSample/CodeSample.tsx










function CodeSample({
  sample,
  language,
  select,
  keepBlankLines = false,
  title,
  styleType = 'default',
  onChange,
  isUrlEncodedForm = false
}) {
  if (!sample || !language) {
    return /*#__PURE__*/_jsx(_Fragment, {});
  }

  return /*#__PURE__*/_jsx(Theme, {
    children: /*#__PURE__*/_jsx(CodeSampleContainer, {
      select: select,
      sample: sample,
      language: language,
      title: title,
      children: onChange ? /*#__PURE__*/_jsxs(_Fragment, {
        children: [isUrlEncodedForm && /*#__PURE__*/_jsx("div", {
          className: "code-sample-form-fields",
          children: /*#__PURE__*/_jsx(OperationParameters, {
            styleType: "no-title",
            onQueryParametersChange: value => {
              onChange(new URLSearchParams(value.map(param => [param.name ?? '', param.value ?? ''])).toString());
            },
            queryParameters: (sample === '' ? [['', '']] : Array.from(new URLSearchParams(sample))).map(([key, value]) => {
              return new ConsoleParameter({
                name: key,
                defaultValue: value,
                values: [],
                in: 'query',
                description: '',
                required: false,
                type: 'string'
              });
            })
          })
        }), /*#__PURE__*/_jsx(Textarea, {
          className: `code-sample-example editable ${styleType}`,
          placeholder: "Request body",
          onChange: event => {
            onChange(event.currentTarget.value);
          },
          onBlur: event => {
            if (isUrlEncodedForm) {
              onChange(new URLSearchParams(event.currentTarget.value).toString());
            }
          },
          value: sample
        })]
      }) : /*#__PURE__*/_jsx("pre", {
        className: `code-sample-example ${styleType}`,
        dangerouslySetInnerHTML: {
          __html: TemplatingService.makeItBeautiful(keepBlankLines ? sample : sample.replace(/^\s*\n/gm, ''), language)
        }
      })
    })
  });
}
/* harmony default export */ var CodeSample_CodeSample = ((/* unused pure expression or super */ null && (CodeSample)));

/***/ }),

/***/ 42287:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: default

// EXTERNAL MODULE: external "classnames"
var external_classnames_ = __webpack_require__(59003);
// EXTERNAL MODULE: consume shared module (default) @itwin/itwinui-layouts-react@~0.1.3 (singleton) (fallback: ./node_modules/@itwin/itwinui-layouts-react/dist/esm/index.js) (eager)
var index_js_eager_ = __webpack_require__(70347);
// EXTERNAL MODULE: ./src/constants/paths.ts
var paths = __webpack_require__(86491);
// EXTERNAL MODULE: consume shared module (default) itwinui-v2@^2.12.0 (singleton) (fallback: ./node_modules/itwinui-v2/esm/index.js) (eager)
var esm_index_js_eager_ = __webpack_require__(6227);
// EXTERNAL MODULE: ./src/components/Theme.tsx
var components_Theme = __webpack_require__(39623);
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/footer/Footer.tsx
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






function Footer_Footer({
  theme = 'inherit'
}) {
  return /*#__PURE__*/_jsx(Theme, {
    theme: theme,
    children: /*#__PURE__*/_jsx(ITwinUIFooter, {
      className: "footer",
      customElements: defaultElements => defaultElements.map(element => _objectSpread(_objectSpread({}, element), {}, {
        url: element.key === 'termsOfService' ? TERMS_OF_SERVICE : element.url
      }))
    })
  });
}
;// CONCATENATED MODULE: ./src/components/Layouts/CommonLayout/CommonLayout.tsx












function CommonLayout({
  className,
  children,
  theme,
  headerContent,
  breadcrumbs = [],
  sideNavigation,
  contentAlert,
  padded
}) {
  const noFooterPageRegex = [`.*${APPS}`, `.*${REGISTER}`, `.*${APPS_V2}`, `.*${REGISTER_V2}`];

  const footer = !noFooterPageRegex.some(p => new RegExp(p).test(NextUtils.isPreloading ? '' : window.location.pathname)) && /*#__PURE__*/_jsx(Footer, {
    theme: theme
  });

  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [sideNavigation, /*#__PURE__*/_jsxs(PageLayout.Content, {
      className: classNames(['content-container-base', 'transparent-container', className]),
      children: [(headerContent || contentAlert) && /*#__PURE__*/_jsxs(PageLayout.TitleArea, {
        className: classNames(['page-title-area', padded ? 'padded' : undefined, breadcrumbs.length > 0 ? 'with-breadcrumbs' : undefined]),
        children: [/*#__PURE__*/_jsxs(PageLayout.Content, {
          className: "transparent-container page-title-area-content",
          padded: padded,
          children: [breadcrumbs.length > 0 && /*#__PURE__*/_jsx(Theme, {
            children: /*#__PURE__*/_jsx(Breadcrumbs, {
              className: "breadcrumbs",
              children: breadcrumbs
            })
          }), headerContent]
        }), contentAlert]
      }), /*#__PURE__*/_jsxs("div", {
        className: "content-container-body",
        children: [/*#__PURE__*/_jsx(PageLayout.Content, {
          className: "transparent-container content-container",
          padded: padded,
          children: children
        }), footer]
      })]
    })]
  });
}

/* harmony default export */ var CommonLayout_CommonLayout = ((/* unused pure expression or super */ null && (CommonLayout)));

/***/ }),

/***/ 49187:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: default

// EXTERNAL MODULE: external "classnames"
var external_classnames_ = __webpack_require__(59003);
// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
// EXTERNAL MODULE: consume shared module (default) @itwin/itwinui-layouts-react@~0.1.3 (singleton) (fallback: ./node_modules/@itwin/itwinui-layouts-react/dist/esm/index.js) (eager)
var index_js_eager_ = __webpack_require__(70347);
// EXTERNAL MODULE: ./src/components/Theme.tsx
var components_Theme = __webpack_require__(39623);
// EXTERNAL MODULE: consume shared module (default) itwinui-v2@^2.12.0 (singleton) (fallback: ./node_modules/itwinui-v2/esm/index.js) (eager)
var esm_index_js_eager_ = __webpack_require__(6227);
// EXTERNAL MODULE: ./node_modules/@itwin/itwinui-icons-react/cjs/index.js
var cjs = __webpack_require__(59994);
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/Layouts/LeftSideNavigation/LeftSideNavigationHeader.tsx







function LeftSideNavigationHeader_LeftSideNavigationHeader({
  isExpanded = false,
  onExpanderClick,
  onSearch,
  customHeaderContent
}) {
  return /*#__PURE__*/_jsx("div", {
    className: classNames(['left-side-nav-header', isExpanded ? 'expanded' : 'collapsed']),
    children: /*#__PURE__*/_jsxs("div", {
      className: "left-side-nav-title-container",
      children: [/*#__PURE__*/_jsxs("div", {
        className: "left-side-nav-title-section",
        children: [/*#__PURE__*/_jsx(Text, {
          className: "left-side-nav-title",
          variant: "title",
          children: "Table of contents"
        }), /*#__PURE__*/_jsx(IconButton, {
          className: "left-side-nav-expander",
          styleType: "borderless",
          onClick: onExpanderClick,
          size: "small",
          children: /*#__PURE__*/_jsx(SvgMenu, {})
        })]
      }), onSearch &&
      /*#__PURE__*/
      // Should replace LabeledInput with SearchBox after full migration to iTwin UI v2
      _jsx(LabeledInput, {
        id: "search-input",
        className: "left-side-nav-header-item",
        role: "searchbox",
        placeholder: 'Search...',
        svgIcon: /*#__PURE__*/_jsx(SvgSearch, {}),
        iconDisplayStyle: "inline",
        onChange: event => onSearch(event.currentTarget.value)
      }), customHeaderContent && /*#__PURE__*/_jsx("div", {
        className: "left-side-nav-header-item",
        children: customHeaderContent
      })]
    })
  });
}

/* harmony default export */ var LeftSideNavigation_LeftSideNavigationHeader = ((/* unused pure expression or super */ null && (LeftSideNavigationHeader_LeftSideNavigationHeader)));
;// CONCATENATED MODULE: ./src/components/Layouts/LeftSideNavigation/LeftSideNavigationSection.tsx





function LeftSideNavigationSection_LeftSideNavigationSection({
  title,
  children
}) {
  return /*#__PURE__*/_jsxs("div", {
    className: "left-side-nav-section",
    children: [title && /*#__PURE__*/_jsx(Text, {
      variant: "small",
      "data-variant": "small",
      className: 'left-side-nav-title',
      children: title
    }), children && /*#__PURE__*/_jsx("div", {
      className: "left-side-nav-section-content",
      children: children
    })]
  });
}

/* harmony default export */ var LeftSideNavigation_LeftSideNavigationSection = ((/* unused pure expression or super */ null && (LeftSideNavigationSection_LeftSideNavigationSection)));
// EXTERNAL MODULE: ./src/links/SimpleLink.tsx
var links_SimpleLink = __webpack_require__(94451);
// EXTERNAL MODULE: external "chroma-js"
var external_chroma_js_ = __webpack_require__(66303);
;// CONCATENATED MODULE: ./src/components/Layouts/LeftSideNavigation/NavigationItem.tsx








function NavigationItem_NavigationItem(props) {
  const {
    title,
    prefix,
    href,
    level,
    onClick,
    isActive,
    highlightColor,
    badge
  } = props;
  const style = useMemo(() => ({
    '--highlight-color': highlightColor,
    '--highlight-background-color': highlightColor ? chroma(highlightColor).alpha(0.05).hex() : undefined
  }), [highlightColor]);
  return /*#__PURE__*/_jsxs("div", {
    style: style,
    className: classNames(['left-side-nav-item', isActive ? 'active' : undefined, `level-${level}`]),
    children: [prefix && /*#__PURE__*/_jsx("span", {
      className: `${prefix.toLowerCase()} method`,
      children: prefix
    }), href ? /*#__PURE__*/_jsx(SimpleLink, {
      href: href,
      onClick: onClick,
      children: title
    }) : title, badge && /*#__PURE__*/_jsx("div", {
      className: "left-side-nav-item-badge",
      children: badge
    })]
  });
}

/* harmony default export */ var LeftSideNavigation_NavigationItem = ((/* unused pure expression or super */ null && (NavigationItem_NavigationItem)));
;// CONCATENATED MODULE: ./src/components/Layouts/LeftSideNavigation/NavigationExpandableBlock.tsx
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }












function NavigationExpandableBlock_NavigationExpandableBlock(props) {
  const {
    id,
    title,
    href,
    prefix,
    subItems = [],
    icon,
    highlightColor,
    badge,
    caption,
    forceExpand = false,
    onClick,
    activeItem,
    level = 1
  } = props;
  const style = useMemo(() => ({
    '--highlight-color': highlightColor,
    '--highlight-background-color': highlightColor ? chroma(highlightColor).alpha(0.05).hex() : undefined
  }), [highlightColor]);
  const isActive = id === activeItem;
  const {
    0: isExpanded,
    1: setIsExpanded
  } = useState(false);
  useEffect(() => {
    function filter(array, condition) {
      return array.reduce((array, currentValue) => {
        const subItems = filter(currentValue.subItems || [], condition);

        if (condition(currentValue) || subItems.length) {
          const navItem = Object.assign({}, currentValue, subItems.length && {
            subItems
          });
          array.push(navItem);
        }

        return array;
      }, []);
    }

    setIsExpanded(prevState => prevState || filter(subItems, ({
      id
    }) => id === activeItem).length > 0 || isActive);
  }, [isActive, subItems, activeItem]);
  return /*#__PURE__*/_jsx(_Fragment, {
    children: subItems.length === 0 ? /*#__PURE__*/_jsx(NavigationItem, _objectSpread(_objectSpread({}, props), {}, {
      level: level,
      isActive: isActive,
      highlightColor: highlightColor,
      onClick: onClick ? () => onClick(id ?? '') : undefined,
      href: href,
      prefix: prefix,
      badge: badge
    })) : /*#__PURE__*/_jsx(ExpandableBlock, {
      title: /*#__PURE__*/_jsxs(_Fragment, {
        children: [/*#__PURE__*/_jsxs("div", {
          className: "left-side-nav-expandable-title",
          children: [title, badge && /*#__PURE__*/_jsx("div", {
            className: "left-side-nav-item-badge",
            children: badge
          })]
        }), isExpanded && caption && /*#__PURE__*/_jsx("div", {
          className: "left-side-nav-item-caption",
          children: /*#__PURE__*/_jsx(SimpleLink, {
            href: caption.href,
            onClick: event => {
              if (onClick && id) {
                onClick(id);
              }

              event.stopPropagation();
            },
            children: /*#__PURE__*/_jsx(Text, {
              variant: "small",
              as: "small",
              children: caption.title
            })
          }, caption.title)
        })]
      }),
      styleType: "borderless",
      endIcon: icon,
      className: classNames(['left-side-nav-expandable', `level-${level}`, isActive ? 'active' : undefined, icon ? 'with-icon' : undefined]),
      style: style,
      isExpanded: isExpanded || forceExpand,
      onToggle: () => setIsExpanded(prevState => !prevState),
      size: level !== 1 ? 'small' : 'default',
      children: /*#__PURE__*/_jsx("div", {
        className: "nav-expandable-content",
        children: subItems.map(item => /*#__PURE__*/_jsx(NavigationExpandableBlock_NavigationExpandableBlock, _objectSpread({
          forceExpand: forceExpand,
          level: level + 1,
          activeItem: activeItem,
          onClick: onClick
        }, item), item.title))
      })
    })
  });
}

/* harmony default export */ var LeftSideNavigation_NavigationExpandableBlock = ((/* unused pure expression or super */ null && (NavigationExpandableBlock_NavigationExpandableBlock)));
;// CONCATENATED MODULE: ./src/components/Layouts/LeftSideNavigation/LeftSideNavigation.tsx
function LeftSideNavigation_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function LeftSideNavigation_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? LeftSideNavigation_ownKeys(Object(source), !0).forEach(function (key) { LeftSideNavigation_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : LeftSideNavigation_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function LeftSideNavigation_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }













function LeftSideNavigation({
  sections,
  activeItem,
  className,
  expand = true,
  customHeaderContent
}) {
  const {
    0: isExpanded,
    1: setIsExpanded
  } = useState(expand);
  const {
    0: expandBlocks,
    1: setExpandBlocks
  } = useState(sections.length === 1);
  const {
    0: sectionsToShow,
    1: setSectionsToShow
  } = useState(sections);
  const {
    0: currentActiveItem,
    1: setCurrentActiveItem
  } = useState(activeItem);
  const {
    0: searchText,
    1: setSearchText
  } = useState('');
  const searchHandle = useCallback(searchValue => {
    function filter(array, condition) {
      return array.reduce((array, currentValue) => {
        const subItems = filter(currentValue.subItems || [], condition);

        if (condition(currentValue) || subItems.length) {
          const navItem = Object.assign({}, currentValue, subItems.length && {
            subItems
          });
          array.push(navItem);
        }

        return array;
      }, []);
    }

    return sections.map(section => {
      return Object.assign({}, section, {
        navItems: section.navItems ? filter(section.navItems, ({
          title
        }) => title.toLowerCase().includes(searchValue.toLowerCase())) : []
      });
    });
  }, [sections]);

  const onClick = value => {
    setCurrentActiveItem(value);
  };

  useEffect(() => {
    setSectionsToShow(searchHandle(searchText));
  }, [searchHandle, searchText]);
  return sections.length > 0 ? /*#__PURE__*/_jsx(PageLayout.SideNavigation, {
    className: classNames([className, 'left-side-nav', isExpanded ? 'expanded' : undefined]),
    children: /*#__PURE__*/_jsxs(Theme, {
      children: [/*#__PURE__*/_jsx(LeftSideNavigationHeader, {
        isExpanded: isExpanded,
        onExpanderClick: () => {
          setIsExpanded(prevState => !prevState);
        },
        onSearch: search => {
          setSearchText(search);
          const result = searchHandle(search);
          setSectionsToShow(result);
          setExpandBlocks(true);
        },
        customHeaderContent: customHeaderContent
      }), /*#__PURE__*/_jsx("div", {
        className: "nav-item-container",
        children: sectionsToShow.map((section, index) => section.navItems && section.navItems.length > 0 && /*#__PURE__*/_jsx(LeftSideNavigationSection, {
          title: section.sectionTitle,
          children: section.navItems.map((navItem, index) => /*#__PURE__*/_jsx(NavigationExpandableBlock, LeftSideNavigation_objectSpread({
            forceExpand: expandBlocks,
            onClick: onClick,
            activeItem: currentActiveItem,
            highlightColor: navItem.highlightColor ?? section.highlightColor
          }, navItem), `${navItem.title}${index}`))
        }, `${section.sectionTitle}${index}`))
      })]
    })
  }) : /*#__PURE__*/_jsx(_Fragment, {});
}

/* harmony default export */ var LeftSideNavigation_LeftSideNavigation = ((/* unused pure expression or super */ null && (LeftSideNavigation)));

/***/ }),

/***/ 49867:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "D": function() { return /* binding */ MarkdownViewWithMermaid; }
});

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);
;// CONCATENATED MODULE: external "react-showdown"
var external_react_showdown_namespaceObject = require("react-showdown");
var external_react_showdown_default = /*#__PURE__*/__webpack_require__.n(external_react_showdown_namespaceObject);
// EXTERNAL MODULE: ./src/next.utils.ts
var next_utils = __webpack_require__(50743);
;// CONCATENATED MODULE: ./src/hooks/useMermaid.ts


const useMermaid = () => {
  external_react_default().useEffect(() => {
    if (next_utils/* NextUtils.isRuntime */.l.isRuntime) {
      Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 61024)).then(mermaid => {
        mermaid.default.init();
      });
    }
  });
};
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/MarkdownViewWithMermaid/MarkdownViewWithMermaid.tsx
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





const MarkdownViewWithMermaid = props => {
  useMermaid();
  return /*#__PURE__*/jsx_runtime_.jsx((external_react_showdown_default()), _objectSpread({}, props));
};

/***/ }),

/***/ 45744:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export PageMetadata */
/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(40968);
/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__);


function PageMetadata({
  title
}) {
  return /*#__PURE__*/_jsx(Head, {
    children: /*#__PURE__*/_jsx("title", {
      children: title
    })
  });
}

/***/ }),

/***/ 31097:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export ProgressRadialWithOverlay */
/* harmony import */ var itwinui_v2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6227);
/* harmony import */ var itwinui_v2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(itwinui_v2__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Theme__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(39623);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__);





function ProgressRadialWithOverlay({
  isFullPage = false,
  hasSecondaryHeader = false,
  message,
  status
}) {
  const progressRadialWithOverlay = /*#__PURE__*/_jsxs("div", {
    className: "spinner-page-overlay",
    children: [/*#__PURE__*/_jsx(Theme, {
      children: /*#__PURE__*/_jsx(ProgressRadial, {
        indeterminate: true,
        status: status
      })
    }), message ? /*#__PURE__*/_jsx("span", {
      className: "message",
      children: message
    }) : null]
  });

  if (isFullPage) {
    return /*#__PURE__*/_jsx("div", {
      className: hasSecondaryHeader ? 'full-page-with-secondary-header-overlay-container' : 'full-page-overlay-container',
      children: progressRadialWithOverlay
    });
  } else {
    return progressRadialWithOverlay;
  }
}

/***/ }),

/***/ 39120:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export ResponsiveTable */
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(85217);
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(itwinui_v1__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__);
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




function ResponsiveTable(props) {
  const rest = Object.assign({}, props);
  return /*#__PURE__*/_jsx(Table, _objectSpread({}, rest));
}



/***/ }),

/***/ 39623:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ Theme; }
/* harmony export */ });
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59003);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var itwinui_v2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6227);
/* harmony import */ var itwinui_v2__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(itwinui_v2__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__);
const _excluded = ["className", "theme"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }


 //TODO: Remove after full migration to v2


function Theme(_ref) {
  let {
    className,
    theme = 'inherit'
  } = _ref,
      props = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx(itwinui_v2__WEBPACK_IMPORTED_MODULE_1__.ThemeProvider, _objectSpread({
    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(['transparent-container', className]),
    theme: theme
  }, props));
}

/***/ }),

/***/ 80956:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "B": function() { return /* binding */ GroupIcon; }
});

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
// EXTERNAL MODULE: ./src/constants/ApiGroupId.ts
var ApiGroupId = __webpack_require__(67105);
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/icons/ApiGroups/AdministrationIcon.tsx
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




var SvgIcon = function SvgIcon(props) {
  return /*#__PURE__*/jsx_runtime_.jsx("svg", _objectSpread(_objectSpread({}, props), {}, {
    children: /*#__PURE__*/jsx_runtime_.jsx("path", {
      d: "M15.25 3.422a1.301 1.301 0 0 0-1.18-1.298A10.361 10.361 0 0 1 8.843.304a1.3 1.3 0 0 0-1.669 0 10.571 10.571 0 0 1-5.244 1.82A1.301 1.301 0 0 0 .75 3.422c0 9.442 6.457 12.359 6.727 12.477a1.4 1.4 0 0 0 1.046 0c.27-.118 6.727-3.035 6.727-12.477zm-4.721 9.459a8.468 8.468 0 0 1-2.546 1.871 8.997 8.997 0 0 1-2.529-1.871l.169-1.467a1.602 1.602 0 0 1 1.585-1.417h1.568a1.59 1.59 0 0 1 1.584 1.417zM9.467 7.013A1.467 1.467 0 1 1 8 5.547a1.468 1.468 0 0 1 1.467 1.466zm4.519-3.574a13.633 13.633 0 0 1-2.327 8.093l-.033-.27a2.88 2.88 0 0 0-1.72-2.293 2.731 2.731 0 1 0-3.811 0 2.855 2.855 0 0 0-1.72 2.293l-.033.27a13.767 13.767 0 0 1-2.277-8.127 12.344 12.344 0 0 0 5.968-2.108 11.632 11.632 0 0 0 5.918 2.108z"
    })
  }));
};

SvgIcon.defaultProps = {
  viewBox: "0 0 16 16",
  xmlns: "http://www.w3.org/2000/svg"
};

const AdministrationIcon = props => {
  return /*#__PURE__*/jsx_runtime_.jsx(SvgIcon, _objectSpread({}, props));
};

/* harmony default export */ var ApiGroups_AdministrationIcon = (AdministrationIcon);
;// CONCATENATED MODULE: ./src/components/icons/ApiGroups/ConstructionIcon.tsx
function ConstructionIcon_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function ConstructionIcon_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ConstructionIcon_ownKeys(Object(source), !0).forEach(function (key) { ConstructionIcon_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ConstructionIcon_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function ConstructionIcon_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




var ConstructionIcon_SvgIcon = function SvgIcon(props) {
  return /*#__PURE__*/jsx_runtime_.jsx("svg", ConstructionIcon_objectSpread(ConstructionIcon_objectSpread({}, props), {}, {
    children: /*#__PURE__*/jsx_runtime_.jsx("path", {
      "'data-name'": "Construction",
      d: "M16 9.067c0-.147-.12-.267-.267-.4h-3.466v-.715a.795.795 0 0 0 0-1.501V5.333H15.2c.147 0 .267-.12.133-.266V2.933c.134-.005.128-.037.126-.05a.153.153 0 0 0-.011-.037.374.374 0 0 0-.017-.035.151.151 0 0 0-.021-.034.266.266 0 0 0-.027-.03.14.14 0 0 0-.029-.026.151.151 0 0 0-.035-.022.13.13 0 0 0-.034-.016.273.273 0 0 0-.038-.011c-.01 0-.042-.005-.048-.005h-2.095L3.539.01A.209.209 0 0 0 3.469 0h-.002l-.014.003a.203.203 0 0 0-.056.008l-.024.008a.213.213 0 0 0-.042.021l-.022.013-.013.008-3.2 2.667a.727.727 0 0 0-.043.053.346.346 0 0 0-.026.04.624.624 0 0 0-.024.102L0 2.933v2.134l.003.013a.206.206 0 0 0 .005.04.153.153 0 0 0 .01.037.029.029 0 0 0 .003.014.093.093 0 0 0 .014.021.152.152 0 0 0 .021.035.267.267 0 0 0 .027.029.14.14 0 0 0 .029.027.151.151 0 0 0 .035.021c.008.003.013.01.021.013l.01.003a.304.304 0 0 0 .089.013h1.9v10.4c-.034.006-.031.008-.031.014a.206.206 0 0 0 .005.04.153.153 0 0 0 .011.037.02.02 0 0 1 .003.013c0 .006.008.014.013.022a.151.151 0 0 0 .021.034.266.266 0 0 0 .027.03.14.14 0 0 0 .03.026.151.151 0 0 0 .034.022c.008.002.013.01.021.013l.011.003A.304.304 0 0 0 2.4 16h2.133a.325.325 0 0 0 .3-.267V9.6h1.3a.494.494 0 0 0 .367-.267v-4h5.233v1.115a.795.795 0 0 0 0 1.501v.718H8.267C8.12 8.8 8 8.92 8 9.067v1.066c0 .147.12.267.267.2h7.466c.147.067.267-.053.267-.2ZM6.4 4.8H5.176L6.4 3.576Zm-2.133 0H3.043l1.224-1.224Zm6.842-2.133H4.715l-.8-1.998ZM2.667 4.424V3.2H3.89Zm1.472-1.757H2.795L3.467.983ZM4.8 4.424V3.2h1.224ZM2.827 1.147l-.608 1.52H1.002ZM.533 4.424V3.2h1.224Zm6.4 0V3.2h1.224Zm2.134 0V3.2h1.224Zm2.133 0V3.2h1.224Zm3.733-.848V4.8H13.71Zm-.376-.376-1.224 1.224V3.2ZM.91 4.8l1.224-1.224V4.8Zm3.358 7.31v1.223H3.043Zm-.376-.377-1.224 1.224v-1.224Zm-1.224 3.358v-1.224H3.89Zm1.6-5.115V11.2H3.043ZM3.89 9.6l-1.224 1.224V9.6Zm.376 4.643v1.224H3.043Zm1.6-5.176L4.533 9H2.667V5.333h.666v2.934c-.133.034-.125.069-.112.101a.272.272 0 0 0 .144.144.083.083 0 0 0 .102-.012h2.4ZM6 5.333V8h-.824l.344-.344a.267.267 0 0 0-.376-.376l-.72.72h-.312l.877-.877a.267.267 0 0 0-.376-.376l-.78.877v-2.29ZM7.31 4.8l1.223-1.224V4.8Zm2.133 0 1.224-1.224V4.8Zm2.133 0L12.8 3.576V4.8Zm.157 2.4a.267.267 0 1 1 .267.267.267.267 0 0 1-.267-.267Zm3.734 2.133v.5H8.533v-.5Z"
    })
  }));
};

ConstructionIcon_SvgIcon.defaultProps = {
  viewBox: "0 0 16 16",
  xmlns: "http://www.w3.org/2000/svg"
};

const ConstructionIcon = props => {
  return /*#__PURE__*/jsx_runtime_.jsx(ConstructionIcon_SvgIcon, ConstructionIcon_objectSpread({}, props));
};

/* harmony default export */ var ApiGroups_ConstructionIcon = (ConstructionIcon);
;// CONCATENATED MODULE: ./src/components/icons/ApiGroups/DocumentManagementIcon.tsx
function DocumentManagementIcon_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function DocumentManagementIcon_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? DocumentManagementIcon_ownKeys(Object(source), !0).forEach(function (key) { DocumentManagementIcon_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : DocumentManagementIcon_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function DocumentManagementIcon_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




var DocumentManagementIcon_SvgIcon = function SvgIcon(props) {
  return /*#__PURE__*/jsx_runtime_.jsx("svg", DocumentManagementIcon_objectSpread(DocumentManagementIcon_objectSpread({}, props), {}, {
    children: /*#__PURE__*/jsx_runtime_.jsx("path", {
      d: "M3 12.5a.5.5 0 1 1-.5-.5.5.5 0 0 1 .5.5zM5 1v14a1.04 1.04 0 0 1-1.071 1H1.07A1.04 1.04 0 0 1 0 15V1a1.04 1.04 0 0 1 1.071-1H3.93A1.04 1.04 0 0 1 5 1zM4 12.5A1.5 1.5 0 1 0 2.5 14 1.5 1.5 0 0 0 4 12.5zM4 5H1v1h3zm0-2H1v1h3zm0-2H1v1h3zm4 11a.5.5 0 1 0 .5.5.5.5 0 0 0-.5-.5zm2.5-11v14a1.04 1.04 0 0 1-1.071 1H6.57A1.04 1.04 0 0 1 5.5 15V1a1.04 1.04 0 0 1 1.071-1H9.43A1.04 1.04 0 0 1 10.5 1zm-1 11.5A1.5 1.5 0 1 0 8 14a1.5 1.5 0 0 0 1.5-1.5zm0-7.5h-3v1h3zm0-2h-3v1h3zm0-2h-3v1h3zm4 11a.5.5 0 1 0 .5.5.5.5 0 0 0-.5-.5zM16 1v14a1.04 1.04 0 0 1-1.071 1H12.07A1.04 1.04 0 0 1 11 15V1a1.04 1.04 0 0 1 1.071-1h2.858A1.04 1.04 0 0 1 16 1zm-1 11.5a1.5 1.5 0 1 0-1.5 1.5 1.5 1.5 0 0 0 1.5-1.5zM15 5h-3v1h3zm0-2h-3v1h3zm0-2h-3v1h3z"
    })
  }));
};

DocumentManagementIcon_SvgIcon.defaultProps = {
  viewBox: "0 0 16 16",
  xmlns: "http://www.w3.org/2000/svg"
};

const DocumentManagementIcon = props => {
  return /*#__PURE__*/jsx_runtime_.jsx(DocumentManagementIcon_SvgIcon, DocumentManagementIcon_objectSpread({}, props));
};

/* harmony default export */ var ApiGroups_DocumentManagementIcon = (DocumentManagementIcon);
;// CONCATENATED MODULE: ./src/components/icons/ApiGroups/InfrastructureIcon.tsx
function InfrastructureIcon_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function InfrastructureIcon_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? InfrastructureIcon_ownKeys(Object(source), !0).forEach(function (key) { InfrastructureIcon_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : InfrastructureIcon_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function InfrastructureIcon_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var InfrastructureIcon_SvgIcon = function SvgIcon(props) {
  return /*#__PURE__*/(0,jsx_runtime_.jsxs)("svg", InfrastructureIcon_objectSpread(InfrastructureIcon_objectSpread({}, props), {}, {
    children: [/*#__PURE__*/jsx_runtime_.jsx("path", {
      d: "M0 0v7h3a5 5 0 0 1 10 0h3V0"
    }), /*#__PURE__*/jsx_runtime_.jsx("path", {
      d: "M11.12 6H4.87L3 15.37V16h10v-.63ZM7.93 7h.13l.2 1.71h-.53Zm-.34 2.86h.8l.2 1.71h-1.2ZM7 15l.27-2.29h1.46L9 15Z"
    })]
  }));
};

InfrastructureIcon_SvgIcon.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 16 16"
};

const InfrastructureIcon = props => {
  return /*#__PURE__*/jsx_runtime_.jsx(InfrastructureIcon_SvgIcon, InfrastructureIcon_objectSpread({}, props));
};

/* harmony default export */ var ApiGroups_InfrastructureIcon = (InfrastructureIcon);
;// CONCATENATED MODULE: ./src/components/icons/ApiGroups/InternalAccessIcon.tsx
function InternalAccessIcon_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function InternalAccessIcon_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? InternalAccessIcon_ownKeys(Object(source), !0).forEach(function (key) { InternalAccessIcon_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : InternalAccessIcon_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function InternalAccessIcon_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




var InternalAccessIcon_SvgIcon = function SvgIcon(props) {
  return /*#__PURE__*/jsx_runtime_.jsx("svg", InternalAccessIcon_objectSpread(InternalAccessIcon_objectSpread({}, props), {}, {
    children: /*#__PURE__*/jsx_runtime_.jsx("path", {
      d: "M7.984 1.679a1.441 1.441 0 1 1-1.441 1.44 1.441 1.441 0 0 1 1.441-1.44zm-3.446 1.44A1.441 1.441 0 1 1 3.097 4.56a1.441 1.441 0 0 1 1.44-1.44zM3.12 6.575a1.441 1.441 0 1 1-1.441 1.441 1.441 1.441 0 0 1 1.44-1.441zm1.44 3.446a1.441 1.441 0 1 1-1.44 1.441 1.441 1.441 0 0 1 1.44-1.441zm3.456 1.418a1.441 1.441 0 1 1-1.441 1.441 1.441 1.441 0 0 1 1.441-1.441zm3.446-1.44a1.441 1.441 0 1 1-1.441 1.44A1.441 1.441 0 0 1 11.462 10zm1.418-3.456a1.441 1.441 0 1 1-1.441 1.441 1.441 1.441 0 0 1 1.441-1.441zm-1.44-3.446a1.441 1.441 0 1 1-1.442 1.44 1.441 1.441 0 0 1 1.441-1.44zM8 0a8 8 0 1 0 8 8 8 8 0 0 0-8-8zm0 14.763A6.763 6.763 0 1 1 14.763 8 6.77 6.77 0 0 1 8 14.763zm0-9.788A3.025 3.025 0 1 0 11.025 8 3.025 3.025 0 0 0 8 4.975zm0 5.096A2.071 2.071 0 1 1 10.071 8 2.071 2.071 0 0 1 8 10.071z"
    })
  }));
};

InternalAccessIcon_SvgIcon.defaultProps = {
  viewBox: "0 0 16 16",
  xmlns: "http://www.w3.org/2000/svg"
};

const InternalAccessIcon = props => {
  return /*#__PURE__*/jsx_runtime_.jsx(InternalAccessIcon_SvgIcon, InternalAccessIcon_objectSpread({}, props));
};

/* harmony default export */ var ApiGroups_InternalAccessIcon = (InternalAccessIcon);
;// CONCATENATED MODULE: ./src/components/icons/ApiGroups/PerformanceOperationsIcon.tsx
function PerformanceOperationsIcon_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function PerformanceOperationsIcon_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? PerformanceOperationsIcon_ownKeys(Object(source), !0).forEach(function (key) { PerformanceOperationsIcon_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : PerformanceOperationsIcon_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function PerformanceOperationsIcon_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




var PerformanceOperationsIcon_SvgIcon = function SvgIcon(props) {
  return /*#__PURE__*/jsx_runtime_.jsx("svg", PerformanceOperationsIcon_objectSpread(PerformanceOperationsIcon_objectSpread({}, props), {}, {
    children: /*#__PURE__*/jsx_runtime_.jsx("path", {
      d: "m10.75 5.952-3.6 2.233a1.72 1.72 0 0 0-.8 1.45 1.679 1.679 0 0 0 1.69 1.667h.01a1.667 1.667 0 0 0 1.433-.834l2.166-3.65a.642.642 0 0 0-.9-.866zM8 1.608a8.009 8.009 0 0 0-6.636 12.48.676.676 0 0 0 .556.304.655.655 0 0 0 .388-.118.698.698 0 0 0 .185-.944A6.504 6.504 0 0 1 1.416 10.3h1.077a.674.674 0 0 0 0-1.348H1.399a6.645 6.645 0 0 1 1.448-3.503l.775.775a.674.674 0 0 0 .488.202.7.7 0 0 0 .488-.202.67.67 0 0 0 .012-.948l-.012-.012-.792-.81A6.805 6.805 0 0 1 7.31 2.99v1.095a.674.674 0 1 0 1.347 0V2.99a6.669 6.669 0 0 1 5.944 5.945h-1.094a.674.674 0 0 0 0 1.347h1.077a6.706 6.706 0 0 1-1.077 3.031.664.664 0 0 0 .16.926l.025.018a.664.664 0 0 0 .926-.16l.017-.026A7.996 7.996 0 0 0 8 1.608z"
    })
  }));
};

PerformanceOperationsIcon_SvgIcon.defaultProps = {
  viewBox: "0 0 16 16",
  xmlns: "http://www.w3.org/2000/svg"
};

const PerformanceOperationsIcon = props => {
  return /*#__PURE__*/jsx_runtime_.jsx(PerformanceOperationsIcon_SvgIcon, PerformanceOperationsIcon_objectSpread({}, props));
};

/* harmony default export */ var ApiGroups_PerformanceOperationsIcon = (PerformanceOperationsIcon);
;// CONCATENATED MODULE: ./src/components/icons/ApiGroups/ProjectDeliveryIcon.tsx
function ProjectDeliveryIcon_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function ProjectDeliveryIcon_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ProjectDeliveryIcon_ownKeys(Object(source), !0).forEach(function (key) { ProjectDeliveryIcon_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ProjectDeliveryIcon_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function ProjectDeliveryIcon_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




var ProjectDeliveryIcon_SvgIcon = function SvgIcon(props) {
  return /*#__PURE__*/jsx_runtime_.jsx("svg", ProjectDeliveryIcon_objectSpread(ProjectDeliveryIcon_objectSpread({}, props), {}, {
    children: /*#__PURE__*/jsx_runtime_.jsx("path", {
      d: "M8.722 2.075h-4v6.777h9.6V2.074h-4V3.11h-1.6zM0 1.582V0h3.167L3.09 10.456H16v1.575H1.56V1.581zM3.09 14.4zm8.11 0z",
      fillRule: "evenodd"
    })
  }));
};

ProjectDeliveryIcon_SvgIcon.defaultProps = {
  viewBox: "0 0 16 16",
  xmlns: "http://www.w3.org/2000/svg"
};

const ProjectDeliveryIcon = props => {
  return /*#__PURE__*/jsx_runtime_.jsx(ProjectDeliveryIcon_SvgIcon, ProjectDeliveryIcon_objectSpread({}, props));
};

/* harmony default export */ var ApiGroups_ProjectDeliveryIcon = (ProjectDeliveryIcon);
;// CONCATENATED MODULE: ./src/components/icons/ApiGroups/RealityModelingIcon.tsx
function RealityModelingIcon_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function RealityModelingIcon_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? RealityModelingIcon_ownKeys(Object(source), !0).forEach(function (key) { RealityModelingIcon_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : RealityModelingIcon_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function RealityModelingIcon_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




var RealityModelingIcon_SvgIcon = function SvgIcon(props) {
  return /*#__PURE__*/jsx_runtime_.jsx("svg", RealityModelingIcon_objectSpread(RealityModelingIcon_objectSpread({}, props), {}, {
    children: /*#__PURE__*/jsx_runtime_.jsx("path", {
      d: "M13.967 5.085h-.434V3.857h-.066a.64.64 0 0 1-.666-.612l-.001-.019V1.833h-.533V3.26a.662.662 0 0 1-.667.63v1.228H4.433V3.891c-.033 0-.733.033-.733-.631V1.833h-.533V3.26a.662.662 0 0 1-.667.63v1.228h-.467a.93.93 0 0 0-.933.927v.003a.93.93 0 0 0 .93.93h2.137l-1.8 6.67a.39.39 0 0 0 .733.266l1.867-6.97.8 1.858h1.266v.764H5.667A.667.667 0 0 0 5 10.23v2.29a.667.667 0 0 0 .667.663h4.666a.667.667 0 0 0 .667-.664v-2.29a.667.667 0 0 0-.667-.663H8.967v-.764h1.266l.8-1.858 1.867 6.969a.39.39 0 0 0 .733-.266l-1.8-6.738h2.134a.93.93 0 0 0 .933-.926V5.98a.947.947 0 0 0-.933-.895zm-4.8 6.306A1.167 1.167 0 1 1 8 10.229a1.178 1.178 0 0 1 1.167 1.162zM8 10.622a.755.755 0 0 0-.767.742v.025a.755.755 0 0 0 .742.767H8a.767.767 0 0 0 0-1.534zM14.433 3A3.503 3.503 0 0 0 16 2.6a3.503 3.503 0 0 0-1.567-.4c-.866 0-1.333.167-1.333.4s.467.4 1.333.4zm-2.466-.4c0-.233-.434-.4-1.3-.4a3.503 3.503 0 0 0-1.567.4 3.503 3.503 0 0 0 1.567.4c.866 0 1.3-.166 1.3-.4zM5.333 3A3.503 3.503 0 0 0 6.9 2.6a3.49 3.49 0 0 0-1.567-.4c-.866 0-1.3.167-1.3.4s.434.4 1.3.4zM2.9 2.6c0-.233-.433-.4-1.3-.4a3.736 3.736 0 0 0-1.6.4 3.503 3.503 0 0 0 1.567.4C2.433 3 2.9 2.833 2.9 2.6z"
    })
  }));
};

RealityModelingIcon_SvgIcon.defaultProps = {
  viewBox: "0 0 16 16",
  xmlns: "http://www.w3.org/2000/svg"
};

const RealityModelingIcon = props => {
  return /*#__PURE__*/jsx_runtime_.jsx(RealityModelingIcon_SvgIcon, RealityModelingIcon_objectSpread({}, props));
};

/* harmony default export */ var ApiGroups_RealityModelingIcon = (RealityModelingIcon);
;// CONCATENATED MODULE: ./src/components/icons/ApiGroups/ReportingsInsightsIcon.tsx
function ReportingsInsightsIcon_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function ReportingsInsightsIcon_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ReportingsInsightsIcon_ownKeys(Object(source), !0).forEach(function (key) { ReportingsInsightsIcon_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ReportingsInsightsIcon_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function ReportingsInsightsIcon_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




var ReportingsInsightsIcon_SvgIcon = function SvgIcon(props) {
  return /*#__PURE__*/jsx_runtime_.jsx("svg", ReportingsInsightsIcon_objectSpread(ReportingsInsightsIcon_objectSpread({}, props), {}, {
    children: /*#__PURE__*/jsx_runtime_.jsx("path", {
      d: "M6.866.004A7.18 7.18 0 0 0 0 6.87h6.867zm-6.232 8.6a7.599 7.599 0 0 0 1.207 3.865l5.556-3.865zm2.418 5.315a7.606 7.606 0 0 0 4.974 2.077V8.867L2.172 12.94a7.796 7.796 0 0 0 .88.979zm2.677-2.154h1.436a.287.287 0 0 1 .287.287.287.287 0 0 1-.287.287H5.73a.287.287 0 0 1-.287-.287.287.287 0 0 1 .287-.287zm-.575 1.149h2.01a.287.287 0 0 1 .288.287.287.287 0 0 1-.287.287H5.153a.287.287 0 0 1-.287-.287.287.287 0 0 1 .287-.287zm0 1.149h2.01a.287.287 0 0 1 .288.287.287.287 0 0 1-.287.288H5.153a.287.287 0 0 1-.287-.287.287.287 0 0 1 .287-.288zm8.762-11.008A7.607 7.607 0 0 0 8.6.637v15.36l.203-.01a7.685 7.685 0 0 0 5.112-12.932zm-4.452-.483h2.584a.287.287 0 0 1 .287.287.287.287 0 0 1-.287.288H9.463a.287.287 0 0 1-.287-.287.287.287 0 0 1 .287-.288zm3.446 2.872H9.464a.287.287 0 0 1-.288-.287.287.287 0 0 1 .287-.287h3.447a.287.287 0 0 1 0 .574zm0-1.149H9.464a.287.287 0 0 1-.288-.287.287.287 0 0 1 .287-.287h3.447a.287.287 0 0 1 0 .574z"
    })
  }));
};

ReportingsInsightsIcon_SvgIcon.defaultProps = {
  viewBox: "0 0 16 16",
  xmlns: "http://www.w3.org/2000/svg"
};

const ReportingsInsightsIcon = props => {
  return /*#__PURE__*/jsx_runtime_.jsx(ReportingsInsightsIcon_SvgIcon, ReportingsInsightsIcon_objectSpread({}, props));
};

/* harmony default export */ var ApiGroups_ReportingsInsightsIcon = (ReportingsInsightsIcon);
;// CONCATENATED MODULE: ./src/components/icons/ApiGroups/ReviewIcon.tsx
function ReviewIcon_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function ReviewIcon_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ReviewIcon_ownKeys(Object(source), !0).forEach(function (key) { ReviewIcon_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ReviewIcon_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function ReviewIcon_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




var ReviewIcon_SvgIcon = function SvgIcon(props) {
  return /*#__PURE__*/jsx_runtime_.jsx("svg", ReviewIcon_objectSpread(ReviewIcon_objectSpread({}, props), {}, {
    children: /*#__PURE__*/jsx_runtime_.jsx("path", {
      d: "M18 13.5a.5.5 0 0 1-.354-.146l-1.5-1.5a.5.5 0 0 1 .707-.707l1.083 1.082 2.157-3.02a.5.5 0 0 1 .814.582l-2.5 3.5a.503.503 0 0 1-.366.208L18 13.5Zm.041 5.998a.502.502 0 0 0 .366-.207l2.5-3.5a.5.5 0 0 0-.814-.582l-2.157 3.02-1.083-1.083a.5.5 0 0 0-.707.707l1.5 1.5A.501.501 0 0 0 18 19.5l.041-.002ZM24 15.258V7.461a.54.54 0 0 0-.539-.539H20V7a1.003 1.003 0 0 1-1 1h-8a1.003 1.003 0 0 1-1-1v-.077H6.539A.54.54 0 0 0 6 7.462v21.999a.54.54 0 0 0 .539.539h16.922a.54.54 0 0 0 .539-.539v-5.718l2-2v7.718A2.539 2.539 0 0 1 23.461 32H6.539A2.539 2.539 0 0 1 4 29.461V7.462a2.539 2.539 0 0 1 2.539-2.539h3.49A2.23 2.23 0 0 1 12 3.01V3a3 3 0 0 1 6 0v.01a2.23 2.23 0 0 1 1.97 1.913h3.491A2.539 2.539 0 0 1 26 7.462v5.795ZM14 3a1 1 0 1 0 1-1 1.003 1.003 0 0 0-1 1Zm16.01 10.49a2 2 0 0 0-2.828 0l-8.353 8.352-.61 2.67-1.365-1.366a.5.5 0 0 0-.707.707l1.5 1.5a.497.497 0 0 0 .345.145l-.002.012 3.668-.84 8.352-8.352a2 2 0 0 0 0-2.828ZM15 12.5a.5.5 0 0 0-.5-.5h-6a.5.5 0 0 0 0 1h6a.5.5 0 0 0 .5-.5Zm0 6a.5.5 0 0 0-.5-.5h-6a.5.5 0 0 0 0 1h6a.5.5 0 0 0 .5-.5Zm0 6a.5.5 0 0 0-.5-.5h-6a.5.5 0 0 0 0 1h6a.5.5 0 0 0 .5-.5Z"
    })
  }));
};

ReviewIcon_SvgIcon.defaultProps = {
  'data-name': "Layer 1",
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 32 32"
};

const ReviewIcon = props => {
  return /*#__PURE__*/jsx_runtime_.jsx(ReviewIcon_SvgIcon, ReviewIcon_objectSpread({}, props));
};

/* harmony default export */ var ApiGroups_ReviewIcon = (ReviewIcon);
;// CONCATENATED MODULE: ./src/components/icons/ApiGroups/SynchronizationIcon.tsx
function SynchronizationIcon_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function SynchronizationIcon_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? SynchronizationIcon_ownKeys(Object(source), !0).forEach(function (key) { SynchronizationIcon_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : SynchronizationIcon_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function SynchronizationIcon_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




var SynchronizationIcon_SvgIcon = function SvgIcon(props) {
  return /*#__PURE__*/jsx_runtime_.jsx("svg", SynchronizationIcon_objectSpread(SynchronizationIcon_objectSpread({}, props), {}, {
    children: /*#__PURE__*/jsx_runtime_.jsx("path", {
      d: "M14 2.5v2a10.011 10.011 0 0 0-10 10h2l-3 4-3-4h2a12.013 12.013 0 0 1 12-12Zm15 11-3 4h2a10.012 10.012 0 0 1-10 10v2a12.013 12.013 0 0 0 12-12h2Zm-4 2a9 9 0 1 1-9-9 9 9 0 0 1 9 9Zm-2.023.451h-1.99a12.167 12.167 0 0 1-.468 3.009l1.562-.006a6.944 6.944 0 0 0 .896-3.003ZM19.033 11A4.167 4.167 0 0 0 16.5 8.564V11ZM16.5 12v2.951h3.484A10.809 10.809 0 0 0 19.44 12Zm-3.533-1H15.5V8.564A4.167 4.167 0 0 0 12.967 11Zm-.407 1a10.809 10.809 0 0 0-.544 2.951H15.5V12Zm-1.067 0H9.947a6.941 6.941 0 0 0-.92 2.951h1.99A12.096 12.096 0 0 1 11.493 12Zm-2.47 3.951a6.942 6.942 0 0 0 .922 3.046l1.545-.006a12.145 12.145 0 0 1-.476-3.04Zm3.532 3.037 2.945-.01V15.95h-3.486a10.85 10.85 0 0 0 .541 3.037Zm.405.998a4.177 4.177 0 0 0 2.54 2.45v-2.459Zm6.091-.021-2.551.009v2.462a4.191 4.191 0 0 0 2.551-2.471Zm.402-1.001a10.862 10.862 0 0 0 .533-3.013H16.5v3.023Zm3.52-4.013a6.941 6.941 0 0 0-.92-2.951h-1.546a12.096 12.096 0 0 1 .476 2.951Zm-3.81-5.687A7.666 7.666 0 0 1 20.158 11h1.196a7.039 7.039 0 0 0-2.19-1.736ZM10.646 11h1.196a7.666 7.666 0 0 1 .995-1.736A7.039 7.039 0 0 0 10.646 11Zm2.19 10.736a7.68 7.68 0 0 1-.998-1.746l-1.197.004a7.038 7.038 0 0 0 2.195 1.742Zm8.557-1.78-1.22.005a7.704 7.704 0 0 1-1.01 1.775 7.04 7.04 0 0 0 2.23-1.78Z"
    })
  }));
};

SynchronizationIcon_SvgIcon.defaultProps = {
  'data-name': "Layer 1",
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 32 32"
};

const SynchronizationIcon = props => {
  return /*#__PURE__*/jsx_runtime_.jsx(SynchronizationIcon_SvgIcon, SynchronizationIcon_objectSpread({}, props));
};

/* harmony default export */ var ApiGroups_SynchronizationIcon = (SynchronizationIcon);
;// CONCATENATED MODULE: ./src/components/icons/ApiGroups/VisualizationIcon.tsx
function VisualizationIcon_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function VisualizationIcon_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? VisualizationIcon_ownKeys(Object(source), !0).forEach(function (key) { VisualizationIcon_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : VisualizationIcon_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function VisualizationIcon_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




var VisualizationIcon_SvgIcon = function SvgIcon(props) {
  return /*#__PURE__*/jsx_runtime_.jsx("svg", VisualizationIcon_objectSpread(VisualizationIcon_objectSpread({}, props), {}, {
    children: /*#__PURE__*/jsx_runtime_.jsx("path", {
      d: "M14.647 12.43v-1.348a.473.473 0 0 0-.406-.471l-5.767-.74V8.74a6.938 6.938 0 0 0 3.957-2.29.46.46 0 0 0 0-.607C12.346 5.744 10.435 3.52 8 3.52S3.653 5.743 3.569 5.844a.46.46 0 0 0 0 .607 7.01 7.01 0 0 0 3.957 2.29V9.87l-5.768.74a.473.473 0 0 0-.405.472v1.348A1.815 1.815 0 0 0 1.826 16a1.837 1.837 0 0 0 1.827-1.82A1.81 1.81 0 0 0 2.3 12.43v-.943l5.226-.674v1.617A1.815 1.815 0 0 0 8 16a1.837 1.837 0 0 0 1.827-1.82 1.81 1.81 0 0 0-1.354-1.75v-1.617l5.227.674v.943a1.815 1.815 0 0 0 .473 3.57A1.837 1.837 0 0 0 16 14.18a1.81 1.81 0 0 0-1.353-1.75zM2.706 14.18a.897.897 0 1 1-.897-.892.9.9 0 0 1 .897.893zm4.803-9.6a.543.543 0 0 1 .541.54.555.555 0 0 1-.541.539.539.539 0 1 1 0-1.078zm-1.15.287a1.752 1.752 0 0 0-.084.505 1.725 1.725 0 0 0 3.45 0 1.752 1.752 0 0 0-.085-.505 7.47 7.47 0 0 1 1.793 1.28A5.424 5.424 0 0 1 8 7.832a5.422 5.422 0 0 1-3.433-1.685 6.644 6.644 0 0 1 1.792-1.28zm2.537 9.314A.896.896 0 1 1 8 13.288a.9.9 0 0 1 .896.893zm5.277.876a.893.893 0 1 1 .896-.893.89.89 0 0 1-.886.893zM8 2.34a.472.472 0 0 0 .473-.47V.47a.472.472 0 0 0-.472-.47H8a.461.461 0 0 0-.474.448V1.886A.469.469 0 0 0 8 2.341zm2.993.808a.387.387 0 0 0 .237.067.456.456 0 0 0 .405-.235l.71-1.23a.47.47 0 0 0-.811-.471l-.71 1.23a.456.456 0 0 0 .147.626zm-6.63-.184a.476.476 0 0 0 .406.235.427.427 0 0 0 .236-.066.469.469 0 0 0 .17-.64l-.71-1.23a.47.47 0 0 0-.813.471z"
    })
  }));
};

VisualizationIcon_SvgIcon.defaultProps = {
  viewBox: "0 0 16 16",
  xmlns: "http://www.w3.org/2000/svg"
};

const VisualizationIcon = props => {
  return /*#__PURE__*/jsx_runtime_.jsx(VisualizationIcon_SvgIcon, VisualizationIcon_objectSpread({}, props));
};

/* harmony default export */ var ApiGroups_VisualizationIcon = (VisualizationIcon);
;// CONCATENATED MODULE: ./src/components/icons/ApiGroups/EventsIcon.tsx
function EventsIcon_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function EventsIcon_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? EventsIcon_ownKeys(Object(source), !0).forEach(function (key) { EventsIcon_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : EventsIcon_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function EventsIcon_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




var EventsIcon_SvgIcon = function SvgIcon(props) {
  return /*#__PURE__*/jsx_runtime_.jsx("svg", EventsIcon_objectSpread(EventsIcon_objectSpread({}, props), {}, {
    children: /*#__PURE__*/jsx_runtime_.jsx("path", {
      d: "M12.487 12.08H4.605v.835a1.856 1.856 0 0 1-3.678-.318 1.814 1.814 0 0 1 .798-1.5l-.532-.748A2.721 2.721 0 0 0 0 12.597a2.758 2.758 0 0 0 2.78 2.736 2.768 2.768 0 0 0 2.741-2.278h6.929a.922.922 0 1 0 .801-1.37.93.93 0 0 0-.764.395zM1.93 12.2a.925.925 0 0 1 .843-.58l3.435-6.035a2.804 2.804 0 0 1-.624-3.529 2.717 2.717 0 0 1 3.699-1.04l.04.023a2.775 2.775 0 0 1 1.357 2.164l-.909.08a1.85 1.85 0 0 0-.905-1.442 1.811 1.811 0 0 0-2.477.652l-.015.026a1.867 1.867 0 0 0 .614 2.497l.502.294-3.891 6.835a.936.936 0 0 1 .016.762.911.911 0 0 1-1.77-.32.935.935 0 0 1 .085-.387zm6.105-7.865 3.853 6.767.458-.27.008.015.011-.008a1.802 1.802 0 0 1 2.469.636l.016.028a1.856 1.856 0 0 1-.677 2.514 1.805 1.805 0 0 1-1.688.078l-.39.834a2.71 2.71 0 0 0 2.53-.12 2.785 2.785 0 0 0 1.017-3.77 2.703 2.703 0 0 0-3.338-1.183L8.884 3.851a.926.926 0 0 0-.007-.899.902.902 0 0 0-1.23-.338l-.013.007a.929.929 0 0 0-.338 1.257.901.901 0 0 0 .738.456z",
      fillRule: "evenodd"
    })
  }));
};

EventsIcon_SvgIcon.defaultProps = {
  viewBox: "0 0 16 16",
  xmlns: "http://www.w3.org/2000/svg"
};

const EventsIcon = props => {
  return /*#__PURE__*/jsx_runtime_.jsx(EventsIcon_SvgIcon, EventsIcon_objectSpread({}, props));
};

/* harmony default export */ var ApiGroups_EventsIcon = (EventsIcon);
;// CONCATENATED MODULE: ./src/components/icons/ItwinGameEngineIcon.tsx
function ItwinGameEngineIcon_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function ItwinGameEngineIcon_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ItwinGameEngineIcon_ownKeys(Object(source), !0).forEach(function (key) { ItwinGameEngineIcon_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ItwinGameEngineIcon_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function ItwinGameEngineIcon_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




var ItwinGameEngineIcon_SvgIcon = function SvgIcon(props) {
  return /*#__PURE__*/jsx_runtime_.jsx("svg", ItwinGameEngineIcon_objectSpread(ItwinGameEngineIcon_objectSpread({}, props), {}, {
    children: /*#__PURE__*/jsx_runtime_.jsx("path", {
      d: "M9.548 9.877a3.619 3.619 0 0 1 .987-.092c.195.123.39.257.575.39h.042l.05-.041a1.469 1.469 0 0 0 .107-.183 1.524 1.524 0 0 0 .15-.608l.021-2.693c.01-.812.01-1.604.031-2.457-.051-.699.062-.914-.935-1.541L6.742.349A2.518 2.518 0 0 0 5.745 0a1.84 1.84 0 0 0-.955.35L.946 2.651C.01 3.186.03 3.505 0 4.204l.01 2.394v2.077l.02.688c.011.679.31.864.792 1.213l2.529 1.48c.555.34 1.13.668 1.47.874.225.113.472.236.698.328a.736.736 0 0 0 .607-.04c.185-.093.37-.186.555-.288.287-.165.801-.473 1.315-.781q.2-.833.463-1.82a3.985 3.985 0 0 1 1.09-.452ZM5.671 2.79a.804.804 0 1 1-.799.809.804.804 0 0 1 .799-.81Zm2.143 7.723-1.76 1.04c-.07.031-.13.061-.211.092l-.132.02-.131-.02c-.06-.03-.142-.06-.202-.091l-1.75-1.041c-.272-.213-.393-.182-.403-.526 0-.495 0-.364.01-.87 0-.262.09-.363.242-.333a.598.598 0 0 1 .162.06l1.385.81-.02-2.639c.02-.222-.03-.212-.142-.303l-.586-.324c-.142-.08-.212-.06-.212-.364 0-.505 0-.505.01-1.02a.268.268 0 0 1 .06-.203.15.15 0 0 1 .091-.02l.09.025h.001l1.486.845.243.13c.252.142.263.233.263.355v3.568l1.475-.86c.253-.13.415-.07.415.274 0 .505.02.374.02.869-.03.344-.141.313-.404.526Zm7.835 5.438a.41.41 0 0 1-.253.03c-.404-.03-1.041-.515-1.89-1.425l-.04-.04a6.492 6.492 0 0 0-1.305-.132 5.47 5.47 0 0 0-1.01.131c-1.143 1.173-1.91 1.648-2.325 1.436-.546-.293-.455-1.82.293-4.6.02-.1.05-.202.08-.313a2.76 2.76 0 0 1 .85-.343c.09-.02.182-.04.263-.051a2.891 2.891 0 0 1 .495-.02c.141.1.293.202.435.293a8.033 8.033 0 0 0 1.04.07 6.343 6.343 0 0 0 .81-.07c.212-.091.414-.192.616-.293a2.21 2.21 0 0 1 .849.07 2.514 2.514 0 0 1 .768.344c.779 3.002.88 4.63.324 4.913Z"
    })
  }));
};

ItwinGameEngineIcon_SvgIcon.defaultProps = {
  'data-name': "Itwin controler",
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 16 16"
};

const ItwinGameEngineIcon = props => {
  return /*#__PURE__*/jsx_runtime_.jsx(ItwinGameEngineIcon_SvgIcon, ItwinGameEngineIcon_objectSpread({}, props));
};

/* harmony default export */ var icons_ItwinGameEngineIcon = (ItwinGameEngineIcon);
;// CONCATENATED MODULE: ./src/components/icons/GroupIcon.tsx
const _excluded = ["apiGroupId"];

function GroupIcon_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function GroupIcon_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? GroupIcon_ownKeys(Object(source), !0).forEach(function (key) { GroupIcon_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : GroupIcon_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function GroupIcon_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }



















function GroupIcon(_ref) {
  let {
    apiGroupId
  } = _ref,
      rest = _objectWithoutProperties(_ref, _excluded);

  switch (apiGroupId) {
    case ApiGroupId/* ApiGroupId.Administration */.mV.Administration:
      return /*#__PURE__*/jsx_runtime_.jsx(ApiGroups_AdministrationIcon, GroupIcon_objectSpread({}, rest));

    case ApiGroupId/* ApiGroupId.Construction */.mV.Construction:
      return /*#__PURE__*/jsx_runtime_.jsx(ApiGroups_ConstructionIcon, GroupIcon_objectSpread({}, rest));

    case ApiGroupId/* ApiGroupId.DataManagement */.mV.DataManagement:
      return /*#__PURE__*/jsx_runtime_.jsx(ApiGroups_DocumentManagementIcon, GroupIcon_objectSpread({}, rest));

    case ApiGroupId/* ApiGroupId.Events */.mV.Events:
      return /*#__PURE__*/jsx_runtime_.jsx(ApiGroups_EventsIcon, GroupIcon_objectSpread({}, rest));

    case ApiGroupId/* ApiGroupId.WorkflowAutomation */.mV.WorkflowAutomation:
      return /*#__PURE__*/jsx_runtime_.jsx(ApiGroups_EventsIcon, GroupIcon_objectSpread({}, rest));

    case ApiGroupId/* ApiGroupId.Infrastructure */.mV.Infrastructure:
      return /*#__PURE__*/jsx_runtime_.jsx(ApiGroups_InfrastructureIcon, GroupIcon_objectSpread({}, rest));

    case ApiGroupId/* ApiGroupId.Internal */.mV.Internal:
      return /*#__PURE__*/jsx_runtime_.jsx(ApiGroups_InternalAccessIcon, GroupIcon_objectSpread({}, rest));

    case ApiGroupId/* ApiGroupId.ITwinUnreal */.mV.ITwinUnreal:
      return /*#__PURE__*/jsx_runtime_.jsx(icons_ItwinGameEngineIcon, GroupIcon_objectSpread({}, rest));

    case ApiGroupId/* ApiGroupId.PerformanceOperations */.mV.PerformanceOperations:
      return /*#__PURE__*/jsx_runtime_.jsx(ApiGroups_PerformanceOperationsIcon, GroupIcon_objectSpread({}, rest));

    case ApiGroupId/* ApiGroupId.ProjectDelivery */.mV.ProjectDelivery:
      return /*#__PURE__*/jsx_runtime_.jsx(ApiGroups_ReviewIcon, GroupIcon_objectSpread({}, rest));

    case ApiGroupId/* ApiGroupId.RealityModeling */.mV.RealityModeling:
      return /*#__PURE__*/jsx_runtime_.jsx(ApiGroups_RealityModelingIcon, GroupIcon_objectSpread({}, rest));

    case ApiGroupId/* ApiGroupId.ReportingInsights */.mV.ReportingInsights:
      return /*#__PURE__*/jsx_runtime_.jsx(ApiGroups_ReportingsInsightsIcon, GroupIcon_objectSpread({}, rest));

    case ApiGroupId/* ApiGroupId.Synchronization */.mV.Synchronization:
      return /*#__PURE__*/jsx_runtime_.jsx(ApiGroups_SynchronizationIcon, GroupIcon_objectSpread({}, rest));

    case ApiGroupId/* ApiGroupId.Visualization */.mV.Visualization:
      return /*#__PURE__*/jsx_runtime_.jsx(ApiGroups_VisualizationIcon, GroupIcon_objectSpread({}, rest));

    case ApiGroupId/* ApiGroupId.Validation */.mV.Validation:
      return /*#__PURE__*/jsx_runtime_.jsx(ApiGroups_ProjectDeliveryIcon, GroupIcon_objectSpread({}, rest));

    case ApiGroupId/* ApiGroupId.Enterprise */.mV.Enterprise:
      return /*#__PURE__*/jsx_runtime_.jsx(ApiGroups_DocumentManagementIcon, GroupIcon_objectSpread({}, rest));

    default:
      return /*#__PURE__*/jsx_runtime_.jsx(jsx_runtime_.Fragment, {});
  }
}

/***/ }),

/***/ 14157:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "r": function() { return /* binding */ DeprecationIcon; }
/* harmony export */ });
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59003);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(59994);
/* harmony import */ var _itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__);
const _excluded = ["className", "size"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }






const DeprecationIcon = _ref => {
  let {
    className,
    size = 'default'
  } = _ref,
      restProp = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx(_itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_2__.SvgStatusWarning, _objectSpread({
    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(['indicator-icon', 'deprecated', size, className])
  }, restProp));
};

/***/ }),

/***/ 5680:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "d": function() { return /* binding */ TechPreviewIcon; }
/* harmony export */ });
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59003);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__);
const _excluded = ["className", "size"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }




var SvgIcon = function SvgIcon(props) {
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("svg", _objectSpread(_objectSpread({}, props), {}, {
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("defs", {
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx("linearGradient", {
        id: "a",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx("stop", {
          stopColor: "#ffc000"
        })
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("linearGradient", {
        id: "b",
        x1: "8",
        y1: "32",
        x2: "8",
        y2: "16",
        gradientTransform: "translate(0 -16)",
        gradientUnits: "userSpaceOnUse",
        children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx("stop", {
          offset: "0",
          stopColor: "#ffc335"
        }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx("stop", {
          offset: "1",
          stopColor: "#ffdf52"
        })]
      })]
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx("path", {
      d: "m8 1 7 7-7 7-7-7 7-7m0-1a.908.908 0 0 0-.7.3l-7 7a.967.967 0 0 0 0 1.4l7 7a.967.967 0 0 0 1.4 0l7-7a.967.967 0 0 0 0-1.4l-7-7A.908.908 0 0 0 8 0Z",
      fill: "url(#a)"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx("path", {
      d: "m8.7.3 7 7a.967.967 0 0 1 0 1.4l-7 7a.967.967 0 0 1-1.4 0l-7-7a.967.967 0 0 1 0-1.4l7-7a.967.967 0 0 1 1.4 0",
      fill: "url(#b)"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx("circle", {
      cx: "8",
      cy: "8",
      r: "2",
      opacity: ".9",
      style: {
        isolation: "isolate"
      }
    })]
  }));
};

SvgIcon.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 16 16"
};



const TechPreviewIcon = _ref => {
  let {
    className,
    size = 'default'
  } = _ref,
      restProp = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx(SvgIcon, _objectSpread({
    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(['indicator-icon', 'tech-preview', size, className])
  }, restProp));
};

/***/ }),

/***/ 963:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ mdComponents; }
});

// EXTERNAL MODULE: external "classnames"
var external_classnames_ = __webpack_require__(59003);
var external_classnames_default = /*#__PURE__*/__webpack_require__.n(external_classnames_);
// EXTERNAL MODULE: consume shared module (default) itwinui-v1@^1.48.3 (singleton) (fallback: ./node_modules/itwinui-v1/cjs/index.js) (eager)
var index_js_eager_ = __webpack_require__(85217);
// EXTERNAL MODULE: ./node_modules/next/link.js
var next_link = __webpack_require__(77262);
var link_default = /*#__PURE__*/__webpack_require__.n(next_link);
// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
// EXTERNAL MODULE: ./node_modules/@itwin/itwinui-icons-react/cjs/index.js
var cjs = __webpack_require__(59994);
// EXTERNAL MODULE: ./src/components/icons/Indicators/TechPreviewIcon.tsx
var TechPreviewIcon = __webpack_require__(5680);
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/mdx/MdTable.tsx
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





const MdTable = props => {
  const [thead, tbody] = props.children;
  const [headRow] = Array.isArray(thead.props.children) ? thead.props.children : [thead.props.children];
  const headCells = headRow.props.children;
  const header = headCells.flatMap(cell => cell.props.children);
  const columns = [{
    Header: 'Table',
    columns: header.map((header, index) => ({
      Header: header ?? '',
      accessor: `column-${index}`
    }))
  }];
  const bodyRows = Array.isArray(tbody.props.children) ? tbody.props.children : [tbody.props.children];
  const bodyCells = bodyRows.map(row => row.props.children);
  const bodyCellContents = bodyCells.map(cellsInRow => cellsInRow.map(cell => cell.props.children));
  const data = bodyCellContents.map(contentsInRow => contentsInRow.map((content, index) => ({
    [`column-${index}`]: Array.isArray(content) && content.length > 1 ? /*#__PURE__*/jsx_runtime_.jsx("div", {
      children: content
    }) : content
  })).reduce((a, b) => _objectSpread(_objectSpread({}, a), b), {}));
  return /*#__PURE__*/jsx_runtime_.jsx(index_js_eager_.Table, {
    className: "doc-table",
    columns: columns,
    data: data,
    emptyTableContent: "No content"
  });
};

/* harmony default export */ var mdx_MdTable = (MdTable);
;// CONCATENATED MODULE: ./src/components/mdx/documentation.tsx
const _excluded = ["className"];

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function documentation_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function documentation_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? documentation_ownKeys(Object(source), !0).forEach(function (key) { documentation_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : documentation_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function documentation_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }











const mdComponents = {
  h1: props => /*#__PURE__*/jsx_runtime_.jsx(index_js_eager_.Headline, documentation_objectSpread({
    className: "documentation-headline"
  }, props)),
  h2: props => /*#__PURE__*/(0,jsx_runtime_.jsxs)(index_js_eager_.Title, {
    className: "documentation-title",
    children: [/*#__PURE__*/jsx_runtime_.jsx("a", documentation_objectSpread({
      href: `#${props.id}`
    }, props)), /*#__PURE__*/jsx_runtime_.jsx(cjs.SvgLink, {
      className: "permalink"
    })]
  }),
  h3: props => /*#__PURE__*/(0,jsx_runtime_.jsxs)(index_js_eager_.Subheading, {
    className: "documentation-subheading",
    children: [/*#__PURE__*/jsx_runtime_.jsx("a", documentation_objectSpread({
      href: `#${props.id}`
    }, props)), /*#__PURE__*/jsx_runtime_.jsx(cjs.SvgLink, {
      className: "permalink"
    })]
  }),
  h4: props => /*#__PURE__*/(0,jsx_runtime_.jsxs)(index_js_eager_.Leading, {
    className: "documentation-leading",
    children: [/*#__PURE__*/jsx_runtime_.jsx("a", documentation_objectSpread({
      href: `#${props.id}`
    }, props)), /*#__PURE__*/jsx_runtime_.jsx(cjs.SvgLink, {
      className: "permalink"
    })]
  }),
  blockquote: props => /*#__PURE__*/jsx_runtime_.jsx(index_js_eager_.Body, {
    className: "documentation-paragraph",
    children: /*#__PURE__*/jsx_runtime_.jsx(index_js_eager_.Blockquote, documentation_objectSpread({}, props))
  }),
  code: props => /*#__PURE__*/jsx_runtime_.jsx(index_js_eager_.Code, documentation_objectSpread({}, props)),
  pre: props => /*#__PURE__*/jsx_runtime_.jsx(index_js_eager_.Text, {
    className: "documentation-paragraph",
    children: /*#__PURE__*/jsx_runtime_.jsx("pre", documentation_objectSpread({
      className: "documentation-codeblock"
    }, props))
  }),
  p: props => /*#__PURE__*/jsx_runtime_.jsx(index_js_eager_.Body, documentation_objectSpread({
    className: "documentation-paragraph"
  }, props)),
  a: props => /*#__PURE__*/jsx_runtime_.jsx((link_default()), documentation_objectSpread(documentation_objectSpread({}, props), {}, {
    children: /*#__PURE__*/jsx_runtime_.jsx("a", documentation_objectSpread(documentation_objectSpread({}, props), {}, {
      target: props.href?.[0] === '#' ? undefined : '_blank'
    }))
  })),
  hr: props => /*#__PURE__*/jsx_runtime_.jsx("hr", documentation_objectSpread({
    className: "documentation-divider hidden"
  }, props)),
  em: props => /*#__PURE__*/jsx_runtime_.jsx("em", documentation_objectSpread({}, props)),
  ul: props => /*#__PURE__*/jsx_runtime_.jsx("ul", documentation_objectSpread({
    className: "documentation-ul"
  }, props)),
  ol: props => /*#__PURE__*/jsx_runtime_.jsx("ol", documentation_objectSpread({
    className: "documentation-ol"
  }, props)),
  table: mdx_MdTable,
  tableWithRowProps: (props, rowProps = undefined) => {
    const [thead, tbody] = props.children;
    const [headRow] = Array.isArray(thead.props.children) ? thead.props.children : [thead.props.children];
    const bodyRows = Array.isArray(tbody.props.children) ? tbody.props.children : [tbody.props.children];
    const headCells = headRow.props.children;
    const bodyCells = bodyRows.map(x => x.props.children);
    const header = headCells.flatMap(x => x.props.children);
    const data = bodyCells.map(x => x.map(y => y.props.children));
    return /*#__PURE__*/jsx_runtime_.jsx(index_js_eager_.Table, {
      style: {
        marginTop: 10
      },
      columns: [{
        Header: 'Table',
        columns: header.map((x, accessor) => ({
          id: x ?? '',
          Header: x ?? '',
          accessor: `${accessor}`
        }))
      }],
      data: data.map(x => x.map((y, index) => ({
        [`${index}`]: Array.isArray(y) && y.length > 1 ? /*#__PURE__*/jsx_runtime_.jsx("div", {
          children: y
        }) : y
      })).reduce((a, b) => documentation_objectSpread(documentation_objectSpread({}, a), b), {})),
      rowProps: rowProps,
      emptyTableContent: "No data."
    });
  },
  TechPreviewBadge: props => /*#__PURE__*/jsx_runtime_.jsx("span", documentation_objectSpread(documentation_objectSpread({
    className: "api-badge"
  }, props), {}, {
    children: /*#__PURE__*/jsx_runtime_.jsx(TechPreviewIcon/* TechPreviewIcon */.d, {})
  })),
  img: _ref => {
    let {
      className
    } = _ref,
        props = _objectWithoutProperties(_ref, _excluded);

    return /*#__PURE__*/jsx_runtime_.jsx("img", documentation_objectSpread({
      className: external_classnames_default()(['documentation-image', className])
    }, props));
  }
};

/***/ }),

/***/ 89430:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export AuthorizationSelect */
/* harmony import */ var itwinui_v2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6227);
/* harmony import */ var itwinui_v2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(itwinui_v2__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__);






function AuthorizationSelect({
  onChange,
  authorizationServer
}) {
  const notSelectedGrant = 'No auth';
  const {
    0: selectedGrantType,
    1: setSelectedGrantType
  } = useState(notSelectedGrant);
  return /*#__PURE__*/_jsxs("div", {
    className: "sub-section",
    children: [/*#__PURE__*/_jsx(Text, {
      variant: "leading",
      as: "h3",
      className: "leading-title",
      children: "Authorization"
    }), authorizationServer && /*#__PURE__*/_jsxs("div", {
      className: "authorization-select-container",
      children: [/*#__PURE__*/_jsx(Input, {
        type: "text",
        readOnly: true,
        className: "authorization-select-name text-overflow-ellipsis",
        value: authorizationServer.displayName
      }), /*#__PURE__*/_jsx(Select, {
        className: "authorization-select-grant-type-select",
        menuClassName: "authorization-select-grant-type-select-menu",
        value: selectedGrantType,
        options: [notSelectedGrant, ...authorizationServer.grantTypes].map(grantType => {
          return {
            value: grantType,
            label: grantType
          };
        }),
        onChange: value => {
          setSelectedGrantType(value);
          onChange(value === notSelectedGrant ? undefined : value);
        }
      })]
    })]
  });
}



/***/ }),

/***/ 82291:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export TryOutCodeSample */
/* harmony import */ var itwinui_v2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6227);
/* harmony import */ var itwinui_v2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(itwinui_v2__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _services_templatingService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(93332);
/* harmony import */ var _CodeBlocks_CodeSample_CodeSample__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(80862);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__);








function TryOutCodeSample({
  headers,
  body,
  bodyFormat,
  method,
  requestUrl,
  parameters
}) {
  const {
    0: language,
    1: setLanguage
  } = useState('http');
  const {
    0: sample,
    1: setSample
  } = useState('');
  const meaningfulHeaders = headers.filter(h => h.value && h.name);
  useEffect(() => {
    TemplatingService.renderSample(language, {
      request: {
        meaningfulHeaders,
        body,
        bodyFormat
      },
      method,
      requestUrl,
      parameters
    }).then(codeSample => setSample(codeSample));
  }, [language, meaningfulHeaders, body, method, requestUrl, parameters]);
  return /*#__PURE__*/_jsxs("div", {
    className: "sub-section",
    children: [/*#__PURE__*/_jsx(Text, {
      variant: "leading",
      as: "h3",
      className: "leading-title",
      children: "Request code language"
    }), /*#__PURE__*/_jsx(Select, {
      className: "request-code-language-select",
      options: Object.keys(TemplatingService.availableLanguages).map(key => {
        return {
          value: key,
          label: TemplatingService.availableLanguages[key]
        };
      }),
      value: language,
      onChange: value => setLanguage(value)
    }), /*#__PURE__*/_jsx(Text, {
      variant: "leading",
      as: "h3",
      className: "leading-title",
      children: "HTTP Request"
    }), /*#__PURE__*/_jsx(CodeSample, {
      sample: sample,
      language: language,
      keepBlankLines: true
    })]
  });
}



/***/ }),

/***/ 27150:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export ConsoleResponse */
/* harmony import */ var itwinui_v2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6227);
/* harmony import */ var itwinui_v2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(itwinui_v2__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _models_knownStatusCodes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(41748);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(35797);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__);









function ConsoleResponse({
  response
}) {
  const headers = response.headers;
  const responseHeaderString = Object.keys(headers).map(key => `${key}: ${headers[key]}`).join('\n');
  const responseStatusText = KnownStatusCodes.find(x => x.code === response.status)?.description ?? 'Unknown';
  const responseBody = Utils.formatJson(typeof response.data === 'string' ? response.data : JSON.stringify(response.data));
  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [/*#__PURE__*/_jsx(Text, {
      variant: "leading",
      as: "h3",
      className: "leading-title",
      children: "HTTP response"
    }), /*#__PURE__*/_jsxs("pre", {
      className: "console-response",
      children: [/*#__PURE__*/_jsxs("div", {
        children: [/*#__PURE__*/_jsx(Text, {
          variant: "body",
          as: "p",
          className: "text-with-bottom-margin",
          children: "HTTP/1.1"
        }), /*#__PURE__*/_jsxs(Text, {
          variant: "body",
          as: "p",
          className: "text-with-bottom-margin",
          "status-code": response.status.toString(),
          children: [response.status.toString(), " ", responseStatusText]
        })]
      }), /*#__PURE__*/_jsx(Text, {
        variant: "body",
        as: "p",
        className: "text-with-bottom-margin",
        children: responseHeaderString
      }), /*#__PURE__*/_jsx(Text, {
        variant: "body",
        as: "p",
        className: "text-with-bottom-margin",
        children: responseBody
      })]
    })]
  });
}



/***/ }),

/***/ 6143:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export OperationBody */
/* harmony import */ var itwinui_v2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6227);
/* harmony import */ var itwinui_v2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(itwinui_v2__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _constants_requestBodyFormats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(39015);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__);






function OperationBody({
  initialRawBody,
  onChange,
  bodyFormat,
  setBodyFormat
}) {
  const {
    0: files,
    1: setFiles
  } = useState([]);
  const {
    0: rawBody,
    1: setRawBodyContent
  } = useState(initialRawBody);
  useEffect(() => {
    if (bodyFormat === RequestBodyFormat.Raw) {
      setRawBodyContent(initialRawBody);
      onChange(initialRawBody);
    } else {
      setFiles([]);
      onChange(undefined);
    }
  }, [bodyFormat]);

  function onFileUpload(files) {
    if (files && files[0]) {
      setFiles(Array.from(files));
      onChange(files[0]);
    }
  }

  return /*#__PURE__*/_jsxs("div", {
    className: "sub-section",
    children: [/*#__PURE__*/_jsx(Text, {
      variant: "leading",
      as: "h3",
      className: "leading-title",
      children: "Body"
    }), /*#__PURE__*/_jsxs("div", {
      className: "radio-btn-bar",
      children: [/*#__PURE__*/_jsx(Radio, {
        label: "Raw",
        value: RequestBodyFormat.Raw,
        checked: bodyFormat === RequestBodyFormat.Raw,
        onChange: () => setBodyFormat(RequestBodyFormat.Raw)
      }), /*#__PURE__*/_jsx(Radio, {
        label: "Binary",
        value: RequestBodyFormat.Binary,
        checked: bodyFormat === RequestBodyFormat.Binary,
        onChange: () => setBodyFormat(RequestBodyFormat.Binary)
      })]
    }), /*#__PURE__*/_jsx(Text, {
      isMuted: true,
      children: "By changing body format to you will reset your changes to body content."
    }), /*#__PURE__*/_jsxs("div", {
      className: "body-content",
      children: [bodyFormat === RequestBodyFormat.Raw && /*#__PURE__*/_jsx(Textarea, {
        className: "body-text",
        value: rawBody,
        onChange: e => {
          setRawBodyContent(e.target.value);
          onChange(e.target.value);
        }
      }), bodyFormat === RequestBodyFormat.Binary && /*#__PURE__*/_jsx(FileUpload, {
        onFileDropped: onFileUpload,
        children: /*#__PURE__*/_jsx(FileUploadTemplate, {
          onChange: e => {
            if (e.target.files) {
              onFileUpload(e.target.files);
            }
          },
          acceptMultiple: false,
          children: files.map(f => f.name)
        })
      })]
    })]
  });
}



/***/ }),

/***/ 57151:
/***/ (function(module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52167);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var itwinui_v2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6227);
/* harmony import */ var itwinui_v2__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(itwinui_v2__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2599);
/* harmony import */ var _constants_requestBodyFormats__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(39015);
/* harmony import */ var _hooks_useOAuthService__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(39902);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(35797);
/* harmony import */ var _authorizationSelect__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(89430);
/* harmony import */ var _codeSample__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(82291);
/* harmony import */ var _consoleResponse__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(27150);
/* harmony import */ var _operationBody__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(6143);
/* harmony import */ var _operationHeaders__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(66845);
/* harmony import */ var _operationParameters__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(25078);
/* harmony import */ var _Theme__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(39623);
/* harmony import */ var _constants_constants__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(75767);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_3__, _hooks_useOAuthService__WEBPACK_IMPORTED_MODULE_5__]);
([_client_env__WEBPACK_IMPORTED_MODULE_3__, _hooks_useOAuthService__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);




















function OperationConsole({
  operation,
  authorizationServer,
  closeHandler
}) {
  const {
    0: response,
    1: setResponse
  } = useState();
  const {
    0: body,
    1: setBody
  } = useState();
  const {
    0: bodyFormat,
    1: setBodyFormat
  } = useState(RequestBodyFormat.Raw);
  const {
    0: headers,
    1: setHeaders
  } = useState([]);
  const {
    0: templateParameters,
    1: setTemplateParameters
  } = useState([]);
  const {
    0: queryParameters,
    1: setQueryParameters
  } = useState([]);
  const oauthService = useOAuthService();
  const apiOperation = Utils.clone(operation); // init or reset on open

  useEffect(() => {
    setResponse(undefined);
    setBody(apiOperation.request.body || '');
    setHeaders(apiOperation.request.headers || []);
    setTemplateParameters(apiOperation.templateParameters || []);
    setQueryParameters(apiOperation.request.queryParameters || []);
    setBodyFormat(RequestBodyFormat.Raw);
  }, []);

  function addParam(uri, name, value) {
    const separator = uri.indexOf('?') >= 0 ? '&' : '?';
    const paramString = !value || value === '' ? name : name + '=' + value;
    return uri + separator + paramString;
  }

  function getRequestPath() {
    let versionPath = '';

    if (!apiOperation) {
      return '';
    }

    if (apiOperation.api.apiVersionSet && apiOperation.api.apiVersion && apiOperation.api.apiVersionSet.versioningScheme === 'Segment') {
      versionPath = `/${apiOperation.api.apiVersion}`;
    }

    let requestUrl = apiOperation.urlTemplate;
    const parameters = [...templateParameters, ...queryParameters];
    parameters.forEach(parameter => {
      if (parameter.value && parameter.value != undefined) {
        const parameterPlaceholder = parameter.name !== '*' ? `{${parameter.name}}` : '*';

        if (requestUrl.indexOf(parameterPlaceholder) > -1) {
          requestUrl = requestUrl.replace(parameterPlaceholder, encodeURIComponent(parameter.value));
        } else {
          requestUrl = addParam(requestUrl, parameter.name, encodeURIComponent(parameter.value));
        }
      }
    });

    if (apiOperation.api.apiVersionSet && apiOperation.api.apiVersionSet.versioningScheme === 'Query') {
      requestUrl = addParam(requestUrl, apiOperation.api.apiVersionSet?.versionQueryName || '', apiOperation.api.apiVersion);
    }

    return `${apiOperation.api.path}${versionPath}${requestUrl}`;
  }

  function getRequestUrl() {
    const urlTemplate = getRequestPath();
    const result = `${env.API_BASE_URL}${Utils.ensureLeadingSlash(urlTemplate)}`;
    return result;
  }

  async function authenticateOAuth(grantType, authorizationServer) {
    const authHeaderIndex = headers.findIndex(h => h.name === 'Authorization');

    if (authHeaderIndex !== -1) {
      setHeaders(h => {
        const newH = [...h];
        newH.splice(authHeaderIndex, 1);
        return newH;
      });
    }

    if (!grantType) {
      return;
    }

    const accessToken = await oauthService.authenticate(grantType, authorizationServer);
    setHeaders(h => {
      const newHeader = new ConsoleHeader();
      newHeader.name = 'Authorization';
      newHeader.value = accessToken;
      return [...h, newHeader];
    });
  }

  async function sendRequest() {
    const headersToSend = headers.reduce((acc, el) => {
      if (el.name && el.value) {
        acc[el.name] = el.value;
      }

      return acc;
    }, {});
    setResponse(undefined);
    await axios.request({
      url: getRequestUrl(),
      method: apiOperation?.method,
      headers: headersToSend,
      data: body || {}
    }).then(response => {
      setResponse(response);
    }, err => {
      if (err.response) {
        setResponse(err.response);
      } else {
        setResponse({
          data: {
            message: 'Request was canceled or unexpected error occurred.'
          },
          headers: {},
          status: 0
        });
      }
    });
  }

  return /*#__PURE__*/_jsx(Theme, {
    children: /*#__PURE__*/_jsxs(Modal, {
      isOpen: true,
      title: apiOperation?.name,
      className: "documentation-modal",
      onClose: closeHandler,
      closeOnEsc: true,
      closeOnExternalClick: true,
      isDismissible: true,
      modalRootId: TRY_IT_CONSOLE_ROOT_ID,
      children: [/*#__PURE__*/_jsxs(ModalContent, {
        className: "documentation-modal-content",
        children: [/*#__PURE__*/_jsx("div", {
          className: "monospace",
          "data-method": apiOperation?.method,
          children: apiOperation?.urlTemplate
        }), /*#__PURE__*/_jsxs("div", {
          className: "bordered-box",
          children: [authorizationServer && /*#__PURE__*/_jsx(AuthorizationSelect, {
            onChange: grantType => authenticateOAuth(grantType, authorizationServer),
            authorizationServer: authorizationServer
          }), /*#__PURE__*/_jsx(OperationParameters, {
            templateParameters: templateParameters,
            onTemplateParametersChange: newValue => setTemplateParameters(newValue),
            queryParameters: queryParameters,
            onQueryParametersChange: newValue => setQueryParameters(newValue)
          }), /*#__PURE__*/_jsx(OperationHeaders, {
            headers: headers,
            onChange: newValue => setHeaders(newValue)
          }), apiOperation?.hasBody && /*#__PURE__*/_jsx(OperationBody, {
            initialRawBody: apiOperation.request.body || '',
            bodyFormat: bodyFormat,
            setBodyFormat: setBodyFormat,
            onChange: newValue => setBody(newValue)
          }), apiOperation && /*#__PURE__*/_jsx(TryOutCodeSample, {
            body: typeof body === 'string' ? body : '',
            bodyFormat: bodyFormat,
            headers: headers,
            method: apiOperation.method,
            parameters: [...apiOperation.templateParameters, ...apiOperation.request.queryParameters],
            requestUrl: getRequestUrl()
          })]
        }), response && /*#__PURE__*/_jsx("div", {
          className: "bordered-box",
          children: /*#__PURE__*/_jsx(ConsoleResponse, {
            response: response
          })
        })]
      }), /*#__PURE__*/_jsxs(ModalButtonBar, {
        children: [/*#__PURE__*/_jsx(Button, {
          styleType: "high-visibility",
          onClick: () => sendRequest(),
          title: "Execute request",
          children: "Execute"
        }), /*#__PURE__*/_jsx(Button, {
          styleType: "default",
          onClick: closeHandler,
          title: "Close",
          children: "Close"
        })]
      })]
    })
  });
}

/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (OperationConsole)));
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 66845:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export OperationHeaders */
/* harmony import */ var itwinui_v2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6227);
/* harmony import */ var itwinui_v2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(itwinui_v2__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(59994);
/* harmony import */ var _itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__);









function OperationHeaders({
  headers,
  onChange
}) {
  function addHeader() {
    const newHeader = new ConsoleHeader();
    newHeader.name = '';
    newHeader.value = '';
    onChange([...headers, newHeader]);
  }

  function onValueChange(id, newValue) {
    const newHeaders = [...headers];
    newHeaders[id].value = newValue;
    onChange(newHeaders);
  }

  function onNameChange(id, newValue) {
    const newHeaders = [...headers];
    newHeaders[id].name = newValue;
    onChange(newHeaders);
  }

  function removeHeader(header) {
    const index = headers.indexOf(header);

    if (index === -1) {
      return;
    }

    const newHeaders = [...headers];

    if (headers.length === 1) {
      newHeaders[0].name = '';
      newHeaders[0].value = '';
      newHeaders[0].options?.splice(0);
    } else {
      newHeaders.splice(index, 1);
    }

    onChange(newHeaders);
  }

  useEffect(() => {
    if (headers.length === 0) addHeader();
    headers.forEach((element, id) => {
      if (element.options && element.options.length > 0 && !element.value) {
        onValueChange(id, element.options[0]);
      }
    }); // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [headers]);
  return /*#__PURE__*/_jsxs("div", {
    className: "sub-section",
    children: [/*#__PURE__*/_jsx(Text, {
      variant: "leading",
      as: "h3",
      className: "leading-title",
      children: "Headers"
    }), headers && headers.length > 0 && /*#__PURE__*/_jsx(_Fragment, {
      children: headers.map((header, index) => /*#__PURE__*/_jsxs("div", {
        className: "operation-parameters-container",
        children: [/*#__PURE__*/_jsx(Input, {
          className: "operation-parameters-name text-overflow-ellipsis",
          value: header.name,
          onChange: e => {
            onNameChange(index, e.target.value);
          }
        }), header.options.length > 0 ? /*#__PURE__*/_jsx(Select, {
          className: "operation-parameters-value text-overflow-ellipsis",
          "aria-label": "Parameter value",
          value: header.value || '',
          options: header.options.map(option => {
            return {
              value: option,
              label: option
            };
          }),
          onChange: value => {
            onValueChange(index, value);
          }
        }) : /*#__PURE__*/_jsx(Input, {
          className: "operation-parameters-value text-overflow-ellipsis",
          type: "text",
          autoComplete: "off",
          placeholder: "Enter value",
          spellCheck: "false",
          "aria-label": "Parameter value",
          value: header.value || '',
          onChange: e => {
            onValueChange(index, e.target.value);
          }
        }), (header.name !== '' && header.value !== '' || index !== 0) && /*#__PURE__*/_jsx(IconButton, {
          styleType: "borderless",
          size: "small",
          onClick: () => removeHeader(header),
          label: "Remove",
          children: /*#__PURE__*/_jsx(SvgDelete, {})
        }), index === headers.length - 1 && /*#__PURE__*/_jsx(IconButton, {
          styleType: "borderless",
          size: "small",
          onClick: addHeader,
          label: "Add",
          children: /*#__PURE__*/_jsx(SvgAdd, {})
        })]
      }, `operation-header-${index}`))
    })]
  });
}



/***/ }),

/***/ 25078:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export OperationParameters */
/* harmony import */ var itwinui_v2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6227);
/* harmony import */ var itwinui_v2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(itwinui_v2__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(59994);
/* harmony import */ var _itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__);









function OperationParameters({
  templateParameters = [],
  queryParameters = [],
  onTemplateParametersChange,
  onQueryParametersChange,
  styleType = 'default'
}) {
  function addQueryParameter() {
    if (onQueryParametersChange) {
      const newConsoleParameter = new ConsoleParameter();
      newConsoleParameter.name = '';
      newConsoleParameter.value = '';
      onQueryParametersChange([...queryParameters, newConsoleParameter]);
    }
  }

  function onValueChange(id, newValue) {
    if (onQueryParametersChange) {
      const newQueryParameters = [...queryParameters];
      newQueryParameters[id].value = newValue;
      onQueryParametersChange(newQueryParameters);
    }
  }

  function onNameChange(id, newValue) {
    if (onQueryParametersChange) {
      const newQueryParameters = [...queryParameters];
      newQueryParameters[id].name = newValue;
      onQueryParametersChange(newQueryParameters);
    }
  }

  function removeQueryParameter(query) {
    if (onQueryParametersChange) {
      const index = queryParameters.indexOf(query);

      if (index === -1) {
        return;
      }

      const newQueryParameters = [...queryParameters];
      newQueryParameters.splice(index, 1);
      onQueryParametersChange(newQueryParameters);
    }
  }

  function changeTemplateParameter(index, newValue) {
    if (onTemplateParametersChange) {
      const newTemplateParameters = [...templateParameters];
      newTemplateParameters[index].value = newValue;
      onTemplateParametersChange(newTemplateParameters);
    }
  }

  if (templateParameters && templateParameters.length > 0 || queryParameters && queryParameters.length > 0) {
    return /*#__PURE__*/_jsxs("div", {
      className: "sub-section",
      children: [styleType !== 'no-title' && /*#__PURE__*/_jsx(Text, {
        variant: "leading",
        as: "h3",
        className: "leading-title",
        children: "Parameters"
      }), templateParameters && templateParameters.length > 0 && /*#__PURE__*/_jsx(_Fragment, {
        children: templateParameters.map((parameter, index) => /*#__PURE__*/_jsxs("div", {
          className: "operation-parameters-container",
          children: [/*#__PURE__*/_jsx(Input, {
            className: "operation-parameters-name text-overflow-ellipsis",
            value: parameter.name?.toString(),
            readOnly: true
          }), parameter.options.length > 0 ? /*#__PURE__*/_jsx(Select, {
            className: "operation-parameters-value text-overflow-ellipsis",
            "aria-label": "Parameter value",
            value: parameter.value?.toString(),
            options: parameter.options.map(option => {
              return {
                value: option,
                label: option
              };
            }),
            onChange: value => changeTemplateParameter(index, value)
          }) : /*#__PURE__*/_jsx(Input, {
            className: "operation-parameters-value text-overflow-ellipsis",
            type: "text",
            autoComplete: "off",
            spellCheck: "false",
            "aria-label": "Parameter value",
            value: parameter.value?.toString(),
            placeholder: 'Enter value',
            onChange: e => changeTemplateParameter(index, e.target.value)
          })]
        }, `template-parameters-${index}`))
      }), queryParameters && queryParameters.length > 0 && /*#__PURE__*/_jsx(_Fragment, {
        children: queryParameters.map((parameter, index) => /*#__PURE__*/_jsxs("div", {
          className: "operation-parameters-container",
          children: [parameter.required ? /*#__PURE__*/_jsx(Input, {
            className: "operation-parameters-name text-overflow-ellipsis",
            value: parameter.name || '',
            disabled: true
          }) : /*#__PURE__*/_jsx(Input, {
            className: "operation-parameters-name text-overflow-ellipsis",
            type: "text",
            autoComplete: "off",
            spellCheck: "false",
            "aria-label": "Parameter key",
            value: parameter.name,
            placeholder: 'Enter key',
            onChange: e => onNameChange(index, e.target.value)
          }), parameter.options.length > 0 ? /*#__PURE__*/_jsx(Select, {
            className: "operation-parameters-value text-overflow-ellipsis",
            "aria-label": "Parameter value",
            value: parameter.value || '',
            options: parameter.options.map(option => {
              return {
                value: option,
                label: option
              };
            }),
            onChange: value => onValueChange(index, value)
          }) : /*#__PURE__*/_jsx(Input, {
            className: "operation-parameters-value text-overflow-ellipsis",
            type: "text",
            autoComplete: "off",
            spellCheck: "false",
            "aria-label": "Parameter value",
            value: parameter.value || '',
            placeholder: "Enter value",
            onChange: e => onValueChange(index, e.target.value)
          }), !parameter.required && queryParameters.length !== 1 && /*#__PURE__*/_jsx(IconButton, {
            styleType: "borderless",
            size: "small",
            onClick: () => removeQueryParameter(parameter),
            label: "Remove",
            children: /*#__PURE__*/_jsx(SvgDelete, {})
          }), index === queryParameters.length - 1 && /*#__PURE__*/_jsx(IconButton, {
            styleType: "borderless",
            size: "small",
            onClick: addQueryParameter,
            label: "Add",
            children: /*#__PURE__*/_jsx(SvgAdd, {})
          })]
        }, `query-parameters-${index}`))
      })]
    });
  } else return /*#__PURE__*/_jsx(_Fragment, {});
}



/***/ }),

/***/ 4570:
/***/ (function(module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(85217);
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(itwinui_v1__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(46517);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(71853);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _constants_apiMenuItems__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(47689);
/* harmony import */ var _constants_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(86491);
/* harmony import */ var _links_OperationLink__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(25686);
/* harmony import */ var _links_SimpleLink__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(94451);
/* harmony import */ var _icons_Indicators_DeprecationIcon__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(14157);
/* harmony import */ var _icons_Indicators_TechPreviewIcon__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(5680);
/* harmony import */ var _PnIDModelVersions_PnIDModelVersions__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(10137);
/* harmony import */ var _ApiDocumentationChangelog__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(39252);
/* harmony import */ var _ApiDocumentationOperation__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(17488);
/* harmony import */ var _ApiDocumentationOverview__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(5104);
/* harmony import */ var _ApiDocumentationReference__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(90435);
/* harmony import */ var _ApiDocumentationRightMenu_ApiDocumentationRightSideMenu__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(70013);
/* harmony import */ var _ApiDocumentationSamples__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(9024);
/* harmony import */ var _ApiDocumentationTutorials__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(31450);
/* harmony import */ var _ApiKeys_ApiKeysManagement__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(89044);
/* harmony import */ var _CCCS_CCImageCollection__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(10515);
/* harmony import */ var _CCCS_CCOrientations__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(80885);
/* harmony import */ var _CalculatingVisualizationSessionHours__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(25654);
/* harmony import */ var _RealityData__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(96460);
/* harmony import */ var _RealityDataAnalysisContextDetector__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(8248);
/* harmony import */ var _RealityDataAnalysisContextScene__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(41617);
/* harmony import */ var _RealityDataAnalysisContextScene_V4__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(8126);
/* harmony import */ var _RealityDataAnalysisJobTypes__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(92520);
/* harmony import */ var _RealityDataDetails__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(55658);
/* harmony import */ var _SynchronizationSupportedFormats__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(76418);
/* harmony import */ var _WebhooksEventsReference_WebhooksEventsReference__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(35952);
/* harmony import */ var _Layouts_CommonLayout_CommonLayout__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(42287);
/* harmony import */ var _Theme__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(39623);
/* harmony import */ var itwinui_v2__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(6227);
/* harmony import */ var itwinui_v2__WEBPACK_IMPORTED_MODULE_32___default = /*#__PURE__*/__webpack_require__.n(itwinui_v2__WEBPACK_IMPORTED_MODULE_32__);
/* harmony import */ var _constants_ApiName__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(594);
/* harmony import */ var _constants_defaultApiGroups__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(35735);
/* harmony import */ var _Layouts_LeftSideNavigation_LeftSideNavigation__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(49187);
/* harmony import */ var _constants_LeftSideNavigationSection__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(29249);
/* harmony import */ var _constants_constants__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(75767);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_38___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_38__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_ApiDocumentationOperation__WEBPACK_IMPORTED_MODULE_12__, _ApiKeys_ApiKeysManagement__WEBPACK_IMPORTED_MODULE_18__]);
([_ApiDocumentationOperation__WEBPACK_IMPORTED_MODULE_12__, _ApiKeys_ApiKeysManagement__WEBPACK_IMPORTED_MODULE_18__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
//Importing components












// Importing styles
































function ApiDocumentationPage({
  initialApis,
  api: selectedApi,
  apiName,
  operationsByTag,
  operation: currentOperation,
  operationTags,
  authorizationServer,
  operationDefinitions,
  allDefinitions,
  apiDocumentationMdContent,
  tabId,
  tutorialsMetadata,
  preloadedApis,
  changelog: releases,
  preloadedSamples
}) {
  const router = useRouter();
  const {
    0: currentMenuItem,
    1: setCurrentMenuItem
  } = useState(currentOperation ? currentOperation.name : tabId);
  const {
    0: showAlert,
    1: setShowAlert
  } = useState(true);
  const apiVersions = useMemo(() => {
    if (!selectedApi || !initialApis) {
      return [];
    }

    return (initialApis || []).filter(version => version.path === selectedApi.path && version.apiVersion !== null).map(version => {
      return {
        label: version.apiVersion,
        value: version.name
      };
    });
  }, [selectedApi, initialApis]);

  const onApiChange = apiVersion => {
    router.push(getOperationHref(apiVersion, currentOperation?.name, currentMenuItem));
  };

  useEffect(() => {
    if (currentOperation) {
      setCurrentMenuItem(currentOperation.name);
    } else {
      setCurrentMenuItem(tabId);
    }
  }, [tabId, currentOperation]);
  const shouldRightSideNavigationBeVisible = useMemo(() => {
    switch (currentMenuItem) {
      case MenuItems.Tutorials:
      case MenuItems.Samples:
      case MenuItems.Changelog:
        return false;

      case MenuItems.Reference:
        return !!currentOperation;

      default:
        return true;
    }
  }, [currentOperation, currentMenuItem]);
  const getContentByMenuItem = useCallback(menuItem => {
    switch (menuItem) {
      case MenuItems.Overview:
        return /*#__PURE__*/_jsx(ApiDocumentationOverview, {
          mdContent: apiDocumentationMdContent
        });

      case MenuItems.CalculatingVisualizationSessionHours:
        return /*#__PURE__*/_jsx(CalculatingVisualizationSessionHours, {});

      case MenuItems.SupportedFormats:
        return /*#__PURE__*/_jsx(SynchronizationSupportedFormats, {});

      case MenuItems.CCImageCollection:
        return /*#__PURE__*/_jsx(CCCS_CCImageCollection, {});

      case MenuItems.CCOrientations:
        return /*#__PURE__*/_jsx(CCCS_CCOrientations, {});

      case MenuItems.RDAContextScene:
        return /*#__PURE__*/_jsx(RealityDataAnalysisContextScene, {});

      case MenuItems.RDAContextScene_V4:
        return /*#__PURE__*/_jsx(RealityDataAnalysisContextScene_V4, {});

      case MenuItems.RDAContextDetector:
        return /*#__PURE__*/_jsx(RealityDataAnalysisContextDetector, {});

      case MenuItems.RDAJobTypes:
        return /*#__PURE__*/_jsx(RealityDataAnalysisJobTypes, {});

      case MenuItems.RDDetails:
        return /*#__PURE__*/_jsx(RealityData_Details, {});

      case MenuItems.RMRDDetails:
        return /*#__PURE__*/_jsx(RM_RealityData_Details, {});

      case MenuItems.ApiKeys:
        return /*#__PURE__*/_jsx(ApiKeysManagement, {});

      case MenuItems.Tutorials:
        return /*#__PURE__*/_jsx(ApiDocumentationTutorials, {
          apis: preloadedApis,
          tutorialsMetadata: tutorialsMetadata
        });

      case MenuItems.Samples:
        return /*#__PURE__*/_jsx(ApiDocumentationSamples, {
          preloadedSamples: preloadedSamples
        });

      case MenuItems.Reference:
        if (selectedApi && currentOperation) {
          return /*#__PURE__*/_jsx(ApiDocumentationOperation, {
            selectedApi: selectedApi,
            operation: currentOperation,
            definitions: operationDefinitions,
            operationTags: operationTags,
            authorizationServer: authorizationServer,
            apiIsInTechPreview: selectedApi.tags.includes(TechPreviewTag)
          });
        } else {
          return /*#__PURE__*/_jsx(ApiDocumentationReference, {
            apiName: selectedApi ? selectedApi.name : apiName,
            apiPath: (selectedApi && selectedApi.path) ?? apiName,
            operationsByTag: operationsByTag
          });
        }

      case MenuItems.Changelog:
        return /*#__PURE__*/_jsx(ApiDocumentationChangelog, {
          releases: releases
        });

      case MenuItems.Events:
        return /*#__PURE__*/_jsx(WebhooksEventsReference, {
          definitions: allDefinitions
        });

      case MenuItems.ModelVersions:
        return /*#__PURE__*/_jsx(PnIDModelVersions, {});
    }
  }, [allDefinitions, apiDocumentationMdContent, apiName, preloadedApis, authorizationServer, currentOperation, operationDefinitions, operationTags, operationsByTag, preloadedSamples, releases, selectedApi, tutorialsMetadata]);
  const menuItems = useMemo(() => {
    const highlightColor = apiName === ApiName.VisualizationV1 ? DefaultApiGroups.apiGroupByName(apiName)?.color : DefaultApiGroups.publicApiGroups.find(group => selectedApi?.tags.find(tag => tag === group.name))?.color;
    return [LeftSideNavigationSection.Fundamentals, {
      navItems: ApiDocumentation.getMenuItemsWithOperations(apiName, selectedApi?.path ?? apiName, operationsByTag, tutorialsMetadata, selectedApi?.tags.includes(TechPreviewTag)),
      highlightColor: highlightColor
    }];
  }, [apiName, selectedApi, operationsByTag, tutorialsMetadata]);
  const pageBodyReference = useRef(null);
  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [/*#__PURE__*/_jsx(Theme, {
      children: /*#__PURE__*/_jsx("div", {
        id: TRY_IT_CONSOLE_ROOT_ID
      })
    }), /*#__PURE__*/_jsx(CommonLayout, {
      className: "api-documentation",
      headerContent: /*#__PURE__*/_jsx(Theme, {
        children: /*#__PURE__*/_jsxs(Text, {
          variant: "headline",
          children: [selectedApi?.displayName ?? startCase(apiName), selectedApi?.tags.includes(TechPreviewTag) && /*#__PURE__*/_jsx(Tooltip, {
            content: TechPreviewTag,
            placement: "bottom",
            className: "api-badge-tooltip",
            children: /*#__PURE__*/_jsx("span", {
              className: "api-badge",
              children: /*#__PURE__*/_jsx(TechPreviewIcon, {
                size: "large"
              })
            })
          }), selectedApi?.tags.includes(DeprecatedTag) && /*#__PURE__*/_jsx(Tooltip, {
            content: DeprecatedTag,
            placement: "bottom",
            className: "api-badge-tooltip",
            children: /*#__PURE__*/_jsx("span", {
              className: "api-badge",
              children: /*#__PURE__*/_jsx(DeprecationIcon, {
                size: "large"
              })
            })
          })]
        })
      }),
      breadcrumbs: [/*#__PURE__*/_jsx(SimpleLink, {
        href: DOCUMENTATION,
        children: "Documentation"
      }, "documentation"), /*#__PURE__*/_jsx("span", {
        children: selectedApi?.displayName ?? startCase(apiName)
      }, "api")],
      sideNavigation: /*#__PURE__*/_jsx(LeftSideNavigation, {
        activeItem: currentMenuItem,
        sections: menuItems,
        customHeaderContent: apiVersions.length > 0 ? /*#__PURE__*/_jsx(Select, {
          className: "version-select",
          onChange: onApiChange,
          options: apiVersions,
          value: apiName
        }) : undefined
      }),
      padded: true,
      contentAlert: tabId === MenuItems.Reference && currentOperation && showAlert ? selectedApi?.tags.includes(DeprecatedTag) ? /*#__PURE__*/_jsxs(Alert, {
        type: "warning",
        onClose: () => setShowAlert(false),
        style: {
          borderRadius: 'unset'
        },
        children: ["This API is ", /*#__PURE__*/_jsx("strong", {
          children: "deprecated"
        }), ". Please upgrade to the current version of this API as soon as possible."]
      }) : selectedApi?.tags.includes(TechPreviewTag) ? /*#__PURE__*/_jsxs(Alert, {
        type: "warning",
        onClose: () => setShowAlert(false),
        style: {
          borderRadius: 'unset'
        },
        children: ["This API is a ", /*#__PURE__*/_jsx("strong", {
          children: "Technical Preview"
        }), " and is available for testing purposes only.", ' ', /*#__PURE__*/_jsx("strong", {
          children: "Do not use in production"
        }), "."]
      }) : undefined : undefined,
      children: /*#__PURE__*/_jsx("div", {
        id: "api-documentation-page-section",
        children: /*#__PURE__*/_jsxs("div", {
          id: "api-documentation-page-content-section",
          children: [/*#__PURE__*/_jsx("div", {
            ref: pageBodyReference,
            id: "api-documentation-page-content",
            children: getContentByMenuItem(tabId)
          }), shouldRightSideNavigationBeVisible && /*#__PURE__*/_jsx("div", {
            id: "api-documentation-right-side-nav",
            children: /*#__PURE__*/_jsx(RightSideMenu, {
              mainBody: pageBodyReference,
              alertDisplayed: !!selectedApi && showAlert
            })
          })]
        })
      })
    })]
  });
}

/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (ApiDocumentationPage)));
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 39252:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: default

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
// EXTERNAL MODULE: consume shared module (default) itwinui-v2@^2.12.0 (singleton) (fallback: ./node_modules/itwinui-v2/esm/index.js) (eager)
var index_js_eager_ = __webpack_require__(6227);
// EXTERNAL MODULE: ./src/components/Theme.tsx
var components_Theme = __webpack_require__(39623);
// EXTERNAL MODULE: ./src/models/index.ts + 14 modules
var models = __webpack_require__(93266);
// EXTERNAL MODULE: ./src/components/MarkdownViewWithMermaid/MarkdownViewWithMermaid.tsx + 2 modules
var MarkdownViewWithMermaid_MarkdownViewWithMermaid = __webpack_require__(49867);
// EXTERNAL MODULE: consume shared module (default) itwinui-v1@^1.48.3 (singleton) (fallback: ./node_modules/itwinui-v1/cjs/index.js) (eager)
var cjs_index_js_eager_ = __webpack_require__(85217);
// EXTERNAL MODULE: ./node_modules/next/link.js
var next_link = __webpack_require__(77262);
var link_default = /*#__PURE__*/__webpack_require__.n(next_link);
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/mdx/logEntries.tsx
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





const logEntries_logEntryComponents = {
  h1: props => /*#__PURE__*/jsx_runtime_.jsx(cjs_index_js_eager_.Headline, _objectSpread({
    className: "logEntry-headline"
  }, props)),
  h2: props => /*#__PURE__*/jsx_runtime_.jsx(cjs_index_js_eager_.Title, _objectSpread({
    className: "logEntry-title"
  }, props)),
  h3: props => /*#__PURE__*/jsx_runtime_.jsx(cjs_index_js_eager_.Subheading, _objectSpread({
    className: "logEntry-title"
  }, props)),
  h4: props => /*#__PURE__*/jsx_runtime_.jsx(cjs_index_js_eager_.Leading, _objectSpread({
    className: "logEntry-title"
  }, props)),
  blockquote: props => /*#__PURE__*/jsx_runtime_.jsx(cjs_index_js_eager_.Body, {
    className: "documentation-paragraph",
    children: /*#__PURE__*/jsx_runtime_.jsx(cjs_index_js_eager_.Blockquote, _objectSpread({}, props))
  }),
  code: props => /*#__PURE__*/jsx_runtime_.jsx(cjs_index_js_eager_.Code, _objectSpread({}, props)),
  pre: props => /*#__PURE__*/jsx_runtime_.jsx(cjs_index_js_eager_.Body, {
    className: "documentation-paragraph",
    children: /*#__PURE__*/jsx_runtime_.jsx("pre", _objectSpread({
      className: "documentation-codeblock"
    }, props))
  }),
  p: props => /*#__PURE__*/jsx_runtime_.jsx(cjs_index_js_eager_.Body, _objectSpread({
    className: "documentation-paragraph"
  }, props)),
  a: props => /*#__PURE__*/jsx_runtime_.jsx((link_default()), _objectSpread(_objectSpread({}, props), {}, {
    children: /*#__PURE__*/jsx_runtime_.jsx("a", _objectSpread(_objectSpread({}, props), {}, {
      target: "_blank"
    }))
  })),
  hr: props => /*#__PURE__*/jsx_runtime_.jsx("hr", _objectSpread({
    className: "documentation-divider"
  }, props)),
  em: props => /*#__PURE__*/jsx_runtime_.jsx("em", _objectSpread({}, props))
};
;// CONCATENATED MODULE: ./src/components/ApiLogEntries/ApiLogEntry.tsx







function ApiLogEntry_ApiLogEntry(props) {
  const {
    description,
    tag
  } = props;
  return /*#__PURE__*/_jsxs("div", {
    className: "note",
    children: [/*#__PURE__*/_jsx("div", {
      className: "tag-wrapper",
      children: /*#__PURE__*/_jsx(Badge, {
        className: `badge tag-${tag.toLowerCase()}`,
        children: tag
      })
    }), /*#__PURE__*/_jsx("div", {
      className: "description-wrapper",
      children: /*#__PURE__*/_jsx(MarkdownViewWithMermaid, {
        markdown: description,
        components: logEntryComponents,
        options: {
          tables: true,
          emoji: true,
          openLinksInNewWindow: true
        }
      })
    })]
  });
}
;// CONCATENATED MODULE: ./src/components/ApiLogEntries/ApiRelease.tsx







function ApiRelease_ApiRelease({
  logEntry
}) {
  const {
    apiRevision,
    changelogs,
    releaseTimestamp
  } = logEntry;
  const changelog = changelogs.map((c, index) => {
    if (c.announcement) {
      return /*#__PURE__*/_jsx(ApiLogEntry, {
        description: c.announcement.content,
        tag: NoteType.Announcement
      }, `${apiRevision}-${index}`);
    }

    if (c.change) {
      return /*#__PURE__*/_jsx(ApiLogEntry, {
        description: c.change.content,
        tag: changeTypes.includes(c.change.type) ? c.change.type : NoteType.Changed
      }, `${apiRevision}-${index}`);
    }

    if (c.deprecated) {
      return /*#__PURE__*/_jsx(ApiLogEntry, {
        description: c.deprecated.content,
        tag: NoteType.Deprecated
      }, `${apiRevision}-${index}`);
    }

    return undefined;
  }).filter(logEntry => logEntry !== undefined);
  return changelog.length > 0 ? /*#__PURE__*/_jsxs("div", {
    className: "release",
    children: [releaseTimestamp && /*#__PURE__*/_jsx(Text, {
      variant: "subheading",
      as: "h3",
      className: "date",
      children: new Date(releaseTimestamp).toLocaleDateString('en-us', {
        month: 'short',
        day: 'numeric',
        year: 'numeric'
      })
    }), /*#__PURE__*/_jsx("div", {
      className: "notes",
      children: changelog
    })]
  }) : /*#__PURE__*/_jsx(_Fragment, {});
}
;// CONCATENATED MODULE: ./src/components/ApiLogEntries/ApiLogEntries.tsx







function ApiLogEntries(props) {
  const {
    releases,
    title
  } = props;
  return /*#__PURE__*/_jsx(Theme, {
    children: /*#__PURE__*/_jsxs("div", {
      className: "api-changelog",
      children: [/*#__PURE__*/_jsx(Text, {
        variant: "title",
        as: "h2",
        className: "api-changelog-title",
        children: title || 'Changelog'
      }), !releases || releases.length === 0 ? /*#__PURE__*/_jsx(Text, {
        variant: "body",
        as: "p",
        isMuted: true,
        className: "api-changelog-title",
        children: "This API does not have changelogs published yet."
      }) : releases.map((logEntry, index) => {
        return /*#__PURE__*/_jsx(ApiRelease, {
          logEntry: logEntry
        }, index);
      })]
    })
  });
}
;// CONCATENATED MODULE: ./src/components/ApiLogEntries/index.ts






;// CONCATENATED MODULE: ./src/components/pages/ApiDocumentation/ApiDocumentationChangelog.tsx






function ApiDocumentationChangelog({
  releases
}) {
  if (!releases) {
    return /*#__PURE__*/_jsx(_Fragment, {});
  }

  return /*#__PURE__*/_jsx(ApiChangelogComponent, {
    releases: releases
  });
}

/* harmony default export */ var ApiDocumentation_ApiDocumentationChangelog = ((/* unused pure expression or super */ null && (ApiDocumentationChangelog)));

/***/ }),

/***/ 17488:
/***/ (function(module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(85217);
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(itwinui_v1__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(59994);
/* harmony import */ var _itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2599);
/* harmony import */ var _constants_SchemaExport__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(66053);
/* harmony import */ var _hooks_useApiMetadata__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(96522);
/* harmony import */ var _models_console_consoleOperation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(40885);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(35797);
/* harmony import */ var _MarkdownViewWithMermaid_MarkdownViewWithMermaid__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(49867);
/* harmony import */ var _mdx_documentation__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(963);
/* harmony import */ var _operationConsole_operationConsole__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(57151);
/* harmony import */ var _ApiOperations_DefinitionsBlock__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(46488);
/* harmony import */ var _ApiOperations_RequestBlock__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(34876);
/* harmony import */ var _ApiOperations_ResponseBlock__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(19669);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_3__, _hooks_useApiMetadata__WEBPACK_IMPORTED_MODULE_5__, _operationConsole_operationConsole__WEBPACK_IMPORTED_MODULE_10__]);
([_client_env__WEBPACK_IMPORTED_MODULE_3__, _hooks_useApiMetadata__WEBPACK_IMPORTED_MODULE_5__, _operationConsole_operationConsole__WEBPACK_IMPORTED_MODULE_10__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);




















function ApiDocumentationOperation({
  selectedApi,
  operation,
  operationTags,
  definitions,
  authorizationServer,
  apiIsInTechPreview = false
}) {
  const {
    0: schemaExportType,
    1: setSchemaExportType
  } = useState(SchemaExportNames.OpenapiJson);
  const {
    0: isDownloadingSchema,
    1: setIsDownloadingSchema
  } = useState(false);
  const {
    0: schemaDownloadFinished,
    1: setSchemaDownloadFinished
  } = useState(false);
  const {
    0: schemaDownloadStatus,
    1: setSchemaDownloadStatus
  } = useState(false);
  const {
    0: consoleOpen,
    1: setConsoleOpen
  } = useState(false);
  const apiMetadata = useApiMetadata();
  const exportTypeValues = Object.values(SchemaExportNames);

  const changeExportType = value => {
    setSchemaExportType(value);
    setSchemaDownloadFinished(false);
  };

  const onExportClick = async () => {
    setIsDownloadingSchema(true);

    try {
      const exportObject = await apiMetadata.exportApi(selectedApi.name, schemaExportType);
      const fileName = `${selectedApi.name}.json`;
      const fileType = 'application/json';
      const jsonContent = JSON.stringify(exportObject, null, 4);
      Utils.downloadFile(jsonContent, fileName, fileType);
      setSchemaDownloadStatus(true);
    } catch (e) {
      console.log(e);
      setSchemaDownloadStatus(false);
    } finally {
      setIsDownloadingSchema(false);
      setSchemaDownloadFinished(true);
    }
  };

  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [/*#__PURE__*/_jsxs("div", {
      className: "operations",
      children: [/*#__PURE__*/_jsx("div", {
        children: /*#__PURE__*/_jsxs("div", {
          className: "selectExportType",
          children: [/*#__PURE__*/_jsx(Headline, {
            className: "operation-tag",
            children: operationTags.filter(tag => tag !== TechPreviewTag)?.join(', ')
          }), /*#__PURE__*/_jsxs("div", {
            className: "api-definition-download-section",
            children: [/*#__PURE__*/_jsx(Text, {
              variant: "leading",
              className: "content-aligning",
              children: "Download API definition:"
            }), /*#__PURE__*/_jsxs("div", {
              className: "export-type-field-row",
              children: [/*#__PURE__*/_jsx(Select, {
                options: exportTypeValues.map(value => {
                  return {
                    label: value,
                    value: value
                  };
                }),
                onChange: changeExportType,
                value: schemaExportType
              }), /*#__PURE__*/_jsx("div", {
                className: "exportOverlay",
                children: /*#__PURE__*/_jsx(IconButton, {
                  onClick: onExportClick,
                  disabled: isDownloadingSchema,
                  children: isDownloadingSchema ? /*#__PURE__*/_jsx(ProgressRadial, {
                    size: "small",
                    indeterminate: true
                  }) : schemaDownloadFinished ? /*#__PURE__*/_jsx(ProgressRadial, {
                    size: "small",
                    status: schemaDownloadStatus ? 'positive' : 'negative'
                  }) : /*#__PURE__*/_jsx(SvgDownload, {})
                })
              })]
            })]
          })]
        })
      }), /*#__PURE__*/_jsx("hr", {
        className: "documentation-divider"
      }), /*#__PURE__*/_jsxs("div", {
        className: "operation-documentation-title-section",
        children: [/*#__PURE__*/_jsxs("div", {
          className: "operation-documentation-title",
          children: [operation.displayName && /*#__PURE__*/_jsxs(Text, {
            variant: "title",
            className: "documentation-title",
            children: [/*#__PURE__*/_jsx("a", {
              href: `#${operation.name}`,
              id: operation.name,
              children: operation.displayName
            }), /*#__PURE__*/_jsx(SvgLink, {
              className: "permalink"
            })]
          }), !apiIsInTechPreview && operation.tags.includes(TechPreviewTag) && /*#__PURE__*/_jsxs(Alert, {
            type: "warning",
            children: ["This operation is a ", /*#__PURE__*/_jsx("strong", {
              children: "Technical Preview"
            }), " and is available for testing purposes only.", ' ', /*#__PURE__*/_jsx("strong", {
              children: "Do not use in production"
            }), "."]
          }), operation.tags.includes(DeprecatedTag) && /*#__PURE__*/_jsxs(Alert, {
            type: "warning",
            children: ["This operation is ", /*#__PURE__*/_jsx("strong", {
              children: "deprecated"
            }), ". Please upgrade to the current version of this API as soon as possible."]
          })]
        }), /*#__PURE__*/_jsxs("div", {
          className: "operation-url-section",
          children: [/*#__PURE__*/_jsxs(Text, {
            className: "operation-url",
            children: [/*#__PURE__*/_jsx("span", {
              className: `${operation.method.toLowerCase()} method-small`,
              children: operation.method
            }), ' ', `${env.API_BASE_URL}/${selectedApi.path}${operation.displayUrlTemplate}`]
          }), /*#__PURE__*/_jsx(Button, {
            styleType: "high-visibility",
            onClick: () => setConsoleOpen(true),
            children: "Try it out"
          })]
        })]
      }), /*#__PURE__*/_jsxs(_Fragment, {
        children: [/*#__PURE__*/_jsx(MarkdownViewWithMermaid, {
          markdown: operation.description,
          components: mdComponents,
          options: {
            tables: true
          }
        }), /*#__PURE__*/_jsx(RequestBlock, {
          operation: operation,
          definitions: definitions
        }), /*#__PURE__*/_jsx(ResponseBlock, {
          responses: operation.responses
        }), /*#__PURE__*/_jsx(DefinitionsBlock, {
          definitions: definitions
        })]
      })]
    }), consoleOpen && /*#__PURE__*/_jsx(OperationConsole, {
      operation: new ConsoleOperation(selectedApi, operation),
      authorizationServer: authorizationServer,
      closeHandler: () => setConsoleOpen(false)
    })]
  });
}

/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (ApiDocumentationOperation)));
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 5104:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _MarkdownViewWithMermaid_MarkdownViewWithMermaid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(49867);
/* harmony import */ var _mdx_documentation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(963);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__);

 //Importing components





function ApiDocumentationOverview({
  mdContent
}) {
  if (!mdContent) {
    return /*#__PURE__*/_jsx(_Fragment, {});
  }

  return /*#__PURE__*/_jsx(MarkdownViewWithMermaid, {
    markdown: mdContent,
    components: mdComponents,
    options: {
      tables: true,
      emoji: true,
      openLinksInNewWindow: true
    }
  });
}

/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (ApiDocumentationOverview)));

/***/ }),

/***/ 90435:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(85217);
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(itwinui_v1__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _links_OperationLink__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(25686);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__);








function ApiDocumentationReference({
  apiName,
  apiPath,
  operationsByTag
}) {
  const tableData = useMemo(() => {
    const operations = Array.from(new Set(operationsByTag.flatMap(group => {
      return group.items;
    })));
    const data = operations.map(operation => {
      return {
        method: operation.method,
        name: operation.name,
        displayUrlTemplate: operation.displayUrlTemplate,
        displayName: operation.displayName,
        tags: operation.tags.filter(tag => ![TechPreviewTag, DeprecatedTag].includes(tag))
      };
    }).sort((one, two) => one.displayName < two.displayName ? -1 : 1);
    return data;
  }, [operationsByTag]);

  const methodCellRenderer = props => {
    return /*#__PURE__*/_jsx("div", {
      className: `${props.value.toLowerCase()}-cell`,
      children: /*#__PURE__*/_jsx("span", {
        className: `${props.value.toLowerCase()} method`,
        children: props.value
      })
    });
  };

  const operationLinkCellRenderer = (props, content) => {
    return /*#__PURE__*/_jsx(OperationLink, {
      apiName: apiName,
      operationName: props.row.original.name,
      children: /*#__PURE__*/_jsx("span", {
        children: content
      })
    });
  };

  const tagsCellRenderer = props => {
    return /*#__PURE__*/_jsx("div", {
      className: "tag-container",
      children: props.value.length > 0 ? props.value.map(tag => /*#__PURE__*/_jsx("span", {
        children: tag.replace(/\u00a0/g, ' ')
      }, tag)) : /*#__PURE__*/_jsx("span", {
        className: "untagged",
        children: "Untagged"
      })
    });
  };

  const textFilter = tableFilters.TextFilter({
    filter: 'Filter',
    clear: 'Clear'
  });
  return /*#__PURE__*/_jsxs("div", {
    className: "operations",
    children: [/*#__PURE__*/_jsx(Title, {
      className: "documentation-title",
      children: "API references"
    }), /*#__PURE__*/_jsx(Table, {
      className: "references-table-large",
      columns: [{
        Header: 'API references',
        columns: [{
          Header: 'Call',
          accessor: 'method',
          id: 'method',
          sortType: 'string',
          cellClassName: 'api-cell operation-table-cell',
          maxWidth: 90,
          Cell: methodCellRenderer
        }, {
          Header: 'Request URL',
          accessor: 'displayUrlTemplate',
          id: 'displayUrlTemplate',
          sortType: 'string',
          cellClassName: 'operation-table-cell url-cell full-size-cell',
          Cell: props => operationLinkCellRenderer(props, `/${apiPath}${props.value}`),
          Filter: textFilter
        }, {
          Header: 'Title',
          accessor: 'displayName',
          id: 'displayName',
          sortType: 'string',
          cellClassName: 'operation-table-cell full-size-cell',
          Filter: textFilter
        }, {
          Header: 'Tags',
          accessor: 'tags',
          id: 'tags',
          cellClassName: 'operation-table-cell full-size-cell',
          disableSortBy: true,
          maxWidth: 150,
          Cell: tagsCellRenderer,
          Filter: textFilter
        }]
      }],
      data: tableData,
      emptyFilteredTableContent: "No results found. Clear or try another filter.",
      emptyTableContent: "No API references are available.",
      intersectionMargin: 300,
      isSortable: true
    }), /*#__PURE__*/_jsx(Table, {
      className: "references-table-small",
      columns: [{
        Header: 'API references',
        sortType: 'string',
        columns: [{
          Header: 'Call',
          accessor: 'method',
          id: 'method',
          cellClassName: 'api-cell operation-table-cell',
          maxWidth: 90,
          Cell: methodCellRenderer
        }, {
          Header: 'Title',
          accessor: 'displayName',
          id: 'displayName',
          cellClassName: 'operation-table-cell url-cell full-size-cell',
          Cell: props => operationLinkCellRenderer(props, props.value),
          Filter: textFilter
        }, {
          Header: 'Tags',
          accessor: 'tags',
          id: 'tags',
          cellClassName: 'operation-table-cell full-size-cell',
          disableSortBy: true,
          maxWidth: 150,
          Cell: tagsCellRenderer,
          Filter: textFilter
        }]
      }],
      data: tableData,
      emptyFilteredTableContent: "No results found. Clear or try another filter.",
      emptyTableContent: "No API references are available.",
      intersectionMargin: 300,
      isSortable: true
    })]
  });
}

/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (ApiDocumentationReference)));

/***/ }),

/***/ 70013:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: default

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
// EXTERNAL MODULE: external "classnames"
var external_classnames_ = __webpack_require__(59003);
// EXTERNAL MODULE: consume shared module (default) itwinui-v1@^1.48.3 (singleton) (fallback: ./node_modules/itwinui-v1/cjs/index.js) (eager)
var index_js_eager_ = __webpack_require__(85217);
// EXTERNAL MODULE: ./node_modules/next/link.js
var next_link = __webpack_require__(77262);
// EXTERNAL MODULE: ./src/utils.ts
var utils = __webpack_require__(35797);
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/NavigationWithSlider/NavigationWithSlider.tsx










const NavigationWithSlider_NavigationWithSlider = params => {
  const {
    0: contentElements,
    1: setContentElements
  } = useState([]);
  const {
    0: displayedLine,
    1: setDisplayedLine
  } = useState(0);
  const {
    0: boldedPosition,
    1: setBoldedPosition
  } = useState(0);
  const {
    0: sliderTextAllPositions,
    1: setSliderTextAllPositions
  } = useState([]); //Detect when we reach end of page

  const {
    0: endOfPage,
    1: setEndOfPage
  } = useState(false);

  const endOfPageDetection = () => {
    const endOfPageCheck = window.innerHeight + window.scrollY >= document.body.scrollHeight;
    if (endOfPage !== endOfPageCheck) setEndOfPage(endOfPageCheck);
  };

  window.onscroll = endOfPageDetection; //Initial document check

  endOfPageDetection(); //Handle observer values

  const handleObservationChanges = value => {
    for (let i = 0; i < value.length; i++) {
      const headerVisibilityChanged = value[i]; //Modify contentElement value, to know elements visible in viewport

      setContentElements(prev => {
        const found = prev.find(item => item.textContent === headerVisibilityChanged.target.textContent); //If element does not exists in initial list, ignore it

        if (found === undefined) return [...prev];
        const oldValues = prev.filter(item => item.textContent !== headerVisibilityChanged.target.textContent); //Saving if found element is visible in viewport

        found.isIntersecting = headerVisibilityChanged.isIntersecting;
        return [...oldValues, found];
      });
    }
  }; //Responsible for detecting how and when the document is changing


  const observer = useMemo(() => {
    return new IntersectionObserver(handleObservationChanges, {
      root: document,
      rootMargin: '-70px',
      threshold: [0, 1]
    });
  }, []); //If document changes, remove all observing and attach new observing

  useEffect(() => {
    if (!observer) {
      return;
    }

    observer.disconnect();
    params.elements.forEach(item => observer.observe(item.element));
    setContentElements(params.elements);
  }, [observer, params.elements]); //List of elements to be displayed next to Slider

  const contentElementsSelected = useMemo(() => {
    let firstNotSet = true;
    const allVisibleItems = contentElements.filter(item => item.isIntersecting); //Href value that is selected and retrieved from URL

    const selectionByURL = window.document.baseURI.indexOf('#') !== -1 ? `#${window.document.baseURI.split('#')[1]}` : undefined;
    const endOfPageItemVisibility = endOfPage && allVisibleItems.length > 1; //Check if URL href value has an item that is visible in viewport and that element should be bolded

    let manualSet =  false || selectionByURL !== undefined && contentElements.filter(item => selectionByURL?.indexOf(item.href) >= 0 && item.isIntersecting).length > 0;
    return contentElements.sort((a, b) => a.index > b.index ? 1 : -1).map(element => {
      if (endOfPageItemVisibility && element.isIntersecting && (!manualSet || selectionByURL && selectionByURL.indexOf(element.href) >= 0)) {
        manualSet = true;
        element.isBolded = true;
        firstNotSet = false;
        setDisplayedLine(element.index);
        return element;
      } else if (firstNotSet && !endOfPageItemVisibility && (element.isIntersecting || element.index === displayedLine && !element.isIntersecting && allVisibleItems.length === 0)) {
        setDisplayedLine(element.index);
        element.isBolded = true;
        firstNotSet = false;
        return element;
      } else {
        element.isBolded = false;
        return element;
      }
    }).map(element => /*#__PURE__*/_jsx("div", {
      className: classNames(['slider-text', element.isBolded ? 'bolded' : 'not-bolded', `level-${element.level}`]),
      children: /*#__PURE__*/_jsx(Link, {
        scroll: true,
        href: element.href,
        children: element.textContent
      })
    }, element.textContent));
  }, [contentElements, displayedLine, endOfPage]);
  useEffect(() => {
    const sliderTextElements = document.querySelectorAll('.slider-text');
    const firstSliderTextElement = sliderTextElements[0];
    const lastSliderTextElement = sliderTextElements[sliderTextElements.length - 1];

    if (firstSliderTextElement && lastSliderTextElement) {
      const firstElementYCoord = firstSliderTextElement?.getBoundingClientRect().top;
      const lastElementYCoord = lastSliderTextElement?.getBoundingClientRect().top;
      const sliderTextHeight = lastElementYCoord - firstElementYCoord;
      setSliderTextAllPositions([]);
      sliderTextElements.forEach(textElement => {
        const textElementYCoord = textElement?.getBoundingClientRect().top;
        const textElementHeight = textElementYCoord - firstElementYCoord;
        const textElementHeightPercentage = Math.round(textElementHeight / sliderTextHeight * 100);
        setSliderTextAllPositions(state => [...state, textElementHeightPercentage]);
      });
      const boldedTextElement = document.querySelector('.bolded');

      if (boldedTextElement) {
        const boldedElementYCoord = boldedTextElement?.getBoundingClientRect().top;
        const boldedElementHeight = boldedElementYCoord - firstElementYCoord;
        const boldedElementHeightPercentage = Math.round(boldedElementHeight / sliderTextHeight * 100);
        setBoldedPosition(boldedElementHeightPercentage);
      }
    }
  }, [contentElements, contentElementsSelected]);
  return /*#__PURE__*/_jsxs("div", {
    className: "navigation-with-slider",
    children: [/*#__PURE__*/_jsx(Leading, {
      className: "slider-title",
      children: params.Header
    }), /*#__PURE__*/_jsxs("div", {
      style: {
        display: 'flex'
      },
      children: [/*#__PURE__*/_jsx(Slider, {
        className: "navigation-slider",
        min: 0,
        max: 100,
        orientation: "vertical",
        values: [100 - boldedPosition],
        minLabel: /*#__PURE__*/_jsx(_Fragment, {}),
        maxLabel: /*#__PURE__*/_jsx(_Fragment, {}),
        trackDisplayMode: "odd-segments",
        onChange: value => {
          const select = Utils.findClosestNumberPosition(sliderTextAllPositions, 100 - value[0]);
          contentElements[select].element.scrollIntoView({
            behavior: 'smooth',
            block: 'start',
            inline: 'start'
          });
          window.history.replaceState(null, '', contentElements[select].href);
        },
        tooltipProps: () => {
          return {
            visible: false
          };
        }
      }), /*#__PURE__*/_jsx("div", {
        className: "slider-content",
        children: contentElementsSelected
      })]
    })]
  });
};

/* harmony default export */ var components_NavigationWithSlider_NavigationWithSlider = ((/* unused pure expression or super */ null && (NavigationWithSlider_NavigationWithSlider)));
;// CONCATENATED MODULE: ./src/components/pages/ApiDocumentation/ApiDocumentationRightMenu/ApiDocumentationRightSideMenu.tsx







function RightSideMenu(params) {
  const {
    0: elements,
    1: setElements
  } = useState([]); //Get elements values from main document according to queries

  useEffect(() => {
    if (params.mainBody.current === null) return;
    const subHeading = Array.from(params.mainBody.current.getElementsByClassName('documentation-subheading')).map(item => {
      const href = item.querySelector('a[href^="#"]')?.attributes.getNamedItem('href');
      return {
        element: item,
        href: href?.value,
        level: 1
      };
    }).filter(item => item.element.textContent);
    const documentTitle = Array.from(params.mainBody.current.getElementsByClassName('documentation-title')).map(item => {
      const href = item.querySelector('a[href^="#"]')?.attributes.getNamedItem('href');
      return {
        element: item,
        href: href?.value,
        level: 1
      };
    }).filter(item => item.element.textContent);
    const operations = Array.from(params.mainBody.current.querySelectorAll('a[href^="#"][href$="ref"]')).map(item => {
      const href = item.attributes.getNamedItem('href');
      return {
        element: item,
        href: href?.value,
        level: 1
      };
    }).filter(item => item.element.textContent);
    const tutorialTitles = Array.from(params.mainBody.current.getElementsByClassName('tutorial-heading title')).map(item => {
      const href = item.querySelector('a[href^="#"]')?.attributes.getNamedItem('href');
      return {
        element: item,
        href: href?.value,
        level: 1
      };
    }).filter(item => item.element.textContent);
    const tutorialSubheadings = Array.from(params.mainBody.current.getElementsByClassName('tutorial-heading subheading')).map(item => {
      const href = item.querySelector('a[href^="#"]')?.attributes.getNamedItem('href');
      return {
        element: item,
        href: href?.value,
        level: 2
      };
    }).filter(item => item.element.textContent);
    const values = [...documentTitle, ...subHeading, ...operations, ...tutorialTitles, ...tutorialSubheadings].sort((a, b) => a.element.getBoundingClientRect().top - b.element.getBoundingClientRect().top).map((item, index) => {
      return {
        element: item.element,
        index: index,
        isIntersecting: false,
        textContent: item.element.textContent,
        isBolded: false,
        href: item.href ?? '',
        level: item.level
      };
    });
    setElements(values);
  }, [params.mainBody, params]);

  if (elements.length <= 2) {
    return /*#__PURE__*/_jsx(_Fragment, {});
  }

  return /*#__PURE__*/_jsx("div", {
    className: classNames(["sticky-element", params.alertDisplayed ? 'documentation-right-side-menu-alert' : 'documentation-right-side-menu']),
    children: /*#__PURE__*/_jsx(NavigationWithSlider, {
      Header: 'On this page',
      elements: elements
    })
  });
}

/* harmony default export */ var ApiDocumentationRightSideMenu = ((/* unused pure expression or super */ null && (RightSideMenu)));

/***/ }),

/***/ 9024:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: default

// EXTERNAL MODULE: consume shared module (default) itwinui-v1@^1.48.3 (singleton) (fallback: ./node_modules/itwinui-v1/cjs/index.js) (eager)
var index_js_eager_ = __webpack_require__(85217);
// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
// EXTERNAL MODULE: ./src/constants/paths.ts
var paths = __webpack_require__(86491);
// EXTERNAL MODULE: ./src/links/SimpleLink.tsx
var links_SimpleLink = __webpack_require__(94451);
// EXTERNAL MODULE: ./node_modules/@itwin/itwinui-icons-react/cjs/index.js
var cjs = __webpack_require__(59994);
// EXTERNAL MODULE: ./src/constants/defaultApiGroups.ts
var defaultApiGroups = __webpack_require__(35735);
// EXTERNAL MODULE: ./src/components/icons/GroupIcon.tsx + 14 modules
var icons_GroupIcon = __webpack_require__(80956);
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/pages/Samples/SampleTile/SampleTile.tsx










function SampleTile_SampleTile({
  sample
}) {
  const getApiGroupIcon = apiGroupId => {
    const group = DefaultApiGroups.apiGroups.find(group => group.id === apiGroupId);

    if (group) {
      return /*#__PURE__*/_jsx("div", {
        className: "thumbnail-container",
        style: {
          backgroundColor: `${group.backgroundColor}`
        },
        children: /*#__PURE__*/_jsx(GroupIcon, {
          apiGroupId: group.id,
          id: group.id,
          fill: group.color,
          className: "group-icon iui-picture"
        }, group.id)
      });
    }
  };

  return /*#__PURE__*/_jsx(SimpleLink, {
    href: sample.url,
    target: "_blank",
    children: /*#__PURE__*/_jsx(Tile, {
      className: "sample-tile",
      name: sample.label,
      description: /*#__PURE__*/_jsx(Tooltip, {
        content: sample.description,
        placement: "bottom",
        children: /*#__PURE__*/_jsx("div", {
          children: sample.description
        })
      }),
      thumbnail: sample.image ? sample.image : getApiGroupIcon(sample.apiGroupId),
      metadata: sample.tags && /*#__PURE__*/_jsxs(_Fragment, {
        children: [/*#__PURE__*/_jsx(SvgTag, {}), /*#__PURE__*/_jsx(TagContainer, {
          children: sample.tags?.map((tag, index) => /*#__PURE__*/_jsx(Tag, {
            variant: "basic",
            children: tag
          }, `${tag}-${index}`))
        })]
      }),
      isActionable: true
    })
  });
}

/* harmony default export */ var Samples_SampleTile_SampleTile = ((/* unused pure expression or super */ null && (SampleTile_SampleTile)));
;// CONCATENATED MODULE: ./src/components/pages/ApiDocumentation/ApiDocumentationSamples.tsx









function ApiDocumentationSamples({
  preloadedSamples
}) {
  const getSamplesList = () => {
    return preloadedSamples.flatMap(group => {
      return group.samples.sort((a, b) => a.label.localeCompare(b.label)).map(sample => /*#__PURE__*/_jsx(SampleTile, {
        sample: sample
      }, sample.name));
    });
  };

  return /*#__PURE__*/_jsxs("div", {
    className: "related-samples",
    children: [/*#__PURE__*/_jsx(Title, {
      className: "documentation-title",
      children: "Samples"
    }), /*#__PURE__*/_jsx("div", {
      className: "samples-list-section",
      children: preloadedSamples && preloadedSamples.length > 0 ? /*#__PURE__*/_jsx("div", {
        className: "sample-tile-list",
        children: getSamplesList()
      }) : /*#__PURE__*/_jsx(Body, {
        isMuted: true,
        children: "This API does not have published samples yet."
      })
    }), /*#__PURE__*/_jsx("div", {
      className: "see-all-samples-link",
      children: /*#__PURE__*/_jsx(SimpleLink, {
        href: SAMPLES,
        children: "See all samples"
      })
    })]
  });
}

/* harmony default export */ var ApiDocumentation_ApiDocumentationSamples = ((/* unused pure expression or super */ null && (ApiDocumentationSamples)));

/***/ }),

/***/ 31450:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: default

// EXTERNAL MODULE: consume shared module (default) itwinui-v1@^1.48.3 (singleton) (fallback: ./node_modules/itwinui-v1/cjs/index.js) (eager)
var index_js_eager_ = __webpack_require__(85217);
// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
// EXTERNAL MODULE: ./src/constants/paths.ts
var paths = __webpack_require__(86491);
// EXTERNAL MODULE: ./src/links/SimpleLink.tsx
var links_SimpleLink = __webpack_require__(94451);
// EXTERNAL MODULE: ./src/constants/defaultApiGroups.ts
var defaultApiGroups = __webpack_require__(35735);
// EXTERNAL MODULE: ./src/components/icons/GroupIcon.tsx + 14 modules
var icons_GroupIcon = __webpack_require__(80956);
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/icons/ItwinPlatformIcon.tsx
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




var SvgIcon = function SvgIcon(props) {
  return /*#__PURE__*/jsx_runtime_.jsx("svg", _objectSpread(_objectSpread({}, props), {}, {
    children: /*#__PURE__*/jsx_runtime_.jsx("path", {
      fill: "#fff",
      d: "M6.341 8.712a.085.085 0 0 0-.062.012c-.03.022-.037.07-.04.137-.006.342-.013.342-.013.678.008.202.05.194.141.242l.394.222c.083.053.11.051.102.196l.01 1.759-.921-.534a.348.348 0 0 0-.112-.046c-.1-.019-.163.048-.16.217-.007.342-.013.25-.013.587.014.226.092.212.27.345l1.173.7a.953.953 0 0 0 .134.063l.087.01v.001h.004l.086-.01a.95.95 0 0 0 .135-.063l1.173-.701c.178-.133.256-.12.27-.345 0-.337-.006-.245-.013-.587.004-.225-.109-.269-.272-.171l-.981.569V9.608c0-.079-.015-.143-.186-.228l-.154-.088-.943-.548a.415.415 0 0 0-.109-.032zm.962-1.332a.535.535 0 1 0 .536.535.535.535 0 0 0-.536-.535zM5.762 2.308a2.98 2.98 0 0 0-3.258 3.32c-2.57.83-2.442 4.505.771 4.531h.253L3.52 8.278c.019-.461.009-.67.62-1.018l2.524-1.508a1.195 1.195 0 0 1 .631-.233 1.72 1.72 0 0 1 .643.233L10.46 7.26c.648.413.578.553.606 1.005-.002.563-.008 1.084-.014 1.613l-.003.28 2.22-.001c3.365 0 2.397-4.517-.785-3.247.113-2.842-2.416-2.806-3.444-1.893.02-1.003-.684-2.739-3.28-2.71zM5.71 1.75c2.477-.037 3.736 1.506 3.795 2.444.437-.406 3.39-.934 3.502 2.01 3.032-.958 4.772 4.57.18 4.57h-2.144l-.005.764v.113a.767.767 0 0 1-.017.132l-.013.044-.018.09a.701.701 0 0 1-.123.249l-.172.154-.02.018-.02.012-.139.1-.151.09v.004l-.176.1-.981.58c-.435.26-1.03.611-1.309.771a3.268 3.268 0 0 1-.362.19.474.474 0 0 1-.394.035 4.222 4.222 0 0 1-.46-.224c-.222-.125-.603-.35-.963-.565l-.32-.192v.006l-1.341-.79c-.32-.226-.51-.347-.523-.8l-.005-.879h-.383c-3.965-.033-3.962-4.67-1.233-5.493A3.545 3.545 0 0 1 5.71 1.751z"
    })
  }));
};

SvgIcon.defaultProps = {
  viewBox: "0 0 16 16",
  xmlns: "http://www.w3.org/2000/svg"
};

const ItwinPlatformIcon_ITwinPlatformIcon = props => {
  return /*#__PURE__*/_jsx(SvgIcon, _objectSpread({}, props));
};

/* harmony default export */ var ItwinPlatformIcon = ((/* unused pure expression or super */ null && (ItwinPlatformIcon_ITwinPlatformIcon)));
;// CONCATENATED MODULE: ./src/components/pages/Tutorials/TutorialTile.tsx









function TutorialTile_TutorialTile(props) {
  const getApiGroupsFromMetaDataList = relatedApiIds => {
    const allApiGroups = DefaultApiGroups.apiGroups;
    const groups = [];

    for (const apiGroupId of relatedApiIds) {
      const apiGroup = allApiGroups.find(group => group.id === apiGroupId);

      if (apiGroup) {
        groups.push(apiGroup);
      }
    }

    return groups;
  };

  const BadgeIcons = () => {
    if (!apiGroups) {
      return /*#__PURE__*/_jsx(_Fragment, {});
    }

    return /*#__PURE__*/_jsx(_Fragment, {
      children: apiGroups.map(group => /*#__PURE__*/_jsx(Tooltip, {
        content: group.displayName,
        children: /*#__PURE__*/_jsx("div", {
          style: {
            marginRight: 8,
            flexShrink: 0,
            width: 20,
            height: 20
          },
          children: /*#__PURE__*/_jsx(GroupIcon, {
            apiGroupId: group.id,
            id: group.id,
            fill: group.color,
            className: "grid-icon"
          }, group.id)
        })
      }, group.id))
    });
  };

  const DurationInMinutes = () => {
    if (!props.durationInMinutes) {
      return /*#__PURE__*/_jsx(_Fragment, {});
    }

    return /*#__PURE__*/_jsx(Badge, {
      className: "badge no-text-transform",
      backgroundColor: "#008be1",
      children: `${props.durationInMinutes} min`
    });
  };

  const getThumbnailPlaceholder = isActive => {
    if (apiGroups && apiGroups[0]) {
      return /*#__PURE__*/_jsx("div", {
        className: "thumbnail-container",
        style: {
          backgroundColor: `${apiGroups[0].backgroundColor}`,
          width: '100%',
          height: '100%'
        },
        children: /*#__PURE__*/_jsx(GroupIcon, {
          apiGroupId: apiGroups[0].id,
          id: apiGroups[0].id,
          fill: apiGroups[0].color,
          className: "group-icon iui-picture"
        }, apiGroups[0].id)
      });
    }

    return /*#__PURE__*/_jsx(ITwinPlatformIcon, {
      className: isActive ? 'tutorial-tile-thumbnail-placeholder' : 'tutorial-tile-thumbnail-placeholder-not-clickable'
    });
  };

  const apiGroups = getApiGroupsFromMetaDataList(props.groups);

  if (!props.href) {
    return /*#__PURE__*/_jsx(Tile, {
      className: "tutorial-tile",
      name: props.name,
      description: /*#__PURE__*/_jsx(Tooltip, {
        content: props.description,
        placement: "bottom",
        children: /*#__PURE__*/_jsx("div", {
          children: props.description
        })
      }),
      thumbnail: props.thumbnail ? props.thumbnail : getThumbnailPlaceholder(false),
      badge: /*#__PURE__*/_jsx(Badge, {
        backgroundColor: "#9ba5ae",
        className: "badge no-text-transform",
        children: "Coming soon"
      }),
      metadata: /*#__PURE__*/_jsx(BadgeIcons, {}),
      isActionable: true
    });
  }

  return /*#__PURE__*/_jsx(SimpleLink, {
    href: props.href,
    children: /*#__PURE__*/_jsx(Tile, {
      className: "tutorial-tile",
      name: props.name,
      description: /*#__PURE__*/_jsx(Tooltip, {
        content: props.description,
        placement: "bottom",
        children: /*#__PURE__*/_jsx("div", {
          children: props.description
        })
      }),
      thumbnail: props.thumbnail ? props.thumbnail : getThumbnailPlaceholder(true),
      badge: /*#__PURE__*/_jsx(DurationInMinutes, {}),
      metadata: /*#__PURE__*/_jsx(BadgeIcons, {}),
      isActionable: true
    })
  });
}

/* harmony default export */ var Tutorials_TutorialTile = ((/* unused pure expression or super */ null && (TutorialTile_TutorialTile)));
;// CONCATENATED MODULE: ./src/components/pages/Tutorials/TutorialsList.tsx
function TutorialsList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function TutorialsList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? TutorialsList_ownKeys(Object(source), !0).forEach(function (key) { TutorialsList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : TutorialsList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function TutorialsList_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




function TutorialsList_TutorialsList({
  apis,
  tutorialsToShow
}) {
  return /*#__PURE__*/_jsx("div", {
    className: "tutorial-tile-list",
    children: tutorialsToShow && tutorialsToShow.filter(tutorial => tutorial && tutorial.tile).map(tutorial => {
      const groups = new Set();

      if (apis) {
        for (const id of tutorial.tile.relatedApiIds ?? []) {
          const api = apis.find(x => x?.path === id);
          if (api) groups.add(api.apiGroupId);
        }
      }

      return /*#__PURE__*/_jsx(TutorialTile, TutorialsList_objectSpread({
        groups: Array.from(groups)
      }, tutorial.tile), tutorial.title);
    })
  });
}

/* harmony default export */ var Tutorials_TutorialsList = ((/* unused pure expression or super */ null && (TutorialsList_TutorialsList)));
;// CONCATENATED MODULE: ./src/components/pages/ApiDocumentation/ApiDocumentationTutorials.tsx









function ApiDocumentationTutorials({
  tutorialsMetadata,
  apis
}) {
  return /*#__PURE__*/_jsxs("div", {
    className: "related-tutorials",
    children: [/*#__PURE__*/_jsx(Title, {
      className: "documentation-title",
      children: "Tutorials"
    }), /*#__PURE__*/_jsx("div", {
      className: "tutorials-list-section",
      children: tutorialsMetadata && tutorialsMetadata.length > 0 ? /*#__PURE__*/_jsx(TutorialsList, {
        apis: apis,
        tutorialsToShow: tutorialsMetadata
      }) : /*#__PURE__*/_jsx(Body, {
        isMuted: true,
        children: "This API does not have published tutorials yet."
      })
    }), /*#__PURE__*/_jsx("div", {
      className: "see-all-tutorials-link",
      children: /*#__PURE__*/_jsx(SimpleLink, {
        href: TUTORIALS,
        children: "See all tutorials"
      })
    })]
  });
}

/* harmony default export */ var ApiDocumentation_ApiDocumentationTutorials = ((/* unused pure expression or super */ null && (ApiDocumentationTutorials)));

/***/ }),

/***/ 47903:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export ApiKeyDeleteModal */
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(85217);
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(itwinui_v1__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _hooks_useApiKeysApi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(27883);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_hooks_useApiKeysApi__WEBPACK_IMPORTED_MODULE_2__]);
_hooks_useApiKeysApi__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];





const ApiKeyDeleteModal = ({
  apiKeyId,
  apiName,
  show,
  setShow,
  onRevoke
}) => {
  const {
    0: isLoading,
    1: setIsLoading
  } = useState(false);
  const apiKeysApi = useApiKeysApi();

  const revokeKey = async () => {
    try {
      setIsLoading(true);
      await apiKeysApi.revokeApiKey(apiKeyId);
      await onRevoke();
    } catch (err) {
      toaster.negative(`${'Failed to revoke key.'}`, {
        hasCloseButton: true
      });
    } finally {
      setIsLoading(false);
    }
  };

  return /*#__PURE__*/_jsxs(Modal, {
    title: "Confirm",
    modalRootId: "api-keys-page",
    isOpen: show,
    isDismissible: !isLoading,
    onClose: () => {
      setShow(false);
    },
    children: [/*#__PURE__*/_jsxs(Leading, {
      children: ["Are you sure you want to revoke ", /*#__PURE__*/_jsx("strong", {
        children: apiName
      }), "?"]
    }), /*#__PURE__*/_jsxs(ModalButtonBar, {
      children: [isLoading ? /*#__PURE__*/_jsx(IconButton, {
        styleType: "high-visibility",
        children: /*#__PURE__*/_jsx(ProgressRadial, {
          indeterminate: true
        })
      }) : /*#__PURE__*/_jsx(Button, {
        styleType: "high-visibility",
        onClick: revokeKey,
        children: "Revoke"
      }), /*#__PURE__*/_jsx(Button, {
        styleType: "default",
        onClick: () => {
          setShow(false);
        },
        disabled: isLoading,
        children: "Cancel"
      })]
    })]
  });
};
/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (ApiKeyDeleteModal)));
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 89044:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export useFetchAllApiKeys */
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(85217);
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(itwinui_v1__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _hooks_useApiKeysApi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(27883);
/* harmony import */ var _services_authService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(13417);
/* harmony import */ var _stores__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(68032);
/* harmony import */ var _ApiKeysPage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(56610);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_hooks_useApiKeysApi__WEBPACK_IMPORTED_MODULE_2__, _services_authService__WEBPACK_IMPORTED_MODULE_3__, _stores__WEBPACK_IMPORTED_MODULE_4__, _ApiKeysPage__WEBPACK_IMPORTED_MODULE_5__]);
([_hooks_useApiKeysApi__WEBPACK_IMPORTED_MODULE_2__, _services_authService__WEBPACK_IMPORTED_MODULE_3__, _stores__WEBPACK_IMPORTED_MODULE_4__, _ApiKeysPage__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);










const useFetchAllApiKeys = (setIsLoading, isLoggedIn) => {
  const {
    0: allApiKeys,
    1: setAllApiKeys
  } = useState([]);
  const apiKeysApi = useApiKeysApi();
  useEffect(() => {
    if (isLoggedIn) {
      const fetchAllApiKeys = async () => {
        try {
          const allApiKeysResponse = await apiKeysApi.getAllApiKeys();
          setAllApiKeys(allApiKeysResponse);
        } catch (err) {
          toaster.negative(`${'Failed to fetch API Keys.'}`, {
            hasCloseButton: true
          });
        } finally {
          setIsLoading(false);
        }
      };

      fetchAllApiKeys();
    }
  }, [setIsLoading, isLoggedIn, apiKeysApi]);
  return [allApiKeys, setAllApiKeys];
};

const ApiKeysManagement = () => {
  const {
    0: isLoading,
    1: setIsLoading
  } = useState(true);
  const isLoggedIn = useIsLoggedIn();
  const [allApiKeys, setAllApiKeys] = useFetchAllApiKeys(setIsLoading, isLoggedIn);
  const authService = useAuthService();
  const apiKeysApi = useApiKeysApi();

  const refreshAllKeys = async () => {
    setIsLoading(true);

    try {
      const allApiKeysResponse = await apiKeysApi.getAllApiKeys();
      setAllApiKeys(allApiKeysResponse);
    } catch (err) {
      toaster.negative(`${'Failed to fetch API Keys.'}`, {
        hasCloseButton: true
      });
    } finally {
      setIsLoading(false);
    }
  };

  if (!isLoggedIn) {
    return /*#__PURE__*/_jsx("div", {
      className: "sign-in-cta",
      children: /*#__PURE__*/_jsx(Button, {
        styleType: "cta",
        onClick: () => authService.signin(),
        children: "Sign In"
      })
    });
  }

  if (isLoading) {
    return /*#__PURE__*/_jsx("div", {
      className: "loading-overlay",
      children: /*#__PURE__*/_jsx(ProgressRadial, {
        indeterminate: true
      })
    });
  }

  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [/*#__PURE__*/_jsx(ApiKeysPage, {
      apiKeys: allApiKeys,
      refreshAllApiKeys: refreshAllKeys
    }), isLoading && /*#__PURE__*/_jsx("div", {
      className: "loading-overlay",
      children: /*#__PURE__*/_jsx(ProgressRadial, {
        indeterminate: true
      })
    })]
  });
};

/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (ApiKeysManagement)));
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 56610:
/***/ (function(module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(85217);
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(itwinui_v1__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(77262);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(71853);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(59994);
/* harmony import */ var _itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _ResponsiveTable_ResponsiveTable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(39120);
/* harmony import */ var _ApiKeyDeleteModal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(47903);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_ApiKeyDeleteModal__WEBPACK_IMPORTED_MODULE_6__]);
_ApiKeyDeleteModal__WEBPACK_IMPORTED_MODULE_6__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];












const ApiKeysPage = ({
  apiKeys,
  refreshAllApiKeys
}) => {
  const {
    0: showDeleteModal,
    1: setShowDeleteModal
  } = useState(false);
  const {
    0: apiKeyIdToRemove,
    1: setApiKeyIdToRemove
  } = useState('');
  const {
    0: apiKeyNameToRemove,
    1: setApiKeyNameToRemove
  } = useState('');
  const router = useRouter();
  const tableColumns = useMemo(() => [{
    Header: 'Table',
    columns: [{
      id: 'name',
      Header: 'Name',
      accessor: 'name'
    }, {
      id: 'expiresAt',
      Header: 'Expires',
      accessor: 'expiresAt',
      Cell: value => {
        const expiresAtDate = new Date(value.row.original.expiresAt);
        return `${expiresAtDate.toDateString()}, ${expiresAtDate.toLocaleTimeString(navigator.language, {
          hour: '2-digit',
          minute: '2-digit'
        })}`;
      }
    }, {
      id: 'userEmail',
      Header: 'Email',
      accessor: 'userEmail'
    }, {
      id: 'dropdown',
      Header: '',
      width: 80,
      Cell: value => {
        return /*#__PURE__*/_jsx(DropdownMenu, {
          menuItems: close => [/*#__PURE__*/_jsx(MenuItem, {
            onClick: () => {
              router.push(`/insights/api-keys/modifyapikey/${value.row.original.id}`);
            },
            icon: /*#__PURE__*/_jsx(SvgEdit, {}),
            children: "Modify"
          }, 1), /*#__PURE__*/_jsx(MenuItem, {
            onClick: () => {
              setShowDeleteModal(true);
              setApiKeyIdToRemove(value.row.original.id);
              setApiKeyNameToRemove(value.row.original.name);
              close();
            },
            icon: /*#__PURE__*/_jsx(SvgDelete, {}),
            children: "Revoke"
          }, 2)],
          children: /*#__PURE__*/_jsx(IconButton, {
            style: {
              border: 'none',
              backgroundColor: 'transparent'
            },
            children: /*#__PURE__*/_jsx(SvgMore, {
              style: {
                fill: '#677480',
                width: '16px',
                height: '16px'
              }
            })
          })
        });
      }
    }]
  }], [router]);
  const ApiKeys = useMemo(() => apiKeys, [apiKeys]);
  return /*#__PURE__*/_jsx(_Fragment, {
    children: /*#__PURE__*/_jsxs("div", {
      className: "page-content-container",
      children: [/*#__PURE__*/_jsx(Headline, {
        children: "API Keys"
      }), ApiKeys.length !== 0 && /*#__PURE__*/_jsx("div", {
        className: "add-api-key-button",
        children: /*#__PURE__*/_jsx(Link, {
          href: '/insights/api-keys/addapikey',
          children: /*#__PURE__*/_jsx(Button, {
            styleType: "high-visibility",
            startIcon: /*#__PURE__*/_jsx(SvgAdd, {}),
            children: "Add API Key"
          })
        })
      }), /*#__PURE__*/_jsx(ResponsiveTable, {
        data: ApiKeys,
        isSortable: false,
        columns: tableColumns,
        emptyTableContent: /*#__PURE__*/_jsx(Link, {
          href: '/insights/api-keys/addapikey',
          children: /*#__PURE__*/_jsx(Button, {
            styleType: "cta",
            startIcon: /*#__PURE__*/_jsx(SvgAdd, {}),
            children: "Add API Key"
          })
        })
      }), showDeleteModal && /*#__PURE__*/_jsx(ApiKeyDeleteModal, {
        apiKeyId: apiKeyIdToRemove,
        apiName: apiKeyNameToRemove,
        setShow: setShowDeleteModal,
        show: showDeleteModal,
        onRevoke: async () => {
          await refreshAllApiKeys();
          setShowDeleteModal(false);
          toaster.positive(`API Key successfully revoked.`, {
            type: 'temporary',
            hasCloseButton: true
          });
        }
      })]
    })
  });
};

/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (ApiKeysPage)));
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 10515:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: default

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);
// EXTERNAL MODULE: external "@mdx-js/react"
var react_ = __webpack_require__(57425);
// EXTERNAL MODULE: ./src/components/mdx/documentation.tsx + 1 modules
var documentation = __webpack_require__(963);
// EXTERNAL MODULE: ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(83798);
// EXTERNAL MODULE: ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules
var objectWithoutProperties = __webpack_require__(31117);
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/documentation/apis/contextcapture-ccimagecollection.md


var _excluded = ["components"];
var __jsx = (external_react_default()).createElement;


var readingTime = {
  "text": "1 min read",
  "minutes": 0.695,
  "time": 41700,
  "words": 139
};
/* @jsxRuntime classic */
/* @jsx mdx */

var layoutProps = {};
var MDXLayout = "wrapper";
function MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);
  return (0,react_.mdx)(MDXLayout, (0,esm_extends/* default */.Z)({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)("h2", {
    "id": "cc-image-collection"
  }, "CC Image Collection"), (0,react_.mdx)("p", null, "A ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "CC Image Collection"), " is a collection of images. In the reality data, you need to store a flat list of image files using Reality Data type ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "CCImageCollection"), ". For example, this architecture is fine:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre"
  }, "/\n  - DSC_001.jpg\n  - DSC_002.jpg\n  - ...\n")), (0,react_.mdx)("p", null, "while this one is not:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre"
  }, "/\n  - DSC_001.jpg\n  - DSC_002.jpg\n  - ...\n  - SecondFlight/\n    - DSC_101.jpg\n    - DSC_102.jpg\n    - ...\n")), (0,react_.mdx)("p", null, "We advise you use ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "CC Image Collection"), " as logical capture units: an acquisition, a flight, etc. You also want the collections to be immutable. Meaning if you want to add images to a CCImageCollection called ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "DroneCaptureWaterPlant - Flight A"), ", don\u2019t. Create a separate one called ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "DroneCaptureWaterPlant - Flight A - Addendum"), " where you will add the remaining images."), (0,react_.mdx)("p", null, "Data should be uploaded in a single reality data, with type ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "CCImageCollection"), "."));
}
;
MDXContent.isMDXComponent = true;
var tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "cc-image-collection",
    level: 2,
    title: "CC Image Collection",
    children: []
  }];
};
var frontMatter = {};
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/pages/ApiDocumentation/CCCS_CCImageCollection.tsx
/* eslint-disable import/no-webpack-loader-syntax */





function CCCS_CCImageCollection() {
  return /*#__PURE__*/_jsx(MDXProvider, {
    components: mdComponents,
    children: /*#__PURE__*/_jsx(Document, {})
  });
}

/***/ }),

/***/ 80885:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: default

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);
// EXTERNAL MODULE: external "@mdx-js/react"
var react_ = __webpack_require__(57425);
// EXTERNAL MODULE: ./src/components/mdx/documentation.tsx + 1 modules
var documentation = __webpack_require__(963);
// EXTERNAL MODULE: ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(83798);
// EXTERNAL MODULE: ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules
var objectWithoutProperties = __webpack_require__(31117);
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/documentation/apis/contextcapture-ccorientations.md


var _excluded = ["components"];
var __jsx = (external_react_default()).createElement;


var readingTime = {
  "text": "11 min read",
  "minutes": 10.8,
  "time": 648000,
  "words": 2160
};
/* @jsxRuntime classic */
/* @jsx mdx */

var layoutProps = {};
var MDXLayout = "wrapper";
function MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);
  return (0,react_.mdx)(MDXLayout, (0,esm_extends/* default */.Z)({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)("h2", {
    "id": "cc-orientations"
  }, "CC Orientations"), (0,react_.mdx)("p", null, (0,react_.mdx)("em", {
    parentName: "p"
  }, "CC Orientations"), " is an XML format that stores Images and Point clouds positioning information, for usage in ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling API"), " or ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "iTwin Capture"), " desktop applications."), (0,react_.mdx)("h1", {
    "id": "file-format"
  }, "File format"), (0,react_.mdx)("h2", {
    "id": "root-node"
  }, "Root node"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>BlocksExchange</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2.1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>BlocksExchange</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("p", null, "This is the node that will contain all the subsequent sections."), (0,react_.mdx)("h2", {
    "id": "spatial-reference-systems"
  }, "Spatial Reference Systems"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRS</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- SRS Identifier --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Id</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Id</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- User-friendly SRS name. --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>Lambert 93<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- The spatial reference system definition can be either a Well Known Text definition (e.g. WGS84), \"EPSG: \" or a PROJ.4 definition. --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Definition</span><span class=\"token punctuation\">></span></span>EPSG:2154<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Definition</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRS</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("p", null, "This node is used to provide the list of SRS used in the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "CC Orientations"), ". Multiple SRS can be defined here. ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "<Id>"), "s have to be integer."), (0,react_.mdx)("h2", {
    "id": "block"
  }, "Block"), (0,react_.mdx)("p", null, "The block is the main component of the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "CC Orientations"), ". We will split it in different section for easier understanding."), (0,react_.mdx)("h3", {
    "id": "base-information"
  }, "Base information"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Block</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- Block name and description are optional but recommended --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>My first CCOrientations<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Description</span><span class=\"token punctuation\">></span></span>This is my first CCOrientations<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Description</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- The type of block is optional. Supported types: Generic (default if not specified), Aerial, Nadir and Orbit. --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Type</span><span class=\"token punctuation\">></span></span>Nadir<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Type</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- Minmum and maximum viewing distance can be optionally provided with &lt;MinimumViewingDistance> and &lt;MaximumViewingDistance> tags --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MinimumViewingDistance</span><span class=\"token punctuation\">></span></span>150<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>MinimumViewingDistance</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MaximumViewingDistance</span><span class=\"token punctuation\">></span></span>500<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>MaximumViewingDistance</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- ID of the base SRS used in the block. By default, the spatial reference system is assumed to be a local Cartesian coordinate system. --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRSId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRSId</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Block</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("p", null, (0,react_.mdx)("em", {
    parentName: "p"
  }, "Name"), " and ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Description"), " are optional, but we recommend you use them for prettier import in ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), "."), (0,react_.mdx)("p", null, (0,react_.mdx)("em", {
    parentName: "p"
  }, "Type"), " is optional. If your acquisition corresponds to an aerial flight - that is Nadir+Oblique images - we recommend you use the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Aerial"), " type. If your acquisition consists only of nadir images, use the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Nadir"), " type. Finally, if you are orbiting around a structure - like a Telecom Tower, use the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Orbit"), " type."), (0,react_.mdx)("p", null, (0,react_.mdx)("em", {
    parentName: "p"
  }, "MinimumViewingDistance"), " and ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "MaximumViewingDistance"), " are used for more robust computations. They apply to all the images in the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "CC Orientations"), ". If you are using ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Nadir"), " block type, we strongly recommend you set these values based on the height of your flight."), (0,react_.mdx)("p", null, "Finally, ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "SRSId"), " should point to an existing id in the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "SpatialReferenceSystems"), " section."), (0,react_.mdx)("h3", {
    "id": "photogroups"
  }, "Photogroups"), (0,react_.mdx)("p", null, "A photogroup regroups images sharing the same optical properties - image dimensions, focal length, sensor size, distortion, etc. Multiple photogroups are allowed in a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "CC Orientations"), "."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photogroups</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- All photos taken using the same physical camera, with identical focal length and dimensions must be gathered in a photogroup. --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photogroup</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- Optional a different spatial reference system can be specified for each photogroup with the &lt;SRSId> tag. By default, the SRS of the block is assumed. --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRSId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRSId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- Optionally, a name with the &lt;Name> tag, and a description with a &lt;Description> tag. --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>Sony A5000 - 50mm<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Description</span><span class=\"token punctuation\">></span></span>Acquired on 2020-09-06<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Description</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- Image dimensions, in pixels. --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImageDimensions</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Width</span><span class=\"token punctuation\">></span></span>5456<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Width</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Height</span><span class=\"token punctuation\">></span></span>3632<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Height</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImageDimensions</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- Optional camera model type Perspective (default) or Fisheye --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>CameraModelType</span><span class=\"token punctuation\">></span></span>Perspective<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>CameraModelType</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- Optional camera model band Visible (default) or Thermal --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>CameraModelBand</span><span class=\"token punctuation\">></span></span>Visible<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>CameraModelBand</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- Optional multicamera rig index (no rig is used if this tag is unspecified). --></span>\n        <span class=\"token comment\">&lt;!-- &lt;Rig>1&lt;/Rig> --></span>\n        <span class=\"token comment\">&lt;!-- Sensor's largest dimension, in millimeters. --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SensorSize</span><span class=\"token punctuation\">></span></span>23.5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SensorSize</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- Focal length, in millimeters. This can be either the nominal specification or a closer estimate. --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>FocalLength</span><span class=\"token punctuation\">></span></span>50<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>FocalLength</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- CameraOrientation: XRightYDown (default), XRightYUp (more frequent in photogrammetry), XLeftYDown, XLeftYUp, XDownYRight, XDownYLeft, XUpYRight, XUpYLeft --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>CameraOrientation</span><span class=\"token punctuation\">></span></span>XRightYDown<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>CameraOrientation</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- Principal point, with respect to the sensor center. This field is optional: by default, the sensor center is used as an initial estimate of the principal point. --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PrincipalPoint</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- 2D image position of the principal point, in pixels. --></span>\n            <span class=\"token comment\">&lt;!-- The origin is the center of the upper-left image pixel, the x-axis is oriented to the right side of the image, and the y-axis is oriented to the bottom of the image. --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>2799.72836989663<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>1664.19084530151<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PrincipalPoint</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- Lens distortion coefficients. This field is optional: by default, no distortion is assumed as an initial estimate. --></span>\n        <span class=\"token comment\">&lt;!-- Distortion coefficients correspond to the classical Brown's distortion model, as described in http://en.wikipedia.org/wiki/Distortion_(optics). --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Distortion</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>K1</span><span class=\"token punctuation\">></span></span>0.091784043461384<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>K1</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>K2</span><span class=\"token punctuation\">></span></span>-0.389773692160792<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>K2</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>K3</span><span class=\"token punctuation\">></span></span>-0.164530007624487<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>K3</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>P1</span><span class=\"token punctuation\">></span></span>0.00338559469641398<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>P1</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>P2</span><span class=\"token punctuation\">></span></span>0.00195577545434898<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>P2</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Distortion</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- Fisheye focal matrix used only for the camera model type Fisheye. --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>FisheyeFocalMatrix</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_00</span><span class=\"token punctuation\">></span></span>1960<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_00</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_01</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_01</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_10</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_10</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_11</span><span class=\"token punctuation\">></span></span>1960<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_11</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>FisheyeFocalMatrix</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- Fisheye distortion coefficients used only for the camera model type Fisheye. --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>FisheyeDistortion</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>P0</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>P0</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>P1</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>P1</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>P2</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>P2</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>P3</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>P3</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>P4</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>P4</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>FisheyeDistortion</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- Multiple photos in a photogroup --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- The ID of a photograph must be unique over the whole block (in other words, even across other photogroups). If you are using Rig, we use this id for photo order--></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Id</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Id</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- Path of the image based on its CCImageCollection id --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>3e4742f9-87fc-4bfa-8ee3-6103555f325f/DSC03885.jpg<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- Optional path of the image mask based on its CCImageCollection id --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MaskPath</span><span class=\"token punctuation\">></span></span>7f7a664f-e11b-4658-84fa-5ada1b0ee7c1/DSC03885_msk.jpg<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>MaskPath</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- Optional component Id: 1 is the main component (default), 0 is no component. Photos with incomplete pose cannot belong to the main component --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Component</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Component</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- Exterior orientation of the camera, as estimated by navigation devices or aerotriangulation. This field is optional. --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Pose</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token comment\">&lt;!-- 3D rotation of the camera in the spatial reference system defined above. --></span>\n                <span class=\"token comment\">&lt;!-- It defines the rotation matrix transforming world coordinates (in the specified SRS)--></span>\n                <span class=\"token comment\">&lt;!-- into camera coordinates (with axes defined by the CameraOrientation of the photogroup). --></span>\n                <span class=\"token comment\">&lt;!-- The rotation is optional: the pose can be limited to the 3D position of the camera center (e.g. when GPS position only is available). --></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Rotation</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token comment\">&lt;!-- A 3x3 matrix, using the &lt;M_ij> tags, where M_ij denotes the coefficient of the (i+1)th row and the (j+1)th column of the rotation matrix. --></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_00</span><span class=\"token punctuation\">></span></span>-0.9999982912233401<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_00</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_01</span><span class=\"token punctuation\">></span></span>-0.001636319085375301<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_01</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_02</span><span class=\"token punctuation\">></span></span>-0.0008602425863163225<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_02</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_10</span><span class=\"token punctuation\">></span></span>-0.001631068695467463<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_10</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_11</span><span class=\"token punctuation\">></span></span>0.9999802528616577<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_11</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_12</span><span class=\"token punctuation\">></span></span>-0.00606906089589293<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_12</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_20</span><span class=\"token punctuation\">></span></span>0.0008701565192966738<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_20</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_21</span><span class=\"token punctuation\">></span></span>-0.006067647409696231<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_21</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_22</span><span class=\"token punctuation\">></span></span>-0.9999812130648239<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_22</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Rotation</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token comment\">&lt;!-- 3D position of the camera center in the spatial reference system defined above. --></span>\n                <span class=\"token comment\">&lt;!-- Depending on the SRS, x/y may stand either for longitude/latitude, for map projection coordinates, or for something else. --></span>\n                <span class=\"token comment\">&lt;!-- Depending on the SRS, z may stand either for a geoid height, for an orthometric height, or for something else. --></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Center</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>651999.7159189156<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>6863073.633923346<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>z</span><span class=\"token punctuation\">></span></span>1318.897690166719<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>z</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Center</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Pose</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- Optional depth information can be provided with &lt;NearDepth>, &lt;MedianDepth>, and &lt;FarDepth> tags --></span>\n            <span class=\"token comment\">&lt;!-- Optional Exif data (each exif data property is optional) --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ExifData</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImageDimensions</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Width</span><span class=\"token punctuation\">></span></span>5456<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Width</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Height</span><span class=\"token punctuation\">></span></span>3632<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Height</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImageDimensions</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PixelDimensions</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Width</span><span class=\"token punctuation\">></span></span>0.02<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Width</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Height</span><span class=\"token punctuation\">></span></span>0.02<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Height</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PixelDimensions</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>GPS</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Latitude</span><span class=\"token punctuation\">></span></span>45.5686684<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Latitude</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Longitude</span><span class=\"token punctuation\">></span></span>2.6551104<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Longitude</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Altitude</span><span class=\"token punctuation\">></span></span>1589.5469<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Altitude</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>GPS</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>FocalLength</span><span class=\"token punctuation\">></span></span>50<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>FocalLength</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>FocalLength35mmEq</span><span class=\"token punctuation\">></span></span>75<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>FocalLength35mmEq</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Make</span><span class=\"token punctuation\">></span></span>SONY<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Make</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Model</span><span class=\"token punctuation\">></span></span>ILCE-5000<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Model</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LensModel</span><span class=\"token punctuation\">></span></span>E 50mm F1.8 OSS<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LensModel</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DateTimeOriginal</span><span class=\"token punctuation\">></span></span>2020-04-29T06:40:26<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DateTimeOriginal</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ExifData</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photogroup</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photogroups</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("p", null, "Some precisions:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("em", {
    parentName: "li"
  }, "FocalLength"), " is the nominal or closer estimate of the focal length in millimeters. ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "SensorSize"), " is the largest dimension (usually the width) of the sensor in millimeters."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("em", {
    parentName: "li"
  }, "CameraOrientation"), " describes the camera. For more information on this topic, on rotations and distortions, see ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://docs.bentley.com/LiveContent/web/ContextCapture%20Help-v18/en/GUID-59E6CC36-F349-4DE0-A563-FFC47296A624.html"
  }, "BlocksExchange XML/XMZ format"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "If you are using the Rig option: this option enforce a rigid registration between corresponding images in photogroup. Images correspondence is based on photo ids: if you have two photogroups with 3 images each, numbered 0\u20131-2 and 3\u20134-5 that are rigged, 0 goes with 3, 1 with 4 and 2 with 5.")), (0,react_.mdx)("p", null, "The simplest photogroup you can create will look like this:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photogroup</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>My Photogroup<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImageDimensions</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Width</span><span class=\"token punctuation\">></span></span>5456<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Width</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Height</span><span class=\"token punctuation\">></span></span>3632<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Height</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImageDimensions</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>CameraModelType</span><span class=\"token punctuation\">></span></span>Perspective<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>CameraModelType</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>CameraModelBand</span><span class=\"token punctuation\">></span></span>Visible<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>CameraModelBand</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>FocalLength</span><span class=\"token punctuation\">></span></span>50<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>FocalLength</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SensorSize</span><span class=\"token punctuation\">></span></span>23.5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SensorSize</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>CameraOrientation</span><span class=\"token punctuation\">></span></span>XRightYDown<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>CameraOrientation</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Id</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Id</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>3e4742f9-87fc-4bfa-8ee3-6103555f325f/DSC03885.JPG<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Component</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Component</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Id</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Id</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>3e4742f9-87fc-4bfa-8ee3-6103555f325f/DSC03886.JPG<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Component</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Component</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Id</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Id</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>3e4742f9-87fc-4bfa-8ee3-6103555f325f/DSC03887.JPG<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Component</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Component</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photogroup</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("p", null, "Across photogroups, you need at least 3 images in order to process a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "CC Orientations"), " in ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), "."), (0,react_.mdx)("p", null, "As of Reality Modeling Update 19.1, it is possible to use simplified CCOrientations :"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photogroup</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>My Photogroup<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ManualOpticalParams</span><span class=\"token punctuation\">></span></span>false<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ManualOpticalParams</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ManualPose</span><span class=\"token punctuation\">></span></span>false<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ManualPose</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Id</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Id</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>3e4742f9-87fc-4bfa-8ee3-6103555f325f/DSC03885.JPG<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Component</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Component</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Id</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Id</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>3e4742f9-87fc-4bfa-8ee3-6103555f325f/DSC03886.JPG<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Component</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Component</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Id</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Id</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>3e4742f9-87fc-4bfa-8ee3-6103555f325f/DSC03887.JPG<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Component</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Component</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photogroup</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("p", null, "In this example, we are using two new nodes :"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("em", {
    parentName: "li"
  }, "ManualPose"), " : optional, defaulted to ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "true"), ", when set to ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "false"), ", the ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Pose"), " node in the ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Photo"), " node is ignored and ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Reality Modeling"), " will automatically fill in the information from the photos exifs."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("em", {
    parentName: "li"
  }, "ManualOpticalParams"), " : optional, defaulted to ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "true"), ", when set to ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "false"), ", the optical parameters will be ignored and ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Reality Modeling"), " will automatically detect the parameters (ignored parameters are : ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "ImageDimensions"), ", ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "CameraModelBand"), ", ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "SensorSize"), ", ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "CameraModelType"), ", ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "FocalLength"), ", ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "CameraOrientation"), ", ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "PrincipalPoint"), ", ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Distortion"), ", ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "FisheyeFocalMatrix"), ", ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "FisheyeDistortion"), ").")), (0,react_.mdx)("p", null, "Note: the service will not modify the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Photogroup"), " structure, it is your responsibility to verify that photos share the same optical parameters when using ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "ManualOpticalParams"), "."), (0,react_.mdx)("p", null, "You may also give a very simplified CCOrientation using ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "BulkPhotos"), " instead of ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Photogroup"), " :"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Block</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>Block_1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRSId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRSId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>BulkPhotos</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Id</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Id</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>3ddee08c-01e8-44a5-8e56-3879109f6728/_3100730.jpg<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Id</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Id</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>3ddee08c-01e8-44a5-8e56-3879109f6728/_3100731.jpg<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Id</span><span class=\"token punctuation\">></span></span>8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Id</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>3ddee08c-01e8-44a5-8e56-3879109f6728/_3100738.jpg<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>BulkPhotos</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ControlPoints</span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PositioningConstraints</span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Block</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("p", null, "In this case, ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), " will infer all necessary parameters and manage the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Photogroup"), " structure itself."), (0,react_.mdx)("h3", {
    "id": "control-points"
  }, "Control points"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ControlPoints</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- Optionally, a different spatial reference system can be specified with the &lt;SRSId> tag.--></span>\n    <span class=\"token comment\">&lt;!-- By default, the SRS of the block is assumed. --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ControlPoint</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>Control point #1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- Optionally, a different spatial reference system can be specified for each control point with the &lt;SRSId> tag.--></span>\n        <span class=\"token comment\">&lt;!-- By default, the SRS of the control points container is assumed. --></span>\n        <span class=\"token comment\">&lt;!-- If specified, a control point can be Full (default), Horizontal or Vertical --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Category</span><span class=\"token punctuation\">></span></span>Full<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Category</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- 3D position of the control point in the active spatial reference system. --></span>\n        <span class=\"token comment\">&lt;!-- Depending on the SRS, x/y may stand either for longitude/latitude, for map projection coordinates, or for something else. --></span>\n        <span class=\"token comment\">&lt;!-- Depending on the SRS, z may stand either for a geoid height, for an orthometric height, or for something else. --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>652788.0525588237<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- Not needed if Category:Vertical --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>6863015.362218254<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- Not needed if Category:Vertical --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>z</span><span class=\"token punctuation\">></span></span>78.07000000122935<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>z</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- Not needed if Category:Horizontal --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- Optionally, a control point may be a check point (default: false)--></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>CheckPoint</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>CheckPoint</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- If specified, a control point may have accuracies --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>HorizontalAccuracy</span><span class=\"token punctuation\">></span></span>0.01<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>HorizontalAccuracy</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- Not needed if Category:Vertical --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VerticalAccuracy</span><span class=\"token punctuation\">></span></span>0.10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VerticalAccuracy</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- Not needed if Category:Horizontal --></span>\n\n        <span class=\"token comment\">&lt;!-- Image measurements --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Measurement</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- ID of the photo where the measurement is taken. The measurements of a control point must have different photo IDs. --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoId</span><span class=\"token punctuation\">></span></span>151<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- 2D image position of the measurement, in pixels. --></span>\n            <span class=\"token comment\">&lt;!-- The origin is the center of the upper-left image pixel, the x-axis is oriented to the right side of the image, and the y-axis is oriented to the bottom of the image. --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>7270.31<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>6599.44<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Measurement</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Measurement</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoId</span><span class=\"token punctuation\">></span></span>158<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>1496.69<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>6589.94<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Measurement</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Measurement</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoId</span><span class=\"token punctuation\">></span></span>2104<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>4820.34<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>5631.15<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Measurement</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ControlPoint</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ControlPoints</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("p", null, (0,react_.mdx)("em", {
    parentName: "p"
  }, "ControlPoints"), " are not mandatory. They are used to register the images in a specific SRS if needed, or to check the quality of the calibration."), (0,react_.mdx)("h3", {
    "id": "tiepoints"
  }, "Tiepoints"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TiePoints</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- Optionally, a different spatial reference system can be specified with the &lt;SRSId> tag. By default, the SRS of the block is assumed. --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TiePoint</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>Left window corner<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- Optional, recommended for User Tie Points --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Description</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Description</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- Description field is only used for internal metadata, do not modify it --></span>\n        <span class=\"token comment\">&lt;!-- Optionally, a different spatial reference system can be specified for each tie point with the &lt;SRSId> tag. By default, the SRS of the tie points container is assumed. --></span>\n        <span class=\"token comment\">&lt;!-- Optional id (required for a User tie point if it is referenced in a positioning constraint). --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Color</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- Optional, value between 0 and 1 --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Red</span><span class=\"token punctuation\">></span></span>0.59<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Red</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Green</span><span class=\"token punctuation\">></span></span>1.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Green</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Blue</span><span class=\"token punctuation\">></span></span>0.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Blue</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Color</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- If specified, a tie point may be a check point (default: false)--></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>CheckPoint</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>CheckPoint</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- Optional position of the tie point in the active spatial reference system --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>652119.8871409688<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>6863304.305716386<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>z</span><span class=\"token punctuation\">></span></span>87.79328384995461<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>z</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Measurement</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- Optional measurement type User or Automatic (default) --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Type</span><span class=\"token punctuation\">></span></span>User<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Type</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoId</span><span class=\"token punctuation\">></span></span>146<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- 2D image position of the measurement, in pixels.--></span>\n      <span class=\"token comment\">&lt;!-- The origin is the center of the upper-left image pixel, the x-axis is oriented to the right side of the image, and the y-axis is oriented to the bottom of the image. --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>3324.26001<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>9930.269531<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Measurement</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>TiePoint</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>TiePoints</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("p", null, "Tie points can be stored in an external file:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TiePoints</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>TiePoints.xml<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>TiePoint</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("p", null, "With ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "TiePoints.xml"), " looking like:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TiePoint</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>-34.4750012078745<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>1.15274149210525<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>z</span><span class=\"token punctuation\">></span></span>-8.18177676215297<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>z</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Color</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Red</span><span class=\"token punctuation\">></span></span>0.501960784313725<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Red</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Green</span><span class=\"token punctuation\">></span></span>0.498039215686275<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Green</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Blue</span><span class=\"token punctuation\">></span></span>0.450980392156863<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Blue</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Color</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Measurement</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>1660.05517578125<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>3084.59497070313<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Measurement</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Measurement</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>1346.03332519531<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>3067.69970703125<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Measurement</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Measurement</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoId</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>1366.38330078125<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>2920.05126953125<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Measurement</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>TiePoint</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TiePoint</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>-28.2683141902494<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>0.235531157377353<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>z</span><span class=\"token punctuation\">></span></span>-8.31343880296754<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>z</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Color</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Red</span><span class=\"token punctuation\">></span></span>0.584313725490196<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Red</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Green</span><span class=\"token punctuation\">></span></span>0.592156862745098<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Green</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Blue</span><span class=\"token punctuation\">></span></span>0.513725490196078<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Blue</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Color</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Measurement</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>3169.814453125<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>3148.72875976563<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Measurement</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Measurement</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>2818.83056640625<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>3156.552734375<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Measurement</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Measurement</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoId</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>2755.80639648438<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>3047.31640625<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Measurement</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Measurement</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoId</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>2708.74145507813<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>3092.60327148438<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Measurement</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>TiePoint</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("h2", {
    "id": "constraints"
  }, "Constraints"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PositioningConstraints</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>OriginConstraint</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- Maximum one Origin constraint --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>O</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>O</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- Tiepoint id --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>OriginConstraint</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ScaleConstraint</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- Multiple allowed --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>A</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>A</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>B</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>B</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DistanceAB</span><span class=\"token punctuation\">></span></span>56.350<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DistanceAB</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ScaleConstraint</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AxisConstraint</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- Maximum one Axis or Orientation constraint --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>A</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>A</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>B</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>B</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AxisAB</span><span class=\"token punctuation\">></span></span>z<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AxisAB</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- x, y, or z --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AxisConstraint</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>OrientationConstraint</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- Maximum one Orientation or Axis constraint --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>A</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>A</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>B</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>B</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>C</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>C</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AxisAB</span><span class=\"token punctuation\">></span></span>z<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AxisAB</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- x, y or z --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AxisSideC</span><span class=\"token punctuation\">></span></span>upperX<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AxisSideC</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- lowerX, upperX, lowerY, upperY, lowerZ, or upperZ --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>OrientationConstraint</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PositioningConstraints</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("p", null, "Positioning constraints are optional."), (0,react_.mdx)("h1", {
    "id": "upload-cc-orientations-on-reality-management-apipwcs"
  }, "Upload CC Orientations on ", (0,react_.mdx)("em", {
    parentName: "h1"
  }, "Reality Management API/PWCS")), (0,react_.mdx)("p", null, "Save the file as ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Orientations.xml"), ". For lower space usage, zip it and name it as ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Orientations.xmlz"), ". Tie points file can also be zipped. We recommend the tie points file be named ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "CCOrientations - Tiepoints.xml"), " or ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "CCOrientations - Tiepoints.xmlz"), ". Once the files are saved, create a Reality Data using the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Management API"), " with reality data type ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "CCOrientations"), ", and upload the file(s) to the root of the reality data."));
}
;
MDXContent.isMDXComponent = true;
var tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "cc-orientations",
    level: 2,
    title: "CC Orientations",
    children: []
  }, {
    id: "root-node",
    level: 2,
    title: "Root node",
    children: []
  }, {
    id: "spatial-reference-systems",
    level: 2,
    title: "Spatial Reference Systems",
    children: []
  }, {
    id: "block",
    level: 2,
    title: "Block",
    children: [{
      id: "base-information",
      level: 3,
      title: "Base information",
      children: []
    }, {
      id: "photogroups",
      level: 3,
      title: "Photogroups",
      children: []
    }, {
      id: "control-points",
      level: 3,
      title: "Control points",
      children: []
    }, {
      id: "tiepoints",
      level: 3,
      title: "Tiepoints",
      children: []
    }]
  }, {
    id: "constraints",
    level: 2,
    title: "Constraints",
    children: []
  }];
};
var frontMatter = {};
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/pages/ApiDocumentation/CCCS_CCOrientations.tsx
/* eslint-disable import/no-webpack-loader-syntax */





function CCCS_CCOrientations() {
  return /*#__PURE__*/_jsx(MDXProvider, {
    components: mdComponents,
    children: /*#__PURE__*/_jsx(Document, {})
  });
}

/***/ }),

/***/ 25654:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: default

// EXTERNAL MODULE: ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(83798);
// EXTERNAL MODULE: ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules
var objectWithoutProperties = __webpack_require__(31117);
// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);
// EXTERNAL MODULE: external "@mdx-js/react"
var react_ = __webpack_require__(57425);
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/documentation/apis/visualization-calculating-visualization-session-hours.md


var _excluded = ["components"];
var __jsx = (external_react_default()).createElement;


var readingTime = {
  "text": "3 min read",
  "minutes": 2.65,
  "time": 159000,
  "words": 530
};
/* @jsxRuntime classic */
/* @jsx mdx */

var layoutProps = {};
var MDXLayout = "wrapper";
function MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);
  return (0,react_.mdx)(MDXLayout, (0,esm_extends/* default */.Z)({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)("h1", {
    "id": "calculating-visualization-session-hours"
  }, "Calculating Visualization Session Hours"), (0,react_.mdx)("p", null, "The Visualization service uses session time usage metrics to calculate service consumption. A session is a group of requests made by a unique frontend instance within a given time frame. A new session is created each time a user starts your application to view an iModel and the initial request is made. Sessions are closed after 30 minutes of inactivity. The 30 minutes of inactivity before the session is closed do not count toward your usage."), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Note:"), " An individual user can generate multiple sessions in a single day by running your application at different times or running multiple instances of your application simultaneously."), (0,react_.mdx)("p", null, "The following scenarios provide some examples on how usage is calculated."), (0,react_.mdx)("h2", {
    "id": "scenario-1--a-single-session-with-no-gaps-in-requests"
  }, "Scenario 1 \u2013 A single session with no gaps in requests"), (0,react_.mdx)("img", {
    className: "documentation-image-medium",
    src: "/unreal-docs-site/static/images/visualization-calculating-visualization-session-hours/scenario-1-a-single-session-with-no-gaps-in-requests.png",
    alt: "The diagram showing scenario of a single session with no gaps in requests"
  }), (0,react_.mdx)("h4", {
    "id": "result"
  }, "Result"), (0,react_.mdx)("p", null, "The application was open for five minutes for one session. There were no gaps between the first request received and the last request processed."), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Usage calculation:"), " 5 minutes \u2013 session expires 30 minutes after the last request and non-activity after the last request is not counted toward usage."), (0,react_.mdx)("h2", {
    "id": "scenario-2--a-single-session-with-a-short-gap-in-requests"
  }, "Scenario 2 \u2013 A single session with a short gap in requests"), (0,react_.mdx)("img", {
    className: "documentation-image-medium",
    src: "/unreal-docs-site/static/images/visualization-calculating-visualization-session-hours/scenario-2-a-single-session-with-a-short-gap-in-requests.png",
    alt: "The diagram showing scenario of a single session with a short gap in requests"
  }), (0,react_.mdx)("h4", {
    "id": "result-1"
  }, "Result"), (0,react_.mdx)("p", null, "The application was open for 35 minutes for one session. The user was inactive for less than 30 minutes."), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Usage calculation:"), " 35 minutes, 12:00\u201312:35 \u2013 The user was inactive for less than 30 minutes, so the session stayed open."), (0,react_.mdx)("h2", {
    "id": "scenario-3--multiple-sessions-with-a-long-break"
  }, "Scenario 3 \u2013 Multiple sessions with a long break"), (0,react_.mdx)("img", {
    className: "documentation-image-medium",
    src: "/unreal-docs-site/static/images/visualization-calculating-visualization-session-hours/scenario-3-multiple-sessions-with-a-long-break.png",
    alt: "The diagram showing scenario of multiple sessions with a long break"
  }), (0,react_.mdx)("h4", {
    "id": "result-2"
  }, "Result"), (0,react_.mdx)("p", null, "The application was open for 10 minutes over 2 sessions. The user was inactive for greater than 30 minutes."), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Usage calculation:"), " 10 minutes (12:00\u201312:05 and then again 1:00\u20131:05) \u2013 The first session was closed because the inactivity was greater than 30 minutes. A second session was opened when the user resumed working."), (0,react_.mdx)("h2", {
    "id": "scenario-4--viewing-different-imodels-simultaneously"
  }, "Scenario 4 \u2013 Viewing different iModels simultaneously"), (0,react_.mdx)("img", {
    className: "documentation-image-medium",
    src: "/unreal-docs-site/static/images/visualization-calculating-visualization-session-hours/scenario-4-viewing-different-imodels-simultaneously.png",
    alt: "The diagram showing scenario of viewing different iModels simultaneously"
  }), (0,react_.mdx)("h4", {
    "id": "result-3"
  }, "Result"), (0,react_.mdx)("p", null, "Each instance of the application was open for 5 minutes, each with their own session. There were no gaps between the first request and the last request on either application."), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Usage calculation:"), " 10 minutes (iModel XYZ for 5 minutes and iModel ABC for 5 minutes) \u2013 Both sessions expired 30 minutes after the last request and non-activity after the last request is not counted toward usage."), (0,react_.mdx)("h2", {
    "id": "scenario-5--viewing-the-same-imodel-in-different-browser-tabs"
  }, "Scenario 5 \u2013 Viewing the same iModel in different browser tabs"), (0,react_.mdx)("img", {
    className: "documentation-image-medium",
    src: "/unreal-docs-site/static/images/visualization-calculating-visualization-session-hours/scenario-5-viewing-the-same-imodel-in-different-browser-tabs.png",
    alt: "The diagram showing scenario of viewing the same iModel in different browser tabs"
  }), (0,react_.mdx)("h4", {
    "id": "result-4"
  }, "Result"), (0,react_.mdx)("p", null, "Each instance of the application was open for 5 minutes, each with their own session. There were no gaps between the first request and the last request on either application."), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Usage calculation:"), " 10 minutes (Tab 1 for 5 minutes and Tab 2 for 5 minutes) - Both sessions expired 30 minutes after the last request and non-activity after the last request is not counted toward usage."));
}
;
MDXContent.isMDXComponent = true;
var tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "scenario-1--a-single-session-with-no-gaps-in-requests",
    level: 2,
    title: "Scenario 1 – A single session with no gaps in requests",
    children: []
  }, {
    id: "scenario-2--a-single-session-with-a-short-gap-in-requests",
    level: 2,
    title: "Scenario 2 – A single session with a short gap in requests",
    children: []
  }, {
    id: "scenario-3--multiple-sessions-with-a-long-break",
    level: 2,
    title: "Scenario 3 – Multiple sessions with a long break",
    children: []
  }, {
    id: "scenario-4--viewing-different-imodels-simultaneously",
    level: 2,
    title: "Scenario 4 – Viewing different iModels simultaneously",
    children: []
  }, {
    id: "scenario-5--viewing-the-same-imodel-in-different-browser-tabs",
    level: 2,
    title: "Scenario 5 – Viewing the same iModel in different browser tabs",
    children: []
  }];
};
var frontMatter = {};
// EXTERNAL MODULE: ./src/components/mdx/documentation.tsx + 1 modules
var documentation = __webpack_require__(963);
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/pages/ApiDocumentation/CalculatingVisualizationSessionHours.tsx
/* eslint-disable import/no-webpack-loader-syntax */




function CalculatingVisualizationSessionHours() {
  return /*#__PURE__*/_jsx(MDXProvider, {
    components: mdComponents,
    children: /*#__PURE__*/_jsx(Document, {})
  });
}

/***/ }),

/***/ 96460:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: default

// EXTERNAL MODULE: ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(83798);
// EXTERNAL MODULE: ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules
var objectWithoutProperties = __webpack_require__(31117);
// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);
// EXTERNAL MODULE: external "@mdx-js/react"
var react_ = __webpack_require__(57425);
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/documentation/apis/realitydata-details.md


var _excluded = ["components"];
var __jsx = (external_react_default()).createElement;


var readingTime = {
  "text": "9 min read",
  "minutes": 8.485,
  "time": 509100,
  "words": 1697
};
/* @jsxRuntime classic */
/* @jsx mdx */

var layoutProps = {};
var MDXLayout = "wrapper";
function MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);
  return (0,react_.mdx)(MDXLayout, (0,esm_extends/* default */.Z)({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)("h1", {
    "id": "realitydata-properties"
  }, "RealityData Properties"), (0,react_.mdx)("p", null, "This page describes the RealityData properties in detail. Below is a list of properties, their type, along with their description. More so, some properties below have additional information about them."), (0,react_.mdx)("p", null, "RealityData must use the required properties listed below."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "displayName")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "classification")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "type"))), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Property"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Type"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Required?"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Read-only?"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Description"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "id"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string (guid)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Generated"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Read-only"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Guid Identifier of the Reality Data. This identifier is assigned by the service at the creation of the reality data. It is also unique.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "displayName"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Required"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "The name of the Reality Data. This property may not contain any control sequence such as a URL or code.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "dataset"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Optional"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "This field can be used to define a loose grouping of reality data. This property may not contain any control sequence such as a URL or code.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "group"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Optional"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "This field can also be used to define a second level of grouping.This property may not contain any control sequence such as a URL or code.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "description"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Optional"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "A textual description of the reality data. This property may not contain any control sequence such as a URL or code.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "dataCenterLocation"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Generated"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Read-only"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Identifies the Azure Data Center used. for details about Data Center refer to the DataCenterLocation section below.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "rootDocument"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Optional"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Used to indicate the root document of the reality data. The root document can be in a subfolder and is then specified. e.g. \u201CTile_Root.json\u201D or \u201CFolder1/SubFolder1/File.json\u201D are valid values. The service reserves the right to validate the existence of the indicated file.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "size"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "integer"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Generated"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Read-only"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "The size of the reality data in Kilobytes. This size can be temporarily not up to date after a change, see Authoring and Size section below.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "authoring"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "boolean"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Optional"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "A boolean value that indicates if data is being created or uploaded. See Authoring section for details.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "classification"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Required"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Specific value constrained field that indicates the nature of the reality data. See Classification and Type section for details.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "type"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Required"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "A key indicating the format of the data. See Type section below about registered types and more details.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "acquisition"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "object"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Optional"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Provides information regarding the acquisition, such as dates and acquirer used. See Acquisition section below.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "extent"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "object"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Optional"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "contains the rectangular area on the Earth which encloses the reality data. See Extent section below.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "accessControl"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Optional (Defaults to Organization)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "A flag indicating the visibility of the reality data. Defaults to Organization. See AccessControl section for more details.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "modifiedDateTime"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string(date)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Generated"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Read-only"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Read-Only. ISO-8601 compliant time (UTC) of last modification of the reality data. e.g. \u201C2017\u201305\u201310T13:43:03Z\u201D")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "lastAccessedDateTime"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string(date)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Generated"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Read-only"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Read-Only. ISO-8601 compliant time (UTC) of last access of the reality data. e.g. \u201C2017\u201305\u201310T13:43:03Z\u201D")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "createdDateTime"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string(date)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Generated"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Read-only"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Read-Only. ISO-8601 compliant time (UTC) of the creation of the reality data. e.g. \u201C2017\u201305\u201310T13:43:03Z\u201D")))), (0,react_.mdx)("h3", {
    "id": "accesscontrol"
  }, "AccessControl"), (0,react_.mdx)("p", null, "To each reality data is associated an AccessControl property which can take one of four values that indicate who can use the data, explained below."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Public"), ": Indicates anyone, even users external to an organization can use the data."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Organization"), ": Indicates any member of the organization the data belongs to can use the data."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Project"), ": Indicates data can only be used as part of a project."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Private"), ": Only the owner can use the data.")), (0,react_.mdx)("h3", {
    "id": "authoring"
  }, "Authoring"), (0,react_.mdx)("p", null, "The Authoring property value is not controlled by the RealityData API, it is left to be managed by the application. The value also does not change the behavior of the API. The purpose of this property is to show if new model data is being uploaded to the RealityData. This is particularly useful when a RealityData is shared or possibly managed by multiple users. It is up to the creator of the application to implement behavior within the application that uses the Authoring property value."), (0,react_.mdx)("h3", {
    "id": "classification-and-types"
  }, "Classification and Types"), (0,react_.mdx)("h4", {
    "id": "classification"
  }, "Classification"), (0,react_.mdx)("p", null, "While Classification defines the nature of the RealityData, it is related to the Type property."), (0,react_.mdx)("p", null, "The following values are currently supported:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Terrain"), ": Data is a representation of the terrain."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Imagery"), ": Data is vertical, satellite or orthophoto imagery."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Pinned"), ": Any non-geographic data that may be pinned to a location on Earth."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Model"), ": Most common classification. Data is a modelisation of the a real world object or feature."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Undefined"), ": For non-reality data used as input for reality data creation.")), (0,react_.mdx)("h4", {
    "id": "types"
  }, "Types"), (0,react_.mdx)("p", null, "The Type property of the Reality Data indicates the format of the data contained in a reality data. Although the Type field is a free string some specific values are reserved."), (0,react_.mdx)("p", null, "The following are the reserved keywords:"), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Type"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Display Type"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Classification"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "iTwin.js Ready"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Cesium3DTiles"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Cesium 3D Tiles"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Yes")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "PNTS"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Cesium 3D Point Cloud"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Yes")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OPC"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Web Ready Orbit Point Cloud"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Yes")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "RealityMesh3DTiles"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Web Ready 3D Scalable Mesh"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Yes")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Terrain3DTiles"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Web Ready Terrain Scalable Mesh"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Yes")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "3MX"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Reality Modeling 3MX"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "3SM"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "3D Scalable Mesh"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "CCCloudProject"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Reality Modeling Cloud Project"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "CCImageCollection"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Reality Modeling Image Collection"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "CCOrientations"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Reality Modeling Orientations"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextCaptureInputs"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Reality Modeling Inputs"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Context Detector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Context Scene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "DAE"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Collada"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "DGN"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Bentley DGN"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "DSM"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Digital Surface Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "FBX"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Autodesk FBX"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "GLB"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Graphics Language Binary"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "GLTF"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Graphics Language Transmission Format"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "KML"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Google Earth KML"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "LAS"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "LAS Point Cloud"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "LAZ"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "LAZ Point Cloud"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "LOD"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "LOD Tree"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "LodTree"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OpenCities Planner LodTree"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OBJ"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Wavefront OBJ"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OMI"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Multiresolution Image"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Imagery"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OMR"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Mapping Resource"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Orthophoto"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Imagery"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Imagery"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OrthophotoDSM"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Orthophoto and DSM"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Imagery"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OSGB"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OpenSceneGraph Binary"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OVF"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Vector File"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OVT"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Tiled Vector File"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "PLY"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Polygon File Format"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "PointCloud"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Pointools POD"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "S3C"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Smart3D Capture"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ScanCollection"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Reality Modeling Scan Collection"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "SHP"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ESRI Shapefile"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "SLPK"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Scene Layer Package (SPLK)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "SpaceEyes3D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "SpaceEyes3D Builder"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "STL"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Stereo Lithography"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "TSM"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Terrain Scalable Mesh"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Unstructured"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Unstructured Data"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })))), (0,react_.mdx)("p", null, "Other types are commonly used that clearly indicate the type. For example tif, jpg, pdf can be used and the intended format is clear. Most of the time the format clearly imposes the Classification. Point Clouds, Web Ready Scalable mesh 3MX are necessarily Model data since they are modelisation of the real world. On the other hand, some format can be of different classification. For example the tif format supports the storage of Terrain data when the pixel is elevation data or Imagery for satellite data. Likewise a jpg file can represent an orthophoto (Imagery) or be an oblique picture of a feature (a neighborhood, people,\u2026) then these are to be classified as Pinned data. Similarly, a pdf document could be a written document (Pinned) or a Map (Model)."), (0,react_.mdx)("h3", {
    "id": "datacenterlocation"
  }, "DataCenterLocation"), (0,react_.mdx)("p", null, "DataCenterLocation represents a data center location. The RealityData API supports many different data location geographically located at different places. Usually, the data center location is the same as the CONNECT Project in which the reality data is created."), (0,react_.mdx)("p", null, "Data center locations used by RealityData API are :"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "East US")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "North Europe")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Southeast Asia")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Japan East")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "UK South")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Australia East"))), (0,react_.mdx)("h3", {
    "id": "acquisition"
  }, "Acquisition"), (0,react_.mdx)("p", null, "The Acquisition object contains the ISO-8601 compliant start time and end time (UTC) of data acquisition, as well as the Acquirer. The Acquirer is a text indicating by whom or what instance or process has acquired the data. See example below:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token property\">\"acquisition\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"startDateTime\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2021-05-12T20:03:12Z\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"endDateTime\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2021-05-15T05:07:18Z\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"acquirer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Data Acquisition Inc.\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n"
    }
  })), (0,react_.mdx)("h3", {
    "id": "extent"
  }, "Extent"), (0,react_.mdx)("p", null, "The Extent contains the rectangular area on the Earth which encloses the reality data. Defined by the most southwestern point and the most northeastern point. The latitude and longitude types are ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "double"), ". See example below:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token property\">\"extent\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token property\">\"southWest\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token property\">\"latitude\"</span><span class=\"token operator\">:</span> <span class=\"token number\">50.1171</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token property\">\"longitude\"</span><span class=\"token operator\">:</span> <span class=\"token number\">-122.9543</span>\n              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n              <span class=\"token property\">\"northEast\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token property\">\"latitude\"</span><span class=\"token operator\">:</span> <span class=\"token number\">50.1172</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token property\">\"longitude\"</span><span class=\"token operator\">:</span> <span class=\"token number\">-122.9543</span>\n              <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n"
    }
  })), (0,react_.mdx)("h3", {
    "id": "size"
  }, "Size"), (0,react_.mdx)("p", null, "After the model data is uploaded successfully to the RealityData, whether due to the creation or a modification of the RealityData, the Size property is then scheduled to be recalculated. This process can take a few minutes, so the Size value might not be accurate immediately after the upload is complete. For large model uploads, meaning a few gigabytes or more, this process can take longer."));
}
;
MDXContent.isMDXComponent = true;
var tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "accesscontrol",
    level: 3,
    title: "AccessControl",
    children: []
  }, {
    id: "authoring",
    level: 3,
    title: "Authoring",
    children: []
  }, {
    id: "classification-and-types",
    level: 3,
    title: "Classification and Types",
    children: []
  }, {
    id: "datacenterlocation",
    level: 3,
    title: "DataCenterLocation",
    children: []
  }, {
    id: "acquisition",
    level: 3,
    title: "Acquisition",
    children: []
  }, {
    id: "extent",
    level: 3,
    title: "Extent",
    children: []
  }, {
    id: "size",
    level: 3,
    title: "Size",
    children: []
  }];
};
var frontMatter = {};
// EXTERNAL MODULE: ./src/components/mdx/documentation.tsx + 1 modules
var documentation = __webpack_require__(963);
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/pages/ApiDocumentation/RealityData.tsx
/* eslint-disable import/no-webpack-loader-syntax */





function RealityData_Details() {
  return /*#__PURE__*/_jsx(MDXProvider, {
    components: mdComponents,
    children: /*#__PURE__*/_jsx(Document, {})
  });
}

/***/ }),

/***/ 8248:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: default

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);
// EXTERNAL MODULE: external "@mdx-js/react"
var react_ = __webpack_require__(57425);
// EXTERNAL MODULE: ./src/components/mdx/documentation.tsx + 1 modules
var documentation = __webpack_require__(963);
// EXTERNAL MODULE: ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(83798);
// EXTERNAL MODULE: ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules
var objectWithoutProperties = __webpack_require__(31117);
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/documentation/apis/realitydataanalysis-contextdetector.md


var _excluded = ["components"];
var __jsx = (external_react_default()).createElement;


var readingTime = {
  "text": "2 min read",
  "minutes": 1.075,
  "time": 64500,
  "words": 215
};
/* @jsxRuntime classic */
/* @jsx mdx */

var layoutProps = {};
var MDXLayout = "wrapper";
function MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);
  return (0,react_.mdx)(MDXLayout, (0,esm_extends/* default */.Z)({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)("h2", {
    "id": "context-detectors"
  }, "Context Detectors"), (0,react_.mdx)("p", null, "The analysis performed by a Reality Analysis job usually requires one or more Machine Learning models (e.g. a deep learning neural network). We call them ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "ContextDetectors"), "."), (0,react_.mdx)("p", null, "ContextDetectors are specific to Reality Analysis and provided by Bentley. They are classified in different categories, each Reality Analysis job type requiring a given category.\nHere are the categories used by current Reality Analysis jobs:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("em", {
    parentName: "li"
  }, "photo object detector"), ": ML model detecting objects as boxes in a photo."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("em", {
    parentName: "li"
  }, "photo segmentation detector"), ": ML model classifying pixels in a photo (", (0,react_.mdx)("em", {
    parentName: "li"
  }, "semantic segmentation"), ")."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("em", {
    parentName: "li"
  }, "orthophoto segmentation detector"), ": ML model classifying pixels in an orthophoto (", (0,react_.mdx)("em", {
    parentName: "li"
  }, "semantic segmentation"), "). The difference with a ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "photo segmentation detector"), " is that pixel resolution is taken into account to improve detection."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("em", {
    parentName: "li"
  }, "point cloud segmentation detector"), ": ML model classifying points in a point cloud (", (0,react_.mdx)("em", {
    parentName: "li"
  }, "semantic segmentation"), ")")), (0,react_.mdx)("p", null, "ContextDetectors are the basic blocks of Reality Analysis: limiting to these categories does not mean that analysis is limited to these basic tasks. For instance, 3D object detection is available but uses either a photo object detector or a point cloud detector underneath. Mesh analysis is also available, etc."), (0,react_.mdx)("p", null, "ContextDetectors available for download on the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://communities.bentley.com/products/3d_imaging_and_point_cloud_software/w/wiki/54656/itwin-capture-detectors-download-page"
  }, "iTwin Capture detectors download page"), ". To use one of them with Reality Analysis, just upload it to Reality Management Service in your Enterprise projects."));
}
;
MDXContent.isMDXComponent = true;
var tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "context-detectors",
    level: 2,
    title: "Context Detectors",
    children: []
  }];
};
var frontMatter = {};
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/pages/ApiDocumentation/RealityDataAnalysisContextDetector.tsx
/* eslint-disable import/no-webpack-loader-syntax */





function RealityDataAnalysisContextDetector() {
  return /*#__PURE__*/_jsx(MDXProvider, {
    components: mdComponents,
    children: /*#__PURE__*/_jsx(Document, {})
  });
}

/***/ }),

/***/ 41617:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: default

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);
// EXTERNAL MODULE: external "@mdx-js/react"
var react_ = __webpack_require__(57425);
// EXTERNAL MODULE: ./src/components/mdx/documentation.tsx + 1 modules
var documentation = __webpack_require__(963);
// EXTERNAL MODULE: ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(83798);
// EXTERNAL MODULE: ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules
var objectWithoutProperties = __webpack_require__(31117);
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/documentation/apis/realitydataanalysis-contextscene.md


var _excluded = ["components"];
var __jsx = (external_react_default()).createElement;


var readingTime = {
  "text": "26 min read",
  "minutes": 25.93,
  "time": 1555800,
  "words": 5186
};
/* @jsxRuntime classic */
/* @jsx mdx */

var layoutProps = {};
var MDXLayout = "wrapper";
function MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);
  return (0,react_.mdx)(MDXLayout, (0,esm_extends/* default */.Z)({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)("h2", {
    "id": "context-scenes"
  }, "Context Scenes"), (0,react_.mdx)("p", null, "This page describes the latest version of ContextScene file format."), (0,react_.mdx)("p", null, "A ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "ContextScene"), " is a metadata file designed to manipulate ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "raw"), " reality data like photos, maps, meshes and point cloud. It  also stores extra metadata on these reality data, like photo position, detected objects, etc.\nThough not mandatory, the following assumes that you are familiar with the Reality Management Service and its ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/reality-management"
  }, "Reality Management API"), ". If not the case, consider Reality Management Service as a set of directories, referred to as entries, with a universally unique identifier (UUID). Depending on what they store, these entries have a type, ContextScene being one of them. Other types involved here will be images (", (0,react_.mdx)("em", {
    parentName: "p"
  }, "CCImageCollection"), "), meshes (", (0,react_.mdx)("em", {
    parentName: "p"
  }, "3SM"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "3MX"), ") and point clouds (", (0,react_.mdx)("em", {
    parentName: "p"
  }, "LAS"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "LAZ"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "OPC"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "PointCloud"), "). Check existing types on ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/reality-management/rm-rd-details/"
  }, "Reality Data Properties\u2019s page"), "."), (0,react_.mdx)("p", null, "A ContextScene is persisted as an Json file. Name the file ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ContextScene.json"), " when storing in Reality Management Service."), (0,react_.mdx)("h3", {
    "id": "1-photos"
  }, "1) Photos"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-photos.jpg",
    "alt": "ContextScene photos"
  })), (0,react_.mdx)("p", null, "To refer to some of the photos in a directory and not all of them, a ContextScene adds one entry per photo. Each photo has a unique id which is used to refer to the given photo in other parts of the ContextScene file. See the examples below."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"PhotoCollection\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"Photos\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:IMAGE_1059.JPG\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:IMAGE_1060.JPG\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"2\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:IMAGE_1061.JPG\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"References\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Q:/DataSets/Motos/Images\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("p", null, "Note that the complete path is obtained through a set of references, the prefix ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "n:"), " standing for the reference path of id ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "n"), ". Hence, the first photo above is in ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Q:\\DataSets\\Motos\\Images\\IMAGE_1059.JPG"), ". This mechanism allows easy relocation of the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "raw"), " reality data, in particular when uploading them to a cloud repository. For example, assume the photos in ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Q:\\DataSets\\Motos\\Images"), " have been uploaded to Reality Management Service in a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "CCImageCollection"), " entry of uuid ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "7c00e184-5913-423b-8b4c-840ceb4bf616"), ", then you just have to modify the above ContextScene this way to point to the Reality Management Service version of the photos:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "...\n    <span class=\"token property\">\"References\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"rds:7c00e184-5913-423b-8b4c-840ceb4bf616\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n...\n"
    }
  })), (0,react_.mdx)("h3", {
    "id": "2-photos-with-positions"
  }, "2) Photos with positions"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-orientedphotos1.jpg",
    "alt": "ContextScene photos with positions"
  })), (0,react_.mdx)("p", null, "It is sometimes required to indicate where the photos are taken from (for 3D search) or even in which direction and with which exact camera (for 2D to 3D mapping). Position and orientation are stored using ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Pose"), ", while the camera parameters use a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Device"), ". Here is an example where the photos are geo-localized. In this case, we also need a Spatial Reference System (", (0,react_.mdx)("em", {
    parentName: "p"
  }, "SRS"), "). SRS are given through a definition string (EPSG, WKT, \u2026) and referred via their id. All the poses are given in a common SRS. Here is a sample:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SpatialReferenceSystems\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Definition\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"EPSG:32635\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"PhotoCollection\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"SRSId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Poses\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"3\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Center\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">388620.561400515</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">6059714.92091526</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"z\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">252.657253024168</span>\n                    <span class=\"token punctuation\">}</span>\n                  <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"4\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Center\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">388624.256090598</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">6059693.61938892</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"z\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">253.549586427398</span>\n                    <span class=\"token punctuation\">}</span>\n                  <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"5\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Center\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">388614.899373967</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">6059749.28043899</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"z\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">252.456919016317</span>\n                    <span class=\"token punctuation\">}</span>\n                  <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Photos\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"3\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:image_1.JPG\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"PoseId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"4\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:image_2.JPG\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"PoseId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"5\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:image_3.JPG\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"PoseId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"References\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Q:/Analyze/TrainingScenes/Datasets/Example/city\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("h3", {
    "id": "3-photos-with-orientations"
  }, "3) Photos with orientations"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-orientedphotos2.jpg",
    "alt": "ContextScene photos with orientations"
  })), (0,react_.mdx)("p", null, "In this case, the directions in which the photos are taken are provided, using a matrix. The camera parameters are also given using a device entry. Jobs relying on 2D+3D reasoning usually involve such advanced ContextScenes (drones, mobile mapping, etc.). Check the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://docs.bentley.com/LiveContent/index.html"
  }, "Reality Modeling User Guide"), " for concepts and norms used by Bentley Systems. In the following example, 3 photos are taken with the same camera. Poses are not geo-referenced; a local system is used (no SRS)"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"PhotoCollection\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"Devices\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"perspective\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Dimensions\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"width\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5472</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"height\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3648</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"PrincipalPoint\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2718.83277672126</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1826.98620377713</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"FocalLength\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2174.43172433616</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"RadialDistortion\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"k1\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.0135233892956603</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"k2\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.00403860548497617</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"k3\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.000308785047808229</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"TangentialDistortion\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"p1\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.0014916349534087</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"p2\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.000189437237012201</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"AspectRatio\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Skew\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Poses\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Center\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-1.62595567955807</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.080899284124208</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"z\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.00756484596716649</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Rotation\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"omega\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-2.944051582136</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"phi\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.225134191045904</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"kappa\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.0446515192166179</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Center\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.184453182366224</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.00623637496469653</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"z\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.020190179737657</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Rotation\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"omega\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-2.98523877071878</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"phi\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.231294571221302</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"kappa\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.0405997858706959</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"2\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Center\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1.8104088619243</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0871356590889045</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"z\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0126253337704903</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Rotation\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"omega\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-2.96497834304822</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"phi\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0627398648125152</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"kappa\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.0538948521249639</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Photos\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:IMG_1059.JPG\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"DeviceId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"PoseId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:IMG_1060.JPG\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"DeviceId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"PoseId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"2\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:IMG_1061.JPG\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"DeviceId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"PoseId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"References\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Q:/Analyze/DataSets/Motos/images\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("h3", {
    "id": "4-orthophoto"
  }, "4) Orthophoto"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-ortho.jpg",
    "alt": "ContextScene orthophoto"
  })), (0,react_.mdx)("p", null, "An orthophoto, or a map, is an aerial photograph that has been geometrically corrected or \u201Cortho-rectified\u201D such that the scale of the photograph is uniform and utilized in the same manner as a map. It is usually split into tiles, each of them having a 2D location in a given SRS. Introducing a specific type of device, an ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "orthotile"), ", to describe scale parameters and adding 2D location coordinates to photos, we simply extend the ContextScene format to describe an orthophoto. Here is a sample where tiles are 3200x4800 images and the resolution is 7.5cm per pixel. The location is the position of the upper-left corner pixel of the image. Note that the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "y"), " axis of the image pixels goes down toward the south. Being in the northern hemisphere, adding 1 to the pixel ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "y"), " coordinates corresponds to removing 7.5cm to the geographic ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "y"), " coordinate, ending with a negative pixel height of ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "-0.075"), ". We also provide a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "nodata"), " value for pixels where the orthophoto is unknown. Such parameters are common and usually found in the geotiff files or ", (0,react_.mdx)("em", {
    parentName: "p"
  }, ".tfw"), " sister files. "), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SpatialReferenceSystems\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Definition\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"EPSG:2193\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"PhotoCollection\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"SRSId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Devices\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"orthotile\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Dimensions\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"width\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3200</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"height\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4800</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"PixelSize\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"Width\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.075</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Height\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.075</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Photos\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:Production_39_ortho_part_1_1.tif\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"DeviceId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Location\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"UlX\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">533418</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"UlY\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5212669.912</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:Production_39_ortho_part_1_2.tif\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"DeviceId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Location\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"UlX\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">533712.912</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"UlY\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5212669.912</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"2\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:Production_39_ortho_part_2_1.tif\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"DeviceId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Location\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"UlX\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">533418</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"UlY\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5212824.064</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"References\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Q:/Datasets/Graz/ortho\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("h3", {
    "id": "5-orthophoto-with-height"
  }, "5) Orthophoto with height"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-orthodsm.jpg",
    "alt": "ContextScene orthophoto with DSM"
  })), (0,react_.mdx)("p", null, "Some orthophotos, often called ortho DSM, provide not only the color of the map at a given position, but also its height. This ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "DSM"), " parameter is given with another tile image with floating pixel values. We simply add a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "DepthPath"), " entry to the photos. Though not documented above, this depth also makes sense for usual photos when the sensor provides a depth (e.g., an iPhone13 Pro), hence the tag\u2019s name."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SpatialReferenceSystems\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Definition\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"EPSG:2193\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"PhotoCollection\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"SRSId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Devices\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"orthotile\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Dimensions\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"width\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4096</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"height\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4096</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"PixelSize\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"Width\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.072</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Height\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.072</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"NoData\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-9999</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Photos\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:Production_39_ortho_part_1_1.tif\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"DeviceId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Location\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"UlX\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">533418</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"UlY\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5212669.912</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"DepthPath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"1:Production_39_DSM_part_1_1.tif\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:Production_39_ortho_part_1_2.tif\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"DeviceId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Location\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"UlX\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">533712.912</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"UlY\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5212669.912</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"DepthPath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"1:Production_39_DSM_part_1_2.tif\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"2\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:Production_39_ortho_part_2_1.tif\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"DeviceId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Location\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"UlX\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">533418</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"UlY\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5212824.064</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"DepthPath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"1:Production_39_DSM_part_2_1.tif\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"References\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Q:/Analyze/TrainingScenes/Datasets/Example/S2D-Orthos/Graz/ortho\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Q:/Analyze/TrainingScenes/Datasets/Example/S2D-Orthos/Graz/dsm\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("h3", {
    "id": "6-meshes"
  }, "6) Meshes"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-mesh.jpg",
    "alt": "ContextScene mesh"
  })), (0,react_.mdx)("p", null, "Meshes are given in a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "MeshCollection"), " section. ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "3SM"), " and ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "3MX"), " formats are currently supported. When geo-referenced, these formats store their SRS on their side, so that providing SRS in the ContextScene file is not mandatory. If you set SRS in the ContextScene, which can be done for the whole mesh collection or per mesh, it overrides the one in the mesh. The same is true for bounding boxes. See the following two examples:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SpatialReferenceSystems\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Definition\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"EPSG:25829\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"MeshCollection\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"SRSId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Meshes\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:Production_1_3SM.3sm\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"References\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Q:/Dataset/Bridge\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"MeshCollection\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"Meshes\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:Production_1.3mx\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token property\">\"BoundingBox\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"xmin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-100</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"ymin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-120</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"zmin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"xmax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"ymax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"zmax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">35</span>\n              <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"References\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Q:/Dataset/Bridge\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("h3", {
    "id": "7-point-clouds"
  }, "7) Point Clouds"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-pointcloud.jpg",
    "alt": "ContextScene point cloud"
  })), (0,react_.mdx)("p", null, "Similarly, point clouds are given in a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "PointCloudCollection"), " section. Usual formats are supported in a ContextScene file, as well as ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "OPC"), " and ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "POD"), ". Neither SRS nor BoundingBox are read from the point cloud files themselves, so you have to provide one in the ContextScene, if needed. Here are some examples:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SpatialReferenceSystems\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Definition\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"EPSG:25829\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"PointCloudCollection\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"SRSId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"PointClouds\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"BoundingBox\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"xmin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">758968.81799577</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"ymin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4066931.70199941</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"zmin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">25.9644992494779</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"xmax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">759084.955992652</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"ymax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4067043.41599757</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"zmax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">50.4674979874532</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:point_cloud.opc\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"References\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Q:/DataSets/Spain/OPC\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SpatialReferenceSystems\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Definition\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"EPSG:25829\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"PointCloudCollection\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"SRSId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"PointClouds\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:spain.las\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"References\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Q:/DataSets/Spain/LAS\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SpatialReferenceSystems\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Definition\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"ENU:36.7127,-6.10034\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"PointCloudCollection\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"SRSId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"PointClouds\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:PointCloud.pod\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"References\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"rds:7c00e184-5913-423b-8b4c-840ceb4bf616\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("p", null, "Please note the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "ENU:LATITUDE,LONGITUDE"), " SRS definition used by the above example is not standard. You might encounter this SRS definition in files generated by Reality Modeling (check ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://docs.bentley.com/LiveContent/index.html"
  }, "Reality Modeling User Guide"), ")."), (0,react_.mdx)("p", null, "It is also possible to use ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "PointCloudCollection"), " section for using point clouds in Reality Modeling, either static or mobile. Supported format are E57, LAS and PTX. The bounding box property is not needed in that case, but other properties are introduced so that it is possible to import point clouds in Reality Modeling."), (0,react_.mdx)("p", null, "Here\u2019s an example for a static E57 file with known location within the file:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SpatialReferenceSystems\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Definition\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"EPSG:4978\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"PointCloudCollection\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"SRSId\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"PointClouds\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pump\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0:pump.e57\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Static\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Location\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"InFile\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"References\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rds:1a043cb1-c8d8-4af9-9b3a-10ba8cd47800\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("p", null, "Now, an example for a LAS file with scanner location provided in the scene:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SpatialReferenceSystems\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Definition\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"EPSG:4978\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"PointCloudCollection\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"SRSId\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"PointClouds\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pump\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0:pump.las\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Static\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Location\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Center\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Center\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"x\"</span><span class=\"token operator\">:</span> <span class=\"token number\">12.5</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"y\"</span><span class=\"token operator\">:</span> <span class=\"token number\">20.3</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"z\"</span><span class=\"token operator\">:</span> <span class=\"token number\">5.4</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"References\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rds:1a043cb1-c8d8-4af9-9b3a-10ba8cd47800\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("p", null, "And finally, an example for a LAS file with unknown scanner location:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SpatialReferenceSystems\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Definition\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"EPSG:4978\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"PointCloudCollection\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"SRSId\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"PointClouds\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pump\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0:pump.las\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Static\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Location\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Unknown\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"References\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rds:1a043cb1-c8d8-4af9-9b3a-10ba8cd47800\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("p", null, "For mobile point clouds, it is necessary to provide a TrajectoryId. See for example:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SpatialReferenceSystems\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Definition\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"EPSG:4978\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"PointCloudCollection\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"SRSId\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"PointClouds\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mobile\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0:mobile.las\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Mobile\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"SRSId\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"TrajectoryId\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"TrajectoryCollection\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"SRSId\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Trajectories\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Paths\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"0:traj_1.csv\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"0:traj_2.csv\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Delimiters\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"CombineConsecutiveDelimiters\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"DecimalSeparator\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"LinesToIgnore\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"TimeColumnId\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"XColumnId\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"YColumnId\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"ZColumnId\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"References\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rds:1a043cb1-c8d8-4af9-9b3a-10ba8cd47800\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "TrajectoryId"), " will point to an item in ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "TrajectoryCollection"), ". In such an item, you can point the trajectory files to use, and the options for parsing the trajectory files."), (0,react_.mdx)("p", null, "Note that ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "DecimalSeparator"), " can be either ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "."), " or ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, ","), ". Delimiters have to be only composed of one character. And column ids have to be all different from each other."), (0,react_.mdx)("h3", {
    "id": "8-annotations"
  }, "8) Annotations"), (0,react_.mdx)("p", null, "So far, we have seen how to refer to ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "raw"), " reality data or to add extra metadata information like localization. The next section is specific to Reality Analysis and is usually filled by the analysis. It consists of ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Annotations"), " which specify parts of the reality data and what has been detected. These parts could be ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "a position, a geometric shape, every pixel, every point"), " of the point cloud, etc. What has been detected is called a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "label"), " or class (a traffic sign, a power line, ground, vegetation, etc.)."), (0,react_.mdx)("h4", {
    "id": "available-annotations"
  }, "Available Annotations"), (0,react_.mdx)("h4", {
    "id": "2d-objects"
  }, "2D objects"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-o2d.jpg",
    "alt": "ContextScene 2D objects"
  })), (0,react_.mdx)("p", null, "Objects are detected in photos as boxes aligned with the axis. In this case, the Annotations section of the ContextScene consists of the set of labels (names and ids), followed by detected boxes (coordinates and label) in every photo. Coordinates are relative to the photo size between 0 and 1. A confidence for the detected object might be provided between 0 and 1. Note that the objects have an UUID which is specific to the photo in which it has been detected: two objects cannot have the same UUID. Here is a small example:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"PhotoCollection\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"Photos\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:img_1059.JPG\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:img_1060.JPG\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"2\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:img_1061.JPG\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"Annotations\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"Labels\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"3\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"car\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"4\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"motorcycle\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Objects2D\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"e256276a-d478-476d-a654-195dbc23d1d9\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"LabelInfo\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"Confidence\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.998534977436066</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"LabelId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Box2D\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"xmin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0319100245833397</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"ymin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.537032723426819</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"xmax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.374318659305573</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"ymax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.66499537229538</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"03f2b2e5-5df5-49a0-8515-62d6df7739bd\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"LabelInfo\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"Confidence\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.996562480926514</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"LabelId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Box2D\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"xmin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.877566039562225</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"ymin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.4940065741539</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"xmax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"ymax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.62068098783493</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"b61c36dd-98d2-4a2a-902e-9d12d9472f15\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"LabelInfo\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"Confidence\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.983914494514465</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"LabelId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Box2D\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"xmin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.854629874229431</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"ymin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.483299434185028</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"xmax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.938638925552368</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"ymax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.547508895397186</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"71eab044-afc0-45e3-a9bf-d9c96689db58\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"LabelInfo\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"Confidence\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.924463272094727</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"LabelId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Box2D\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"xmin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.98187381029129</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"ymin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.479612439870834</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"xmax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"ymax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.551942944526672</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"2\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"fbd8a303-06de-4368-910d-080c8a9024fc\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"LabelInfo\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"Confidence\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.983137726783752</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"LabelId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Box2D\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"xmin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.943033456802368</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"ymin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.504623711109161</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"xmax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.998084306716919</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"ymax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.579438984394073</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"References\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Q:/Analyze/DataSets/Images\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("h4", {
    "id": "2d-segmentation"
  }, "2D segmentation"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-s2d1.jpg",
    "alt": "ContextScene photo segmentation"
  })), (0,react_.mdx)("p", null, "To store one label per pixel, what is often called ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Semantic segmentation"), ", we use a PNG image file. Each pixel is a 16bit unsigned integer set to the label of the corresponding pixel in the annotated photo. The value 65535 is reserved for pixels where the label is unknown. This value is generally used when the ContextScene is the result of a manual annotation: regions where the annotation should be ignored for the Machine Learning training are set to 65535. The PNG files are stored in a separate folder identified with the refence path prefixed in front of the mask filename. Here is an example:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"PhotoCollection\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"Photos\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:img_1059.JPG\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:img_1060.JPG\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"2\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:img_1061.JPG\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"Annotations\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"Labels\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"background\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"2\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"bicycle\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"6\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"bus\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"7\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"car\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Segmentation2D\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"1:0.png\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"1:1.png\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"2\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"1:2.png\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"References\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Q:/Analyze/DataSets/Motos/images\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Q:/Analyze/DataSets/Motos/segmentedPhotos\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("h4", {
    "id": "2d-segmentation-in-orthophotos"
  }, "2D segmentation in orthophotos"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-s2d2.jpg",
    "alt": "ContextScene orthophoto segmentation"
  })), (0,react_.mdx)("p", null, "The same type of segmentation applies to orthophoto:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SpatialReferenceSystems\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Definition\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"EPSG:2193\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"PhotoCollection\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"SRSId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Devices\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Type\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"orthotile\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Dimensions\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"width\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">632</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"height\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2000</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"PixelSize\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"Width\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Height\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.1</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"NoData\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-9999</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Photos\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:img_NoMerge_ortho_part_1_2.tif\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"DeviceId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Location\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"UlX\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">533550.937633621</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"UlY\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5212434.93763362</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"DepthPath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:img_NoMerge_DSM_part_1_2.tif\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"ImagePath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:img_NoMerge_ortho_part_1_1.tif\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"DeviceId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"Location\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"UlX\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">533350.937633621</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"UlY\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5212434.93763362</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"DepthPath\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:img_NoMerge_DSM_part_1_1.tif\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"Annotations\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"Labels\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"background\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"2\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Building\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"4\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Car\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Segmentation2D\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"1:img_NoMerge_ortho_part_1_2_mask_.png\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"1:img_NoMerge_ortho_part_1_1_mask_.png\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"References\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Q:/Analyze/DataSets/Graz/OrthophotoImages\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Q:/Analyze/DataSets/Graz/segmentedPhotos\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("h4", {
    "id": "3d-objects"
  }, "3D objects"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-o3d.jpg",
    "alt": "ContextScene 3D objects"
  })), (0,react_.mdx)("p", null, "3D objects are described as 3D boxes. These boxes are given by a range in every direction. An optional rotation might be specified if aligning the box with the axis is too restrictive. It is given as a 3x3 matrix and corresponds to a rotation centered at the center of the box: point ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "[(xmin+xmax)/2,(ymin+ymax)/2,(zmin+zmax)/2]"), " remains the central position of the object. An optional SRS is provided for geo-referenced scenes. Here is an example:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SpatialReferenceSystems\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Definition\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"ENU:36.71339,-6.10019\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"Annotations\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"Labels\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"30\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"light signal\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"29\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"pole\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"28\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"manhole\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Objects3D\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"SRSId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"Objects\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"85b8dbe8-ba72-4f51-9343-f8763a2d7d77\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"LabelInfo\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"LabelId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">28</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"RotatedBox3D\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"Box3D\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"xmin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-18.2450134852094</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"ymin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-33.4309299351174</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"zmin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">35.994338294097</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"xmax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-17.6879619720465</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"ymax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-32.9339199858639</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"zmax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">36.0384178477738</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"Rotation\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"M_00\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.923586176565216</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_01\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.38339088989913</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_02\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_10\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.38339088989913</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_11\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.923586176565216</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_12\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_20\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_21\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_22\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"ffb2b009-6d22-4b1b-a9bd-9232f7f762d6\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"LabelInfo\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"LabelId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">28</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"RotatedBox3D\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"Box3D\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"xmin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-27.1921100305691</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"ymin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-25.0032024072245</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"zmin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">36.0454853671103</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"xmax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-26.5712067997615</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"ymax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-24.6983481328806</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"zmax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">36.0555013530683</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"Rotation\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"M_00\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.245754837557398</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_01\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.969332017327983</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_02\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_10\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.969332017327983</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_11\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.245754837557398</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_12\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_20\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_21\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_22\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"fe96357c-ca3e-4548-b676-2b4a167f5825\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"LabelInfo\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"LabelId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">31</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"RotatedBox3D\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"Box3D\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"xmin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-4.32935880992287</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"ymin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-15.5213085471863</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"zmin\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">36.6455288658342</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"xmax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-3.92620580047086</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"ymax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-15.178094920882</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"zmax\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">36.7824782388701</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"Rotation\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"M_00\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0130315651698905</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_01\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.99991508554938</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_02\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_10\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.99991508554938</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_11\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0130315651698905</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_12\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_20\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_21\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"M_22\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("p", null, "Note: Some analysis detect ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "3D patches"), ". So far, 3D objects are used to persist these 3D patches. In this case, an ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "\"Area\""), " tag is added to each 3D object to store the area of the corresponding 3D patch."), (0,react_.mdx)("h4", {
    "id": "3d-segmentation"
  }, "3D segmentation"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-s3d.jpg",
    "alt": "ContextScene point cloud segmentation"
  })), (0,react_.mdx)("p", null, "To store one label per point in a point cloud, what is often called ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Semantic segmentation"), ", we use the OPC format. This format with Level Of Details is designed to be streamed and efficiently displayed. Each point is decorated with a 16bit unsigned integer sets to its label. Like for 2D segmentation, the value 65535 is reserved for points where the label is unknown."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SpatialReferenceSystems\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Definition\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"EPSG:26910\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"Annotations\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"Labels\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"21\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Vehicle\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"6\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Roof\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"5\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Tree\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Segmentation3D\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"SRSId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0:PointCloud.opc\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"References\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Path\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"E:/Dataset/Graz/segmentedPointCloud\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("h4", {
    "id": "2d-lines"
  }, "2D lines"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-l2d.jpg",
    "alt": "ContextScene 2D lines"
  })), (0,react_.mdx)("p", null, "The following annotations describe a set of ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "lines"), " in a plane, result of the analysis of an orthophoto, it might be cracks over a road, a road network, rails, etc. We call them lines though the topology required to describe these entities could be as complex as a graph with junctions, loops, etc. Hence, a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Line2D"), " is here given by a set of 2D vertices, and a set of segments between these vertices. To describe the \u201Cthickness\u201D of the original entity which has been vectorized into a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "line"), ", we use the mathematically sounded concept of diameter. It is the diameter of the largest disc centered at a given vertex containing only points of the entity. Here is a small example:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SpatialReferenceSystems\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Definition\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"EPSG:32615\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"Annotations\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"Labels\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"background\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"crack\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Lines2D\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"SRSId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"Lines\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"9c508e50-476d-4585-8a4b-d5885a652c8d\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"LabelInfo\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"LabelId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Length\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2.12</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"MeanDiameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.04</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"MaxDiameter\"</span> <span class=\"token operator\">:</span>  <span class=\"token number\">0.0762712781246574</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Vertices\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">479868.86</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4980803.44157715</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0202617157732701</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">479868.712150948</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4980803.47680339</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0664043075900635</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"2\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">479868.341404493</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4980803.67640449</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0686980153798615</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"3\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">479868.468095477</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4980803.63543635</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0762712781246574</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Segments\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"VertexId1\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"VertexId2\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"VertexId1\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"VertexId2\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"VertexId1\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"VertexId2\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"cf309ac4-5441-46d8-8fb5-b25dd85b3c35\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"LabelInfo\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"LabelId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Length\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1.12</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"MeanDiameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.04</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"MaxDiameter\"</span> <span class=\"token operator\">:</span>  <span class=\"token number\">0.0908217292202603</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Vertices\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">479874.427917961</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4980802.47</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0185410197570828</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">479874.28053349</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4980802.75</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0339112355266864</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"2\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">479874.373927691</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4980802.67226102</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0978553816042589</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"3\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">479874.485410865</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4980802.89236351</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0908217292202603</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"4\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">479874.37</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4980802.64363961</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0899999999783128</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"5\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">479874.418415482</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4980802.71591548</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0813172786177372</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"6\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">479874.83328093</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4980803.53223969</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0816060783607562</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"7\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">479874.612768291</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4980803.11426725</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.086105905882709</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"8\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">479874.677758315</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4980803.21801663</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0872066516702332</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"9\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">479874.55828698</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4980802.99093257</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0900163930024753</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"10\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">479874.755737061</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4980803.36709735</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0900001483887829</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"11\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">479874.456513669</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4980802.78786825</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0969726626446287</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"12\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">479874.714993671</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4980803.31748734</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.109567331227317</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Segments\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"VertexId1\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"VertexId2\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"VertexId1\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"VertexId2\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"VertexId1\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"VertexId2\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"VertexId1\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"VertexId2\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"VertexId1\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"VertexId2\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">9</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"VertexId1\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"VertexId2\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">11</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"VertexId1\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"VertexId2\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">11</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"VertexId1\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"VertexId2\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">10</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"VertexId1\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"VertexId2\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">9</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"VertexId1\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"VertexId2\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">8</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"VertexId1\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"VertexId2\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">12</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"VertexId1\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"VertexId2\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">12</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("h4", {
    "id": "3d-lines"
  }, "3D lines"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-l3d.jpg",
    "alt": "ContextScene 3D lines"
  })), (0,react_.mdx)("p", null, "The following annotations describe a set of ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "lines"), " in space. It might be cracks on a bridge, power-lines, rails, etc. Like in 2D, we call them lines but the topology required to describe these entities could be as complex as a graph with junctions, loops, etc. Hence, a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Line3D"), " is here given by a set of 3D vertices, and a set of segments between these vertices. If required, to describe the \u201Cthickness\u201D of the original entity which has been vectorized into a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "line"), ", we use the mathematically sounded concept of diameter. It is the diameter of the largest ball centered at a given vertex containing only points of the entity. Here is a small example:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SpatialReferenceSystems\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Definition\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"EPSG:32615\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"Annotations\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"Labels\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"crack\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Lines3D\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"SRSId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"Lines\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"4c71ed7b-00fc-4591-8d36-7abe896937c7\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"LabelInfo\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"LabelId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Length\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1.12</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"MeanDiameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"MaxDiameter\"</span> <span class=\"token operator\">:</span>  <span class=\"token number\">0.0813741514791665</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Vertices\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5.12539769932528</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.228260537736713</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"z\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">8.04510725583266</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0758896857238085</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5.09693810098787</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.254084667116378</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"z\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">8.02793394946929</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.075647846094568</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"2\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4.94279933680971</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-0.541653249313817</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"z\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">7.83193508145411</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0813741514791665</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Segments\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"VertexId1\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"VertexId2\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"VertexId1\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"VertexId2\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"141d074f-6446-450d-af8f-47c30dcc0493\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"LabelInfo\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"LabelId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Length\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2.12</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"MeanDiameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.071</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"MaxDiameter\"</span> <span class=\"token operator\">:</span>  <span class=\"token number\">0.0861954450358527</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Vertices\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.367889359573153</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-1.83500784023564</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"z\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4.21492132690978</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0861954450358527</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.419774974444863</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">-1.98105014611317</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"z\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">4.21475624160097</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"Diameter\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0.0673995244878007</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Segments\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"VertexId1\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token property\">\"VertexId2\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("h4", {
    "id": "2d-polygons"
  }, "2D polygons"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-polygons.jpg",
    "alt": "ContextScene 2D polygons"
  })), (0,react_.mdx)("p", null, "The following annotations describe a set of 2D ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "polygons"), " in space. It might be building contours, regions with rust, etc. A ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Polygon2D"), " is defined by a set of 2D vertices and a set of closed lines, at least one outer boundary, and optionally several inner boundaries. Here is a small example:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"5.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SpatialReferenceSystems\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Definition\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"EPSG:32615\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"Annotations\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"Labels\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"background\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"Name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"roof\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Polygons2D\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"SRSId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"Polygons\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"3170f694-fceb-4a30-8407-9c4b8b995c7a\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"LabelInfo\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"LabelId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Area\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1.34</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Vertices\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1569048.90925996</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5181354.7953857</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1569046.03675745</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5181359.98194182</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"2\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1569039.95559443</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5181360.00584799</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"3\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1569039.9138761</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5181351.26758661</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"OuterBoundary\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"VertexIds\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token number\">3</span>\n                        <span class=\"token punctuation\">]</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"deff5dbe-1324-487f-aa54-59adaf3c27a1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token property\">\"LabelInfo\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"LabelId\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Area\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2.14</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"Vertices\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"0\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1569161.77267965</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5181355.08644351</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"1\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1569163.69190289</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5181351.55282655</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"2\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1569166.375</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5181350.625</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"3\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1569166.45</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5181350.625</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"4\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1569172.09739531</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5181344.35647846</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"5\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1569178.75182</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5181347.82391931</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"6\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1569175.69844311</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5181353.75815953</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"7\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1569179.34246425</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5181353.40052368</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"8\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1569191.35</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5181358.95</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"9\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1569191.35</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5181359.025</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"10\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1569173.575</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5181359.175</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"11\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1569172.14475312</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5181359.99780775</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"12\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1569163.10653567</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5181360.00136519</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"13\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"Position\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token property\">\"x\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1569164.47593204</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token property\">\"y\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5181357.2323884</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"OuterBoundary\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"VertexIds\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token number\">5</span>\n                        <span class=\"token punctuation\">]</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token property\">\"InnerBoundaries\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token property\">\"InnerBoundary\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"VertexIds\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                                <span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token number\">7</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token number\">9</span>\n                            <span class=\"token punctuation\">]</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token property\">\"InnerBoundary\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token property\">\"VertexIds\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                                <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token number\">11</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token number\">12</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token number\">13</span>\n                            <span class=\"token punctuation\">]</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("h4", {
    "id": "other-annotations"
  }, "Other annotations"), (0,react_.mdx)("p", null, "Some types of annotation are not part of the ContextScene format yet. Since they are planned, it seems important to mention them here:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("em", {
    parentName: "li"
  }, "Positions"), ":")), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-positions.jpg",
    "alt": "ContextScene 3D locations"
  })), (0,react_.mdx)("p", null, "When the spatial extension of objects is useless but only their location is of interest, some Reality Analysis jobs export these positions in ESRI SHP files. This is not yet persisted in a ContextScene. A workaround so far is to the center point of their 3D boxes."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("em", {
    parentName: "li"
  }, "3D patches"), ":")), (0,react_.mdx)("p", null, "These annotations will describe a subset of a mesh."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("em", {
    parentName: "li"
  }, "Tags"), ":")), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-tags.jpg",
    "alt": "ContextScene tags"
  })), (0,react_.mdx)("p", null, "in some cases, no position at all is required, but just a list of labels. For instance: \u201Cthis image contains people and cars\u201D. This case is not available yet and will be added."));
}
;
MDXContent.isMDXComponent = true;
var tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "context-scenes",
    level: 2,
    title: "Context Scenes",
    children: [{
      id: "1-photos",
      level: 3,
      title: "1) Photos",
      children: []
    }, {
      id: "2-photos-with-positions",
      level: 3,
      title: "2) Photos with positions",
      children: []
    }, {
      id: "3-photos-with-orientations",
      level: 3,
      title: "3) Photos with orientations",
      children: []
    }, {
      id: "4-orthophoto",
      level: 3,
      title: "4) Orthophoto",
      children: []
    }, {
      id: "5-orthophoto-with-height",
      level: 3,
      title: "5) Orthophoto with height",
      children: []
    }, {
      id: "6-meshes",
      level: 3,
      title: "6) Meshes",
      children: []
    }, {
      id: "7-point-clouds",
      level: 3,
      title: "7) Point Clouds",
      children: []
    }, {
      id: "8-annotations",
      level: 3,
      title: "8) Annotations",
      children: []
    }]
  }];
};
var frontMatter = {};
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/pages/ApiDocumentation/RealityDataAnalysisContextScene.tsx
/* eslint-disable import/no-webpack-loader-syntax */





function RealityDataAnalysisContextScene() {
  return /*#__PURE__*/_jsx(MDXProvider, {
    components: mdComponents,
    children: /*#__PURE__*/_jsx(Document, {})
  });
}

/***/ }),

/***/ 8126:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: default

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);
// EXTERNAL MODULE: external "@mdx-js/react"
var react_ = __webpack_require__(57425);
// EXTERNAL MODULE: ./src/components/mdx/documentation.tsx + 1 modules
var documentation = __webpack_require__(963);
// EXTERNAL MODULE: ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(83798);
// EXTERNAL MODULE: ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules
var objectWithoutProperties = __webpack_require__(31117);
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/documentation/apis/realitydataanalysis-contextscene_V4.md


var _excluded = ["components"];
var __jsx = (external_react_default()).createElement;


var readingTime = {
  "text": "17 min read",
  "minutes": 16.17,
  "time": 970200,
  "words": 3234
};
/* @jsxRuntime classic */
/* @jsx mdx */

var layoutProps = {};
var MDXLayout = "wrapper";
function MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);
  return (0,react_.mdx)(MDXLayout, (0,esm_extends/* default */.Z)({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)("h2", {
    "id": "context-scenes-version-4-to-be-deprecated"
  }, "Context Scenes version 4 (to be deprecated)"), (0,react_.mdx)("p", null, "This page describes version 4 of the ContextScene file format. Reality Analysis still supports this format to ensure backward compatibility. Please prefer the latest version."), (0,react_.mdx)("p", null, "A ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "ContextScene"), " is a metadata file designed to manipulate ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "raw"), " reality data like photos, maps, meshes and point cloud. It  also stores extra metadata on these reality data, like photo position, detected objects, etc.\nThough not mandatory, the following assumes that you are familiar with the Reality Management Service and its ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/reality-management"
  }, "Reality Management API"), ". If not the case, consider Reality Management Service as a set of directories, referred to as entries, with a universally unique identifier (UUID). Depending on what they store, these entries have a type, ContextScene being one of them. Other types involved here will be images (", (0,react_.mdx)("em", {
    parentName: "p"
  }, "CCImageCollection"), "), meshes (", (0,react_.mdx)("em", {
    parentName: "p"
  }, "3SM"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "3MX"), ") and point clouds (", (0,react_.mdx)("em", {
    parentName: "p"
  }, "LAS"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "LAZ"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "OPC"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "PointCloud"), "). Check existing types on ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/reality-management/rm-rd-details/"
  }, "Reality Data Properties\u2019s page"), "."), (0,react_.mdx)("p", null, "A ContextScene is persisted as an XML file. Name the file ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ContextScene.xml"), " when storing in Reality Management Service."), (0,react_.mdx)("h3", {
    "id": "1-photos"
  }, "1) Photos"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-photos.jpg",
    "alt": "ContextScene photos"
  })), (0,react_.mdx)("p", null, "To refer to some of the photos in a directory and not all of them, a ContextScene adds one entry per photo. Each photo has a unique id which is used to refer to the given photo in other parts of the ContextScene file. See the examples below."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContextScene</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoCollection</span><span class=\"token punctuation\">></span></span>    \n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photos</span><span class=\"token punctuation\">></span></span>\n           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>0:IMAGE_1059.JPG<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>0:IMAGE_1060.JPG<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>0:IMAGE_1061.JPG<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photos</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoCollection</span><span class=\"token punctuation\">></span></span>    \n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>References</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Reference</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>Q:\\DataSets\\Motos\\Images<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Reference</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>References</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContextScene</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("p", null, "Note that the complete path is obtained through a set of references, the prefix ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "n:"), " standing for the reference path of id ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "n"), ". Hence, the first photo above is in ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Q:\\DataSets\\Motos\\Images\\IMAGE_1059.JPG"), ". This mechanism allows easy relocation of the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "raw"), " reality data, in particular when uploading them to a cloud repository. For example, assume the photos in ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Q:\\DataSets\\Motos\\Images"), " have been uploaded to Reality Management Service in a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "CCImageCollection"), " entry of uuid ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "7c00e184-5913-423b-8b4c-840ceb4bf616"), ", then you just have to modify the above ContextScene this way to point to the Reality Management Service version of the photos:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "...\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Reference</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>rds:7c00e184-5913-423b-8b4c-840ceb4bf616<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Reference</span><span class=\"token punctuation\">></span></span>\n...\n"
    }
  })), (0,react_.mdx)("h3", {
    "id": "2-photos-with-positions"
  }, "2) Photos with positions"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-orientedphotos1.jpg",
    "alt": "ContextScene photos with positions"
  })), (0,react_.mdx)("p", null, "It is sometimes required to indicate where the photos are taken from (for 3D search) or even in which direction and with which exact camera (for 2D to 3D mapping). Position and orientation are stored using ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Pose"), ", while the camera parameters use a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Device"), ". Here is an example where the photos are geo-localized. In this case, we also need a Spatial Reference System (", (0,react_.mdx)("em", {
    parentName: "p"
  }, "SRS"), "). SRS are given through a definition string (EPSG, WKT, \u2026) and referred via their id. All the poses are given in a common SRS. Here is a sample:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContextScene</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRS</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Definition</span><span class=\"token punctuation\">></span></span>EPSG:32629<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Definition</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRS</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoCollection</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRSId</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRSId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Poses</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Pose</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Center</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>758987.198998479<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>4066970.60510875<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>z</span><span class=\"token punctuation\">></span></span>39.1859999997541<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>z</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Center</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Pose</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Pose</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Center</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>758989.05099848<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>4066972.78710875<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>z</span><span class=\"token punctuation\">></span></span>39.1749999979511<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>z</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Center</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Pose</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Pose</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Center</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>758990.900998479<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>4066974.97210875<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>z</span><span class=\"token punctuation\">></span></span>39.1619999995455<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>z</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Center</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Pose</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Poses</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photos</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>0:Track_B-CAM2-236_2017.05.11_08.17.43(520).jpg<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PoseId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PoseId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>0:Track_B-CAM2-235_2017.05.11_08.17.43(242).jpg<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PoseId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PoseId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>1:Track_B-CAM3-234_2017.05.11_08.17.42(965).jpg<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PoseId</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PoseId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photos</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoCollection</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>References</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Reference</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>Q:\\Datasets\\Railroad\\planar2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Reference</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Reference</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>Q:\\Datasets\\Railroad\\planar3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Reference</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>References</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContextScene</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("h3", {
    "id": "3-photos-with-orientations"
  }, "3) Photos with orientations"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-orientedphotos2.jpg",
    "alt": "ContextScene photos with orientations"
  })), (0,react_.mdx)("p", null, "In this case, the directions in which the photos are taken are provided, using a matrix. The camera parameters are also given using a device entry. Jobs relying on 2D+3D reasoning usually involve such advanced ContextScenes (drones, mobile mapping, etc.). Check the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://docs.bentley.com/LiveContent/index.html"
  }, "Reality Modeling User Guide"), " for concepts and norms used by Bentley Systems. In the following example, 3 photos are taken with the same camera. Poses are not geo-referenced; a local system is used (no SRS)"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContextScene</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoCollection</span><span class=\"token punctuation\">></span></span>    \n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Devices</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Device</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Type</span><span class=\"token punctuation\">></span></span>perspective<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Type</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Dimensions</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>width</span><span class=\"token punctuation\">></span></span>1920<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>width</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>height</span><span class=\"token punctuation\">></span></span>1080<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>height</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Dimensions</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PrincipalPoint</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>959.325756354222<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>540.064799475902<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PrincipalPoint</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>FocalLength</span><span class=\"token punctuation\">></span></span>1161.90449945652<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>FocalLength</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RadialDistortion</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>k1</span><span class=\"token punctuation\">></span></span>-0.130619227934255<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>k1</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>k2</span><span class=\"token punctuation\">></span></span>0.11343372341057<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>k2</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>k3</span><span class=\"token punctuation\">></span></span>-0.0194519247358129<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>k3</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>RadialDistortion</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TangentialDistortion</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p1</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p1</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p2</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p2</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>TangentialDistortion</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AspectRatio</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AspectRatio</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Skew</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Skew</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Device</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Devices</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Poses</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Pose</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Center</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>-0.242398388617219<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>-1.31312823176956<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>z</span><span class=\"token punctuation\">></span></span>-0.170965236298314<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>z</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Center</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Rotation</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>omega</span><span class=\"token punctuation\">></span></span>-1.71248177918815<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>omega</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>phi</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>phi</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>kappa</span><span class=\"token punctuation\">></span></span>0.000184858673830527<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>kappa</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Rotation</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Pose</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Pose</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Center</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>-0.120339121135225<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>-1.30028905810778<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>z</span><span class=\"token punctuation\">></span></span>-0.17185130833636<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>z</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Center</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Rotation</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>omega</span><span class=\"token punctuation\">></span></span>-1.71250988284902<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>omega</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>phi</span><span class=\"token punctuation\">></span></span>-0.0117559476346202<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>phi</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>kappa</span><span class=\"token punctuation\">></span></span>-0.000475042115853361<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>kappa</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Rotation</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Pose</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Pose</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Center</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>0.00121763429965454<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>-1.29989155916196<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>z</span><span class=\"token punctuation\">></span></span>-0.166334627769606<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>z</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Center</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Rotation</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>omega</span><span class=\"token punctuation\">></span></span>-1.71273910713164<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>omega</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>phi</span><span class=\"token punctuation\">></span></span>-0.0528726572200851<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>phi</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>kappa</span><span class=\"token punctuation\">></span></span>-0.00675225403620392<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>kappa</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Rotation</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Pose</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Poses</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photos</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>0:vlcsnap-2015-07-24-09h50m51s786_写真.jpg<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DeviceId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DeviceId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PoseId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PoseId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>0:vlcsnap-2015-07-24-09h51m55s443_写真.jpg<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DeviceId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DeviceId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PoseId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PoseId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>0:vlcsnap-2015-07-24-09h52m39s752.jpg<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DeviceId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DeviceId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PoseId</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PoseId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photos</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoCollection</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>References</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Reference</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>rds:7c00e184-5913-423b-8b4c-840ceb4bf616<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Reference</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>References</span><span class=\"token punctuation\">></span></span>    \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContextScene</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("h3", {
    "id": "4-orthophoto"
  }, "4) Orthophoto"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-ortho.jpg",
    "alt": "ContextScene orthophoto"
  })), (0,react_.mdx)("p", null, "An orthophoto, or a map, is an aerial photograph that has been geometrically corrected or \u201Cortho-rectified\u201D such that the scale of the photograph is uniform and utilized in the same manner as a map. It is usually split into tiles, each of them having a 2D location in a given SRS. Introducing a specific type of device, an ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "orthotile"), ", to describe scale parameters and adding 2D location coordinates to photos, we simply extend the ContextScene format to describe an orthophoto. Here is a sample where tiles are 3200x4800 images and the resolution is 7.5cm per pixel. The location is the position of the upper-left corner pixel of the image. Note that the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "y"), " axis of the image pixels goes down toward the south. Being in the northern hemisphere, adding 1 to the pixel ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "y"), " coordinates corresponds to removing 7.5cm to the geographic ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "y"), " coordinate, ending with a negative pixel height of ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "-0.075"), ". We also provide a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "nodata"), " value for pixels where the orthophoto is unknown. Such parameters are common and usually found in the geotiff files or ", (0,react_.mdx)("em", {
    parentName: "p"
  }, ".tfw"), " sister files. "), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContextScene</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRS</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Definition</span><span class=\"token punctuation\">></span></span>EPSG:2193<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Definition</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRS</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoCollection</span><span class=\"token punctuation\">></span></span> \n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRSId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRSId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Devices</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Device</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Type</span><span class=\"token punctuation\">></span></span>orthotile<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Type</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Dimensions</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>width</span><span class=\"token punctuation\">></span></span>3200<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>width</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>height</span><span class=\"token punctuation\">></span></span>4800<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>height</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Dimensions</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PixelSize</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Width</span><span class=\"token punctuation\">></span></span>0.075<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Width</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Height</span><span class=\"token punctuation\">></span></span>-0.075<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Height</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PixelSize</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>NoData</span><span class=\"token punctuation\">></span></span>-9999<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>NoData</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Device</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Devices</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photos</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>0:BX24_500_025022.tif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DeviceId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DeviceId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Location</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>UlX</span><span class=\"token punctuation\">></span></span>1569040<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>UlX</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>UlY</span><span class=\"token punctuation\">></span></span>5181360<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>UlY</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Location</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>0:BX24_500_025021.tif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DeviceId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DeviceId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Location</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>UlX</span><span class=\"token punctuation\">></span></span>1568800<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>UlX</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>UlY</span><span class=\"token punctuation\">></span></span>5181360<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>UlY</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Location</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>0:BX24_500_025020.tif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DeviceId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DeviceId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Location</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>UlX</span><span class=\"token punctuation\">></span></span>1568560<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>UlX</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>UlY</span><span class=\"token punctuation\">></span></span>5181360<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>UlY</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Location</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photos</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoCollection</span><span class=\"token punctuation\">></span></span> \n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>References</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Reference</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>Q:\\DataSets\\Christchurch\\Images<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Reference</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>References</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContextScene</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("h3", {
    "id": "5-orthophoto-with-height"
  }, "5) Orthophoto with height"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-orthodsm.jpg",
    "alt": "ContextScene orthophoto with DSM"
  })), (0,react_.mdx)("p", null, "Some orthophotos, often called ortho DSM, provide not only the color of the map at a given position, but also its height. This ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "DSM"), " parameter is given with another tile image with floating pixel values. We simply add a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "DepthPath"), " entry to the photos. Though not documented above, this depth also makes sense for usual photos when the sensor provides a depth (e.g., an iPhone13 Pro), hence the tag\u2019s name."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContextScene</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRS</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Definition</span><span class=\"token punctuation\">></span></span>EPSG:32633<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Definition</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRS</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoCollection</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRSId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRSId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Devices</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Device</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Type</span><span class=\"token punctuation\">></span></span>orthotile<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Type</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Dimensions</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>width</span><span class=\"token punctuation\">></span></span>2000<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>width</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>height</span><span class=\"token punctuation\">></span></span>2000<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>height</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Dimensions</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Band</span><span class=\"token punctuation\">></span></span>Visible<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Band</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PixelSize</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Width</span><span class=\"token punctuation\">></span></span>0.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Width</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Height</span><span class=\"token punctuation\">></span></span>-0.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Height</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PixelSize</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>NoData</span><span class=\"token punctuation\">></span></span>-9999<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>NoData</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Device</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Devices</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photos</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>0:rgb_part_1_2.tif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DeviceId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DeviceId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Location</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>UlX</span><span class=\"token punctuation\">></span></span>533550.937633621<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>UlX</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>UlY</span><span class=\"token punctuation\">></span></span>5212434.93763362<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>UlY</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Location</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DepthPath</span><span class=\"token punctuation\">></span></span>0:dsm_part_1_2.tif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DepthPath</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>0:rgb_part_1_1.tif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DeviceId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DeviceId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Location</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>UlX</span><span class=\"token punctuation\">></span></span>533350.937633621<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>UlX</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>UlY</span><span class=\"token punctuation\">></span></span>5212434.93763362<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>UlY</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Location</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DepthPath</span><span class=\"token punctuation\">></span></span>0:dsm_part_1_1.tif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DepthPath</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photos</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoCollection</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>References</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Reference</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>rds:7c00e184-5913-423b-8b4c-840ceb4bf616<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Reference</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>References</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContextScene</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("h3", {
    "id": "6-meshes"
  }, "6) Meshes"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-mesh.jpg",
    "alt": "ContextScene mesh"
  })), (0,react_.mdx)("p", null, "Meshes are given in a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "MeshCollection"), " section. ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "3SM"), " and ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "3MX"), " formats are currently supported. When geo-referenced, these formats store their SRS on their side, so that providing SRS in the ContextScene file is not mandatory. If you set SRS in the ContextScene, which can be done for the whole mesh collection or per mesh, it overrides the one in the mesh. The same is true for bounding boxes. See the following two examples:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContextScene</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRS</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Definition</span><span class=\"token punctuation\">></span></span>EPSG:25829<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Definition</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRS</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MeshCollection</span><span class=\"token punctuation\">></span></span>    \n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRSId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRSId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Meshes</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Mesh</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>0:Production_1_3sm.3sm<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Mesh</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Meshes</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>MeshCollection</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>References</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Reference</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>Q:\\Datasets\\Bridge<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Reference</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>References</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContextScene</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContextScene</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MeshCollection</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Meshes</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Mesh</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>0:Production_1.3mx<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>BoundingBox</span><span class=\"token punctuation\">></span></span>\n                  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>xmin</span><span class=\"token punctuation\">></span></span>-100<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>xmin</span><span class=\"token punctuation\">></span></span>\n                  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ymin</span><span class=\"token punctuation\">></span></span>-120<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ymin</span><span class=\"token punctuation\">></span></span>\n                  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>zmin</span><span class=\"token punctuation\">></span></span>10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>zmin</span><span class=\"token punctuation\">></span></span>\n                  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>xmax</span><span class=\"token punctuation\">></span></span>100<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>xmax</span><span class=\"token punctuation\">></span></span>\n                  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ymax</span><span class=\"token punctuation\">></span></span>80<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ymax</span><span class=\"token punctuation\">></span></span>\n                  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>zmax</span><span class=\"token punctuation\">></span></span>35<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>zmax</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>BoundingBox</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Mesh</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Meshes</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>MeshCollection</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>References</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Reference</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>rds:7c00e184-5913-423b-8b4c-840ceb4bf616<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Reference</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>References</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContextScene</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("h3", {
    "id": "7-point-clouds"
  }, "7) Point Clouds"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-pointcloud.jpg",
    "alt": "ContextScene point cloud"
  })), (0,react_.mdx)("p", null, "Similarly, point clouds are given in a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "PointCloudCollection"), " section. Usual formats are supported in a ContextScene file, as well as ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "OPC"), " and ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "POD"), ". Neither SRS nor BoundingBox are read from the point cloud files themselves, so you have to provide one in the ContextScene, if needed. Here are some examples:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContextScene</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRS</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Definition</span><span class=\"token punctuation\">></span></span>EPSG:25829<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Definition</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRS</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PointCloudCollection</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRSId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRSId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PointClouds</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PointCloud</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>0:point_cloud.opc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PointCloud</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PointClouds</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PointCloudCollection</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>References</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Reference</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>Q:\\Datasets\\Spain<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Reference</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>References</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContextScene</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContextScene</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRS</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Definition</span><span class=\"token punctuation\">></span></span>EPSG:25829<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Definition</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRS</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PointCloudCollection</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRSId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRSId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PointClouds</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PointCloud</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>0:spain.las<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PointCloud</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PointClouds</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PointCloudCollection</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>References</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Reference</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>Q:\\Datasets\\Rail<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Reference</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>References</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContextScene</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContextScene</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRS</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Definition</span><span class=\"token punctuation\">></span></span>ENU:36.7127,-6.10034<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Definition</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRS</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PointCloudCollection</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRSId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRSId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PointClouds</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PointCloud</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>0:PointCloud.pod<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PointCloud</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PointClouds</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PointCloudCollection</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>References</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Reference</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>rds:7c00e184-5913-423b-8b4c-840ceb4bf616<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Reference</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>References</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContextScene</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("p", null, "Please note the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "ENU:LATITUDE,LONGITUDE"), " SRS definition used by the above example is not standard. You might encounter this SRS definition in files generated by Reality Modeling (check ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://docs.bentley.com/LiveContent/index.html"
  }, "Reality Modeling User Guide"), ")."), (0,react_.mdx)("h3", {
    "id": "8-annotations"
  }, "8) Annotations"), (0,react_.mdx)("p", null, "So far, we have seen how to refer to ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "raw"), " reality data or to add extra metadata information like localization. The next section is specific to Reality Analysis and is usually filled by the analysis. It consists of ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Annotations"), " which specify parts of the reality data and what has been detected. These parts could be ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "a position, a geometric shape, every pixel, every point"), " of the point cloud, etc. What has been detected is called a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "label"), " or class (a traffic sign, a power line, ground, vegetation, etc.)."), (0,react_.mdx)("h4", {
    "id": "available-annotations"
  }, "Available Annotations"), (0,react_.mdx)("h4", {
    "id": "2d-objects"
  }, "2D objects"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-o2d.jpg",
    "alt": "ContextScene 2D objects"
  })), (0,react_.mdx)("p", null, "Objects are detected in photos as boxes aligned with the axis. In this case, the Annotations section of the ContextScene consists of the set of labels (names and ids), followed by detected boxes (coordinates and label) in every photo. Coordinates are relative to the photo size between 0 and 1. A confidence for the detected object might be provided between 0 and 1. Note that the objects have an id which is specific to the photo it which has been detected in: two objects having the same id are not supposed to correspond to the same real object seen in two different images. Here is a small example:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContextScene</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoCollection</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photos</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>0:IMG_1059.JPG<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>0:IMG_1060.JPG<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>0:IMG_1061.JPG<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photos</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoCollection</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Annotations</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Labels</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>car<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>motorcycle<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Labels</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Objects2D</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ObjectsInPhoto</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Objects</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Object2D</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Confidence</span><span class=\"token punctuation\">></span></span>0.998535<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Confidence</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelId</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelId</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Box2D</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>xmin</span><span class=\"token punctuation\">></span></span>0.0319100581109524<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>xmin</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ymin</span><span class=\"token punctuation\">></span></span>0.537032723426819<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ymin</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>xmax</span><span class=\"token punctuation\">></span></span>0.374318599700928<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>xmax</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ymax</span><span class=\"token punctuation\">></span></span>0.66499537229538<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ymax</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Box2D</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Object2D</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Object2D</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Confidence</span><span class=\"token punctuation\">></span></span>0.9965625<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Confidence</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelId</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelId</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Box2D</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>xmin</span><span class=\"token punctuation\">></span></span>0.877565920352936<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>xmin</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ymin</span><span class=\"token punctuation\">></span></span>0.4940065741539<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ymin</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>xmax</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>xmax</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ymax</span><span class=\"token punctuation\">></span></span>0.62068098783493<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ymax</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Box2D</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Object2D</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Objects</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ObjectsInPhoto</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ObjectsInPhoto</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Objects</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Object2D</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Confidence</span><span class=\"token punctuation\">></span></span>0.9978036<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Confidence</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelId</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelId</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Box2D</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>xmin</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>xmin</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ymin</span><span class=\"token punctuation\">></span></span>0.506300926208496<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ymin</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>xmax</span><span class=\"token punctuation\">></span></span>0.29727840423584<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>xmax</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ymax</span><span class=\"token punctuation\">></span></span>0.642435193061829<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ymax</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Box2D</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Object2D</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Object2D</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Confidence</span><span class=\"token punctuation\">></span></span>0.9839146<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Confidence</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelId</span><span class=\"token punctuation\">></span></span>4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelId</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Box2D</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>xmin</span><span class=\"token punctuation\">></span></span>0.854629874229431<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>xmin</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ymin</span><span class=\"token punctuation\">></span></span>0.483299434185028<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ymin</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>xmax</span><span class=\"token punctuation\">></span></span>0.938638925552368<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>xmax</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ymax</span><span class=\"token punctuation\">></span></span>0.547508895397186<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ymax</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Box2D</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Object2D</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Objects</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ObjectsInPhoto</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ObjectsInPhoto</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoId</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Objects</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Object2D</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Confidence</span><span class=\"token punctuation\">></span></span>0.9977607<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Confidence</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelId</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelId</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Box2D</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>xmin</span><span class=\"token punctuation\">></span></span>0.00155594770330936<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>xmin</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ymin</span><span class=\"token punctuation\">></span></span>0.516191422939301<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ymin</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>xmax</span><span class=\"token punctuation\">></span></span>0.274634718894958<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>xmax</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ymax</span><span class=\"token punctuation\">></span></span>0.636547446250916<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ymax</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Box2D</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Object2D</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Objects</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ObjectsInPhoto</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Objects2D</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Annotations</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>References</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Reference</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>Q:\\Datasets\\Motos<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Reference</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>References</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContextScene</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("h4", {
    "id": "2d-segmentation"
  }, "2D segmentation"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-s2d1.jpg",
    "alt": "ContextScene photo segmentation"
  })), (0,react_.mdx)("p", null, "To store one label per pixel, what is often called ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Semantic segmentation"), ", we use a PNG image file. Each pixel is a 16bit unsigned integer set to the label of the corresponding pixel in the annotated photo. The value 65535 is reserved for pixels where the label is unknown. This value is generally used when the ContextScene is the result of a manual annotation: regions where the annotation should be ignored for the Machine Learning training are set to 65535. The PNG files are usually stored aside the ContextScene file in a subfolder. Here is an example:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContextScene</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoCollection</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photos</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>0:IMG_1059.JPG<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>0:IMG_1060.JPG<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>0:IMG_1061.JPG<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photos</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoCollection</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Annotations</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Labels</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>background<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>bicycle<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>6<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>bus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>7<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>car<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Labels</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segmentation2D</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoSegmentation</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>Segmentation2D/0.png<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoSegmentation</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoSegmentation</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>Segmentation2D/1.png<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoSegmentation</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoSegmentation</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoId</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>Segmentation2D/2.png<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoSegmentation</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segmentation2D</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Annotations</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>References</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Reference</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>rds:7c00e184-5913-423b-8b4c-840ceb4bf616<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Reference</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>References</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContextScene</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("h4", {
    "id": "2d-segmentation-in-orthophotos"
  }, "2D segmentation in orthophotos"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-s2d2.jpg",
    "alt": "ContextScene orthophoto segmentation"
  })), (0,react_.mdx)("p", null, "The same type of segmentation applies to orthophoto:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContextScene</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRS</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Definition</span><span class=\"token punctuation\">></span></span>EPSG:2193<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Definition</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRS</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoCollection</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRSId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRSId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Devices</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Device</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Type</span><span class=\"token punctuation\">></span></span>orthotile<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Type</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Dimensions</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>width</span><span class=\"token punctuation\">></span></span>3200<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>width</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>height</span><span class=\"token punctuation\">></span></span>4800<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>height</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Dimensions</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Band</span><span class=\"token punctuation\">></span></span>Visible<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Band</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PixelSize</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Width</span><span class=\"token punctuation\">></span></span>0.075<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Width</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Height</span><span class=\"token punctuation\">></span></span>-0.075<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Height</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PixelSize</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>NoData</span><span class=\"token punctuation\">></span></span>-9999<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>NoData</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Device</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Devices</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photos</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>0:BX24_500_025022.tif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DeviceId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DeviceId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Location</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>UlX</span><span class=\"token punctuation\">></span></span>1569040<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>UlX</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>UlY</span><span class=\"token punctuation\">></span></span>5181360<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>UlY</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Location</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Photo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImagePath</span><span class=\"token punctuation\">></span></span>0:BX24_500_025021.tif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ImagePath</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DeviceId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DeviceId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Location</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>UlX</span><span class=\"token punctuation\">></span></span>1568800<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>UlX</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>UlY</span><span class=\"token punctuation\">></span></span>5181360<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>UlY</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Location</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photo</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Photos</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoCollection</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Annotations</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Labels</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>background<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>building<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>car<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Labels</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segmentation2D</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoSegmentation</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>BX24_500_025022_mask_.png<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoSegmentation</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoSegmentation</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PhotoId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>BX24_500_025021_mask_.png<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PhotoSegmentation</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segmentation2D</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Annotations</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>References</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Reference</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>Q:\\Datasets\\Christchurch<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Reference</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>References</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContextScene</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("h4", {
    "id": "3d-objects"
  }, "3D objects"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-o3d.jpg",
    "alt": "ContextScene 3D objects"
  })), (0,react_.mdx)("p", null, "3D objects are described as 3D boxes. These boxes are given by a range in every direction. An optional rotation might be specified if aligning the box with the axis is too restrictive. It is given as a 3x3 matrix and corresponds to a rotation centered at the center of the box: point ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "[(xmin+xmax)/2,(ymin+ymax)/2,(zmin+zmax)/2]"), " remains the central position of the object. An optional SRS is provided for geo-referenced scenes. Here is an example:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContextScene</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRS</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Definition</span><span class=\"token punctuation\">></span></span>ENU:36.71339,-6.10019<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Definition</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRS</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Annotations</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Labels</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>light signal<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>29<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>pole<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>28<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>manhole<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Labels</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Objects3D</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRSId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRSId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Objects</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Object3D</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelId</span><span class=\"token punctuation\">></span></span>28<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelId</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RotatedBox3D</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Box3D</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>xmin</span><span class=\"token punctuation\">></span></span>-18.2450134852094<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>xmin</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ymin</span><span class=\"token punctuation\">></span></span>-33.4309299351174<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ymin</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>zmin</span><span class=\"token punctuation\">></span></span>35.994338294097<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>zmin</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>xmax</span><span class=\"token punctuation\">></span></span>-17.6879619720465<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>xmax</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ymax</span><span class=\"token punctuation\">></span></span>-32.9339199858639<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ymax</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>zmax</span><span class=\"token punctuation\">></span></span>36.0384178477738<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>zmax</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Box3D</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Rotation</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_00</span><span class=\"token punctuation\">></span></span>0.923586176565216<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_00</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_01</span><span class=\"token punctuation\">></span></span>-0.38339088989913<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_01</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_02</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_02</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_10</span><span class=\"token punctuation\">></span></span>0.38339088989913<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_10</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_11</span><span class=\"token punctuation\">></span></span>0.923586176565216<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_11</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_12</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_12</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_20</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_20</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_21</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_21</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_22</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_22</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Rotation</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>RotatedBox3D</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Object3D</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Object3D</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>9<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelId</span><span class=\"token punctuation\">></span></span>29<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelId</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RotatedBox3D</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Box3D</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>xmin</span><span class=\"token punctuation\">></span></span>20.9584511724897<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>xmin</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ymin</span><span class=\"token punctuation\">></span></span>12.319399747568<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ymin</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>zmin</span><span class=\"token punctuation\">></span></span>36.1015345364395<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>zmin</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>xmax</span><span class=\"token punctuation\">></span></span>21.169238198679<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>xmax</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ymax</span><span class=\"token punctuation\">></span></span>12.4793676344069<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ymax</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>zmax</span><span class=\"token punctuation\">></span></span>36.9024438572005<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>zmax</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Box3D</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Rotation</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_00</span><span class=\"token punctuation\">></span></span>-0.308218298834533<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_00</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_01</span><span class=\"token punctuation\">></span></span>0.951315657530951<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_01</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_02</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_02</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_10</span><span class=\"token punctuation\">></span></span>-0.951315657530951<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_10</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_11</span><span class=\"token punctuation\">></span></span>-0.308218298834533<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_11</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_12</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_12</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_20</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_20</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_21</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_21</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_22</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_22</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Rotation</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>RotatedBox3D</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Object3D</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Object3D</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>17<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelId</span><span class=\"token punctuation\">></span></span>30<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelId</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RotatedBox3D</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Box3D</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>xmin</span><span class=\"token punctuation\">></span></span>-14.2911021167082<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>xmin</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ymin</span><span class=\"token punctuation\">></span></span>-12.3380719723964<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ymin</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>zmin</span><span class=\"token punctuation\">></span></span>36.6555384788507<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>zmin</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>xmax</span><span class=\"token punctuation\">></span></span>-12.9469008563212<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>xmax</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ymax</span><span class=\"token punctuation\">></span></span>-11.719230718431<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ymax</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>zmax</span><span class=\"token punctuation\">></span></span>40.9274766268461<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>zmax</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Box3D</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Rotation</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_00</span><span class=\"token punctuation\">></span></span>-0.635254915386682<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_00</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_01</span><span class=\"token punctuation\">></span></span>0.772302526525104<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_01</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_02</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_02</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_10</span><span class=\"token punctuation\">></span></span>-0.772302526525104<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_10</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_11</span><span class=\"token punctuation\">></span></span>-0.635254915386682<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_11</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_12</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_12</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_20</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_20</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_21</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_21</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>M_22</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>M_22</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Rotation</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>RotatedBox3D</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Object3D</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Objects</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Objects3D</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Annotations</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContextScene</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("h4", {
    "id": "3d-segmentation"
  }, "3D segmentation"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-s3d.jpg",
    "alt": "ContextScene point cloud segmentation"
  })), (0,react_.mdx)("p", null, "To store one label per point in a point cloud, what is often called ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Semantic segmentation"), ", we use the OPC format. This format with Level Of Details is designed to be streamed and efficiently displayed. Each point is decorated with a 16bit unsigned integer sets to its label. Like for 2D segmentation, the value 65535 is reserved for points where the label is unknown."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContextScene</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRS</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Definition</span><span class=\"token punctuation\">></span></span>ENU:49.14651925,-122.8868741<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Definition</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRS</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRS</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Definition</span><span class=\"token punctuation\">></span></span>EPSG:26910<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Definition</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRS</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Annotations</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Labels</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>ground<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>high vegetation<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>14<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>power_line<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>bridge<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>6<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>roof<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Labels</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segmentation3D</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRSId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRSId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>0:PointCloud.opc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segmentation3D</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Annotations</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>References</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Reference</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Path</span><span class=\"token punctuation\">></span></span>F:\\S3D_Graz\\segmentedPointCloud<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Path</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Reference</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>References</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContextScene</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("h4", {
    "id": "2d-lines"
  }, "2D lines"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-l2d.jpg",
    "alt": "ContextScene 2D lines"
  })), (0,react_.mdx)("p", null, "The following annotations describe a set of ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "lines"), " in a plane, result of the analysis of an orthophoto, it might be cracks over a road, a road network, rails, etc. We call them lines though the topology required to describe these entities could be as complex as a graph with junctions, loops, etc. Hence, a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Line2D"), " is here given by a set of 2D vertices, and a set of segments between these vertices. To describe the \u201Cthickness\u201D of the original entity which has been vectorized into a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "line"), ", we use the mathematically sounded concept of diameter. It is the diameter of the largest disc centered at a given vertex containing only points of the entity. Here is a small example:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContextScene</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRS</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Definition</span><span class=\"token punctuation\">></span></span>EPSG:32615<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Definition</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRS</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Annotations</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Labels</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>background<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>crack<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Labels</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Lines2D</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRSId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRSId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Lines</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Line2D</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelId</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertices</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>479868.86<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>4980803.44157715<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Diameter</span><span class=\"token punctuation\">></span></span>0.0202617157732701<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Diameter</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>479868.712150948<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>4980803.47680339<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Diameter</span><span class=\"token punctuation\">></span></span>0.0664043075900635<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Diameter</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>479868.341404493<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>4980803.67640449<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Diameter</span><span class=\"token punctuation\">></span></span>0.0686980153798615<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Diameter</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>479868.468095477<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>4980803.63543635<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Diameter</span><span class=\"token punctuation\">></span></span>0.0762712781246574<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Diameter</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertices</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segments</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segment</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId1</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId1</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId2</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId2</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segment</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segment</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId1</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId1</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId2</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId2</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segment</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segment</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId1</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId1</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId2</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId2</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segment</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segments</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Line2D</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Line2D</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelId</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertices</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>479874.427917961<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>4980802.47<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Diameter</span><span class=\"token punctuation\">></span></span>0.0185410197570828<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Diameter</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>479874.28053349<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>4980802.75<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Diameter</span><span class=\"token punctuation\">></span></span>0.0339112355266864<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Diameter</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>479874.373927691<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>4980802.67226102<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Diameter</span><span class=\"token punctuation\">></span></span>0.0978553816042589<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Diameter</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>479874.485410865<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>4980802.89236351<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Diameter</span><span class=\"token punctuation\">></span></span>0.0908217292202603<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Diameter</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>479874.37<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>4980802.64363961<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Diameter</span><span class=\"token punctuation\">></span></span>0.0899999999783128<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Diameter</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>479874.418415482<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>4980802.71591548<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Diameter</span><span class=\"token punctuation\">></span></span>0.0813172786177372<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Diameter</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>6<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>479874.83328093<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>4980803.53223969<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Diameter</span><span class=\"token punctuation\">></span></span>0.0816060783607562<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Diameter</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>7<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>479874.612768291<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>4980803.11426725<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Diameter</span><span class=\"token punctuation\">></span></span>0.086105905882709<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Diameter</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>479874.677758315<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>4980803.21801663<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Diameter</span><span class=\"token punctuation\">></span></span>0.0872066516702332<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Diameter</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>9<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>479874.55828698<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>4980802.99093257<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Diameter</span><span class=\"token punctuation\">></span></span>0.0900163930024753<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Diameter</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>479874.755737061<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>4980803.36709735<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Diameter</span><span class=\"token punctuation\">></span></span>0.0900001483887829<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Diameter</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>11<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>479874.456513669<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>4980802.78786825<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Diameter</span><span class=\"token punctuation\">></span></span>0.0969726626446287<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Diameter</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertices</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segments</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segment</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId1</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId1</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId2</span><span class=\"token punctuation\">></span></span>4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId2</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segment</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segment</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId1</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId1</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId2</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId2</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segment</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segment</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId1</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId1</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId2</span><span class=\"token punctuation\">></span></span>5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId2</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segment</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segment</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId1</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId1</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId2</span><span class=\"token punctuation\">></span></span>4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId2</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segment</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segment</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId1</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId1</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId2</span><span class=\"token punctuation\">></span></span>9<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId2</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segment</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segment</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId1</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId1</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId2</span><span class=\"token punctuation\">></span></span>11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId2</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segment</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segment</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId1</span><span class=\"token punctuation\">></span></span>5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId1</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId2</span><span class=\"token punctuation\">></span></span>11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId2</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segment</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segment</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId1</span><span class=\"token punctuation\">></span></span>6<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId1</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId2</span><span class=\"token punctuation\">></span></span>10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId2</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segment</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segment</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId1</span><span class=\"token punctuation\">></span></span>7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId1</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId2</span><span class=\"token punctuation\">></span></span>9<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId2</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segment</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segment</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId1</span><span class=\"token punctuation\">></span></span>7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId1</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId2</span><span class=\"token punctuation\">></span></span>8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId2</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segment</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segments</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Line2D</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Lines</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Lines2D</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Annotations</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContextScene</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("h4", {
    "id": "3d-lines"
  }, "3D lines"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-l3d.jpg",
    "alt": "ContextScene 3D lines"
  })), (0,react_.mdx)("p", null, "The following annotations describe a set of ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "lines"), " in space. It might be cracks on a bridge, power-lines, rails, etc. Like in 2D, we call them lines but the topology required to describe these entities could be as complex as a graph with junctions, loops, etc. Hence, a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Line3D"), " is here given by a set of 3D vertices, and a set of segments between these vertices. If required, to describe the \u201Cthickness\u201D of the original entity which has been vectorized into a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "line"), ", we use the mathematically sounded concept of diameter. It is the diameter of the largest ball centered at a given vertex containing only points of the entity. Here is a small example:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContextScene</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRS</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Definition</span><span class=\"token punctuation\">></span></span>EPSG:32615<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Definition</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRS</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Annotations</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Labels</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>rail<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Labels</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Lines3D</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRSId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRSId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Lines</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Line3D</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelId</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertices</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>3.27669495408764<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>-2.38028278379669<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>z</span><span class=\"token punctuation\">></span></span>8.22511614762969<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>z</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Diameter</span><span class=\"token punctuation\">></span></span>0.210008906878983<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Diameter</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>3.22462717369163<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>-1.66835993119419<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>z</span><span class=\"token punctuation\">></span></span>7.77181408678633<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>z</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Diameter</span><span class=\"token punctuation\">></span></span>0.0646228165693428<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Diameter</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>3.25055948322766<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>-2.50779389081678<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>z</span><span class=\"token punctuation\">></span></span>8.30674826296262<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>z</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Diameter</span><span class=\"token punctuation\">></span></span>0.187586254181419<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Diameter</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>3.24724600068194<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>-2.45077881319647<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>z</span><span class=\"token punctuation\">></span></span>8.27142235557896<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>z</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Diameter</span><span class=\"token punctuation\">></span></span>0.131823435832277<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Diameter</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertices</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segments</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segment</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId1</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId1</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId2</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId2</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segment</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segment</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId1</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId1</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId2</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId2</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segment</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Segment</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId1</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId1</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId2</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId2</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segment</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Segments</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Line3D</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Lines</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Lines3D</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Annotations</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContextScene</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("h4", {
    "id": "2d-polygons"
  }, "2D polygons"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-polygons.jpg",
    "alt": "ContextScene 2D polygons"
  })), (0,react_.mdx)("p", null, "The following annotations describe a set of 2D ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "polygons"), " in space. It might be building contours, regions with rust, etc. A ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Polygon2D"), " is defined by a set of 2D vertices and a set of closed lines, at least one outer boundary, and optionally several inner boundaries. Here is a small example:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-xml",
    "data-language": "xml",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContextScene</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRS</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Definition</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Definition</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRS</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SpatialReferenceSystems</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Annotations</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Labels</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>background<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>Vegetation<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Contour</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Contour</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>Building<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>Grass<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>Car<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>Road<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Labels</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Polygons2D</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SRSId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SRSId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Polygons</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Polygon2D</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LabelId</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelId</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>LabelInfo</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Height</span><span class=\"token punctuation\">></span></span>420.04<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Height</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertices</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>533590.737633621<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>5212422.93763362<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>533600.137633621<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>5212428.53763362<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>533597.137633621<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>5212428.83763362<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>533601.152966436<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>5212432.04762955<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>533603.937633621<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>5212431.03763362<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>533603.937633621<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>5212430.23763362<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>6<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>533605.488269949<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>5212432.49451427<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>7<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>533603.437633621<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>5212435.13763362<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>11<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>533597.566139143<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>5212440.94099575<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Vertex</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>12<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Position</span><span class=\"token punctuation\">></span></span>\n                              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>533597.235569462<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n                              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>y</span><span class=\"token punctuation\">></span></span>5212441.80559382<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>y</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Position</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertex</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Vertices</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>OuterBoundary</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexIds</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId</span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId</span><span class=\"token punctuation\">></span></span>4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexIds</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>OuterBoundary</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>InnerBoundaries</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>InnerBoundary</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexIds</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId</span><span class=\"token punctuation\">></span></span>10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId</span><span class=\"token punctuation\">></span></span>11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId</span><span class=\"token punctuation\">></span></span>12<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexIds</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>InnerBoundary</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>InnerBoundary</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexIds</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId</span><span class=\"token punctuation\">></span></span>5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId</span><span class=\"token punctuation\">></span></span>6<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VertexId</span><span class=\"token punctuation\">></span></span>7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexId</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>VertexIds</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>InnerBoundary</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>InnerBoundaries</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Polygon2D</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Polygons</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Polygons2D</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Annotations</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContextScene</span><span class=\"token punctuation\">></span></span>\n"
    }
  })), (0,react_.mdx)("h4", {
    "id": "other-annotations"
  }, "Other annotations"), (0,react_.mdx)("p", null, "Some types of annotation are not part of the ContextScene format yet. Since they are planned, and because workarounds are available, it seems important to mention them here:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("em", {
    parentName: "li"
  }, "Positions"), ":")), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-positions.jpg",
    "alt": "ContextScene 3D locations"
  })), (0,react_.mdx)("p", null, "When the spatial extension of objects is useless but only their location is of interest, some Reality Analysis jobs export these positions in ESRI SHP files. This is not yet persisted in a ContextScene. A workaround so far is to the center point of their 3D boxes."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("em", {
    parentName: "li"
  }, "Tags"), ":")), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-tags.jpg",
    "alt": "ContextScene tags"
  })), (0,react_.mdx)("p", null, "in some cases, no position at all is required, but just a list of labels. For instance: \u201Cthis image contains people and cars\u201D. This case is not available yet and will be added."));
}
;
MDXContent.isMDXComponent = true;
var tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "context-scenes-version-4-to-be-deprecated",
    level: 2,
    title: "Context Scenes version 4 (to be deprecated)",
    children: [{
      id: "1-photos",
      level: 3,
      title: "1) Photos",
      children: []
    }, {
      id: "2-photos-with-positions",
      level: 3,
      title: "2) Photos with positions",
      children: []
    }, {
      id: "3-photos-with-orientations",
      level: 3,
      title: "3) Photos with orientations",
      children: []
    }, {
      id: "4-orthophoto",
      level: 3,
      title: "4) Orthophoto",
      children: []
    }, {
      id: "5-orthophoto-with-height",
      level: 3,
      title: "5) Orthophoto with height",
      children: []
    }, {
      id: "6-meshes",
      level: 3,
      title: "6) Meshes",
      children: []
    }, {
      id: "7-point-clouds",
      level: 3,
      title: "7) Point Clouds",
      children: []
    }, {
      id: "8-annotations",
      level: 3,
      title: "8) Annotations",
      children: []
    }]
  }];
};
var frontMatter = {};
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/pages/ApiDocumentation/RealityDataAnalysisContextScene_V4.tsx
/* eslint-disable import/no-webpack-loader-syntax */





function RealityDataAnalysisContextScene() {
  return /*#__PURE__*/_jsx(MDXProvider, {
    components: mdComponents,
    children: /*#__PURE__*/_jsx(Document, {})
  });
}

/***/ }),

/***/ 92520:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: default

// EXTERNAL MODULE: ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(83798);
// EXTERNAL MODULE: ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules
var objectWithoutProperties = __webpack_require__(31117);
// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);
// EXTERNAL MODULE: external "@mdx-js/react"
var react_ = __webpack_require__(57425);
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/documentation/apis/realitydataanalysis-jobtypes.md


var _excluded = ["components"];
var __jsx = (external_react_default()).createElement;


var readingTime = {
  "text": "13 min read",
  "minutes": 12.355,
  "time": 741300,
  "words": 2471
};
/* @jsxRuntime classic */
/* @jsx mdx */

var layoutProps = {};
var MDXLayout = "wrapper";
function MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);
  return (0,react_.mdx)(MDXLayout, (0,esm_extends/* default */.Z)({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)("h2", {
    "id": "reality-analysis-job-types"
  }, "Reality Analysis job types"), (0,react_.mdx)("p", null, "Reality Analysis jobs are classified in different types, depending on the main kind of output they produce. Here are these ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "job types"), ". For each type, we detail here the different arguments in a more compact way than in the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/realitydataanalysis/operations/"
  }, "API Reference"), ". Though reserved for advanced usage, we also specify in a column the relevant parameters for cost estimation since they depend on the job type."), (0,react_.mdx)("h3", {
    "id": "objects2d"
  }, "Objects2D"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-o2d.jpg",
    "alt": "ContextScene 2D objects"
  })), (0,react_.mdx)("p", null, "The following analysis are available:"), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Purpose"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Inputs"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Outputs"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Cost estimation parameters"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "Detect objects in photos")), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "photos, photoObjectDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "objects2D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "gigaPixels, numberOfPhotos, detectorCost")))), (0,react_.mdx)("br", null), (0,react_.mdx)("p", null, "where the arguments are:"), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Type"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Name"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Reality Data type"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Description"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "photos"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "photos to analyze"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "photoObjectDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "photo object detector to apply"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "objects2D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "objects detected in photos"))))), (0,react_.mdx)("br", null), (0,react_.mdx)("h3", {
    "id": "segmentation2d"
  }, "Segmentation2D"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-s2d1.jpg",
    "alt": "ContextScene 2D segmentation"
  })), (0,react_.mdx)("p", null, "The following analysis are available:"), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Purpose"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Inputs"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Outputs"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Cost estimation parameters"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "Segmentation of photos")), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "photos, photoSegmentationDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "segmentation2D, segmentedPhotos"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "gigaPixels, detectorCost")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "Segmentation of orthophoto")), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "orthophoto, orthophotoSegmentationDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "segmentation2D, segmentedPhotos, polygons2D (opt.), exportedPolygons2DSHP (opt. and only if polygons2D is set), lines2D (opt.), exportedLines2DDGN (opt. and only if lines2D is set), exportedLines2DSHP (opt. and only if lines2D is set)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "sceneWidth, sceneLength, detectorScale, detectorCost")))), (0,react_.mdx)("br", null), (0,react_.mdx)("p", null, "where the arguments are:"), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Type"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Name"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Reality Data type"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Description"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "photos"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "photos to analyze"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "photoSegmentationDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "photo segmentation detector to apply"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "orthophoto"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "orthophoto to analyze"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "orthophotoSegmentationDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "orthophoto segmentation detector to apply"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "segmentation2D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "2D segmentation"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "segmentedPhotos"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "CCImageCollection"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "segmented photos (used by segmentation2D)"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "polygons2D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "detected 2D polygons"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportedPolygons2DSHP"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "SHP"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "2D polygons exported to ESRI shapefile"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "lines2D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "detected 2D lines"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportedLines2DDGN"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "DGN"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "2D lines exported to DGN file"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportedLines2DSHP"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "SHP"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "2D lines exported to ESRI shapefile"))))), (0,react_.mdx)("br", null), (0,react_.mdx)("h3", {
    "id": "objects3d"
  }, "Objects3D"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-o3d.jpg",
    "alt": "ContextScene 3D objects"
  })), (0,react_.mdx)("p", null, "This job detects 3D objects from 2D objects detected in oriented photos. An optional collection of point clouds or meshes might help estimating 3D objects. The following analyses are available:"), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Purpose"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Inputs"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Outputs"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Parameters"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Cost estimation parameters"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "Detect 2D objects in oriented photos and infer 3D objects")), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "orientedPhotos, photoObjectDetector, pointClouds (opt.), meshes (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "objects3D, objects2D, exportedObjects3DDGN (opt.), exportedObjects3DCesium (opt.), exportedLocations3DSHP (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportSrs (opt.), minPhotos (opt.),maxDist (opt.), useTiePoints  (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "gigaPixels, numberOfPhotos, detectorCost")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "Given 2D objects in oriented photos, infer 3D objects")), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "orientedPhotos, objects2D, pointClouds (opt.), meshes (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "objects3D, exportedObjects3DDGN (opt.), exportedObjects3DCesium (opt.), exportedLocations3DSHP (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportSrs (opt.), minPhotos (opt.),maxDist (opt.), useTiePoints  (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "numberOfPhotos")))), (0,react_.mdx)("br", null), (0,react_.mdx)("p", null, "where the  arguments are:"), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Type"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Name"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Reality Data type"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Description"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "orientedPhotos"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "oriented photos to analyze"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "photoObjectDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "photo object detector"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "pointClouds"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "collection of point clouds"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "meshes"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "collection of meshes"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "objects3D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "detected 3D objects"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportedObjects3DDGN"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "DGN"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "DGN file export with 3D objects"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportedObjects3DCesium"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Cesium3DTiles"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "Cesium 3D Tiles file export with 3D objects"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportedLocations3DSHP"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "SHP"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "ESRI SHP file export with locations of the 3D objects"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output/input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "objects2D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "If output: 2D objects detected by current job. If input: given 2D objects."))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "parameter"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportSrs"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "SRS used by exports"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "parameter"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "minPhotos"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "int"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "minimum number of 2D objects to generate a 3D object"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "parameter"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "maxDist"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "float"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "maximum distance between photos and 3D objects"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "parameter"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "useTiePoints"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "boolean"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "improve detection using tie points in orientedPhotos (advanced)"))))), (0,react_.mdx)("br", null), (0,react_.mdx)("h3", {
    "id": "segmentation3d"
  }, "Segmentation3D"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-s3d.jpg",
    "alt": "ContextScene 3D segmentation"
  })), (0,react_.mdx)("p", null, "The main purpose of this job is to classify each point of a point cloud. Many variant are available:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "it may start from a mesh."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "the 3D segmentation may be used to infer 3D objects."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "a 2D object detection may be used to improve 3D objects separation.")), (0,react_.mdx)("p", null, "Finally, the following analysis are available:"), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Purpose"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Inputs"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Outputs"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Parameters"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Cost estimation parameters"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "(1) Segment a collection of point clouds")), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "pointClouds, pointCloudSegmentationDetector, clipPolygon (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "segmentation3D, segmentedPointCloud, exportedSegmentation3DLAS (opt.), exportedSegmentation3DLAZ (opt.), exportedSegmentation3DPOD (opt.), exportedSegmentation3DPLY (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportSrs (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "sceneWidth, sceneLength, sceneHeight, detectorScale, detectorCost")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "(2) Segment a collection of meshes")), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "meshes, pointCloudSegmentationDetector, clipPolygon (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "same as (1)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportSrs (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "sceneWidth, sceneLength, sceneHeight, detectorScale, detectorCost")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "(3) Segment a collection of point clouds or meshes and infer 3D objects")), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "same as (1) or (2)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "same as (1) or (2) + objects3D, exportedObjects3DDGN (opt.), exportedObjects3DCesium (opt.), exportedLocations3DSHP (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportSrs (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "sceneWidth, sceneLength, sceneHeight, detectorScale, detectorCost")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "(4) Segment a collection of point clouds or meshes and infer 3D objects, using 2D object detection to improve 3D objects separation")), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "same as (3) + orientedPhotos, photoObjectsDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "same as (3) + objects2D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportSrs (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "sceneWidth, sceneLength, sceneHeight, gigaPixels, numberOfPhotos, detectorScale, detectorCost")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "(5) Segment a collection of point clouds or meshes and infer 3D objects, using given 2D object detection to improve 3D objects separation")), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "same as (4) with objects2D instead of photoObjectsDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "same as (4) except object2D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportSrs (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "TBD")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "(6) Same as any above but starts from a previous 3D segmentation")), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "same as above with segmentation3D instead of pointClouds, meshes and pointCloudSegmentationDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "same as above except segmentation3D and segmentedPointCloud"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportSrs (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "TBD")))), (0,react_.mdx)("br", null), (0,react_.mdx)("p", null, "where the  arguments are:"), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Type"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Name"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Reality Data type"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Description"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "pointClouds"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "collection of point clouds"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "meshes"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "collection of meshes"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "pointCloudSegmentationDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "point cloud segmentation detector"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "orientedPhotos"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "photos and their orientation"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "photoObjectDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "object detector to analyze oriented photos"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "clipPolygon"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Unstructured"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "clipping polygon to limit the analysis to a given region"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output/input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "segmentation3D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "If output: 3D segmentation computed by current job. If input: given 3D segmentation."))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "segmentedPointCloud"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OPC"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "3D segmentation as an OPC file (used by segmentation3D)."))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportedSegmentation3DPOD"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "PointCloud"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "3D segmentation exported as a POD file."))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportedSegmentation3DLAS"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "LAS"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "3D segmentation exported as a LAS file."))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportedSegmentation3DLAZ"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "LAZ"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "3D segmentation exported as a LAZ file."))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportedSegmentation3DPLY"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "PLY"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "3D segmentation exported as a PLY file."))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "objects3D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "3D objects inferred from 3D segmentation"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportedObjects3DDGN"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "DGN"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "DGN file export with 3D objects"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportedObjects3DCesium"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Cesium3DTiles"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "Cesium 3D Tiles file export with 3D objects"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportedLocations3DSHP"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "SHP"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "ESRI SHP file export with locations of the 3D objects"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output/input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "objects2D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "If output: 2D objects detected by current job. If input: given 2D objects."))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "parameter"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportSRS"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "SRS used by exports."))))), (0,react_.mdx)("br", null), (0,react_.mdx)("h3", {
    "id": "lines3d"
  }, "Lines3D"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-l3d.jpg",
    "alt": "ContextScene 3D lines"
  })), (0,react_.mdx)("p", null, "The main purpose of this job if to detect 3D lines in a segmented point cloud. Many variants are available:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "it may start from a mesh."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "instead of using a 3D segmentation, it may segment oriented photos and back-project 2D segmentation on the point cloud or the mesh."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "it may also detect regions (", (0,react_.mdx)("em", {
    parentName: "li"
  }, "3D patches"), "). As of today, these regions are stored and exported like 3D objects. Future versions will use a specific format.")), (0,react_.mdx)("p", null, "Finally, the following analysis are available:"), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Purpose"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Inputs"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Outputs"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Parameters"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Cost estimation parameters"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "Segment a collection of point cloud and detect 3D lines")), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "pointClouds, pointCloudSegmentationDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "lines3D, segmentation3D, segmentedPointCloud, exportedLines3DDGN (opt.), exportedLines3DCesium (opt.), patches3D (opt.), exportedPatches3DDGN (opt.), exportedPatches3DCesium (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportSrs (opt.), removeSmallComponents (opt.),computeLinedWidth (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "sceneWidth, sceneLength, sceneHeight, detectorScale, detectorCost")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "Segment a collection of meshes and detect 3D lines")), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "meshes, pointCloudSegmentationDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "lines3D, segmentation3D, segmentedPointCloud, exportedLines3DDGN (opt.), exportedLines3DCesium (opt.), patches3D (opt.), exportedPatches3DDGN (opt.), exportedPatches3DCesium (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportSrs (opt.), removeSmallComponents (opt.),computeLinedWidth (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "sceneWidth, sceneLength, sceneHeight, detectorScale, detectorCost")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "Given a 3D segmentation, detect 3D lines")), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "segmentation3D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "lines3D, exportedLines3DDGN (opt.), exportedLines3DCesium (opt.), patches3D (opt.), exportedPatches3DDGN (opt.), exportedPatches3DCesium (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportSrs (opt.), removeSmallComponents (opt.),computeLinedWidth (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "sceneWidth, sceneLength, sceneHeight, detectorScale")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "Segment oriented photos, project on a collection of point clouds to get a 3D segmentation and detect 3D lines")), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "pointClouds, orientedPhotos, photoSegmentationDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "lines3D, segmentation2D, segmentedPhotos, exportedLines3DDGN (opt.), exportedLines3DCesium (opt.), patches3D (opt.), exportedPatches3DDGN (opt.), exportedPatches3DCesium (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "minPhotos (opt.), exportSrs (opt.), removeSmallComponents (opt.),computeLinedWidth (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "gigaPixels, detectorCost")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "Given a 2D segmentation of oriented photos, project on a collection of point clouds to get a 3D segmentation and detect 3D lines")), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "pointClouds, orientedPhotos, segmentation2D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "lines3D, exportedLines3DDGN (opt.), exportedLines3DCesium (opt.), patches3D (opt.), exportedPatches3DDGN (opt.), exportedPatches3DCesium (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "minPhotos (opt.), exportSrs (opt.), removeSmallComponents (opt.),computeLinedWidth (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "TBD")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "Segment oriented photos, project on a collection of meshes to get a 3D segmentation and detect 3D lines")), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "meshes, orientedPhotos, photoSegmentationDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "lines3D, segmentation2D,  segmentedPhotos, exportedLines3DDGN (opt.), exportedLines3DCesium (opt.), patches3D (opt.), exportedPatches3DDGN (opt.), exportedPatches3DCesium (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "minPhotos (opt.), exportSrs (opt.), removeSmallComponents (opt.),computeLinedWidth (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "gigaPixels")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "Given a 2D segmentation of oriented photos, project on a collection of meshes to get a 3D segmentation and detect 3D lines")), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "meshes, orientedPhotos, segmentation2D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "lines3D, exportedLines3DDGN (opt.), exportedLines3DCesium (opt.), patches3D (opt.), exportedPatches3DDGN (opt.), exportedPatches3DCesium (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "minPhotos (opt.), exportSrs (opt.), removeSmallComponents (opt.),computeLinedWidth (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "TBD")))), (0,react_.mdx)("br", null), (0,react_.mdx)("p", null, "where the  arguments are:"), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Type"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Name"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Reality Data type"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Description"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "pointClouds"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "collection of point clouds"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "meshes"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "collection of meshes"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "pointCloudSegmentationDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "point cloud segmentation detector"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "orientedPhotos"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "photos and their orientation"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "photoSegmentationDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "segmentation detector to apply to oriented photos"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "lines3D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "detected 3D lines"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportedLines3DDGN"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "DGN"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "DGN file export with 3D lines"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportedLines3DCesium"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Cesium3DTiles"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "Cesium 3D Tiles file export with 3D lines"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "patches3D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "detected 3D patches"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportedPatches3DDGN"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "DGN"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "DGN file export with 3D patches"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportedPatches3DCesium"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Cesium3DTiles"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "Cesium 3D Tiles file export with 3D patches"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output/input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "segmentation3D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "If output: 3D segmentation performed by current job. If input: given 3D segmentation."))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "segmentedPointCloud"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OPC"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "3D segmentation as an OPC file."))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output/input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "segmentation2D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "If output: 2D segmentation performed by current job. If input: given 2D segmentation."))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "segmentedPhotos"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "CCImageCollection"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "segmented photos (used by segmentation2D)"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "parameter"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "minPhotos"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "int"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "minimum number of 2D detection to generate a 3D detection"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "parameter"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportSrs"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "SRS used by exports"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "parameter"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "removeSmallComponents"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "float"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "remove 3D lines with total length smaller than this value"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "parameter"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "computeLinedWidth"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "boolean"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "estimation 3D line width at each vertex"))))), (0,react_.mdx)("br", null), (0,react_.mdx)("h3", {
    "id": "changedetection"
  }, "ChangeDetection"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/rda/contextscene-cd.jpg",
    "alt": "ContextScene change detection"
  })), (0,react_.mdx)("p", null, "This job detects changes between two collections of point clouds or meshes3D. It uses distance or changes of color between the two collections. The output is a set of 3D objects capturing the regions with changes. This jobs does not use Machine Learning yet."), (0,react_.mdx)("p", null, "The following analysis are available:"), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Purpose"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Inputs"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Outputs"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Parameters"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Cost estimation parameters"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "*Detect changes between two collections of point clouds"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "pointClouds1, pointClouds2"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "objects3D, exportedLocations3DSHP (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportSrs (opt.), colorThresholdLow (opt.),colorThresholdHigh (opt.), distThresholdLow (opt.),distThresholdHigh (opt.), minPoints (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "sceneWidth, sceneLength, sceneHeight, resolution")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "*Detect changes between two collections of meshes"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "meshes1, meshes2"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "objects3D, exportedLocations3DSHP (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "resolution, exportSrs (opt.), colorThresholdLow (opt.),colorThresholdHigh (opt.), distThresholdLow (opt.),distThresholdHigh (opt.), minPoints (opt.)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "sceneWidth, sceneLength, sceneHeight, resolution")))), (0,react_.mdx)("br", null), (0,react_.mdx)("p", null, "where the  arguments are:"), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Type"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Name"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Reality Data type"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Description"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "pointClouds1"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "first collection of point clouds"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "pointClouds2"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "second collection of point clouds"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "meshes1"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "first collection of meshes"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "input"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "meshes2"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "second collection of meshes"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "objects3D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "regions with changes"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "output"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportedLocations3DSHP"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "SHP"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "ESRI SHP file export with locations of regions with changes"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "parameter"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "resolution"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "float"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "target point cloud resolution when starting from meshes"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "parameter"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "exportSrs"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "SRS used by exports"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "parameter"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "colorThresholdLow"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "float"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "low threshold to detect color changes (hysteresis detection)"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "parameter"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "colorThresholdHigh"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "float"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "high threshold to detect color changes (hysteresis detection)"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "parameter"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "distThresholdLow"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "float"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "low threshold to detect spatial changes (hysteresis detection)"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "parameter"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "distThresholdHigh"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "float"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "high threshold to detect spatial changes (hysteresis detection)"))), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "parameter"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "minPoints"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "int"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, (0,react_.mdx)("em", {
    parentName: "td"
  }, "minimum number of points in a region to be considered as a change"))))), (0,react_.mdx)("br", null));
}
;
MDXContent.isMDXComponent = true;
var tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "reality-analysis-job-types",
    level: 2,
    title: "Reality Analysis job types",
    children: [{
      id: "objects2d",
      level: 3,
      title: "Objects2D",
      children: []
    }, {
      id: "segmentation2d",
      level: 3,
      title: "Segmentation2D",
      children: []
    }, {
      id: "objects3d",
      level: 3,
      title: "Objects3D",
      children: []
    }, {
      id: "segmentation3d",
      level: 3,
      title: "Segmentation3D",
      children: []
    }, {
      id: "lines3d",
      level: 3,
      title: "Lines3D",
      children: []
    }, {
      id: "changedetection",
      level: 3,
      title: "ChangeDetection",
      children: []
    }]
  }];
};
var frontMatter = {};
// EXTERNAL MODULE: ./src/components/mdx/documentation.tsx + 1 modules
var documentation = __webpack_require__(963);
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/pages/ApiDocumentation/RealityDataAnalysisJobTypes.tsx
/* eslint-disable import/no-webpack-loader-syntax */





function RealityDataAnalysisJobTypes() {
  return /*#__PURE__*/_jsx(MDXProvider, {
    components: mdComponents,
    children: /*#__PURE__*/_jsx(Document, {})
  });
}

/***/ }),

/***/ 55658:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: default

// EXTERNAL MODULE: ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(83798);
// EXTERNAL MODULE: ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules
var objectWithoutProperties = __webpack_require__(31117);
// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);
// EXTERNAL MODULE: external "@mdx-js/react"
var react_ = __webpack_require__(57425);
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/documentation/apis/rm-realitydata-details.md


var _excluded = ["components"];
var __jsx = (external_react_default()).createElement;


var readingTime = {
  "text": "11 min read",
  "minutes": 10.975,
  "time": 658500,
  "words": 2195
};
/* @jsxRuntime classic */
/* @jsx mdx */

var layoutProps = {};
var MDXLayout = "wrapper";
function MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);
  return (0,react_.mdx)(MDXLayout, (0,esm_extends/* default */.Z)({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)("h1", {
    "id": "reality-data-properties"
  }, "Reality Data Properties"), (0,react_.mdx)("p", null, "This page describes the reality data properties in detail. All the properties appear in the list below. Some properties have an additional section below the table that explains the property further."), (0,react_.mdx)("p", null, "Reality data must use the required properties listed below."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "displayName")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "type"))), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Property"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Type"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Required?"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Read-only?"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Description"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "id"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string (guid)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Generated"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Read-only"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Guid Identifier of the reality data. This identifier is assigned by the service at the creation of the reality data. It is also unique.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "displayName"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Required"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "The name of the reality data. This property may not contain any control sequence such as a URL or code.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "dataset"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Optional"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "This field can be used to define a loose grouping of reality data. This property may not contain any control sequence such as a URL or code.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "group"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Optional"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "This field can also be used to define a second level of grouping.This property may not contain any control sequence such as a URL or code.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "description"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Optional"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "A textual description of the reality data. This property may not contain any control sequence such as a URL or code.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "tags"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "array"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Optional"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Textual identifiers to identify reality data.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "dataCenterLocation"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Generated"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Read-only"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Identifies the Azure Data Center used. for details about Data Center refer to the DataCenterLocation section below.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "rootDocument"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Optional"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Used to indicate the root document of the reality data. The root document can be in a subfolder and is then specified. e.g. \u201CTile_Root.json\u201D or \u201CFolder1/SubFolder1/File.json\u201D are valid values. The service reserves the right to validate the existence of the indicated file. See the Root Document section below for more details.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "size"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "integer"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Generated"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Read-only"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "The size of the reality data in Kilobytes. This size can be temporarily not up to date after a change, see Authoring and Size section below.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "authoring"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "boolean"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Optional"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "A boolean value that indicates if data is being created or uploaded. See Authoring section for details.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "classification"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Optional"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Specific value constrained field that indicates the nature of the reality data. See Classification and Type section for details.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "type"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Required"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "A key indicating the format of the data. See Type section below about registered types and more details.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "acquisition"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "object"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Optional"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Provides information regarding the acquisition, such as dates and acquirer used. See Acquisition section below.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "extent"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "object"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Optional"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Modifiable"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "contains the rectangular area on the Earth which encloses the reality data. See Extent section below.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "modifiedDateTime"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string(date)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Generated"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Read-only"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Read-Only. ISO-8601 compliant time (UTC) of last modification of the reality data. e.g. \u201C2017\u201305\u201310T13:43:03Z\u201D")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "lastAccessedDateTime"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string(date)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Generated"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Read-only"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Read-Only. ISO-8601 compliant time (UTC) of last access of the reality data. e.g. \u201C2017\u201305\u201310T13:43:03Z\u201D")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "createdDateTime"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "string(date)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Generated"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Read-only"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Read-Only. ISO-8601 compliant time (UTC) of the creation of the reality data. e.g. \u201C2017\u201305\u201310T13:43:03Z\u201D")))), (0,react_.mdx)("h3", {
    "id": "authoring"
  }, "Authoring"), (0,react_.mdx)("p", null, "The Authoring property value is not controlled by the Reality Management API, it is left to be managed by the application. The value also does not change the behavior of the API. The purpose of this property is to show if new model data is being uploaded to the reality data. This is particularly useful when a reality data is shared or possibly managed by multiple users. It is up to the creator of the application to implement behavior within the application that uses the Authoring property value."), (0,react_.mdx)("h3", {
    "id": "classification-and-types"
  }, "Classification and Types"), (0,react_.mdx)("h4", {
    "id": "classification"
  }, "Classification"), (0,react_.mdx)("p", null, "While Classification defines the nature of the reality data, it is related to the Type property."), (0,react_.mdx)("p", null, "The following values are currently supported:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Terrain"), ": Data is a representation of the terrain."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Imagery"), ": Data is vertical, satellite or orthophoto imagery."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Pinned"), ": Any non-geographic data that may be pinned to a location on Earth."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Model"), ": Most common classification. Data is a modelisation of the a real world object or feature."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Undefined"), ": For non-reality data used as input for reality data creation.")), (0,react_.mdx)("h4", {
    "id": "types"
  }, "Types"), (0,react_.mdx)("p", null, "The reality management API supports many different types of reality data.\nRefer to the table below to see which types are explicitly supported by the API.\nYou can also define your own type if you do not see the one you need in the table."), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Display Type"), " column lists the common name of the various types of reality data."), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Type"), " column lists the strings used by the API.\nPass one of these strings when setting the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "type"), " property through the API.\nThe type indicates the format of the reality data files.\nThe ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "type"), " property is a free string. You can define your own types if needed.\nHowever, some specific type keywords are reserved.\nThe type values listed in the table are reserved keywords."), (0,react_.mdx)("p", null, "Usually, the type clearly imposes the classification.\nPoint Clouds, Web Ready Scalable Meshs, and Reality Modeling 3MX are necessarily Model data since they are modelisations of the real world.\nDetermine which classification value to use based on your type of reality data by referring to the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Classification"), " column.\nSome types can have different possible classifications.\nFor example, the TIF format supports the storage of Terrain data when the pixel is elevation data or Imagery for satellite data. Likewise, a JPG file can represent an orthophoto (Imagery) or be an oblique picture of a feature (a neighborhood, people, etc.) and can be classified as Pinned data. Similarly, a PDF document could be a written document (Pinned) or a Map (Model)."), (0,react_.mdx)("p", null, "At this time, not all reality data types can be visualized in the iTwin Viewer.\nAny types in the table that have a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Yes"), " in their ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iTwin.js Ready"), " column can be visualized.\nSome types can be converted to a format that can be visualized by the iTwin Viewer. See the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/realityconversion/"
  }, "Reality Conversion API"), " for more information."), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Display Type"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Type"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Classification"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "iTwin.js Ready"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Cesium 3D Tiles"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Cesium3DTiles"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Yes")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Cesium 3D Point Cloud"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "PNTS"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Yes")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Web Ready Orbit Point Cloud"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OPC"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Yes")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Web Ready 3D Scalable Mesh"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "RealityMesh3DTiles"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Yes")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Web Ready Terrain Scalable Mesh"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Terrain3DTiles"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Yes")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Reality Modeling 3MX"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "3MX"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "3D Scalable Mesh"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "3SM"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Reality Modeling Cloud Project"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "CCCloudProject"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Reality Modeling Image Collection"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "CCImageCollection"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Reality Modeling Orientations"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "CCOrientations"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Reality Modeling Inputs"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextCaptureInputs"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Context Detector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextDetector"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Context Scene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ContextScene"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Collada"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "DAE"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Bentley DGN"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "DGN"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Digital Surface Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "DSM"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Autodesk FBX"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "FBX"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Graphics Language Binary"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "GLB"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Graphics Language Transmission Format"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "GLTF"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Google Earth KML"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "KML"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "LAS Point Cloud"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "LAS"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "LAZ Point Cloud"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "LAZ"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "LOD Tree"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "LOD"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OpenCities Planner LodTree"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "LodTree"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Wavefront OBJ"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OBJ"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Multiresolution Image"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OMI"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Imagery"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Mapping Resource"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OMR"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Imagery"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Orthophoto"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Imagery"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Orthophoto and DSM"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OrthophotoDSM"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Imagery"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OpenSceneGraph Binary"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OSGB"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Vector File"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OVF"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Tiled Vector File"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "OVT"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Polygon File Format"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "PLY"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Pointools POD"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "PointCloud"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Smart3D Capture"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "S3C"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Reality Modeling Scan Collection"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ScanCollection"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "ESRI Shapefile"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "SHP"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Scene Layer Package (SPLK)"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "SLPK"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "SpaceEyes3D Builder"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "SpaceEyes3D"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Stereo Lithography"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "STL"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Terrain Scalable Mesh"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "TSM"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Model"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Unstructured Data"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Unstructured"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Undefined"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Other File Formats", "*"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "TIF/JPG/PDF/etc.", "*"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Varies", "*", "*"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  })))), (0,react_.mdx)("p", null, "*", " This is not a type explicitly supported by the API. Instead, it is a \u201Ccatch-all\u201D meant to show that more file types can be used.\nThe Type property values included in this row are just examples and are not reserved keywords."), (0,react_.mdx)("p", null, "*", "*", " Varies is not a valid classification value. This term is used to show that the classification value depends on the content contained in the reality data."), (0,react_.mdx)("h3", {
    "id": "root-document"
  }, "Root Document"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "rootDocument"), " property represents the path to the root document file.\nThe root document is a manifest containing a variety of information about the reality data.\nFor example, you can use the root document to navigate through the other reality data files and display them at various levels of detail.\nYou can think of the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "rootDocument"), " property as metadata that your application can use to consume the reality data."), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "rootDocument"), " property is required to visualize your reality data in an iTwin Viewer. The iTwin Viewer uses the root document file to parse how it should render your reality data. For example, the root document often contains information required to geolocate your reality data. Not all reality data types can be visualized in the Viewer at this time.\nHowever, including the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "rootDocument"), " property can still help your client app navigate through the reality data files even if they cannot be visualized."), (0,react_.mdx)("p", null, "If the root document file is at the root of your reality data folder structure, then the property\u2019s value is ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "{root_document_file_name}"), ",\nwhere the value of ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "{root_document_file_name}"), " depends on your reality data type.\nIf your reality data file is nested inside sub-folders, then the property\u2019s value is ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "{path_to_root_document}/{root_document_file_name}"), ",\nwith ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "{path_to_root_document}"), " depending on your file structure."), (0,react_.mdx)("p", null, "Recognizing which file is the root document requires some level of familiarity with the reality data type you are working with.\nFor the reality data types that can be visualized in the iTwin Viewer, we provide a hint for identifying the root document in the table below."), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Type"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "left"
  }, "Root Document"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Cesium 3D Tiles"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "The file with the .json extension in the root folder.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Cesium 3D Point Cloud"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "The file with the .json extension in the root folder.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Web Ready Orbit Point Cloud"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "The file with the .opc extension in the root folder.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Web Ready 3D Scalable Mesh"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "The file with the .json extension in the root folder. Often named ", (0,react_.mdx)("em", {
    parentName: "td"
  }, "n_0.json"), ".")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "Web Ready Terrain Scalable Mesh"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "left"
  }, "The file with the .json extension in the root folder.")))), (0,react_.mdx)("h3", {
    "id": "datacenterlocation"
  }, "DataCenterLocation"), (0,react_.mdx)("p", null, "DataCenterLocation represents a data center location. The Reality Management API supports many different data location geographically located at different places. Usually, the data center location is the same as the iTwin in which the reality data is created."), (0,react_.mdx)("p", null, "Data center locations used by Reality Management API are :"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "East US")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "North Europe")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Southeast Asia")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Japan East")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "UK South")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Australia East")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Canada Central")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Central India"))), (0,react_.mdx)("h3", {
    "id": "acquisition"
  }, "Acquisition"), (0,react_.mdx)("p", null, "The Acquisition object contains the ISO-8601 compliant start time and end time (UTC) of data acquisition, as well as the Acquirer. The Acquirer is a text indicating by whom or what instance or process has acquired the data. See example below:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token property\">\"acquisition\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"startDateTime\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2021-05-12T20:03:12Z\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"endDateTime\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2021-05-15T05:07:18Z\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"acquirer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Data Acquisition Inc.\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n"
    }
  })), (0,react_.mdx)("h3", {
    "id": "extent"
  }, "Extent"), (0,react_.mdx)("p", null, "The Extent contains the rectangular area on the Earth which encloses the reality data. Defined by the most southwestern point and the most northeastern point. The latitude and longitude types are ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "double"), ". See example below:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token property\">\"extent\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token property\">\"southWest\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token property\">\"latitude\"</span><span class=\"token operator\">:</span> <span class=\"token number\">50.1171</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token property\">\"longitude\"</span><span class=\"token operator\">:</span> <span class=\"token number\">-122.9543</span>\n              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n              <span class=\"token property\">\"northEast\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token property\">\"latitude\"</span><span class=\"token operator\">:</span> <span class=\"token number\">50.1172</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token property\">\"longitude\"</span><span class=\"token operator\">:</span> <span class=\"token number\">-122.9543</span>\n              <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n"
    }
  })), (0,react_.mdx)("h3", {
    "id": "size"
  }, "Size"), (0,react_.mdx)("p", null, "After the model data is uploaded successfully to the reality data, whether due to the creation or a modification of the reality data, the Size property is then scheduled to be recalculated. This process can take a few minutes, so the Size value might not be accurate immediately after the upload is complete. For large model uploads, meaning a few gigabytes or more, this process can take longer."));
}
;
MDXContent.isMDXComponent = true;
var tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "authoring",
    level: 3,
    title: "Authoring",
    children: []
  }, {
    id: "classification-and-types",
    level: 3,
    title: "Classification and Types",
    children: []
  }, {
    id: "root-document",
    level: 3,
    title: "Root Document",
    children: []
  }, {
    id: "datacenterlocation",
    level: 3,
    title: "DataCenterLocation",
    children: []
  }, {
    id: "acquisition",
    level: 3,
    title: "Acquisition",
    children: []
  }, {
    id: "extent",
    level: 3,
    title: "Extent",
    children: []
  }, {
    id: "size",
    level: 3,
    title: "Size",
    children: []
  }];
};
var frontMatter = {};
// EXTERNAL MODULE: ./src/components/mdx/documentation.tsx + 1 modules
var documentation = __webpack_require__(963);
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/pages/ApiDocumentation/RealityDataDetails.tsx
/* eslint-disable import/no-webpack-loader-syntax */





function RM_RealityData_Details() {
  return /*#__PURE__*/_jsx(MDXProvider, {
    components: mdComponents,
    children: /*#__PURE__*/_jsx(Document, {})
  });
}

/***/ }),

/***/ 76418:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(85217);
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(itwinui_v1__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59994);
/* harmony import */ var _itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(35797);
/* harmony import */ var _ResponsiveTable_ResponsiveTable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(39120);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__);








function SynchronizationSupportedFormats() {
  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [/*#__PURE__*/_jsx(Headline, {
      children: "Supported formats"
    }), /*#__PURE__*/_jsx("span", {
      style: {
        marginBottom: '12px'
      },
      children: "An iTwin Connector can be used to import data into an iModel. iTwin Connectors have been developed for many different applications and file formats. The below tables list connectors that can be called via this API."
    }), /*#__PURE__*/_jsx(SupportedFormatsTable, {
      firstColumnName: "Application",
      data: BentleyApplicationsData,
      title: "Bentley applications"
    }), /*#__PURE__*/_jsx(SupportedFormatsTable, {
      firstColumnName: "Application",
      data: ThirdPartyApplicationsData,
      title: "Third Party applications"
    }), /*#__PURE__*/_jsx(SupportedFormatsTable, {
      firstColumnName: "Interchange Formats",
      data: InterchangeFormatsData,
      title: "Interchange formats"
    }), /*#__PURE__*/_jsxs("span", {
      style: {
        marginBottom: '12px'
      },
      children: [/*#__PURE__*/_jsx("strong", {
        children: "Note:"
      }), " Formats listed with \"MicroStation (via dgn)\" as the connector must first be imported into MicroStation, saved as a dgn and then it can be converted by the MicroStation connector."]
    })]
  });
}

function SupportedFormatsTable(props) {
  const id = Utils.convertStringToId(props.title);
  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [/*#__PURE__*/_jsxs(Title, {
      className: "supported-formats-heading",
      children: [/*#__PURE__*/_jsx("a", {
        href: `#${id}`,
        id: id,
        children: props.title
      }), /*#__PURE__*/_jsx(SvgLink, {
        className: "permalink"
      })]
    }), /*#__PURE__*/_jsx(ResponsiveTable, {
      className: "iui-condensed",
      data: props.data,
      style: {
        marginBottom: '24px'
      },
      emptyTableContent: "No data.",
      columns: [{
        Header: 'Table',
        columns: [{
          Header: props.firstColumnName,
          accessor: 'application'
        }, {
          Header: 'Connector',
          accessor: 'connectionType'
        }, {
          Header: 'Extension',
          accessor: 'extensionType'
        }, {
          Header: 'Connector Identifier',
          accessor: 'connectionIdentifier'
        }, {
          Header: 'Supported Versions ',
          accessor: 'supportedVersions'
        }]
      }]
    })]
  });
}

const BentleyApplicationsData = [{
  application: 'AutoPLANT',
  connectionType: 'AutoPLANT Modeler',
  extensionType: 'dwg',
  connectionIdentifier: 'AUTOPLANT',
  supportedVersions: 'AutoPLANT 10.01.00.12'
}, {
  application: 'Bentley Raceway and Cable Management',
  connectionType: 'MicroStation',
  extensionType: 'dgn',
  connectionIdentifier: 'MSTN',
  supportedVersions: 'CONNECT from Update 4'
}, {
  application: 'MicroStation CONNECT / V8i Editions',
  connectionType: 'MicroStation',
  extensionType: 'dwg, i.dgn',
  connectionIdentifier: 'MSTN',
  supportedVersions: 'CONNECT / V8i Editions'
}, {
  application: 'OpenBridge Designer',
  connectionType: 'Civil',
  extensionType: 'dgn',
  connectionIdentifier: 'CIVIL',
  supportedVersions: 'CONNECT Edition'
}, {
  application: 'OpenBuildings Designer',
  connectionType: 'OpenBuildings',
  extensionType: 'dgn',
  connectionIdentifier: 'OBD',
  supportedVersions: 'CONNECT Edition'
}, {
  application: 'OpenRail Designer',
  connectionType: 'Civil',
  extensionType: 'dgn',
  connectionIdentifier: 'CIVIL',
  supportedVersions: 'CONNECT Edition'
}, {
  application: 'OpenRoads Designer',
  connectionType: 'Civil',
  extensionType: 'dgn',
  connectionIdentifier: 'CIVIL',
  supportedVersions: 'CONNECT Edition'
}, {
  application: 'OpenSite Designer',
  connectionType: 'Civil',
  extensionType: 'dgn',
  connectionIdentifier: 'CIVIL',
  supportedVersions: 'CONNECT Edition'
}, {
  application: 'OpenTower Designer',
  connectionType: 'Open Tower',
  extensionType: 'otxml',
  connectionIdentifier: 'OPENTOWER',
  supportedVersions: 'CONNECT from Update 2'
}, {
  application: 'ProStructures',
  connectionType: 'Prostructures',
  extensionType: 'dgn',
  connectionIdentifier: 'PROSTRUCTURES',
  supportedVersions: 'CONNECT from Update 6'
}];
const ThirdPartyApplicationsData = [{
  application: '3D Studio',
  connectionType: 'MicroStation',
  extensionType: '3ds',
  connectionIdentifier: 'MSTN',
  supportedVersions: ''
}, {
  application: 'AutoCAD',
  connectionType: 'AutoCAD Dwg',
  extensionType: 'dwg, dxf',
  connectionIdentifier: 'DWG',
  supportedVersions: '2015 - 2022'
}, {
  application: 'Civil 3D',
  connectionType: 'Civil3D',
  extensionType: 'dwg',
  connectionIdentifier: 'CIVIL3D',
  supportedVersions: '2015 - 2022'
}, {
  application: 'Intergraph Smart 3D Review',
  connectionType: 'VUE',
  extensionType: 'vue',
  connectionIdentifier: 'SPXREVIEW',
  supportedVersions: ''
}, {
  application: 'Intergraph Smart P&ID',
  connectionType: 'SmartPlant P&ID',
  extensionType: 'zip',
  connectionIdentifier: 'SPPID',
  supportedVersions: '2014 R1'
}, {
  application: 'Navisworks',
  connectionType: 'Navisworks',
  extensionType: 'nwd, nwc',
  connectionIdentifier: 'NWD',
  supportedVersions: '2013 - 2022'
}, {
  application: 'Revit',
  connectionType: 'Revit',
  extensionType: 'rvt',
  connectionIdentifier: 'REVIT',
  supportedVersions: '2015 - 2022'
}, {
  application: 'Rhino',
  connectionType: 'MicroStation',
  extensionType: '3dm',
  connectionIdentifier: 'MSTN',
  supportedVersions: ''
}, {
  application: 'Sketchup',
  connectionType: 'MicroStation',
  extensionType: 'skp',
  connectionIdentifier: 'MSTN',
  supportedVersions: '2017 - 2022'
}];
const InterchangeFormatsData = [{
  application: 'ACIS',
  connectionType: 'MicroStation (via dgn)',
  extensionType: 'sat',
  connectionIdentifier: 'MSTN',
  supportedVersions: 'Up to 25.0'
}, {
  application: 'ArcGIS Feature Service',
  connectionType: 'Geo',
  extensionType: 'geodb',
  connectionIdentifier: 'GEOSPATIAL',
  supportedVersions: '10.6 and higher'
}, {
  application: 'Autodesk 3DS Max ',
  connectionType: 'MicroStation',
  extensionType: '3ds',
  connectionIdentifier: 'MSTN',
  supportedVersions: ''
}, {
  application: 'CGM',
  connectionType: 'MicroStation (via dgn)',
  extensionType: 'dgn',
  connectionIdentifier: 'MSTN',
  supportedVersions: '1'
}, {
  application: 'Collada',
  connectionType: 'MicroStation (via dgn)',
  extensionType: 'dae',
  connectionIdentifier: 'MSTN',
  supportedVersions: ''
}, {
  application: 'Hidden edges',
  connectionType: 'MicroStation',
  extensionType: 'hln',
  connectionIdentifier: 'MSTN',
  supportedVersions: ''
}, {
  application: 'DXF',
  connectionType: 'AutoCAD',
  extensionType: 'dxf',
  connectionIdentifier: 'DWG',
  supportedVersions: '2015 - 2022'
}, {
  application: 'FBX',
  connectionType: 'MicroStation',
  extensionType: 'fbx',
  connectionIdentifier: 'MSTN',
  supportedVersions: 'Up to and including 2011'
}, {
  application: 'Geojson',
  connectionType: 'Geo',
  extensionType: 'geojson',
  connectionIdentifier: 'GEOSPATIAL',
  supportedVersions: ''
}, {
  application: 'IFC',
  connectionType: 'IFC',
  extensionType: 'ifc',
  connectionIdentifier: 'IFC',
  supportedVersions: 'IFC2x3, IFC4'
}, {
  application: 'IGES',
  connectionType: 'MicroStation (via dgn)',
  extensionType: 'igs',
  connectionIdentifier: 'MSTN',
  supportedVersions: '2.0, 3.0, 4.0, or 5.0 fixed-length ASCII'
}, {
  application: 'iModel',
  connectionType: 'MicroStation',
  extensionType: 'i.dgn',
  connectionIdentifier: 'MSTN',
  supportedVersions: ''
}, {
  application: 'JT',
  connectionType: 'MicroStation (via dgn)',
  extensionType: 'jt',
  connectionIdentifier: 'MSTN',
  supportedVersions: '8.0 - 10.6'
}, {
  application: 'kml',
  connectionType: 'Geo',
  extensionType: 'kml',
  connectionIdentifier: 'GEOSPATIAL',
  supportedVersions: ''
}, {
  application: 'Land XML',
  connectionType: 'MicroStation (via dgn)',
  extensionType: 'land.xml',
  connectionIdentifier: 'MSTN',
  supportedVersions: ''
}, {
  application: 'MIF / MID',
  connectionType: 'MicroStation (via dgn)',
  extensionType: 'dgn',
  connectionIdentifier: 'MSTN',
  supportedVersions: ''
}, {
  application: 'OBJ',
  connectionType: 'MicroStation',
  extensionType: 'obj',
  connectionIdentifier: 'MSTN',
  supportedVersions: ''
}, {
  application: 'Parasolid',
  connectionType: 'MicroStation (via dgn)',
  extensionType: 'x_t',
  connectionIdentifier: 'MSTN',
  supportedVersions: 'Up to 13.0'
}, {
  application: 'Shape files',
  connectionType: 'Geo',
  extensionType: 'shp',
  connectionIdentifier: 'GEOSPATIAL',
  supportedVersions: ''
}, {
  application: 'Sketchup',
  connectionType: 'MicroStation',
  extensionType: 'skp',
  connectionIdentifier: 'MSTN',
  supportedVersions: '2017 - 2022'
}, {
  application: 'STEP',
  connectionType: 'MicroStation (via dgn)',
  extensionType: 'stp',
  connectionIdentifier: 'MSTN',
  supportedVersions: ''
}, {
  application: 'STL',
  connectionType: 'MicroStation (via dgn)',
  extensionType: 'stl',
  connectionIdentifier: 'MSTN',
  supportedVersions: ''
}, {
  application: 'VUE',
  connectionType: 'VUE',
  extensionType: 'vue',
  connectionIdentifier: 'SPXREVIEW',
  supportedVersions: ''
}, {
  application: 'Web Feature Service (WFS)',
  connectionType: 'Geo',
  extensionType: 'geodb',
  connectionIdentifier: 'GEOSPATIAL',
  supportedVersions: ''
}, {
  application: 'SVG',
  connectionType: 'MicroStation (via dgn)',
  extensionType: 'dgn',
  connectionIdentifier: 'MSTN',
  supportedVersions: ''
}];
/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (SynchronizationSupportedFormats)));

/***/ }),

/***/ 35952:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: default

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
// EXTERNAL MODULE: ./node_modules/@itwin/itwinui-icons-react/cjs/index.js
var cjs = __webpack_require__(59994);
// EXTERNAL MODULE: consume shared module (default) itwinui-v2@^2.12.0 (singleton) (fallback: ./node_modules/itwinui-v2/esm/index.js) (eager)
var index_js_eager_ = __webpack_require__(6227);
// EXTERNAL MODULE: ./src/components/Theme.tsx
var components_Theme = __webpack_require__(39623);
// EXTERNAL MODULE: external "lodash"
var external_lodash_ = __webpack_require__(46517);
// EXTERNAL MODULE: ./src/models/parameter.ts
var parameter = __webpack_require__(39851);
// EXTERNAL MODULE: ./src/utils.ts
var utils = __webpack_require__(35797);
// EXTERNAL MODULE: ./src/components/MarkdownViewWithMermaid/MarkdownViewWithMermaid.tsx + 2 modules
var MarkdownViewWithMermaid = __webpack_require__(49867);
// EXTERNAL MODULE: ./src/components/mdx/documentation.tsx + 1 modules
var documentation = __webpack_require__(963);
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/pages/ApiDocumentation/WebhooksEventsReference/SchemaDocumentationTable_V2.tsx










const columnsMap = {
  name: {
    Header: 'Name',
    accessor: 'name',
    maxWidth: 250
  },
  type: {
    id: 'type',
    Header: 'Type',
    maxWidth: 120,
    Cell: cellProps => {
      if (cellProps.row.original instanceof parameter/* Parameter */.d) {
        return /*#__PURE__*/jsx_runtime_.jsx(jsx_runtime_.Fragment, {});
      }

      const definition = cellProps.row.original;

      if (definition.type?.displayAs === 'combination') {
        const definitionOfCombination = definition;
        const type = definitionOfCombination.type;
        return /*#__PURE__*/(0,jsx_runtime_.jsxs)("span", {
          children: [type.combinationType, ":", ' ', /*#__PURE__*/jsx_runtime_.jsx("span", {
            children: type.combination.map(combination => {
              return /*#__PURE__*/jsx_runtime_.jsx("a", {
                href: `#${utils/* Utils.convertStringToId */.c.convertStringToId(combination.name)}`,
                style: {
                  display: 'block'
                },
                children: combination.name
              }, combination.name);
            })
          })]
        });
      }

      const type = definition.type?.name;

      if (definition.type?.displayAs === 'arrayOfPrimitive') {
        return (0,external_lodash_.capitalize)(type) + '[]';
      }

      if (definition.type?.displayAs === 'primitive') {
        return (0,external_lodash_.capitalize)(type);
      }

      const isArray = definition.type?.displayAs === 'arrayOfReference';
      return /*#__PURE__*/(0,jsx_runtime_.jsxs)("span", {
        children: [/*#__PURE__*/jsx_runtime_.jsx("a", {
          href: `#${utils/* Utils.convertStringToId */.c.convertStringToId(type)}`,
          children: type
        }), isArray && '[]']
      });
    }
  },
  description: {
    id: 'description',
    Header: 'Description',
    Cell: cellProps => {
      return /*#__PURE__*/jsx_runtime_.jsx("div", {
        style: {
          whiteSpace: 'pre-wrap'
        },
        children: /*#__PURE__*/jsx_runtime_.jsx(MarkdownViewWithMermaid/* MarkdownViewWithMermaid */.D, {
          markdown: cellProps.row.original.description ?? '',
          components: documentation/* mdComponents */.Z,
          options: {
            tables: true
          }
        })
      });
    }
  },
  required: {
    id: 'required',
    Header: 'Required?',
    Cell: cellProps => cellProps.row.original.required ? 'Yes' : 'No',
    maxWidth: 100
  },
  in: {
    id: 'in',
    Header: 'In',
    accessor: 'in',
    maxWidth: 100
  }
};

function SchemaDocumentationTable_V2_SchemaDocumentationTable_V2({
  data,
  columns
}) {
  const columnsMemoized = useMemo(() => [{
    Header: 'Documentation',
    columns: columns.map(col => columnsMap[col])
  }], [columns]);
  return /*#__PURE__*/_jsx(Table, {
    className: "documentation-table",
    emptyTableContent: "No data.",
    data: data,
    columns: columnsMemoized
  });
}

/* harmony default export */ var WebhooksEventsReference_SchemaDocumentationTable_V2 = ((/* unused pure expression or super */ null && (SchemaDocumentationTable_V2_SchemaDocumentationTable_V2)));
// EXTERNAL MODULE: ./src/components/CodeBlocks/CodeSample/CodeSample.tsx + 2 modules
var CodeSample_CodeSample = __webpack_require__(80862);
;// CONCATENATED MODULE: ./src/components/pages/ApiDocumentation/WebhooksEventsReference/WebhooksEventsReference.tsx










function WebhooksEventsReference(props) {
  const {
    definitions
  } = props;
  const baseEvent = useMemo(() => definitions.find(definition => definition.name === 'base-event' || definition.name === 'imodel-event'), definitions);
  const isV2 = useMemo(() => definitions.some(definition => definition.name === 'base-event'), definitions);
  let apis = {};
  apis = useMemo(() => {
    const eventDefinitions = definitions.filter(definition => definition.name.toLowerCase().endsWith('event') && definition.name !== 'base-event' && definition.name !== 'imodel-event');

    for (const eventDefinition of eventDefinitions) {
      const apiName = eventDefinition.example;

      if (apis[apiName] === undefined) {
        apis[apiName] = [];
      }

      apis[apiName].push(eventDefinition);
    }

    return apis;
  }, [definitions]);
  return /*#__PURE__*/_jsx(Theme, {
    children: /*#__PURE__*/_jsxs("div", {
      className: "webhooks-event-reference documentation-block-content",
      children: [/*#__PURE__*/_jsx(Text, {
        variant: "headline",
        className: "operation-heading",
        children: "Events"
      }), /*#__PURE__*/_jsx("hr", {
        className: "documentation-divider"
      }), baseEvent && /*#__PURE__*/_jsxs(_Fragment, {
        children: [baseEvent.description ? /*#__PURE__*/_jsxs(_Fragment, {
          children: [/*#__PURE__*/_jsxs(Text, {
            variant: "body",
            className: "event-description-text",
            children: ["All events sent to the callback url will be in the body of a POST request. This post request will contain properties that will be included on every request, regardless of event type. These include ", /*#__PURE__*/_jsx(Code, {
              children: "content"
            }), ",", ' ', isV2 ? /*#__PURE__*/_jsx(Code, {
              children: "eventType"
            }) : /*#__PURE__*/_jsx(Code, {
              children: "contentType"
            }), ",", ' ', /*#__PURE__*/_jsx(Code, {
              children: "enqueuedDateTime"
            }), ", ", isV2 && /*#__PURE__*/_jsx(Code, {
              children: "iTwinId"
            }), isV2 && ',', " ", /*#__PURE__*/_jsx(Code, {
              children: "messageId"
            }), ", and", ' ', isV2 ? /*#__PURE__*/_jsx(Code, {
              children: "webhookId"
            }) : /*#__PURE__*/_jsx(Code, {
              children: "subscriptionId"
            }), ". The ", /*#__PURE__*/_jsx(Code, {
              children: "content"
            }), " will vary based on what event has been received. See below for a list of properties included inside the content for each event type."]
          }), /*#__PURE__*/_jsx(Text, {
            variant: "body",
            className: "event-description-text",
            children: "The following is an example of what will be received for an event."
          })]
        }) : null, /*#__PURE__*/_jsxs(Flex, {
          justifyContent: "center",
          flexWrap: "wrap",
          id: "base-event",
          className: "event-information-wrapper",
          children: [/*#__PURE__*/_jsx(Flex.Item, {
            flex: "1",
            children: /*#__PURE__*/_jsxs(Flex, {
              flexDirection: "column",
              alignItems: "flex-start",
              children: [/*#__PURE__*/_jsx(Flex.Item, {
                children: /*#__PURE__*/_jsx(Text, {
                  variant: "subheading",
                  children: "Properties"
                })
              }), /*#__PURE__*/_jsx(Flex.Item, {
                className: "schema-table-wrapper",
                children: /*#__PURE__*/_jsx(SchemaDocumentationTable_V2, {
                  data: baseEvent.properties || [],
                  columns: ['name', 'type', 'description']
                })
              })]
            })
          }), /*#__PURE__*/_jsx(Flex.Item, {
            flex: "1",
            alignSelf: "stretch",
            children: /*#__PURE__*/_jsxs(Flex, {
              flexDirection: "column",
              alignItems: "flex-start",
              children: [/*#__PURE__*/_jsx(Flex.Item, {
                children: /*#__PURE__*/_jsx(Text, {
                  variant: "subheading",
                  children: "Example"
                })
              }), /*#__PURE__*/_jsx(Flex.Item, {
                children: /*#__PURE__*/_jsx(CodeSample, {
                  language: "JSON",
                  sample: `{\n    "content": {\n      // event specific properties go here    \n    },${isV2 ? `\n    "eventType": "api.action.version",` : ''}${baseEvent.properties?.filter(be => be.name != 'eventType' && be.name != 'content').map(be => `\n    "${be.name}":"${be.type?.name}"`)}\n}`
                })
              })]
            })
          })]
        })]
      }), /*#__PURE__*/_jsxs("div", {
        className: "request-event-container",
        children: [/*#__PURE__*/_jsx(Text, {
          variant: "body",
          className: "event-description-text",
          children: "We are currently working on expanding our events and would appreciate your feedback on what events we are missing."
        }), /*#__PURE__*/_jsx(Button, {
          onClick: () => window.open('https://bentley.jotform.com/233094429791060', 'blank', 'scrollbars=yes, toolbar=no, width=700, height=900'),
          styleType: "cta",
          children: "Request more events"
        })]
      }), Object.keys(apis).map(apiName => {
        return /*#__PURE__*/_jsxs(_Fragment, {
          children: [/*#__PURE__*/_jsxs(Text, {
            variant: "title",
            className: "operation-heading",
            children: [/*#__PURE__*/_jsx("a", {
              href: `#${apiName}-ref`,
              id: apiName,
              children: apiName
            }), /*#__PURE__*/_jsx(SvgLink, {
              className: "permalink"
            })]
          }), /*#__PURE__*/_jsx("hr", {
            className: "documentation-divider"
          }), apis[apiName].map(eventDefinition => {
            return /*#__PURE__*/_jsxs(ExpandableBlock, {
              title: eventDefinition.schema.title || eventDefinition.name,
              className: "event-expandable-block",
              children: [eventDefinition.description ? /*#__PURE__*/_jsx(Text, {
                variant: "leading",
                className: "event-description-text",
                children: eventDefinition.description
              }) : null, /*#__PURE__*/_jsxs(Flex, {
                alignItems: "flex-start",
                flexWrap: "wrap",
                className: "event-information-wrapper",
                children: [/*#__PURE__*/_jsx(Flex.Item, {
                  flex: "1",
                  children: /*#__PURE__*/_jsxs(Flex, {
                    flexDirection: "column",
                    alignItems: "flex-start",
                    children: [/*#__PURE__*/_jsx(Flex.Item, {
                      children: /*#__PURE__*/_jsx(Text, {
                        variant: "subheading",
                        children: "Properties"
                      })
                    }), /*#__PURE__*/_jsx(Flex.Item, {
                      className: "schema-table-wrapper",
                      children: /*#__PURE__*/_jsx(SchemaDocumentationTable_V2, {
                        data: eventDefinition.properties || [],
                        columns: ['name', 'type', 'description']
                      })
                    })]
                  })
                }), /*#__PURE__*/_jsx(Flex.Item, {
                  flex: "1",
                  children: /*#__PURE__*/_jsxs(Flex, {
                    flexDirection: "column",
                    alignItems: "flex-start",
                    children: [/*#__PURE__*/_jsx(Flex.Item, {
                      children: /*#__PURE__*/_jsx(Text, {
                        variant: "subheading",
                        children: "Example"
                      })
                    }), /*#__PURE__*/_jsx(Flex.Item, {
                      children: /*#__PURE__*/_jsx(CodeSample, {
                        language: "JSON",
                        sample: `{\n   "content": {${eventDefinition.properties?.map(p => `\n        "${p.name}":"${p.example}"`)}\n    },${isV2 ? `\n    "eventType": "${eventDefinition.schema.title}"` : `\n    "contentType": "${eventDefinition.schema.title?.replace(/ /g, ``)}Event`},${baseEvent.properties?.filter(be => be.name != 'contentType' && be.name != 'eventType' && be.name != 'content').map(be => `\n    "${be.name}":"${be.example}"`)}\n}`
                      })
                    })]
                  })
                })]
              })]
            });
          })]
        });
      })]
    })
  });
}

/***/ }),

/***/ 46488:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: default

// EXTERNAL MODULE: consume shared module (default) itwinui-v1@^1.48.3 (singleton) (fallback: ./node_modules/itwinui-v1/cjs/index.js) (eager)
var index_js_eager_ = __webpack_require__(85217);
// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
// EXTERNAL MODULE: ./node_modules/@itwin/itwinui-icons-react/cjs/index.js
var cjs = __webpack_require__(59994);
// EXTERNAL MODULE: ./src/utils.ts
var utils = __webpack_require__(35797);
// EXTERNAL MODULE: ./src/components/CodeBlocks/CodeSample/CodeSample.tsx + 2 modules
var CodeSample_CodeSample = __webpack_require__(80862);
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/Tabs/tabs.tsx




function tabs_Tabs({
  tabs
}) {
  const {
    0: selectedTab,
    1: setSelectedTab
  } = useState(0);
  return /*#__PURE__*/_jsxs("div", {
    className: "tabs",
    children: [tabs.map(function (tab, key) {
      return /*#__PURE__*/_jsx("span", {
        onClick: () => {
          setSelectedTab(key);
        },
        className: selectedTab === key ? 'tab-name tab-active' : 'tab-name',
        children: tab.title
      }, key);
    }), /*#__PURE__*/_jsx("div", {
      className: 'tab-content',
      children: tabs[selectedTab] && tabs[selectedTab].content
    })]
  });
}
// EXTERNAL MODULE: ./src/components/tables/SchemaDocumentationTable/SchemaDocumentationTable.tsx
var SchemaDocumentationTable_SchemaDocumentationTable = __webpack_require__(81582);
;// CONCATENATED MODULE: ./src/components/pages/ApiOperations/DefinitionsBlock.tsx











function DefinitionsBlock({
  definitions
}) {
  if ((definitions ?? []).length === 0) {
    return /*#__PURE__*/_jsx(_Fragment, {});
  }

  return /*#__PURE__*/_jsx(ExpandableBlock, {
    className: "documentation-block",
    title: /*#__PURE__*/_jsxs(Leading, {
      className: "operation-heading-main",
      children: [/*#__PURE__*/_jsx("a", {
        href: `#definitions-ref`,
        id: 'definitions-ref',
        onClick: event => {
          event.stopPropagation();
        },
        children: 'Definitions'
      }), /*#__PURE__*/_jsx(SvgLink, {
        className: "permalink"
      })]
    }),
    isExpanded: true,
    children: /*#__PURE__*/_jsx("div", {
      className: "documentation-block-content",
      children: definitions.map(definition => {
        const id = Utils.convertStringToId(definition.name);
        return /*#__PURE__*/_jsxs("div", {
          children: [/*#__PURE__*/_jsxs(Leading, {
            className: "operation-heading",
            children: [/*#__PURE__*/_jsx("a", {
              href: `#${id}`,
              id: id,
              children: definition.schema.title || definition.name
            }), /*#__PURE__*/_jsx(SvgLink, {
              className: "permalink"
            })]
          }), definition.description ? /*#__PURE__*/_jsx(Body, {
            children: definition.description
          }) : null, /*#__PURE__*/_jsx(Tabs, {
            tabs: [{
              title: 'Table',
              content: /*#__PURE__*/_jsx(SchemaDocumentationTable, {
                data: definition.properties || [],
                columns: ['name', 'type', 'description']
              })
            }, {
              title: 'Schema',
              content: /*#__PURE__*/_jsx(CodeSample, {
                language: "json",
                sample: JSON.stringify(definition.schema, null, 4)
              })
            }]
          })]
        }, definition.name);
      })
    })
  });
}

/* harmony default export */ var ApiOperations_DefinitionsBlock = ((/* unused pure expression or super */ null && (DefinitionsBlock)));

/***/ }),

/***/ 34876:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: default

// EXTERNAL MODULE: consume shared module (default) itwinui-v1@^1.48.3 (singleton) (fallback: ./node_modules/itwinui-v1/cjs/index.js) (eager)
var index_js_eager_ = __webpack_require__(85217);
// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
// EXTERNAL MODULE: ./node_modules/@itwin/itwinui-icons-react/cjs/icons/Link.js
var Link = __webpack_require__(95970);
// EXTERNAL MODULE: ./src/models/index.ts + 14 modules
var models = __webpack_require__(93266);
// EXTERNAL MODULE: ./src/utils.ts
var utils = __webpack_require__(35797);
// EXTERNAL MODULE: ./node_modules/@itwin/itwinui-icons-react/cjs/index.js
var cjs = __webpack_require__(59994);
// EXTERNAL MODULE: ./src/components/tables/SchemaDocumentationTable/SchemaDocumentationTable.tsx
var SchemaDocumentationTable_SchemaDocumentationTable = __webpack_require__(81582);
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/pages/ApiOperations/RequestParametersTable.tsx








function RequestParametersTable_RequestParametersTable({
  parameters = [],
  title
}) {
  if (!parameters || !parameters[0]) {
    return /*#__PURE__*/_jsx(_Fragment, {});
  }

  const id = Utils.convertStringToId(title);
  return /*#__PURE__*/_jsxs("div", {
    children: [/*#__PURE__*/_jsxs(Leading, {
      className: "operation-heading",
      children: [/*#__PURE__*/_jsx("a", {
        href: `#${id}`,
        id: id,
        children: title
      }), /*#__PURE__*/_jsx(SvgLink, {
        className: "permalink"
      })]
    }), /*#__PURE__*/_jsx(SchemaDocumentationTable, {
      data: parameters,
      columns: ['name', 'in', 'required', 'description']
    })]
  });
}
;// CONCATENATED MODULE: ./src/components/pages/ApiOperations/HeadersTable.tsx








function HeadersTable_HeadersTable({
  headers = [],
  title
}) {
  if (!headers || !headers[0]) {
    return /*#__PURE__*/_jsx(_Fragment, {});
  }

  const id = Utils.convertStringToId(title);
  return /*#__PURE__*/_jsxs("div", {
    children: [/*#__PURE__*/_jsxs(Leading, {
      className: "operation-heading",
      children: [/*#__PURE__*/_jsx("a", {
        href: `#${id}`,
        id: id,
        children: title
      }), /*#__PURE__*/_jsx(SvgLink, {
        className: "permalink"
      })]
    }), /*#__PURE__*/_jsx(SchemaDocumentationTable, {
      data: headers,
      columns: ['name', 'required', 'description']
    })]
  });
}
// EXTERNAL MODULE: ./src/components/CodeBlocks/CodeSample/CodeSample.tsx + 2 modules
var CodeSample_CodeSample = __webpack_require__(80862);
;// CONCATENATED MODULE: ./src/components/pages/ApiOperations/RequestRepresentation.tsx








function RequestRepresentation_RequestRepresentation({
  definition
}) {
  const id = `request-body-${Utils.convertStringToId(definition.name)}`;
  return /*#__PURE__*/_jsxs("div", {
    children: [/*#__PURE__*/_jsxs("div", {
      children: [/*#__PURE__*/_jsxs(Body, {
        className: "operation-heading",
        children: [/*#__PURE__*/_jsx("a", {
          href: `#${id}`,
          id: id,
          children: definition.schema.title || definition.name
        }), /*#__PURE__*/_jsx(SvgLink, {
          className: "permalink"
        })]
      }), definition.properties && definition.properties.length > 0 && /*#__PURE__*/_jsx(SchemaDocumentationTable, {
        data: definition.properties,
        columns: ['name', 'type', 'required', 'description']
      })]
    }), /*#__PURE__*/_jsxs("div", {
      children: [/*#__PURE__*/_jsxs(Leading, {
        className: "operation-heading",
        children: [/*#__PURE__*/_jsx("a", {
          href: `#example`,
          id: 'example',
          children: "Example"
        }), /*#__PURE__*/_jsx(SvgLink, {
          className: "permalink"
        })]
      }), /*#__PURE__*/_jsx(CodeSample, {
        language: definition.exampleFormat,
        sample: definition.example
      })]
    })]
  });
}

/* harmony default export */ var ApiOperations_RequestRepresentation = ((/* unused pure expression or super */ null && (RequestRepresentation_RequestRepresentation)));
;// CONCATENATED MODULE: ./src/components/pages/ApiOperations/RequestBodyContent.tsx







function RequestBodyContent_RequestBodyContent({
  description,
  definitions
}) {
  if (definitions.length === 0) {
    return /*#__PURE__*/_jsx(_Fragment, {});
  }

  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [description && /*#__PURE__*/_jsx("div", {
      children: description
    }), /*#__PURE__*/_jsx("div", {
      className: "operation-description-section",
      children: /*#__PURE__*/_jsxs(_Fragment, {
        children: [/*#__PURE__*/_jsxs(Leading, {
          className: "operation-heading",
          children: [/*#__PURE__*/_jsx("a", {
            href: `#request-body`,
            id: 'request-body',
            children: "Request body"
          }), /*#__PURE__*/_jsx(SvgLink, {
            className: "permalink"
          })]
        }), definitions.map((definition, index) => {
          return /*#__PURE__*/_jsx(RequestRepresentation, {
            definition: definition
          }, index);
        })]
      })
    })]
  });
}
;// CONCATENATED MODULE: ./src/components/pages/ApiOperations/RequestBlock.tsx













function RequestBlock({
  operation,
  definitions
}) {
  const requestTypeDefinitions = useMemo(() => {
    return meaningfulRepresentations(operation.request).map(representation => {
      let definition = definitions.find(def => def.name === representation.typeName);

      if (!definition) {
        // Fallback for the case when type is referenced, but not defined in schema.
        return new TypeDefinition(representation.typeName ?? '', {});
      } // Making copy to avoid overriding original properties.


      definition = Utils.clone(definition);

      if (!definition.name) {
        definition.name = representation.typeName ?? '';
      }

      if (representation.example) {
        definition.example = representation.example;
        definition.exampleFormat = representation.exampleFormat;
      }

      return definition;
    }) || [];
  }, [operation, definitions]);

  if (!operation.request) {
    return /*#__PURE__*/_jsx(_Fragment, {});
  }

  return /*#__PURE__*/_jsx(ExpandableBlock, {
    className: "documentation-block",
    title: /*#__PURE__*/_jsxs(Leading, {
      className: "operation-heading-main",
      children: [/*#__PURE__*/_jsx("a", {
        href: `#request-ref`,
        id: 'request-ref',
        onClick: event => {
          event.stopPropagation();
        },
        children: 'Request'
      }), /*#__PURE__*/_jsx(SvgLink, {
        className: "permalink"
      })]
    }),
    isExpanded: true,
    children: /*#__PURE__*/_jsxs("div", {
      className: "documentation-block-content",
      children: [operation.parameters.length > 0 && /*#__PURE__*/_jsx(RequestParametersTable, {
        parameters: operation.parameters,
        title: "Request parameters"
      }), operation.request.headers.length > 0 && /*#__PURE__*/_jsx(HeadersTable, {
        headers: operation.request.headers,
        title: 'Request headers'
      }), requestTypeDefinitions.length > 0 && /*#__PURE__*/_jsx(RequestBodyContent, {
        description: operation.request.description,
        definitions: requestTypeDefinitions
      })]
    })
  });
}

/* harmony default export */ var ApiOperations_RequestBlock = ((/* unused pure expression or super */ null && (RequestBlock)));

/***/ }),

/***/ 19669:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(85217);
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(itwinui_v1__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59994);
/* harmony import */ var _itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_itwin_itwinui_icons_react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(35797);
/* harmony import */ var _CodeBlocks_CodeSample_CodeSample__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(80862);
/* harmony import */ var _tables_SchemaDocumentationTable_SchemaDocumentationTable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(81582);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__);











const GetCodeSamples = ({
  representations
}) => {
  const {
    0: currentRepresentation,
    1: setCurrentRepresentation
  } = useState(representations[0]);
  useEffect(() => {
    setCurrentRepresentation(representations[0]);
  }, [representations]);

  switch (representations.length) {
    case 0:
      return /*#__PURE__*/_jsx(_Fragment, {});

    case 1:
      return /*#__PURE__*/_jsx(CodeSample, {
        language: currentRepresentation.exampleFormat,
        sample: currentRepresentation.example
      });

    default:
      return /*#__PURE__*/_jsx(CodeSample, {
        language: currentRepresentation.exampleFormat,
        sample: currentRepresentation.example,
        select: /*#__PURE__*/_jsx(Select, {
          size: "small",
          className: "content-type-select",
          onChange: value => {
            setCurrentRepresentation(value);
          },
          value: currentRepresentation,
          options: representations.map(rep => {
            return {
              label: rep.contentType.split(';')[1],
              value: rep
            };
          })
        })
      });
  }
};

function ResponseBlock({
  responses
}) {
  if (!responses || responses.length === 0) {
    return /*#__PURE__*/_jsx(_Fragment, {});
  }

  return /*#__PURE__*/_jsx(ExpandableBlock, {
    className: "documentation-block",
    title: /*#__PURE__*/_jsxs(Leading, {
      className: "operation-heading-main",
      children: [/*#__PURE__*/_jsx("a", {
        href: `#response-ref`,
        id: 'response-ref',
        onClick: event => {
          event.stopPropagation();
        },
        children: 'Response'
      }), /*#__PURE__*/_jsx(SvgLink, {
        className: "permalink"
      })]
    }),
    isExpanded: true,
    children: /*#__PURE__*/_jsx("div", {
      className: "documentation-block-content",
      children: responses.map(response => {
        const title = `Response ${response.statusCode.code} ${response.statusCode.description}`;
        const id = Utils.convertStringToId(title);
        const representations = meaningfulRepresentations(response);
        return /*#__PURE__*/_jsxs("div", {
          children: [/*#__PURE__*/_jsxs(Leading, {
            className: "operation-heading",
            children: [/*#__PURE__*/_jsx("a", {
              href: `#${id}`,
              id: id,
              children: title
            }), /*#__PURE__*/_jsx(SvgLink, {
              className: "permalink"
            })]
          }), response.description && /*#__PURE__*/_jsx(Body, {
            children: response.description
          }), representations.length > 0 && /*#__PURE__*/_jsx(GetCodeSamples, {
            representations: representations
          }), response.headers && response.headers.length > 0 && /*#__PURE__*/_jsxs("div", {
            children: [/*#__PURE__*/_jsxs(Body, {
              className: "operation-heading",
              children: [/*#__PURE__*/_jsx("a", {
                href: `#${id}-response-headers`,
                id: `${id}-response-headers`,
                children: "Response headers"
              }), /*#__PURE__*/_jsx(SvgLink, {
                className: "permalink"
              })]
            }), /*#__PURE__*/_jsx(SchemaDocumentationTable, {
              data: response?.headers || [],
              columns: ['name', 'description']
            })]
          })]
        }, title);
      })
    })
  });
}

/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (ResponseBlock)));

/***/ }),

/***/ 10137:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: default

// EXTERNAL MODULE: consume shared module (default) itwinui-v1@^1.48.3 (singleton) (fallback: ./node_modules/itwinui-v1/cjs/index.js) (eager)
var index_js_eager_ = __webpack_require__(85217);
;// CONCATENATED MODULE: ./src/constants/pnIDModelVersions.ts
const pnIDModelVersions_pnIDModelVersions = [{
  name: '1.3',
  description: 'Improved PnID model with added piping detection.',
  date: new Date('2023-05-01'),
  latest: true
}];
// EXTERNAL MODULE: ./src/components/MarkdownViewWithMermaid/MarkdownViewWithMermaid.tsx + 2 modules
var MarkdownViewWithMermaid_MarkdownViewWithMermaid = __webpack_require__(49867);
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/pages/PnIDModelVersions/PnIDModelVersions.tsx






function PnIDModelVersions() {
  return /*#__PURE__*/_jsxs("div", {
    className: "api-model-versions",
    children: [/*#__PURE__*/_jsx(Title, {
      className: "title",
      children: "Model versions"
    }), pnIDModelVersions.map((version, index) => {
      return /*#__PURE__*/_jsxs("div", {
        className: "model-version",
        children: [/*#__PURE__*/_jsx(Text, {
          variant: "subheading",
          className: "version-name",
          children: version.name
        }), /*#__PURE__*/_jsx(Text, {
          isMuted: true,
          children: version.date.toLocaleDateString('en-us', {
            month: 'short',
            day: 'numeric',
            year: 'numeric'
          })
        }), /*#__PURE__*/_jsxs("div", {
          className: "version",
          children: [/*#__PURE__*/_jsx("div", {
            className: "tag-wrapper",
            children: version.latest && /*#__PURE__*/_jsx(Badge, {
              className: `badge`,
              backgroundColor: "celery",
              children: "Latest"
            })
          }), /*#__PURE__*/_jsx("div", {
            className: "description-wrapper",
            children: /*#__PURE__*/_jsx(MarkdownViewWithMermaid, {
              markdown: version.description,
              options: {
                tables: true,
                emoji: true,
                openLinksInNewWindow: true
              }
            })
          })]
        })]
      }, index);
    })]
  });
}

/***/ }),

/***/ 81582:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46517);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _models_parameter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(39851);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(35797);
/* harmony import */ var _MarkdownViewWithMermaid_MarkdownViewWithMermaid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(49867);
/* harmony import */ var _ResponsiveTable_ResponsiveTable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(39120);
/* harmony import */ var _mdx_documentation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(963);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__);











const columnsMap = {
  name: {
    Header: 'Name',
    accessor: 'name',
    maxWidth: 250
  },
  type: {
    id: 'type',
    Header: 'Type',
    maxWidth: 120,
    Cell: cellProps => {
      if (cellProps.row.original instanceof _models_parameter__WEBPACK_IMPORTED_MODULE_7__/* .Parameter */ .d) {
        return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.Fragment, {});
      }

      const definition = cellProps.row.original;

      if (definition.type?.displayAs === 'combination') {
        const definitionOfCombination = definition;
        const type = definitionOfCombination.type;
        return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)("span", {
          children: [type.combinationType, ":", ' ', /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx("span", {
            children: type.combination.map(combination => {
              return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx("a", {
                href: `#${_utils__WEBPACK_IMPORTED_MODULE_2__/* .Utils.convertStringToId */ .c.convertStringToId(combination.name)}`,
                style: {
                  display: 'block'
                },
                children: combination.name
              }, combination.name);
            })
          })]
        });
      }

      const type = definition.type?.name;

      if (definition.type?.displayAs === 'arrayOfPrimitive') {
        return (0,lodash__WEBPACK_IMPORTED_MODULE_0__.capitalize)(type) + '[]';
      }

      if (definition.type?.displayAs === 'primitive') {
        return (0,lodash__WEBPACK_IMPORTED_MODULE_0__.capitalize)(type);
      }

      const isArray = definition.type?.displayAs === 'arrayOfReference';
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)("span", {
        children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx("a", {
          href: `#${_utils__WEBPACK_IMPORTED_MODULE_2__/* .Utils.convertStringToId */ .c.convertStringToId(type)}`,
          children: type
        }), isArray && '[]']
      });
    }
  },
  description: {
    id: 'description',
    Header: 'Description',
    Cell: cellProps => {
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx("div", {
        style: {
          whiteSpace: 'pre-wrap'
        },
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx(_MarkdownViewWithMermaid_MarkdownViewWithMermaid__WEBPACK_IMPORTED_MODULE_3__/* .MarkdownViewWithMermaid */ .D, {
          markdown: cellProps.row.original.description ?? '',
          components: _mdx_documentation__WEBPACK_IMPORTED_MODULE_5__/* .mdComponents */ .Z,
          options: {
            tables: true
          }
        })
      });
    }
  },
  required: {
    id: 'required',
    Header: 'Required?',
    Cell: cellProps => cellProps.row.original.required ? 'Yes' : 'No',
    maxWidth: 100
  },
  in: {
    id: 'in',
    Header: 'In',
    accessor: 'in',
    maxWidth: 100
  }
};

function SchemaDocumentationTable({
  data,
  columns
}) {
  const columnsMemoized = useMemo(() => [{
    Header: 'Documentation',
    columns: columns.map(col => columnsMap[col])
  }], [columns]);
  return /*#__PURE__*/_jsx(ResponsiveTable, {
    className: "documentation-table",
    emptyTableContent: "No data.",
    data: data,
    columns: columnsMemoized
  });
}

/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (SchemaDocumentationTable)));

/***/ }),

/***/ 67105:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mV": function() { return /* binding */ ApiGroupId; },
/* harmony export */   "vf": function() { return /* binding */ allApiGroupIds; }
/* harmony export */ });
/* unused harmony export publicApiGroupsIds */
let ApiGroupId;

(function (ApiGroupId) {
  ApiGroupId["Administration"] = "administration";
  ApiGroupId["Construction"] = "construction";
  ApiGroupId["DataManagement"] = "data-management";
  ApiGroupId["Events"] = "events";
  ApiGroupId["WorkflowAutomation"] = "workflow-automation";
  ApiGroupId["Infrastructure"] = "infrastructure";
  ApiGroupId["Internal"] = "platform-internal";
  ApiGroupId["RealityModeling"] = "reality-modeling";
  ApiGroupId["Validation"] = "validation";
  ApiGroupId["ReportingInsights"] = "reporting-and-insights";
  ApiGroupId["PerformanceOperations"] = "performance-operations";
  ApiGroupId["ProjectDelivery"] = "project-delivery";
  ApiGroupId["Synchronization"] = "synchronization";
  ApiGroupId["Visualization"] = "visualization";
  ApiGroupId["ITwinUnreal"] = "itwin-unreal";
  ApiGroupId["Enterprise"] = "enterprise";
})(ApiGroupId || (ApiGroupId = {}));

const allApiGroupIds = Object.freeze(Object.values(ApiGroupId));
const publicApiGroupsIds = [ApiGroupId.Administration, ApiGroupId.DataManagement, ApiGroupId.Events, ApiGroupId.WorkflowAutomation, ApiGroupId.RealityModeling, ApiGroupId.Validation, ApiGroupId.ReportingInsights, ApiGroupId.ProjectDelivery, ApiGroupId.Synchronization, ApiGroupId.Visualization];

/***/ }),

/***/ 594:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "L": function() { return /* binding */ ApiPath; }
/* harmony export */ });
/* unused harmony export ApiName */
let ApiName;

(function (ApiName) {
  ApiName["DesignElementClassificationV1"] = "designelementclassification";
  ApiName["IssuesV1"] = "issues-v1";
  ApiName["VisualizationV1"] = "visualization";
  ApiName["ITwinUnrealV1"] = "itwin-unreal";
})(ApiName || (ApiName = {}));

let ApiPath;

(function (ApiPath) {
  ApiPath["ChangedElements"] = "changedelements";
  ApiPath["ClashDetection"] = "clashdetection";
  ApiPath["ContextCapture"] = "contextcapture";
  ApiPath["DesignElementClassification"] = "designelementclassification";
  ApiPath["Insights"] = "insights";
  ApiPath["Reporting"] = "insights/reporting";
  ApiPath["Issues"] = "issues";
  ApiPath["Library"] = "library";
  ApiPath["Projects"] = "projects";
  ApiPath["iTwins"] = "itwins";
  ApiPath["RealityData"] = "realitydata";
  ApiPath["RealityManagement"] = "reality-management/reality-data";
  ApiPath["RealityAnalysis"] = "realitydataanalysis";
  ApiPath["Storage"] = "storage";
  ApiPath["Synchronization"] = "synchronization";
  ApiPath["Transformations"] = "transformations";
  ApiPath["Validation"] = "validation";
  ApiPath["Visualization"] = "visualization";
  ApiPath["Webhooks"] = "webhooks";
  ApiPath["iModels"] = "imodels";
  ApiPath["ITwinUnreal"] = "itwin-unreal";
  ApiPath["MeshExport"] = "mesh-export";
  ApiPath["PnIDToITwin"] = "synchronization/pnidtoitwin";
})(ApiPath || (ApiPath = {}));

/***/ }),

/***/ 74586:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony exports ApimProduct, apimProducts */
let ApimProduct;

(function (ApimProduct) {
  ApimProduct["Default"] = "default";
  ApimProduct["iTwinJs"] = "itwinjs";
})(ApimProduct || (ApimProduct = {}));

const apimProducts = [ApimProduct.Default, ApimProduct.iTwinJs];

/***/ }),

/***/ 29249:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: LeftSideNavigationSection

// EXTERNAL MODULE: consume shared module (default) itwinui-v2@^2.12.0 (singleton) (fallback: ./node_modules/itwinui-v2/esm/index.js) (eager)
var index_js_eager_ = __webpack_require__(6227);
// EXTERNAL MODULE: ./src/components/icons/GroupIcon.tsx + 14 modules
var GroupIcon = __webpack_require__(80956);
// EXTERNAL MODULE: ./src/components/icons/Indicators/DeprecationIcon.tsx
var DeprecationIcon = __webpack_require__(14157);
// EXTERNAL MODULE: ./src/components/icons/Indicators/TechPreviewIcon.tsx
var TechPreviewIcon = __webpack_require__(5680);
// EXTERNAL MODULE: ./src/components/MarkdownViewWithMermaid/MarkdownViewWithMermaid.tsx + 2 modules
var MarkdownViewWithMermaid_MarkdownViewWithMermaid = __webpack_require__(49867);
// EXTERNAL MODULE: ./src/components/Theme.tsx
var components_Theme = __webpack_require__(39623);
// EXTERNAL MODULE: ./src/components/mdx/documentation.tsx + 1 modules
var documentation = __webpack_require__(963);
// EXTERNAL MODULE: ./src/components/Layouts/CommonLayout/CommonLayout.tsx + 1 modules
var CommonLayout_CommonLayout = __webpack_require__(42287);
// EXTERNAL MODULE: ./src/components/Layouts/LeftSideNavigation/LeftSideNavigation.tsx + 4 modules
var LeftSideNavigation_LeftSideNavigation = __webpack_require__(49187);
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/Layouts/DocumentationTopicLayout/DocumentationTopicLayout.tsx








function DocumentationTopicLayout_DocumentationTopicLayout({
  title,
  sideNavigationItems,
  activeItem,
  markdown,
  mdComponents = defaultMdComponents
}) {
  return /*#__PURE__*/_jsx(CommonLayout, {
    headerContent: /*#__PURE__*/_jsx(Theme, {
      children: /*#__PURE__*/_jsx(Text, {
        variant: "headline",
        children: title
      })
    }),
    sideNavigation: /*#__PURE__*/_jsx(LeftSideNavigation, {
      sections: sideNavigationItems,
      activeItem: activeItem
    }),
    padded: true,
    children: /*#__PURE__*/_jsx(MarkdownViewWithMermaid, {
      markdown: markdown,
      components: mdComponents,
      options: {
        tables: true,
        openLinksInNewWindow: true,
        tablesHeaderId: true,
        ghCompatibleHeaderId: true,
        //generate heading IDs in GitHub format
        disableForced4SpacesIndentedSublists: true
      }
    })
  });
}
;// CONCATENATED MODULE: ./src/components/pages/Apis/Overview/Overview.tsx


function Overview(props) {
  const {
    content,
    topic,
    menuItems
  } = props;
  return /*#__PURE__*/_jsx(DocumentationTopicLayout, {
    title: "REST API Overview",
    sideNavigationItems: menuItems,
    activeItem: topic,
    markdown: content
  });
}
;// CONCATENATED MODULE: ./src/components/pages/Apis/Overview/constants.ts
const topics = [{
  id: 'api-fundamentals',
  displayName: 'API fundamentals'
}, {
  id: 'error-codes',
  displayName: 'Error codes'
}, {
  id: 'authorization',
  displayName: 'Authorization'
}, {
  id: 'lifecycle',
  displayName: 'Lifecycle'
}, {
  id: 'rate-limits',
  displayName: 'Rate limits'
}];
;// CONCATENATED MODULE: ./src/components/pages/Apis/Overview/index.ts


// EXTERNAL MODULE: ./src/constants/Tags.ts
var Tags = __webpack_require__(54826);
// EXTERNAL MODULE: ./src/constants/defaultApiGroups.ts
var defaultApiGroups = __webpack_require__(35735);
// EXTERNAL MODULE: ./src/constants/paths.ts
var paths = __webpack_require__(86491);
;// CONCATENATED MODULE: ./src/constants/guides.ts

const Guides = [{
  title: 'Roles and permissions',
  description: 'Learn how to control who can manage your iTwin Platform subscription and applications.',
  links: [{
    displayName: 'Learn about roles and permissions',
    href: paths/* ROLES_AND_PERMISSIONS */.QR
  }]
}, {
  title: 'iTwin for game engines',
  description: 'Learn how to view your digital twins on game engines.',
  links: [{
    displayName: 'iTwin for Unreal',
    href: paths/* UNREAL */.fI
  }, {
    displayName: 'iTwin for Unity',
    href: paths/* UNITY */.HP
  }]
}, {
  title: 'Spatial alignment',
  description: 'Improve the effectiveness and efficiency of your projects by ensuring accurate and precise geolocation.',
  links: [{
    displayName: 'Learn about iTwin spatial alignment',
    href: paths/* SPACIAL_ALIGNMENT */.sU
  }]
}];
;// CONCATENATED MODULE: ./src/constants/flags.ts
const FLAG_ALGOLIA_SEARCH = 'algolia-search';
const FLAG_CONTACT_SALES = 'contact-sales';
const FLAG_CREDIT_USAGE_DETAILS = 'credit-usage-details';
const FLAG_PLATFORM_HEALTH = 'is-platform-health-enabled';
const FLAG_PRICING = 'pricing';
const FLAG_ACCOUNT_SETTINGS = 'account-settings-page';
const FLAG_DEVELOPER_CONFERENCE_BANNER = 'itwin-developer-conference-banner';
const FLAG_SUCCESS_STORIES = 'success-stories';
const FLAG_TRIAL_FORM = 'trial-form';
const FLAG_CONSUMPTION = 'consumption-page';
const FLAG_DISCOVER_SAMPLE_LIBRARY = 'discover-our-sample-library-section';
const FLAG_TESTS = 'is-tests-running';
const FLAG_BLOG = 'blog-page';
const FLAG_SHOW_SUBSCRIPTION_INFORMATION = 'show-subscription-information-in-profile';
const FLAG_SUBMIT_TRIAL_RECAPTCHA = 'submit-trial-recaptcha';
const FLAG_ITWIN_UNIVERSITY = 'itwin-university';
const FLAG_LEARNING_PAGE = 'learning-page';
const FLAG_DATA_CENTER_LOCATIONS = 'data-center-locations';
const FLAG_APP_DETAILS_V2 = 'app-details-v2';
const FLAG_SHOW_COMPONENT_REGISTRY_LINK = 'show-component-registry-link';
;// CONCATENATED MODULE: ./src/constants/helpfulResources.ts


class HelpfulResources {
  static getAllHelpfulResources() {
    return [{
      title: 'iTwin Platform availability',
      description: 'View which services are available across our data centers.',
      links: [{
        displayName: 'Data center locations',
        href: paths/* DATA_CENTER_LOCATIONS */.up,
        renderFunc: flags => flags[FLAG_DATA_CENTER_LOCATIONS]
      }]
    }, {
      title: 'Open Source',
      description: 'Interested in our open source projects? We use them in the iTwin Platform.',
      links: [{
        displayName: 'iTwin.js',
        href: 'https://www.itwinjs.org/',
        isExternal: true
      }, {
        displayName: 'iTwin UI',
        href: 'https://itwinui.bentley.com/',
        isExternal: true
      }]
    }, {
      title: 'iTwin Component Registry',
      description: 'A catalog of components for use in iTwin apps, dashboards, or other web applications.',
      links: [{
        displayName: 'iTwin Component Registry',
        href: 'https://component-registry.itwin.dev/',
        isExternal: true,
        renderFunc: flags => flags[FLAG_SHOW_COMPONENT_REGISTRY_LINK]
      }]
    }];
  }

  static getFilteredHelpfulResources(flags) {
    const allResources = this.getAllHelpfulResources();
    return allResources.map(resource => {
      return Object.assign({}, resource, {
        links: resource.links.reduce((array, currentValue) => {
          if (currentValue.renderFunc === undefined || currentValue.renderFunc(flags)) {
            array.push(currentValue);
          }

          return array;
        }, [])
      });
    }).filter(resource => resource.links.length > 0);
  }

}
// EXTERNAL MODULE: ./src/utils.ts
var utils = __webpack_require__(35797);
;// CONCATENATED MODULE: ./src/constants/LeftSideNavigationSection.tsx
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }













class LeftSideNavigationSection {
  static getHelpfulResources(flags) {
    return {
      sectionTitle: 'Helpful resources',
      navItems: HelpfulResources.getFilteredHelpfulResources(flags).map(resource => ({
        id: utils/* Utils.getIdFromTitle */.c.getIdFromTitle(resource.title),
        title: resource.title,
        isExpandable: true,
        subItems: resource.links.map(link => ({
          id: utils/* Utils.getIdFromTitle */.c.getIdFromTitle(link.displayName),
          title: link.displayName,
          href: link.href
        }))
      }))
    };
  }

  static ApiReferences(apis) {
    return {
      sectionTitle: 'API references',
      navItems: Object.values(defaultApiGroups/* DefaultApiGroups.publicApiGroups */.q.publicApiGroups).filter(group => group.name in apis && apis[group.name]?.length > 0).map(group => {
        const groupApis = apis[group.name];
        const showGroupTechPreview = groupApis.every(api => api.tags.includes(Tags/* TechPreviewTag */.n));

        const techPreviewBadge = /*#__PURE__*/jsx_runtime_.jsx(index_js_eager_.Tooltip, {
          content: 'Technical Preview',
          placement: "bottom",
          children: /*#__PURE__*/jsx_runtime_.jsx("div", {
            children: /*#__PURE__*/jsx_runtime_.jsx(TechPreviewIcon/* TechPreviewIcon */.d, {})
          })
        });

        const deprecationBadge = /*#__PURE__*/jsx_runtime_.jsx(index_js_eager_.Tooltip, {
          content: 'Deprecated',
          placement: "bottom",
          children: /*#__PURE__*/jsx_runtime_.jsx("div", {
            children: /*#__PURE__*/jsx_runtime_.jsx(DeprecationIcon/* DeprecationIcon */.r, {})
          })
        });

        return {
          id: group.id,
          title: group.displayName,
          icon: /*#__PURE__*/jsx_runtime_.jsx(GroupIcon/* GroupIcon */.B, {
            apiGroupId: group.id,
            className: "group-icon",
            style: {
              fill: group.color
            }
          }),
          caption: {
            title: 'Overview',
            href: `${paths/* API_GROUPS */.Ss}/${group.id}`
          },
          subItems: groupApis.map(api => ({
            id: api.name,
            title: api.displayName,
            href: `${paths/* DOCUMENTATION */.tQ}/${api.name}/overview/`,
            badge: !showGroupTechPreview && api.tags.includes(Tags/* TechPreviewTag */.n) ? techPreviewBadge : api.tags.includes(Tags/* DeprecatedTag */.l) ? deprecationBadge : undefined
          })),
          highlightColor: group.color,
          badge: showGroupTechPreview ? techPreviewBadge : undefined
        };
      })
    };
  }

}

_defineProperty(LeftSideNavigationSection, "Fundamentals", {
  navItems: [{
    id: 'rest-api-overview',
    title: 'REST API Overview',
    subItems: topics.map(topic => ({
      id: topic.id,
      title: topic.displayName,
      href: `${paths/* REST_API_OVERVIEW */.A}/${topic.id}`
    }))
  }]
});

_defineProperty(LeftSideNavigationSection, "Guides", {
  sectionTitle: 'Guides',
  navItems: Guides.map(guide => ({
    id: utils/* Utils.getIdFromTitle */.c.getIdFromTitle(guide.title),
    title: guide.title,
    isExpandable: true,
    subItems: guide.links.map(link => ({
      id: utils/* Utils.getIdFromTitle */.c.getIdFromTitle(link.displayName),
      title: link.displayName,
      href: link.href
    }))
  }))
});

/***/ }),

/***/ 66053:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "d": function() { return /* binding */ SchemaExportOperations; },
/* harmony export */   "l": function() { return /* binding */ SchemaExportNames; }
/* harmony export */ });
let SchemaExportOperations;

(function (SchemaExportOperations) {
  SchemaExportOperations["Swagger"] = "swagger-json";
  SchemaExportOperations["OpenapiJson"] = "openapi-json";
})(SchemaExportOperations || (SchemaExportOperations = {}));

let SchemaExportNames;

(function (SchemaExportNames) {
  SchemaExportNames["Swagger"] = "OpenAPI v2 (JSON)";
  SchemaExportNames["OpenapiJson"] = "OpenAPI v3 (JSON)";
})(SchemaExportNames || (SchemaExportNames = {}));

/***/ }),

/***/ 54826:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "l": function() { return /* binding */ DeprecatedTag; },
/* harmony export */   "n": function() { return /* binding */ TechPreviewTag; }
/* harmony export */ });
const TechPreviewTag = 'Technology Preview';
const DeprecatedTag = 'Deprecated';

/***/ }),

/***/ 24161:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony exports Tier, creditsPerTier */
let Tier;

(function (Tier) {
  Tier["Trial"] = "Trial";
  Tier["Basic"] = "Basic";
  Tier["Premium"] = "Premium";
  Tier["Enterprise"] = "Enterprise";
})(Tier || (Tier = {}));

const creditsPerTier = {
  [Tier.Basic]: 500,
  [Tier.Premium]: 1500
};

/***/ }),

/***/ 47689:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "U": function() { return /* binding */ ApiDocumentation; }
});

// UNUSED EXPORTS: MenuItems

// EXTERNAL MODULE: ./src/constants/ApiGroupId.ts
var ApiGroupId = __webpack_require__(67105);
// EXTERNAL MODULE: ./src/constants/ApiName.ts
var ApiName = __webpack_require__(594);
// EXTERNAL MODULE: ./src/constants/Tags.ts
var Tags = __webpack_require__(54826);
// EXTERNAL MODULE: consume shared module (default) itwinui-v2@^2.12.0 (singleton) (fallback: ./node_modules/itwinui-v2/esm/index.js) (eager)
var index_js_eager_ = __webpack_require__(6227);
// EXTERNAL MODULE: ./src/components/Theme.tsx
var Theme = __webpack_require__(39623);
// EXTERNAL MODULE: ./src/components/icons/Indicators/DeprecationIcon.tsx
var DeprecationIcon = __webpack_require__(14157);
// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(20997);
;// CONCATENATED MODULE: ./src/components/Badges/DeprecatedBadge.tsx





function DeprecatedBadge() {
  return /*#__PURE__*/jsx_runtime_.jsx(Theme/* default */.Z, {
    children: /*#__PURE__*/jsx_runtime_.jsx(index_js_eager_.Tooltip, {
      content: Tags/* DeprecatedTag */.l,
      placement: "bottom",
      children: /*#__PURE__*/jsx_runtime_.jsx("div", {
        children: /*#__PURE__*/jsx_runtime_.jsx(DeprecationIcon/* DeprecationIcon */.r, {})
      })
    })
  });
}
/* harmony default export */ var Badges_DeprecatedBadge = (DeprecatedBadge);
// EXTERNAL MODULE: ./src/components/icons/Indicators/TechPreviewIcon.tsx
var TechPreviewIcon = __webpack_require__(5680);
;// CONCATENATED MODULE: ./src/components/Badges/TechPreviewBadge.tsx





function TechPreviewBadge() {
  return /*#__PURE__*/jsx_runtime_.jsx(Theme/* default */.Z, {
    children: /*#__PURE__*/jsx_runtime_.jsx(index_js_eager_.Tooltip, {
      content: Tags/* TechPreviewTag */.n,
      placement: "bottom",
      children: /*#__PURE__*/jsx_runtime_.jsx("div", {
        children: /*#__PURE__*/jsx_runtime_.jsx(TechPreviewIcon/* TechPreviewIcon */.d, {})
      })
    })
  });
}
/* harmony default export */ var Badges_TechPreviewBadge = (TechPreviewBadge);
;// CONCATENATED MODULE: ./src/constants/apiMenuItems.tsx






let MenuItems;

(function (MenuItems) {
  MenuItems["Overview"] = "overview";
  MenuItems["CalculatingVisualizationSessionHours"] = "calculating-visualization-session-hours";
  MenuItems["Documentation"] = "documentation";
  MenuItems["Tutorials"] = "tutorials";
  MenuItems["Samples"] = "samples";
  MenuItems["Changelog"] = "changelog";
  MenuItems["Reference"] = "operations";
  MenuItems["SupportedFormats"] = "supported-formats";
  MenuItems["CCImageCollection"] = "cc-ic";
  MenuItems["CCOrientations"] = "cc-ori";
  MenuItems["RDAContextScene"] = "rda-cs";
  MenuItems["RDAContextScene_V4"] = "rda-cs-v4";
  MenuItems["RDAContextDetector"] = "rda-cd";
  MenuItems["RDAJobTypes"] = "rda-jobtypes";
  MenuItems["RDDetails"] = "rd-details";
  MenuItems["RMRDDetails"] = "rm-rd-details";
  MenuItems["ApiKeys"] = "api-keys";
  MenuItems["Events"] = "events";
  MenuItems["BlueprintApiReference"] = "blueprint-api-reference";
  MenuItems["ModelVersions"] = "model-versions";
})(MenuItems || (MenuItems = {}));

class ApiDocumentation {
  static get allApiGroups() {
    return [...ApiGroupId/* allApiGroupIds */.vf];
  }

  static get menuItems() {
    return [{
      id: MenuItems.Overview,
      children: [],
      level: '1',
      displayName: 'Overview',
      path: `/${MenuItems.Overview}`
    }, {
      id: MenuItems.CalculatingVisualizationSessionHours,
      children: [],
      level: '1',
      displayName: 'Calculating Visualization Session Hours',
      renderFunc: ({
        apiPath
      }) => apiPath === ApiName/* ApiPath.Visualization */.L.Visualization,
      path: `/${MenuItems.CalculatingVisualizationSessionHours}`
    }, {
      id: MenuItems.SupportedFormats,
      children: [],
      level: '1',
      displayName: 'Supported formats',
      renderFunc: ({
        apiPath
      }) => apiPath === ApiName/* ApiPath.Synchronization */.L.Synchronization,
      path: `/${MenuItems.SupportedFormats}`
    }, {
      id: MenuItems.CCImageCollection,
      children: [],
      level: '1',
      displayName: 'CC Image Collection',
      renderFunc: ({
        apiPath
      }) => apiPath === ApiName/* ApiPath.ContextCapture */.L.ContextCapture,
      path: `/${MenuItems.CCImageCollection}`
    }, {
      id: MenuItems.CCOrientations,
      children: [],
      level: '1',
      displayName: 'CC Orientations',
      renderFunc: ({
        apiPath
      }) => apiPath === ApiName/* ApiPath.ContextCapture */.L.ContextCapture,
      path: `/${MenuItems.CCOrientations}`
    }, {
      id: MenuItems.RDAContextScene,
      children: [],
      level: '1',
      displayName: 'Context Scenes',
      renderFunc: ({
        apiPath
      }) => apiPath === ApiName/* ApiPath.RealityAnalysis */.L.RealityAnalysis,
      path: `/${MenuItems.RDAContextScene}`
    }, {
      id: MenuItems.RDAContextScene_V4,
      children: [],
      level: '1',
      displayName: 'Context Scenes version 4',
      renderFunc: ({
        apiPath
      }) => apiPath === ApiName/* ApiPath.RealityAnalysis */.L.RealityAnalysis,
      path: `/${MenuItems.RDAContextScene_V4}`
    }, {
      id: MenuItems.RDAContextDetector,
      children: [],
      level: '1',
      displayName: 'Context Detectors',
      renderFunc: ({
        apiPath
      }) => apiPath === ApiName/* ApiPath.RealityAnalysis */.L.RealityAnalysis,
      path: `/${MenuItems.RDAContextDetector}`
    }, {
      id: MenuItems.RDAJobTypes,
      children: [],
      level: '1',
      displayName: 'Job types',
      renderFunc: ({
        apiPath
      }) => apiPath === ApiName/* ApiPath.RealityAnalysis */.L.RealityAnalysis,
      path: `/${MenuItems.RDAJobTypes}`
    }, {
      id: MenuItems.RDDetails,
      children: [],
      level: '1',
      displayName: 'RealityData Properties',
      renderFunc: ({
        apiPath
      }) => apiPath === ApiName/* ApiPath.RealityData */.L.RealityData,
      path: `/${MenuItems.RDDetails}`
    }, {
      id: MenuItems.RMRDDetails,
      children: [],
      level: '1',
      displayName: 'Reality Data Properties',
      renderFunc: ({
        apiPath
      }) => apiPath === ApiName/* ApiPath.RealityManagement */.L.RealityManagement,
      path: `/${MenuItems.RMRDDetails}`
    }, {
      id: MenuItems.Events,
      children: [],
      level: '1',
      displayName: 'Events',
      renderFunc: ({
        apiPath
      }) => apiPath === ApiName/* ApiPath.Webhooks */.L.Webhooks,
      path: `/${MenuItems.Events}`
    }, {
      id: MenuItems.Tutorials,
      children: [],
      level: '1',
      displayName: 'Tutorials',
      path: `/${MenuItems.Tutorials}`,
      renderFunc: ({
        tutorials
      }) => !!tutorials?.length
    }, {
      id: MenuItems.Samples,
      children: [],
      level: '1',
      displayName: 'Samples',
      path: `/${MenuItems.Samples}`,
      renderFunc: () => true
    }, {
      id: MenuItems.Reference,
      children: [],
      level: '1',
      displayName: 'Reference',
      renderFunc: ({
        apiPath
      }) => apiPath !== ApiName/* ApiPath.Visualization */.L.Visualization,
      path: `/${MenuItems.Reference}`
    }, {
      id: MenuItems.Changelog,
      children: [],
      level: '1',
      displayName: 'Changelog',
      renderFunc: ({
        apiPath
      }) => apiPath !== ApiName/* ApiPath.Visualization */.L.Visualization,
      path: `/${MenuItems.Changelog}`
    }, {
      id: MenuItems.ApiKeys,
      children: [],
      level: '1',
      displayName: 'API Keys',
      renderFunc: ({
        apiPath
      }) => apiPath === ApiName/* ApiPath.Reporting */.L.Reporting || apiPath === ApiName/* ApiPath.Insights */.L.Insights,
      path: `/${MenuItems.ApiKeys}`
    }, {
      id: MenuItems.ModelVersions,
      children: [],
      level: '1',
      displayName: 'Model versions',
      renderFunc: ({
        apiPath
      }) => apiPath === ApiName/* ApiPath.PnIDToITwin */.L.PnIDToITwin,
      path: `/${MenuItems.ModelVersions}`
    }];
  }

  static getMenuItems(apiPath, tutorials) {
    return ApiDocumentation.menuItems.filter(menuItem => menuItem.renderFunc ? menuItem.renderFunc({
      apiPath,
      tutorials
    }) : true);
  } // Tutorials are being passed as a temporary solution as mdx file are not being found when trying to getTutorialMetadataByApi(apiPath) in this file


  static getMenuItemsWithOperations(apiName, apiPath, operationTagGroups, tutorials, ignoreTechPreview = true) {
    return ApiDocumentation.getMenuItems(apiPath, tutorials).map(apiDocMenuItem => {
      const leftSideNavItem = {
        id: apiDocMenuItem.id,
        title: apiDocMenuItem.displayName,
        href: apiDocMenuItem.fullPath ? apiDocMenuItem.path : `/apis/${apiName}${apiDocMenuItem.path}`,
        subItems: []
      };

      if (leftSideNavItem.id === MenuItems.Reference) {
        leftSideNavItem.caption = leftSideNavItem.href ? {
          title: 'View all',
          href: leftSideNavItem.href
        } : undefined;

        for (const tagGroup of operationTagGroups) {
          leftSideNavItem.subItems?.push({
            id: tagGroup.tag,
            subItems: tagGroup.items.map(operation => {
              return {
                id: operation.name,
                title: `${operation.displayName}`,
                href: `/apis/${apiName}${apiDocMenuItem.path}/${operation.name}`,
                prefix: operation.method,
                badge: operation.tags.includes(Tags/* DeprecatedTag */.l) ? /*#__PURE__*/jsx_runtime_.jsx(Badges_DeprecatedBadge, {}) : operation.tags.includes(Tags/* TechPreviewTag */.n) && !ignoreTechPreview ? /*#__PURE__*/jsx_runtime_.jsx(Badges_TechPreviewBadge, {}) : undefined
              };
            }).sort((one, two) => one.title < two.title ? -1 : 1),
            title: `${tagGroup.tag}`
          });
        }
      }

      leftSideNavItem.subItems = leftSideNavItem.subItems?.sort((one, two) => {
        //Place untagged at the end of the list
        if (two.title === 'Untagged') return -1;
        if (one.title === 'Untagged') return 1; //Sort a-z

        if (one.title < two.title) return -1;
        if (one.title > two.title) return 1;
        return 0;
      });
      return leftSideNavItem;
    });
  }

}

/***/ }),

/***/ 35735:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "q": function() { return /* binding */ DefaultApiGroups; }
/* harmony export */ });
/* harmony import */ var chroma_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66303);
/* harmony import */ var chroma_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(chroma_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ApiGroupId__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67105);


class DefaultApiGroups {
  static get apiGroups() {
    const groups = [{
      name: 'Visualization',
      id: _ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.Visualization */ .mV.Visualization,
      displayName: 'Visualization',
      color: '#56AA1C',
      backgroundColor: '#56aa1c33',
      description: 'View and interact with your iTwin in a web browser using Bentley cloud services.',
      isSelected: false,
      isReleased: true,
      apis: [],
      isInternal: false
    }, {
      name: 'Synchronization',
      id: _ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.Synchronization */ .mV.Synchronization,
      displayName: 'Synchronization & Exports',
      color: '#2C9B30',
      backgroundColor: '#2c9b3033',
      description: 'Transform engineering data from native design formats to web-viewable iTwins.',
      isSelected: false,
      isReleased: true,
      apis: [],
      isInternal: false
    }, {
      name: 'Data Management',
      id: _ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.DataManagement */ .mV.DataManagement,
      displayName: 'Digital Twin Management',
      color: '#2B9CA7',
      backgroundColor: '#2B9CA733',
      description: 'Access and integrate data from both Bentley and 3rd party repositories.',
      isSelected: false,
      isReleased: true,
      apis: [],
      isInternal: false
    }, {
      name: 'Administration',
      id: _ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.Administration */ .mV.Administration,
      displayName: 'Administration',
      color: '#2A9BCF',
      backgroundColor: '#2A9BCF33',
      description: 'Manage the users, projects, and organizations that interact with your iTwin.',
      isSelected: false,
      isReleased: true,
      apis: [],
      isInternal: false
    }, {
      name: 'Reality Modeling',
      id: _ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.RealityModeling */ .mV.RealityModeling,
      displayName: 'Reality Capture',
      color: '#2C9B6B',
      backgroundColor: '#2C9B6B33',
      description: 'Create, manage, analyze and share Reality Data such as Photos, Point Clouds, Meshes.',
      isSelected: false,
      isReleased: true,
      apis: [],
      isInternal: false
    }, {
      name: 'Validation',
      id: _ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.Validation */ .mV.Validation,
      displayName: 'Validation',
      color: '#2C9B6B',
      backgroundColor: '#2C9B6B33',
      description: 'Validate digital twin data and detect geometry clashes.',
      isSelected: false,
      isReleased: true,
      apis: [],
      isInternal: false
    }, {
      name: 'Reporting & Insights',
      id: _ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.ReportingInsights */ .mV.ReportingInsights,
      displayName: 'Reporting & Insights',
      color: '#2C9BE3',
      backgroundColor: '#2C9BE333',
      description: 'Build custom dashboards and integrate iTwin data with other business applications.',
      isSelected: false,
      isReleased: true,
      apis: [],
      isInternal: false
    }, {
      name: 'Project Delivery',
      id: _ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.ProjectDelivery */ .mV.ProjectDelivery,
      displayName: 'Review',
      color: '#0273BA',
      backgroundColor: '#0273BA33',
      description: 'Collaborate with the project team to manage issues, exchanges, and design reviews.',
      isSelected: false,
      isReleased: true,
      apis: [],
      isInternal: false
    }, {
      name: 'Events',
      id: _ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.Events */ .mV.Events,
      displayName: 'Events',
      color: '#008BE1',
      backgroundColor: '#008BE133',
      description: 'Subscribe to iTwin events to receive notifications and trigger actions in your applications.',
      isSelected: false,
      isReleased: true,
      apis: [],
      isInternal: false
    }, {
      name: 'Workflow Automation',
      id: _ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.WorkflowAutomation */ .mV.WorkflowAutomation,
      displayName: 'Workflow Automation',
      color: '#008BE1',
      backgroundColor: '#008BE133',
      description: 'Subscribe to iTwin events to receive notifications and trigger actions in your applications.',
      isSelected: false,
      isReleased: true,
      apis: [],
      isInternal: false
    }, {
      name: 'Internal Access',
      id: _ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.Internal */ .mV.Internal,
      displayName: 'Internal Access',
      color: '#2B9B1B',
      backgroundColor: '#2B9B1B33',
      description: 'Internal API access. This tier allows almost unrestricted access to all backend and frontend APIs.',
      isSelected: false,
      isReleased: false,
      apis: [],
      isInternal: true
    }, {
      name: 'Infrastructure',
      id: _ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.Infrastructure */ .mV.Infrastructure,
      displayName: 'Infrastructure',
      color: '#0073BA',
      backgroundColor: '#0073BA33',
      description: 'Infrastructure utilities used by API management itself',
      isSelected: false,
      isReleased: false,
      apis: [],
      isInternal: true
    }, {
      name: 'ITwinUnreal',
      id: _ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.ITwinUnreal */ .mV.ITwinUnreal,
      displayName: 'iTwin Unreal Integration',
      color: '#ffc233',
      backgroundColor: '#ffc233',
      description: 'View and interact with your iTwin in Unreal Engine using the iTwin Exporter for Datasmith.',
      isSelected: false,
      isReleased: false,
      apis: [],
      isInternal: false
    }].sort((a, b) => a.displayName.localeCompare(b.displayName));
    const colorPallette = chroma_js__WEBPACK_IMPORTED_MODULE_0___default().scale(['#53A21A', '#008BE1']).colors(groups.length);
    return groups.map((group, index) => {
      group.color = colorPallette[index];
      group.backgroundColor = chroma_js__WEBPACK_IMPORTED_MODULE_0___default()(colorPallette[index]).alpha(0.05).hex();
      return group;
    });
  }

  static get releasedApiGroups() {
    return this.apiGroups.filter(x => x.isReleased);
  }

  static get publicApiGroups() {
    return DefaultApiGroups.apiGroups.filter(group => !group.isInternal);
  }

  static get internalApiGroups() {
    return DefaultApiGroups.apiGroups.filter(group => group.isInternal);
  }

  static apiGroupById(id) {
    return DefaultApiGroups.apiGroups.find(group => group.id === id);
  }

  static apiGroupByName(name) {
    return DefaultApiGroups.apiGroups.find(group => group.name === name);
  }

  static get enterpriseApiGroups() {
    return [{
      name: 'Enterprise',
      id: _ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.Enterprise */ .mV.Enterprise,
      displayName: 'Enterprise',
      color: '#56AA1C',
      backgroundColor: '#56aa1c33',
      description: 'Enterprise systems',
      isSelected: true,
      isReleased: false,
      apis: [],
      isInternal: false
    }];
  }

}

/***/ }),

/***/ 36740:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export GrantTypes */
/**
 * The OAuth framework specifies several grant types for different use cases.
 */
let GrantTypes;

(function (GrantTypes) {
  GrantTypes["implicit"] = "implicit";
  GrantTypes["authorizationCode"] = "authorizationCode";
  GrantTypes["clientCredentials"] = "clientCredentials";
})(GrantTypes || (GrantTypes = {}));

/***/ }),

/***/ 86491:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$r": function() { return /* binding */ PRICING; },
/* harmony export */   "A": function() { return /* binding */ REST_API_OVERVIEW; },
/* harmony export */   "HP": function() { return /* binding */ UNITY; },
/* harmony export */   "QR": function() { return /* binding */ ROLES_AND_PERMISSIONS; },
/* harmony export */   "Ss": function() { return /* binding */ API_GROUPS; },
/* harmony export */   "fI": function() { return /* binding */ UNREAL; },
/* harmony export */   "sU": function() { return /* binding */ SPACIAL_ALIGNMENT; },
/* harmony export */   "tQ": function() { return /* binding */ DOCUMENTATION; },
/* harmony export */   "up": function() { return /* binding */ DATA_CENTER_LOCATIONS; }
/* harmony export */ });
/* unused harmony exports ACCOUNT_SETTINGS, ACCREDITATION, APPS, BLOG, CONTACT_SALES, GET_STARTED, HOME, ITWIN_PLATFORM, MY_APPS, MY_ITWINS, LEARNING, PLATFORM_HEALTH, POWERED_BY_ITWIN, PROFILE, REGISTER, ESREGISTER, SAMPLES, SUCCESS_STORIES, SUPPORT, TUTORIALS, COURSES, HANDS_ON_LABS, CONSUMPTION, TRIAL, TERMS_OF_SERVICE, START_SUBSCRIPTION, NOT_FOUND, REDIRECT, REDIRECT_SILENT, REDIRECT_TUTORIAL, ITWIN_UNIVERSITY, REGISTER_V2, APPS_V2, ALL_PRIVATE_ROUTES, NO_UPDATE_POPUP_ROUTES, APP_DETAILS_V2_KEY, getUserPreferredRegisterRoute, getUserPreferredAppDetailsRoute */
const ACCOUNT_SETTINGS = '/account-settings';
const ACCREDITATION = '/accreditation';
const API_GROUPS = '/api-groups';
const APPS = '/apps';
const BLOG = '/blog';
const CONTACT_SALES = '/contact-sales';
const DOCUMENTATION = '/apis';
const GET_STARTED = '/get-started';
const HOME = '/';
const ITWIN_PLATFORM = '/itwinplatform';
const MY_APPS = '/my-apps';
const MY_ITWINS = '/my-itwins';
const LEARNING = '/learning';
const PLATFORM_HEALTH = '/platform-health';
const POWERED_BY_ITWIN = '/powered-by-itwin';
const PRICING = '/pricing';
const PROFILE = '/profile';
const REGISTER = '/register';
const ESREGISTER = '/esregister';
const ROLES_AND_PERMISSIONS = '/roles-and-permissions';
const SAMPLES = '/samples';
const SUCCESS_STORIES = '/success-stories';
const SUPPORT = '/support';
const TUTORIALS = '/tutorials';
const COURSES = '/learning/courses';
const HANDS_ON_LABS = '/learning/hands-on-labs';
const UNREAL = '/unreal';
const UNITY = '/unity';
const CONSUMPTION = '/consumption';
const TRIAL = '/trial';
const TERMS_OF_SERVICE = '/terms-of-service';
const REST_API_OVERVIEW = '/apis/overview';
const START_SUBSCRIPTION = '/start-subscription';
const NOT_FOUND = '/404';
const REDIRECT = '/redirect';
const REDIRECT_SILENT = '/redirect-silent';
const REDIRECT_TUTORIAL = '/redirect-tutorial';
const ITWIN_UNIVERSITY = '/itwin-university';
const SPACIAL_ALIGNMENT = '/spatial';
const DATA_CENTER_LOCATIONS = '/data-centers';
const REGISTER_V2 = '/register-v2';
const APPS_V2 = '/apps-v2';
const ALL_PRIVATE_ROUTES = [ACCOUNT_SETTINGS, APPS, CONSUMPTION, '/insights/api-keys/addapikey', '/insights/api-keys/modifyapikey', MY_APPS, MY_ITWINS, PROFILE, REGISTER, START_SUBSCRIPTION];
const NO_UPDATE_POPUP_ROUTES = [ROLES_AND_PERMISSIONS, TERMS_OF_SERVICE, NOT_FOUND, REDIRECT, REDIRECT_SILENT];
const APP_DETAILS_V2_KEY = 'useAppDetailsV2';
const getUserPreferredRegisterRoute = flag => {
  if (flag === false) return REGISTER;
  let storedPreference = localStorage.getItem(APP_DETAILS_V2_KEY);

  if (!storedPreference) {
    localStorage.setItem(APP_DETAILS_V2_KEY, 'true');
    storedPreference = 'true';
  }

  const useV2 = JSON.parse(storedPreference);
  return useV2 ? REGISTER_V2 : REGISTER;
};
const getUserPreferredAppDetailsRoute = flag => {
  if (flag === false) return APPS;
  let storedPreference = localStorage.getItem(APP_DETAILS_V2_KEY);

  if (!storedPreference) {
    localStorage.setItem(APP_DETAILS_V2_KEY, 'true');
    storedPreference = 'true';
  }

  const useV2 = JSON.parse(storedPreference);
  return useV2 ? APPS_V2 : APPS;
};

/***/ }),

/***/ 39015:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export RequestBodyFormat */
let RequestBodyFormat;

(function (RequestBodyFormat) {
  RequestBodyFormat["Raw"] = "raw";
  RequestBodyFormat["Binary"] = "binary";
})(RequestBodyFormat || (RequestBodyFormat = {}));

/***/ }),

/***/ 50982:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AP": function() { return /* binding */ playlistSortAttribute; },
/* harmony export */   "Qm": function() { return /* binding */ apiGroupIdAttrPrefix; },
/* harmony export */   "eD": function() { return /* binding */ apiPathAttrPrefix; },
/* harmony export */   "fQ": function() { return /* binding */ playlistAttribute; },
/* harmony export */   "sI": function() { return /* binding */ iTwinPlatformUserId; },
/* harmony export */   "zj": function() { return /* binding */ iTwinPlatformApiGroupId; }
/* harmony export */ });
const iTwinPlatformUserId = 'b44ec7df-cd25-4a10-ba11-bafe02e91c35';
const playlistAttribute = 'showcase';
const playlistSortAttribute = 'showcase-index';
const apiPathAttrPrefix = 'api-path:';
const apiGroupIdAttrPrefix = 'api-group-id:';
const iTwinPlatformApiGroupId = '029f2113-7648-4fe5-a7d6-664584776c61';

/***/ }),

/***/ 54541:
/***/ (function() {



/***/ }),

/***/ 64522:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export ApiController */
/* harmony import */ var _components_PageMetadata_PageMetadata__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(45744);
/* harmony import */ var _components_ProgressRadialWithOverlay_ProgressRadialWithOverlay__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(31097);
/* harmony import */ var _components_pages_ApiDocumentation_ApiDocumentation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4570);
/* harmony import */ var _constants_apiMenuItems__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(47689);
/* harmony import */ var _pages_404__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(24932);
/* harmony import */ var _providers_SessionProvider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(66189);
/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(28789);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_components_pages_ApiDocumentation_ApiDocumentation__WEBPACK_IMPORTED_MODULE_2__, _providers_SessionProvider__WEBPACK_IMPORTED_MODULE_5__, _hooks__WEBPACK_IMPORTED_MODULE_6__]);
([_components_pages_ApiDocumentation_ApiDocumentation__WEBPACK_IMPORTED_MODULE_2__, _providers_SessionProvider__WEBPACK_IMPORTED_MODULE_5__, _hooks__WEBPACK_IMPORTED_MODULE_6__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);










function ApiController({
  apiName,
  tabId,
  operationName
}) {
  const {
    isInitializing
  } = useSession();
  const tab = ApiDocumentation.menuItems.find(item => item.id === tabId);
  const [api, isLoading] = useApi(apiName);
  const apis = useApisByPath(api?.path);
  const operationsByTag = useOperationsByTags(apiName);
  const operation = useOperation(operationName, operationsByTag);
  const authorizationServer = useAuthorizationServer(api);
  const allDefinitions = useDefinitions(apiName);
  const operationDefinitions = useOperationDefinitions(apiName, operation);
  const refreshedLogEntries = useLogEntries(apiName);
  const apiDocumentationMdContent = useOverviewContent(apiName);

  if (isLoading || isInitializing) {
    return /*#__PURE__*/_jsx(ProgressRadialWithOverlay, {
      isFullPage: true
    });
  }

  if (!api) {
    return /*#__PURE__*/_jsx(NotFoundPage, {});
  }

  const title = operation && tabId === MenuItems.Reference ? `${operation.displayName} - ${api.displayName} | iTwin Platform` : tab ? `${tab.displayName} - ${api.displayName} | iTwin Platform` : `${api.displayName} | iTwin Platform`;
  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [/*#__PURE__*/_jsx(PageMetadata, {
      title: title
    }), /*#__PURE__*/_jsx(ApiDocumentationPage, {
      initialApis: apis,
      api: api,
      apiName: apiName,
      operationsByTag: operationsByTag,
      operation: operation,
      operationName: operationName,
      operationTags: operation?.tags ?? [],
      authorizationServer: authorizationServer,
      operationDefinitions: operationDefinitions,
      tabId: tabId,
      changelog: refreshedLogEntries,
      apiDocumentationMdContent: apiDocumentationMdContent,
      allDefinitions: allDefinitions //Content that cannot be published for Internal APIs
      ,
      tutorialsMetadata: [],
      preloadedApis: [],
      preloadedSamples: []
    })]
  });
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 28789:
/***/ (function(module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony import */ var _useApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7575);
/* harmony import */ var _useApisByPath__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(73326);
/* harmony import */ var _useAuthorizationServer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(39731);
/* harmony import */ var _useDefinitions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(81077);
/* harmony import */ var _useOperationDefinitions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(40033);
/* harmony import */ var _useLogEntries__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(87430);
/* harmony import */ var _useOperation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(99276);
/* harmony import */ var _useOperationsByTags__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(90462);
/* harmony import */ var _useOverviewContent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(72990);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_useApi__WEBPACK_IMPORTED_MODULE_0__, _useApisByPath__WEBPACK_IMPORTED_MODULE_1__, _useAuthorizationServer__WEBPACK_IMPORTED_MODULE_2__, _useDefinitions__WEBPACK_IMPORTED_MODULE_3__, _useOperationDefinitions__WEBPACK_IMPORTED_MODULE_4__, _useLogEntries__WEBPACK_IMPORTED_MODULE_5__, _useOperationsByTags__WEBPACK_IMPORTED_MODULE_7__]);
([_useApi__WEBPACK_IMPORTED_MODULE_0__, _useApisByPath__WEBPACK_IMPORTED_MODULE_1__, _useAuthorizationServer__WEBPACK_IMPORTED_MODULE_2__, _useDefinitions__WEBPACK_IMPORTED_MODULE_3__, _useOperationDefinitions__WEBPACK_IMPORTED_MODULE_4__, _useLogEntries__WEBPACK_IMPORTED_MODULE_5__, _useOperationsByTags__WEBPACK_IMPORTED_MODULE_7__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);









__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 7575:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export useApi */
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52167);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _hooks_useApisApi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75367);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_hooks_useApisApi__WEBPACK_IMPORTED_MODULE_2__]);
_hooks_useApisApi__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];



function useApi(apiName) {
  const {
    0: api,
    1: setApi
  } = useState(undefined);
  const {
    0: isLoading,
    1: setIsLoading
  } = useState(true);
  const apisApi = useApisApi();
  useEffect(() => {
    const CancelToken = axios.CancelToken;
    const source = CancelToken.source();
    let shouldUpdate = true;
    apisApi.getApi(apiName, source.token).then(api => {
      if (api && shouldUpdate) {
        setApi(api);
      }
    }).catch().finally(() => setIsLoading(false));
    return () => {
      shouldUpdate = false;
      source.cancel();
    };
  }, [apiName, apisApi]);
  return [api, isLoading];
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 73326:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export useApisByPath */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _hooks_useApisApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(75367);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_hooks_useApisApi__WEBPACK_IMPORTED_MODULE_1__]);
_hooks_useApisApi__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];


function useApisByPath(path) {
  const {
    0: apis,
    1: setApis
  } = useState([]);
  const apisApi = useApisApi();
  useEffect(() => {
    if (!path) {
      return;
    }

    apisApi.getApiVersions(path).then(response => setApis(response));
  }, [apisApi, path]);
  return apis;
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 39731:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony exports getAuthorizationServer, useAuthorizationServer, authorizationServers */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2599);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_1__]);
_client_env__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



function getAuthorizationServer(api) {
  const apiAuth = api?.authenticationSettings?.oAuth2?.authorizationServerId;

  if (!apiAuth) {
    return undefined;
  }

  const authServer = authorizationServers.find(server => server.id === apiAuth);

  if (authServer && api?.authenticationSettings?.oAuth2?.scope) {
    return _objectSpread(_objectSpread({}, authServer), {}, {
      scopes: [api.authenticationSettings?.oAuth2?.scope]
    });
  }

  return authServer ? _objectSpread({}, authServer) : undefined;
}
function useAuthorizationServer(api) {
  return useMemo(() => getAuthorizationServer(api), [api]);
}
const authorizationServers = [{
  authorizationEndpoint: _client_env__WEBPACK_IMPORTED_MODULE_1__/* ["default"].BENTLEY_OAUTH_AUTHORIZATION_URL */ .Z.BENTLEY_OAUTH_AUTHORIZATION_URL,
  clientId: _client_env__WEBPACK_IMPORTED_MODULE_1__/* ["default"].BENTLEY_OAUTH_CONSOLE_CLIENT */ .Z.BENTLEY_OAUTH_CONSOLE_CLIENT,
  displayName: 'Bentley OAuth2 Service',
  id: 'bentley-oauth',
  grantTypes: ['authorizationCode'],
  scopes: [],
  tokenEndpoint: _client_env__WEBPACK_IMPORTED_MODULE_1__/* ["default"].BENTLEY_OAUTH_TOKEN_URL */ .Z.BENTLEY_OAUTH_TOKEN_URL
}];
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 81077:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export useDefinitions */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _hooks_useApisApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(75367);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_hooks_useApisApi__WEBPACK_IMPORTED_MODULE_1__]);
_hooks_useApisApi__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];


function useDefinitions(apiName) {
  const {
    0: definitions,
    1: setDefinitions
  } = useState([]);
  const apisApi = useApisApi();
  useEffect(() => {
    if (!apiName) {
      return;
    }

    apisApi.getAllDefinitionsByApi(apiName).then(d => setDefinitions(d));
  }, [apiName, apisApi]);
  return definitions;
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 87430:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export useLogEntries */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _hooks_useApisApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(75367);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_hooks_useApisApi__WEBPACK_IMPORTED_MODULE_1__]);
_hooks_useApisApi__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];


function useLogEntries(apiName) {
  const {
    0: logEntry,
    1: setLogEntries
  } = useState([]);
  const apisApi = useApisApi();
  useEffect(() => {
    if (apiName) {
      apisApi.getApiLogEntries(apiName).then(notes => setLogEntries(notes));
    }
  }, [apiName, apisApi]);
  return logEntry;
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 99276:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export useOperation */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

function useOperation(operationName, operations = []) {
  return useMemo(() => operationName ? operations.flatMap(group => group.items).find(op => op.name.toLowerCase() === operationName.toLowerCase()) : undefined, [operations, operationName]);
}

/***/ }),

/***/ 40033:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export useOperationDefinitions */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _hooks_useApisApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(75367);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_hooks_useApisApi__WEBPACK_IMPORTED_MODULE_1__]);
_hooks_useApisApi__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];


function useOperationDefinitions(apiName, operation) {
  const {
    0: definitions,
    1: setDefinitions
  } = useState([]);
  const apisApi = useApisApi();
  useEffect(() => {
    if (!apiName || !operation) {
      return;
    }

    apisApi.getAllDefinitionsByOperation(operation, apiName).then(d => setDefinitions(d));
  }, [apiName, apisApi, operation]);
  return definitions;
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 90462:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export useOperationsByTags */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _hooks_useApisApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(75367);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_hooks_useApisApi__WEBPACK_IMPORTED_MODULE_1__]);
_hooks_useApisApi__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];


function useOperationsByTags(apiName) {
  const {
    0: operationsByTags,
    1: setOperationsByTags
  } = useState([]);
  const apisApi = useApisApi();
  useEffect(() => {
    if (!apiName) {
      return;
    }

    apisApi.getOperationsByTagsFullData(apiName).then(operationsByTag => {
      setOperationsByTags(operationsByTag);
    }, e => {
      console.log(e);
      setOperationsByTags([]);
    });
  }, [apiName, apisApi]);
  return operationsByTags;
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 72990:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export useOverviewContent */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _services_mdService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(88252);


function useOverviewContent(apiName) {
  const {
    0: overviewContent,
    1: setOverviewContent
  } = useState('');
  useEffect(() => {
    if (!apiName) {
      return;
    }

    preloadApiDocumentation(apiName).then(content => setOverviewContent(content));
  }, [apiName]);
  return overviewContent;
}

/***/ }),

/***/ 58140:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony exports fetcher, fetcherWithOAuth, fetcherWithSas, apisFetcherWithPagination */
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52167);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(75767);


const fetcher = url => axios.get(url).then(res => res.data);
const fetcherWithOAuth = ([url, token]) => axios.get(url, {
  headers: {
    Authorization: `Bearer ${token}`
  }
}).then(res => res.data);
const fetcherWithSas = ([url, token]) => axios.get(url, {
  headers: {
    Authorization: `SharedAccessSignature ${token}`
  }
}).then(res => res.data);
const apisFetcherWithPagination = url => {
  const fetchWithNextLink = async () => {
    const params = new URLSearchParams({
      $top: defaultPageSize.toString()
    });
    const data = [];
    let nextLink;

    do {
      const response = await axios.get(url, {
        params: params
      });
      nextLink = response.data.nextLink;
      response.data.value.forEach(api => data.push(api));
      params.set('$skip', data.length.toString());
    } while (nextLink);

    return data;
  };

  return fetchWithNextLink().then(res => res);
};

/***/ }),

/***/ 44273:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "lc": function() { return /* reexport safe */ _useApis__WEBPACK_IMPORTED_MODULE_0__.lc; }
/* harmony export */ });
/* harmony import */ var _useApis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88360);
/* harmony import */ var _useApplication__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2849);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_useApis__WEBPACK_IMPORTED_MODULE_0__, _useApplication__WEBPACK_IMPORTED_MODULE_1__]);
([_useApis__WEBPACK_IMPORTED_MODULE_0__, _useApplication__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);




__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 25919:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export defaultRetry */
const defaultRetry = {
  shouldRetryOnError: true,
  errorRetryInterval: 2000,
  errorRetryCount: 3
};

/***/ }),

/***/ 78410:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export defaultRevalidate */
const defaultRevalidate = {
  revalidateIfStale: true,
  revalidateOnFocus: false,
  revalidateOnReconnect: false
};

/***/ }),

/***/ 88360:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "lc": function() { return /* binding */ filterUniqueApis; }
/* harmony export */ });
/* unused harmony exports default, filterApisByTag, findLatestApiVersion, mapToApisWithTag, mapApisWithTagToApis, getApiAssociations */
/* harmony import */ var natsort__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(44150);
/* harmony import */ var natsort__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(natsort__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var swr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(15941);
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2599);
/* harmony import */ var _constants_Tags__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(54826);
/* harmony import */ var _models_apiWithTag__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(88983);
/* harmony import */ var _fetchers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(58140);
/* harmony import */ var _retry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(25919);
/* harmony import */ var _revalidation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(78410);
/* harmony import */ var _constants_defaultApiGroups__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(35735);
/* harmony import */ var _constants_ApiName__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(594);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([swr__WEBPACK_IMPORTED_MODULE_1__, _client_env__WEBPACK_IMPORTED_MODULE_2__]);
([swr__WEBPACK_IMPORTED_MODULE_1__, _client_env__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }











function useApis(refreshIntervalMs) {
  const params = new URLSearchParams({
    '$filter': 'api/isCurrent eq true',
    'api-version': '2021-08-01'
  });
  const {
    data,
    error,
    isLoading
  } = useSWR(`${env.APIM_MANAGEMENT_URL}/apisByTags?${params.toString()}`, apisFetcherWithPagination, _objectSpread(_objectSpread(_objectSpread({}, defaultRetry), defaultRevalidate), {}, {
    revalidateIfStale: false,
    // Revalidate the data every 10 minutes
    refreshInterval: refreshIntervalMs ?? 1000 * 60 * 10
  }));
  return {
    apis: data,
    error,
    isLoading: isLoading
  };
}
function filterApisByTag(apis, tag) {
  return mapApisWithTagToApis(apis).filter(api => api.tags.includes(tag));
}
function filterUniqueApis(apis, includeTechPreview = true) {
  const sortedApis = [];
  const apisVersionSet = apis.reduce((set, api) => {
    const key = api.path ?? api.name;

    if (!set[key]) {
      set[key] = [];
    }

    set[key].push(api);
    return set;
  }, {});
  Object.values(apisVersionSet).forEach(apis => {
    sortedApis.push(findLatestApiVersion(apis, includeTechPreview));
  });
  return sortedApis;
}
function findLatestApiVersion(apis, includeTechPreview = true) {
  const versionPattern = /^v(?<version>\d+)$/g;
  const patternedVersionApis = apis.filter(api => api.apiVersion?.match(versionPattern));
  const sortedVersions = sortApisByVersionDesc(patternedVersionApis.length > 0 ? patternedVersionApis : apis);
  let stableSortedVersions = [];

  if (!includeTechPreview) {
    stableSortedVersions = sortedVersions.filter(api => !api.tags.includes(_constants_Tags__WEBPACK_IMPORTED_MODULE_9__/* .TechPreviewTag */ .n) && !api.tags.includes(_constants_Tags__WEBPACK_IMPORTED_MODULE_9__/* .DeprecatedTag */ .l));
  }

  return stableSortedVersions.length > 0 ? stableSortedVersions[0] : sortedVersions[0];
}
function mapToApisWithTag(apis) {
  return apis.map(api => new ApiWithTag(api));
}
function mapApisWithTagToApis(apis) {
  return apis.map(api => ({
    id: api.id,
    name: api.name,
    displayName: api.displayName,
    serviceUrl: api.serviceUrl,
    protocols: api.protocols,
    description: api.description,
    path: api.path,
    apiVersion: api.apiVersion,
    apiRevision: api.apiRevision,
    authenticationSettings: api.authenticationSettings,
    tags: apis.filter(x => api.id === x.id).flatMap(x => x.tags)
  })).reduce((array, currentValue) => {
    if (!array.find(api => api.id === currentValue.id)) {
      array.push(currentValue);
    }

    return array;
  }, []);
}
function getApiAssociations(apis, platformScopes) {
  const allPublicApis = apis.filter(api => DefaultApiGroups.releasedApiGroups.find(group => api.tags.includes(group.name)));
  const uniqueApis = filterUniqueApis(allPublicApis, false);
  return [...uniqueApis.map(api => {
    const allVersions = allPublicApis.filter(version => version.path === api.path);
    const scopes = allVersions.flatMap(version => platformScopes[version.name] ?? []).reduce((array, currentValue) => {
      if (!array.find(scope => scope.name === currentValue.name)) {
        array.push(currentValue);
      }

      return array;
    }, []);
    return {
      name: api.name,
      displayName: api.displayName,
      path: api.path,
      tags: apis.filter(x => api.name === x.name).flatMap(x => x.tags),
      scopes: scopes
    };
  }), {
    name: ApiName.VisualizationV1,
    displayName: 'Visualization',
    path: ApiName.VisualizationV1,
    tags: ['Visualization'],
    scopes: platformScopes[ApiName.VisualizationV1] ?? []
  }];
}

function sortApisByVersionDesc(apis) {
  const sorter = natsort__WEBPACK_IMPORTED_MODULE_0___default()({
    desc: true
  });
  const sortedApiList = apis.sort((api1, api2) => {
    return sorter(api1.apiVersion ?? -1, api2.apiVersion ?? -1);
  });
  return sortedApiList;
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 2849:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export default */
/* harmony import */ var swr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15941);
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2599);
/* harmony import */ var _stores_authStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(56825);
/* harmony import */ var _fetchers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(58140);
/* harmony import */ var _revalidation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(78410);
/* harmony import */ var _providers_SessionProvider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(66189);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([swr__WEBPACK_IMPORTED_MODULE_0__, _client_env__WEBPACK_IMPORTED_MODULE_1__, _stores_authStore__WEBPACK_IMPORTED_MODULE_2__, _providers_SessionProvider__WEBPACK_IMPORTED_MODULE_5__]);
([swr__WEBPACK_IMPORTED_MODULE_0__, _client_env__WEBPACK_IMPORTED_MODULE_1__, _stores_authStore__WEBPACK_IMPORTED_MODULE_2__, _providers_SessionProvider__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }







function useApplication(clientId, clientType) {
  const user = useUser();
  const shouldFetch = !!user && !!user.accessToken && !!clientId && !!clientType;
  const {
    data,
    error,
    isLoading,
    mutate
  } = useSWR(shouldFetch ? [`${env.APPLICATIONS_API_URL}/${clientType}/${clientId}`, user.accessToken] : null, fetcherWithOAuth, defaultRevalidate);
  return {
    application: data ? _objectSpread(_objectSpread({}, data), {}, {
      tier: mapTierNames(data.tier)
    }) : undefined,
    error,
    isLoading: isLoading || !shouldFetch,
    mutate
  };
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 27883:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export useApiKeysApi */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _api_apiKeysApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(57233);
/* harmony import */ var _stores__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(68032);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_api_apiKeysApi__WEBPACK_IMPORTED_MODULE_1__, _stores__WEBPACK_IMPORTED_MODULE_2__]);
([_api_apiKeysApi__WEBPACK_IMPORTED_MODULE_1__, _stores__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);



function useApiKeysApi() {
  const user = useUser();
  const apiKeysApi = useMemo(() => new ApiKeysApi(user.accessToken), [user]);
  return apiKeysApi;
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 96522:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export useApiMetadata */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _api_apiMetadata__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59923);
/* harmony import */ var _services_authService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(13417);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_api_apiMetadata__WEBPACK_IMPORTED_MODULE_1__, _services_authService__WEBPACK_IMPORTED_MODULE_2__]);
([_api_apiMetadata__WEBPACK_IMPORTED_MODULE_1__, _services_authService__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);



function useApiMetadata() {
  const {
    user
  } = useAuthService();
  const apiMetadata = useMemo(() => new ApiMetadata(user.accessToken), [user]);
  return apiMetadata;
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 75367:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export useApisApi */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(44354);
/* harmony import */ var _useSession__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26445);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_api__WEBPACK_IMPORTED_MODULE_1__, _useSession__WEBPACK_IMPORTED_MODULE_2__]);
([_api__WEBPACK_IMPORTED_MODULE_1__, _useSession__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);



function useApisApi() {
  const {
    session
  } = useSession();
  const apisApi = useMemo(() => new ApisApi(session?.managementToken), [session]);
  return apisApi;
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 39902:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export useOAuthService */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _services_oauthService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(28160);
/* harmony import */ var _useSession__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26445);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_services_oauthService__WEBPACK_IMPORTED_MODULE_1__, _useSession__WEBPACK_IMPORTED_MODULE_2__]);
([_services_oauthService__WEBPACK_IMPORTED_MODULE_1__, _useSession__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);



function useOAuthService() {
  const {
    session
  } = useSession();
  const oauthService = useMemo(() => new OAuthService(session?.managementToken), [session]);
  return oauthService;
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 26445:
/***/ (function(module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony import */ var _providers_SessionProvider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66189);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_providers_SessionProvider__WEBPACK_IMPORTED_MODULE_0__]);
_providers_SessionProvider__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];

__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 73196:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export useSessionService */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _services_sessionService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(98106);
/* harmony import */ var _stores__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(68032);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_services_sessionService__WEBPACK_IMPORTED_MODULE_1__, _stores__WEBPACK_IMPORTED_MODULE_2__]);
([_services_sessionService__WEBPACK_IMPORTED_MODULE_1__, _stores__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);



function useSessionService() {
  const user = useUser();
  const sessionService = useMemo(() => new SessionService(user.accessToken), [user]);
  return sessionService;
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 25686:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony exports getOperationHref, OperationLink */
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77262);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _constants_apiMenuItems__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(47689);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__);




function getOperationHref(apiName, operationName, currentMenuItem) {
  return operationName ? `/apis/${apiName}/operations/${operationName}` : currentMenuItem ? `/apis/${apiName}/${ApiDocumentation.menuItems.map(item => item.id).includes(currentMenuItem) ? currentMenuItem : MenuItems.Overview}` : `/apis/${apiName}`;
}
function OperationLink({
  apiName,
  className,
  operationName,
  children
}) {
  return /*#__PURE__*/_jsx(Link, {
    href: '/apis/[apiName]/[[...tab]]',
    as: getOperationHref(apiName, operationName),
    children: /*#__PURE__*/_jsx("a", {
      className: className,
      children: children
    })
  });
}

/***/ }),

/***/ 94451:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export default */
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77262);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__);
/* eslint-disable jsx-a11y/anchor-is-valid */



function SimpleLink({
  children,
  href,
  as,
  target,
  className,
  style = {},
  onClick
}) {
  return /*#__PURE__*/_jsx(Link, {
    href: href,
    as: as,
    passHref: true,
    children: /*#__PURE__*/_jsx("a", {
      style: style,
      target: target,
      className: className,
      onClick: onClick,
      children: children
    })
  });
}

/***/ }),

/***/ 88983:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "o": function() { return /* binding */ ApiWithTag; }
/* harmony export */ });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(35797);
/* harmony import */ var _versionSet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(26093);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



/**
 * API model.
 */

class ApiWithTag {
  /**
   * Unique ARM identifier.
   */

  /**
   * Unique API identifier.
   */

  /**
   * Display name of API, e.g. "HTTP Bin".
   */

  /**
   * Description of API.
   */

  /**
   * Version of API, e.g. "v1"
   */

  /**
   * Description of API version.
   */

  /**
   * To be defined
   */

  /**
   * To be defined
   */

  /**
   * Web service URL "https://httpbin.org".
   */

  /**
   * API URL suffix, e.g. "/httbin"
   */

  /**
   * Supported protocols, e.g. ["http", "https"]
   */

  /**
   * Information about associated authorization servers (OAuth 2 or OpenID Connect).
   */

  /**
   * Specifies an API tag.
   */
  constructor(contract) {
    _defineProperty(this, "id", void 0);

    _defineProperty(this, "name", void 0);

    _defineProperty(this, "displayName", void 0);

    _defineProperty(this, "description", void 0);

    _defineProperty(this, "apiVersion", void 0);

    _defineProperty(this, "apiVersionDescription", void 0);

    _defineProperty(this, "apiVersionSet", void 0);

    _defineProperty(this, "apiRevision", void 0);

    _defineProperty(this, "serviceUrl", void 0);

    _defineProperty(this, "path", void 0);

    _defineProperty(this, "protocols", void 0);

    _defineProperty(this, "authenticationSettings", void 0);

    _defineProperty(this, "tags", void 0);

    this.id = _utils__WEBPACK_IMPORTED_MODULE_0__/* .Utils.getResourceName */ .c.getResourceName('apis', contract.api.id, 'shortId');
    this.name = contract.api.id.split('/apis/')[1];
    this.displayName = contract.api.name;
    this.serviceUrl = contract.api.serviceUrl;
    this.protocols = contract.api.protocols;
    this.description = contract.api.description;
    this.path = contract.api.path;
    this.apiVersion = contract.api.apiVersion;
    this.apiRevision = contract.api.apiRevision;
    this.authenticationSettings = contract.api.authenticationSettings;
    this.tags = contract.tag.name ? [contract.tag.name] : [];

    if (contract.api.apiVersionSet) {
      const nestedVersionSet = contract.api.apiVersionSet;
      const versionSet = new _versionSet__WEBPACK_IMPORTED_MODULE_1__/* .VersionSet */ .W(contract.api.apiVersionSetId);
      versionSet.name = nestedVersionSet.name;
      versionSet.description = nestedVersionSet.description;
      versionSet.versionHeaderName = nestedVersionSet.versionHeaderName;
      versionSet.versionQueryName = nestedVersionSet.versionQueryName;
      versionSet.versioningScheme = nestedVersionSet.versioningScheme;
      this.apiVersionSet = versionSet;
    }
  }

}

/***/ }),

/***/ 75064:
/***/ (function() {



/***/ }),

/***/ 42835:
/***/ (function() {



/***/ }),

/***/ 40885:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: ConsoleOperation

// EXTERNAL MODULE: ./src/constants/requestBodyFormats.ts
var requestBodyFormats = __webpack_require__(39015);
;// CONCATENATED MODULE: ./src/models/console/consoleRequest.ts
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





class consoleRequest_ConsoleRequest {
  constructor(request) {
    _defineProperty(this, "queryParameters", void 0);

    _defineProperty(this, "headers", void 0);

    _defineProperty(this, "meaningfulHeaders", void 0);

    _defineProperty(this, "representations", void 0);

    _defineProperty(this, "description", void 0);

    _defineProperty(this, "body", void 0);

    _defineProperty(this, "hasBody", void 0);

    _defineProperty(this, "binary", void 0);

    _defineProperty(this, "bodyFormat", void 0);

    this.description = request.description;
    this.representations = request.representations.map(representation => new ConsoleRepresentation(representation));
    this.queryParameters = request.queryParameters.map(parameter => new ConsoleParameter(parameter));
    this.headers = request.headers.map(header => new ConsoleHeader(header));
    this.bodyFormat = RequestBodyFormat.Raw;
    this.meaningfulHeaders = this.headers.filter(x => !!x.value);

    if (this.representations?.length === 0) {
      return;
    }

    const representation = this.representations[0];
    this.body = representation.sample;
    const contentType = representation.contentType;

    if (contentType && this.headers.find(h => h.name === 'Content-Type') === undefined) {
      const consoleHeader = new ConsoleHeader();
      consoleHeader.name = 'Content-Type';
      consoleHeader.value = contentType;
      this.headers.push(consoleHeader);
    }
  }

  requestHeaders() {
    return this.headers.filter(header => !header.readonly);
  }

}
;// CONCATENATED MODULE: ./src/models/console/consoleOperation.ts
function consoleOperation_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




class ConsoleOperation {
  constructor(api, operation) {
    consoleOperation_defineProperty(this, "api", void 0);

    consoleOperation_defineProperty(this, "name", void 0);

    consoleOperation_defineProperty(this, "method", void 0);

    consoleOperation_defineProperty(this, "templateParameters", void 0);

    consoleOperation_defineProperty(this, "responses", void 0);

    consoleOperation_defineProperty(this, "hasBody", void 0);

    consoleOperation_defineProperty(this, "request", void 0);

    consoleOperation_defineProperty(this, "urlTemplate", void 0);

    this.api = api;
    this.name = operation.displayName;
    this.method = operation.method.toUpperCase();
    this.urlTemplate = operation.urlTemplate;
    this.request = new ConsoleRequest(operation.request);
    this.templateParameters = operation.templateParameters.map(parameterContract => new ConsoleParameter(parameterContract));
    this.hasBody = !['GET', 'HEAD', 'TRACE'].includes(this.method);

    if (operation.responses) {
      this.responses = operation.responses.map(x => new ConsoleResponse(x));
    } else {
      this.responses = [];
    }
  }

}

/***/ }),

/***/ 93266:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Api": function() { return /* reexport */ Api; },
  "Operation": function() { return /* reexport */ Operation; },
  "Schema": function() { return /* reexport */ Schema; },
  "Tag": function() { return /* reexport */ Tag; },
  "TagGroup": function() { return /* reexport */ TagGroup; }
});

// UNUSED EXPORTS: AuthorizationServer, NoteType, SelectableApi, TypeDefinition, TypeDefinitionCombinationProperty, TypeDefinitionPropertyBase, VersionSet, changeTypes

// EXTERNAL MODULE: ./src/models/apimSearchParameters.ts
var apimSearchParameters = __webpack_require__(75064);
// EXTERNAL MODULE: ./src/contracts/armResource.ts
var armResource = __webpack_require__(54541);
// EXTERNAL MODULE: ./src/models/authenticationSettings.ts
var authenticationSettings = __webpack_require__(42835);
// EXTERNAL MODULE: ./src/models/page.ts
var page = __webpack_require__(35261);
// EXTERNAL MODULE: ./src/models/versionSet.ts
var models_versionSet = __webpack_require__(26093);
// EXTERNAL MODULE: ./src/utils.ts
var utils = __webpack_require__(35797);
;// CONCATENATED MODULE: ./src/models/api.ts
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



/**
 * API model.
 */

class Api {
  /**
   * Unique ARM identifier.
   */

  /**
   * Unique API identifier.
   */

  /**
   * Display name of API, e.g. "HTTP Bin".
   */

  /**
   * Description of API.
   */

  /**
   * Version of API, e.g. "v1"
   */

  /**
   * Description of API version.
   */

  /**
   * To be defined
   */

  /**
   * To be defined
   */

  /**
   * Web service URL "https://httpbin.org".
   */

  /**
   * API URL suffix, e.g. "/httbin"
   */

  /**
   * Supported protocols, e.g. ["http", "https"]
   */

  /**
   * Information about associated authorization servers (OAuth 2 or OpenID Connect).
   */

  /**
   * List of all API tags.
   */
  constructor(contract, tags = []) {
    _defineProperty(this, "id", null);

    _defineProperty(this, "name", void 0);

    _defineProperty(this, "displayName", void 0);

    _defineProperty(this, "description", void 0);

    _defineProperty(this, "apiVersion", void 0);

    _defineProperty(this, "apiVersionDescription", null);

    _defineProperty(this, "apiVersionSet", null);

    _defineProperty(this, "apiRevision", void 0);

    _defineProperty(this, "serviceUrl", void 0);

    _defineProperty(this, "path", void 0);

    _defineProperty(this, "protocols", void 0);

    _defineProperty(this, "authenticationSettings", void 0);

    _defineProperty(this, "tags", void 0);

    if (contract.id) {
      this.id = utils/* Utils.getResourceName */.c.getResourceName('apis', contract.id, 'shortId');
    }

    this.name = contract.name;
    this.displayName = contract.properties.displayName;
    this.serviceUrl = contract.properties.serviceUrl;
    this.protocols = contract.properties.protocols;
    this.description = contract.properties.description;
    this.path = contract.properties.path;
    this.apiVersion = contract.properties.apiVersion;
    this.apiRevision = contract.properties.apiRevision;
    this.authenticationSettings = contract.properties.authenticationSettings;
    this.tags = tags.map(tag => tag.name);

    if (contract.properties.apiVersionSet) {
      const nestedVersionSet = contract.properties.apiVersionSet;
      const versionSet = new models_versionSet/* VersionSet */.W(contract.properties.apiVersionSetId);
      versionSet.name = nestedVersionSet.name;
      versionSet.description = nestedVersionSet.description;
      versionSet.versionHeaderName = nestedVersionSet.versionHeaderName;
      versionSet.versionQueryName = nestedVersionSet.versionQueryName;
      versionSet.versioningScheme = nestedVersionSet.versioningScheme;
      this.apiVersionSet = versionSet;
    }
  }

}
class SelectableApi extends (/* unused pure expression or super */ null && (Api)) {
  constructor(api) {
    super(api);

    _defineProperty(this, "isSelected", void 0);

    this.isSelected = false;
  }

}
;// CONCATENATED MODULE: ./src/models/tagGroup.ts
function tagGroup_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class TagGroup {
  constructor() {
    tagGroup_defineProperty(this, "tag", void 0);

    tagGroup_defineProperty(this, "items", void 0);

    this.tag = '';
    this.items = [];
  }

}
;// CONCATENATED MODULE: ./src/utils/apim.utils.ts
function isMeaningful(element) {
  if (!element) {
    return false;
  }

  return !!element.description || element.representations?.some(x => x.typeName || x.example) || false;
}
function meaningfulRepresentations(element) {
  return element?.representations?.filter(x => x.typeName || x.example) || [];
}
// EXTERNAL MODULE: ./src/models/parameter.ts
var parameter = __webpack_require__(39851);
;// CONCATENATED MODULE: ./src/models/representation.ts
function representation_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


class Representation {
  constructor(contract) {
    representation_defineProperty(this, "contentType", void 0);

    representation_defineProperty(this, "example", void 0);

    representation_defineProperty(this, "exampleFormat", void 0);

    representation_defineProperty(this, "schemaId", void 0);

    representation_defineProperty(this, "typeName", void 0);

    this.contentType = contract.contentType;
    this.example = contract.sample || contract.generatedSample;
    this.schemaId = contract.schemaId;
    this.typeName = contract.typeName;

    if (this.example) {
      if (this.contentType.includes('/xml')) {
        this.example = utils/* Utils.formatXml */.c.formatXml(this.example);
        this.exampleFormat = 'xml';
      }

      if (this.contentType.includes('/json')) {
        this.example = utils/* Utils.formatJson */.c.formatJson(this.example);
        this.exampleFormat = 'json';
      }
    }
  }

}
;// CONCATENATED MODULE: ./src/models/request.ts
function request_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



class Request {
  /**
   * Returns "true" if this request is meaningful from documentation prospective.
   */
  isMeaningful() {
    return !!this.description || this.representations.some(x => !!x.typeName);
  }

  meaningfulRepresentations() {
    return this.representations.filter(x => !!x.typeName || !!x.example);
  }

  constructor(contract) {
    request_defineProperty(this, "description", void 0);

    request_defineProperty(this, "queryParameters", void 0);

    request_defineProperty(this, "headers", void 0);

    request_defineProperty(this, "representations", void 0);

    this.queryParameters = [];
    this.headers = [];
    this.representations = [];

    if (contract) {
      this.description = contract.description;
      this.queryParameters = contract.queryParameters ? contract.queryParameters.map(x => new parameter/* Parameter */.d('query', x)) : [];
      this.headers = contract.headers ? contract.headers.map(x => new parameter/* Parameter */.d('header', x)) : [];
      this.representations = contract.representations ? contract.representations.map(x => new Representation(x)) : [];
    }
  }

}
// EXTERNAL MODULE: ./src/models/knownStatusCodes.ts
var knownStatusCodes = __webpack_require__(41748);
;// CONCATENATED MODULE: ./src/models/statusCode.ts
function statusCode_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


class StatusCode {
  constructor(code) {
    statusCode_defineProperty(this, "code", void 0);

    statusCode_defineProperty(this, "description", void 0);

    this.code = code;
    const knownStatusCode = knownStatusCodes/* KnownStatusCodes.find */.N.find(x => x.code.toString() === code.toString());

    if (knownStatusCode) {
      this.description = knownStatusCode.description;
    }
  }

  toString() {
    if (!this.description) {
      return `${this.code} User defined status code`;
    }

    return `${this.code} ${this.description}`;
  }

}
;// CONCATENATED MODULE: ./src/models/response.ts
function response_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





class Response {
  /**
   * Returns "true" if this response is meaningful from documentation prospective.
   */
  isMeaningful() {
    return !!this.description || this.representations?.some(x => !!x.typeName || !!x.example) || false;
  }

  meaningfulRepresentations() {
    return this.representations?.filter(x => !!x.typeName || !!x.example) || [];
  }

  constructor(contract) {
    response_defineProperty(this, "identifier", void 0);

    response_defineProperty(this, "headers", void 0);

    response_defineProperty(this, "statusCode", void 0);

    response_defineProperty(this, "representations", void 0);

    response_defineProperty(this, "description", void 0);

    this.identifier = utils/* Utils.getBsonObjectId */.c.getBsonObjectId();
    this.statusCode = new StatusCode(contract.statusCode);
    this.description = contract?.description;
    this.headers = contract?.headers ? contract.headers.map(header => new parameter/* Parameter */.d('header', header)) : [];
    this.representations = contract?.representations ? contract.representations.map(representation => new Representation(representation)) : [];
  }

}
;// CONCATENATED MODULE: ./src/models/operation.ts
function operation_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






class Operation {
  getMeaningfulResponses() {
    return this.responses?.filter(x => isMeaningful(x)) || [];
  }

  constructor(contract) {
    operation_defineProperty(this, "id", void 0);

    operation_defineProperty(this, "name", void 0);

    operation_defineProperty(this, "displayName", void 0);

    operation_defineProperty(this, "description", void 0);

    operation_defineProperty(this, "urlTemplate", void 0);

    operation_defineProperty(this, "templateParameters", void 0);

    operation_defineProperty(this, "parameters", void 0);

    operation_defineProperty(this, "method", void 0);

    operation_defineProperty(this, "version", void 0);

    operation_defineProperty(this, "request", void 0);

    operation_defineProperty(this, "responses", void 0);

    operation_defineProperty(this, "displayUrlTemplate", void 0);

    operation_defineProperty(this, "tags", void 0);

    this.id = utils/* Utils.getResourceName */.c.getResourceName('apis', contract.id, 'shortId').toLowerCase();
    this.name = contract.name;
    this.displayName = contract.properties.displayName;
    this.description = contract.properties.description;
    this.urlTemplate = contract.properties.urlTemplate;
    this.method = contract.properties.method;
    this.version = contract.properties.version;
    this.templateParameters = contract.properties.templateParameters ? contract.properties.templateParameters.map(x => new parameter/* Parameter */.d('template', x)) : [];
    this.request = new Request(contract.properties.request);
    this.parameters = this.templateParameters.concat(this.request.queryParameters);
    this.responses = contract.properties.responses ? contract.properties.responses.map(x => new Response(x)) : [];
    let connector = this.urlTemplate.includes('?') ? '&' : '?';
    const optionalQueryParameters = this.request.queryParameters.map((parameter, index) => {
      if (index > 0) {
        connector = '&';
      }

      return parameter.required ? `${connector}${parameter.name}` : `[${connector}${parameter.name}]`;
    }).join('');
    this.displayUrlTemplate = `${this.urlTemplate}${optionalQueryParameters}`;
    this.tags = [];
  }

}
;// CONCATENATED MODULE: ./src/models/tag.ts
function tag_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class Tag {
  constructor(contract) {
    tag_defineProperty(this, "id", void 0);

    tag_defineProperty(this, "name", void 0);

    this.id = contract.id;
    this.name = contract.properties.displayName;
  }

}
;// CONCATENATED MODULE: ./src/contracts/schema.ts
let SchemaType;

(function (SchemaType) {
  SchemaType["Swagger"] = "application/vnd.ms-azure-apim.swagger.definitions+json";
  SchemaType["OpenApi"] = "application/vnd.oai.openapi.components+json";
})(SchemaType || (SchemaType = {}));
;// CONCATENATED MODULE: ./src/models/typeDefinitionPropertyType.ts
class TypeDefinitionPropertyType {
  constructor(displayAs, name) {
    this.displayAs = displayAs;
    this.name = name;
  }

}
class TypeDefinitionPropertyTypePrimitive extends TypeDefinitionPropertyType {
  constructor(name) {
    super('primitive', name);
  }

}
class TypeDefinitionPropertyTypeReference extends TypeDefinitionPropertyType {
  constructor(name) {
    super('reference', name);
  }

}
class TypeDefinitionPropertyTypeArrayOfPrimitive extends TypeDefinitionPropertyType {
  constructor(name) {
    super('arrayOfPrimitive', name);
  }

}
class TypeDefinitionPropertyTypeArrayOfReference extends TypeDefinitionPropertyType {
  constructor(name) {
    super('arrayOfReference', name);
  }

}
class TypeDefinitionPropertyTypeCombination extends TypeDefinitionPropertyType {
  constructor(combinationType, combination) {
    super('combination');
    this.combinationType = combinationType;
    this.combination = combination;
  }

}
;// CONCATENATED MODULE: ./src/models/typeDefinition.ts
function typeDefinition_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


class TypeDefinitionPropertyBase {
  constructor(name, schemaObject, required) {
    this.schemaObject = schemaObject;
    this.required = required;

    typeDefinition_defineProperty(this, "name", void 0);

    typeDefinition_defineProperty(this, "description", void 0);

    typeDefinition_defineProperty(this, "type", void 0);

    typeDefinition_defineProperty(this, "example", void 0);

    typeDefinition_defineProperty(this, "exampleFormat", 'json');

    typeDefinition_defineProperty(this, "enum", []);

    this.name = schemaObject.title || name;
    this.description = schemaObject.description;
    this.type = new TypeDefinitionPropertyTypePrimitive(schemaObject.format || schemaObject.type || 'object');
    this.example = typeof schemaObject.example === 'object' ? JSON.stringify(schemaObject.example, null, 4) : schemaObject.example;
  }

}

class TypeDefinitionPrimitiveProperty extends TypeDefinitionPropertyBase {}

class TypeDefinitionReferenceProperty extends TypeDefinitionPropertyBase {
  constructor(name, schemaObject, required) {
    super(name, schemaObject, required);
    this.type = new TypeDefinitionPropertyTypeReference(getTypeNameFromRef(schemaObject.$ref));
  }

}

class TypeDefinitionArrayOfReferenceProperty extends TypeDefinitionPropertyBase {
  constructor(name, schemaObject, required) {
    super(name, schemaObject, required);
    this.type = new TypeDefinitionPropertyTypeArrayOfReference(getTypeNameFromRef(schemaObject.items?.$ref));
  }

}

class TypeDefinitionArrayOfPrimitiveProperty extends TypeDefinitionPropertyBase {
  constructor(name, schemaObject, required) {
    super(name, schemaObject, required);
    this.type = new TypeDefinitionPropertyTypeArrayOfPrimitive(schemaObject.items?.type || '');
  }

}

class TypeDefinitionCombinationProperty extends TypeDefinitionPropertyBase {
  constructor(name, schemaObject, required, isArray = false) {
    super(name, schemaObject, required);
    this.isArray = isArray;

    typeDefinition_defineProperty(this, "type", void 0);

    let combinationType = '';
    let combinationArray = [];

    if (schemaObject.not) {
      combinationType = 'Not';
      combinationArray = schemaObject.not;
    } else if (schemaObject.oneOf) {
      combinationType = 'One of';
      combinationArray = schemaObject.oneOf;
    } else if (schemaObject.anyOf) {
      combinationType = 'Any of';
      combinationArray = schemaObject.anyOf;
    } else if (schemaObject.allOf) {
      combinationType = 'All of';
      combinationArray = schemaObject.allOf;
    }

    const combination = combinationArray.map(item => {
      if (item.$ref) {
        return new TypeDefinitionPropertyTypeReference(getTypeNameFromRef(item.$ref));
      }

      return new TypeDefinitionPropertyTypePrimitive(item.type || 'object');
    });
    this.type = new TypeDefinitionPropertyTypeCombination(combinationType, combination);
  }

}

function getTypeNameFromRef($ref = '') {
  return $ref.split('/').pop() ?? $ref;
}

const isComboType = schema => {
  return schema.allOf || schema.anyOf || schema.oneOf || schema.not;
};

class TypeDefinition {
  constructor(name, schema) {
    this.schema = schema;

    typeDefinition_defineProperty(this, "name", void 0);

    typeDefinition_defineProperty(this, "description", void 0);

    typeDefinition_defineProperty(this, "properties", void 0);

    typeDefinition_defineProperty(this, "example", void 0);

    typeDefinition_defineProperty(this, "exampleFormat", 'json');

    typeDefinition_defineProperty(this, "required", false);

    this.name = name;
    this.description = schema.description;
    this.example = typeof schema.example === 'object' ? JSON.stringify(schema.example, null, 4) : schema.example;
    this.properties = this.schema.properties ? this.processProperties(this.schema.properties) : [];
  }

  processProperties(properties, prefix) {
    const props = [];
    Object.keys(properties).forEach(propertyName => {
      const propertySchema = properties[propertyName];
      const name = prefix ? `${prefix}${propertyName}` : propertyName;
      const isRequired = this.schema.required?.includes(propertyName) || false;

      if (propertySchema.$ref) {
        props.push(new TypeDefinitionReferenceProperty(name, propertySchema, isRequired));
        return;
      }

      if (propertySchema.items) {
        if (propertySchema.items.$ref) {
          props.push(new TypeDefinitionArrayOfReferenceProperty(name, propertySchema, isRequired));
          return;
        }

        if (isComboType(propertySchema.items)) {
          props.push(new TypeDefinitionCombinationProperty(name, propertySchema.items, isRequired, true));
          return;
        } else {
          props.push(new TypeDefinitionArrayOfPrimitiveProperty(name, propertySchema, isRequired));
          return;
        }
      }

      if (isComboType(propertySchema)) {
        props.push(new TypeDefinitionCombinationProperty(name, propertySchema, isRequired));
        return;
      }

      if (propertySchema.properties) {
        props.push(...this.processProperties(propertySchema.properties, `${name}.`));
        return;
      }

      props.push(new TypeDefinitionPrimitiveProperty(propertySchema.title || name, propertySchema, isRequired));
    });
    return props;
  }

}
;// CONCATENATED MODULE: ./src/models/schema.ts
function schema_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



class Schema {
  constructor(contract) {
    schema_defineProperty(this, "definitions", void 0);

    this.definitions = [];

    if (contract) {
      const definitionType = contract.properties?.contentType;
      let definitions = [];

      if (definitionType === SchemaType.Swagger) {
        const swaggerDoc = contract.properties?.document;
        definitions = swaggerDoc?.definitions || [];
      } else {
        if (definitionType === SchemaType.OpenApi) {
          const openApiDoc = contract.properties?.document;
          definitions = openApiDoc?.components?.schemas || [];
        }
      }

      this.definitions = Object.keys(definitions).map(definitionName => {
        return new TypeDefinition(definitionName, definitions[definitionName]);
      });
    }
  }

}
;// CONCATENATED MODULE: ./src/models/logEntries.ts
let NoteType;

(function (NoteType) {
  NoteType["Added"] = "Added";
  NoteType["Announcement"] = "Announcement";
  NoteType["Changed"] = "Changed";
  NoteType["Deprecated"] = "Deprecated";
  NoteType["Fixed"] = "Fixed";
  NoteType["Removed"] = "Removed";
  NoteType["Security"] = "Security";
})(NoteType || (NoteType = {}));

const changeTypes = [NoteType.Added, NoteType.Changed, NoteType.Fixed, NoteType.Removed, NoteType.Security];
;// CONCATENATED MODULE: ./src/models/index.ts



















/***/ }),

/***/ 41748:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "N": function() { return /* binding */ KnownStatusCodes; }
/* harmony export */ });
var KnownStatusCodes = [{
  code: 100,
  description: "Continue"
}, {
  code: 101,
  description: "Switching Protocols"
}, {
  code: 102,
  description: "Processing"
}, {
  code: 200,
  description: "OK"
}, {
  code: 201,
  description: "Created"
}, {
  code: 202,
  description: "Accepted"
}, {
  code: 203,
  description: "Non-Authoritative Information"
}, {
  code: 204,
  description: "No Content"
}, {
  code: 205,
  description: "Reset Content"
}, {
  code: 206,
  description: "Partial Content"
}, {
  code: 207,
  description: "Multi-Status"
}, {
  code: 226,
  description: "IM Used"
}, {
  code: 300,
  description: "Multiple Choices"
}, {
  code: 301,
  description: "Moved Permanently"
}, {
  code: 302,
  description: "Moved Temporarily"
}, {
  code: 303,
  description: "See Other"
}, {
  code: 304,
  description: "Not Modified"
}, {
  code: 305,
  description: "Use Proxy"
}, {
  code: 307,
  description: "Temporary Redirect"
}, {
  code: 400,
  description: "Bad Request"
}, {
  code: 401,
  description: "Unauthorized"
}, {
  code: 402,
  description: "Payment Required"
}, {
  code: 403,
  description: "Forbidden"
}, {
  code: 404,
  description: "Not Found"
}, {
  code: 405,
  description: "Method Not Allowed"
}, {
  code: 406,
  description: "Not Acceptable"
}, {
  code: 407,
  description: "Proxy Authentication Required"
}, {
  code: 408,
  description: "Request Timeout"
}, {
  code: 409,
  description: "Conflict"
}, {
  code: 410,
  description: "Gone"
}, {
  code: 411,
  description: "Length Required"
}, {
  code: 412,
  description: "Precondition Failed"
}, {
  code: 413,
  description: "Request Entity Too Large"
}, {
  code: 414,
  description: "Request-URI Too Large"
}, {
  code: 415,
  description: "Unsupported Media Type"
}, {
  code: 416,
  description: "Requested Range Not Satisfiable"
}, {
  code: 417,
  description: "Expectation Failed"
}, {
  code: 422,
  description: "Unprocessable Entity"
}, {
  code: 423,
  description: "Locked"
}, {
  code: 424,
  description: "Failed Dependency"
}, {
  code: 425,
  description: "Unordered Collection"
}, {
  code: 426,
  description: "Upgrade Required"
}, {
  code: 429,
  description: "Too many requests"
}, {
  code: 449,
  description: "Retry With"
}, {
  code: 456,
  description: "Unrecoverable Error"
}, {
  code: 500,
  description: "Internal Server Error"
}, {
  code: 501,
  description: "Not Implemented"
}, {
  code: 502,
  description: "Bad Gateway"
}, {
  code: 503,
  description: "Service Unavailable"
}, {
  code: 504,
  description: "Gateway Timeout"
}, {
  code: 505,
  description: "HTTP Version Not Supported"
}, {
  code: 506,
  description: "Variant Also Negotiates"
}, {
  code: 507,
  description: "Insufficient Storage"
}, {
  code: 508,
  description: "Loop Detected"
}, {
  code: 509,
  description: "Bandwidth Limit Exceeded"
}, {
  code: 510,
  description: "Not Extended"
}];

/***/ }),

/***/ 35261:
/***/ (function() {



/***/ }),

/***/ 39851:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "d": function() { return /* binding */ Parameter; }
/* harmony export */ });
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class Parameter {
  /**
   * Parameter name, e.g. api-version.
   */

  /**
   * Parameter description.
   */

  /**
   * Parameter placement, e.g. "query", "template", "header", "body".
   */

  /**
   * Parameter type, e.g. "string", "int64", etc.
   */

  /**
   * Parameter default value, e.g. "2018-06-01-preview".
   */

  /**
   * Parameter value suggestions, e.g. ["2016-07-07","2016-10-10", "2018-06-01-preview"]
   */

  /**
   * Indicates if the parameter is required to make a request.
   */
  constructor(placement, contract) {
    _defineProperty(this, "name", void 0);

    _defineProperty(this, "description", void 0);

    _defineProperty(this, "in", void 0);

    _defineProperty(this, "type", void 0);

    _defineProperty(this, "defaultValue", void 0);

    _defineProperty(this, "values", void 0);

    _defineProperty(this, "required", void 0);

    this.name = contract.name;
    this.description = contract.description;
    this.type = contract.type;
    this.defaultValue = contract.defaultValue;
    this.values = contract.values;
    this.required = !!contract.required;
    this.in = placement;
  }

}

/***/ }),

/***/ 84043:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export SubscriptionState */
let SubscriptionState;

(function (SubscriptionState) {
  SubscriptionState["Active"] = "active";
  SubscriptionState["Expired"] = "expired";
  SubscriptionState["Canceled"] = "canceled";
})(SubscriptionState || (SubscriptionState = {}));

/***/ }),

/***/ 26093:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "W": function() { return /* binding */ VersionSet; }
/* harmony export */ });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(35797);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


class VersionSet {
  constructor(id, contract) {
    _defineProperty(this, "id", void 0);

    _defineProperty(this, "name", void 0);

    _defineProperty(this, "description", void 0);

    _defineProperty(this, "versioningScheme", void 0);

    _defineProperty(this, "versionQueryName", void 0);

    _defineProperty(this, "versionHeaderName", void 0);

    this.id = _utils__WEBPACK_IMPORTED_MODULE_0__/* .Utils.getResourceName */ .c.getResourceName('apiVersionSets', id, 'shortId');
    this.name = '';
    this.description = '';
    this.versioningScheme = '';
    this.versionQueryName = '';
    this.versionHeaderName = '';

    if (!contract) {
      return;
    }

    if (contract.properties) {
      this.name = contract.properties.displayName;
      this.description = contract.properties.description;
      this.versioningScheme = contract.properties.versioningScheme;
      this.versionQueryName = contract.properties.versionQueryName;
      this.versionHeaderName = contract.properties.versionHeaderName;
    }
  }

}

/***/ }),

/***/ 59714:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ handler; }
/* harmony export */ });
/* harmony import */ var _apis_apiName_tab___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(75953);
/* harmony import */ var _constants_paths__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(86491);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_apis_apiName_tab___WEBPACK_IMPORTED_MODULE_0__]);
_apis_apiName_tab___WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];


const ALLOWED_METHODS = ['GET'];
const COMMON_PATHS = [_constants_paths__WEBPACK_IMPORTED_MODULE_1__/* .DOCUMENTATION */ .tQ, _constants_paths__WEBPACK_IMPORTED_MODULE_1__/* .PRICING */ .$r]; // GET: /api/paths?apiName={apiName}
// Returns an array of paths for the given API name.
//
// Required: apiName - query parameter (e.g. 'users').

async function handler(request, response) {
  if (!ALLOWED_METHODS.includes(request.method ?? '')) {
    return response.status(404).end();
  }

  const {
    apiName
  } = request.query;

  if (!apiName) {
    return response.status(400).json({
      message: 'Missing required query parameter: "apiName".'
    });
  }

  const apiNameValue = Array.isArray(apiName) ? apiName[0] : apiName;
  const pathsData = await (0,_apis_apiName_tab___WEBPACK_IMPORTED_MODULE_0__/* .getStaticPathsForApi */ .lH)(apiNameValue);
  const paths = pathsData.map(pathData => `/apis/${pathData.params.apiName}/${pathData.params.tab.join('/')}`);
  return response.status(200).json({
    paths: paths.concat(COMMON_PATHS)
  });
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 75953:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "lH": function() { return /* binding */ getStaticPathsForApi; }
/* harmony export */ });
/* unused harmony exports getStaticProps, getStaticPaths */
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46517);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _404__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(24932);
/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(44354);
/* harmony import */ var _components_PageMetadata_PageMetadata__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(45744);
/* harmony import */ var _components_ProgressRadialWithOverlay_ProgressRadialWithOverlay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(31097);
/* harmony import */ var _components_pages_ApiDocumentation_ApiDocumentation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4570);
/* harmony import */ var _constants_ApiName__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(594);
/* harmony import */ var _constants_apiMenuItems__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(47689);
/* harmony import */ var _constants_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(75767);
/* harmony import */ var _constants_defaultApiGroups__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(35735);
/* harmony import */ var _controllers_apiController__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(64522);
/* harmony import */ var _controllers_hooks__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(28789);
/* harmony import */ var _services_mdService__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(88252);
/* harmony import */ var _services_mdxService__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(7678);
/* harmony import */ var _services_sampleService__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(65459);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(35797);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_api__WEBPACK_IMPORTED_MODULE_2__, _components_pages_ApiDocumentation_ApiDocumentation__WEBPACK_IMPORTED_MODULE_5__, _controllers_apiController__WEBPACK_IMPORTED_MODULE_10__, _controllers_hooks__WEBPACK_IMPORTED_MODULE_11__, _services_sampleService__WEBPACK_IMPORTED_MODULE_14__]);
([_api__WEBPACK_IMPORTED_MODULE_2__, _components_pages_ApiDocumentation_ApiDocumentation__WEBPACK_IMPORTED_MODULE_5__, _controllers_apiController__WEBPACK_IMPORTED_MODULE_10__, _controllers_hooks__WEBPACK_IMPORTED_MODULE_11__, _services_sampleService__WEBPACK_IMPORTED_MODULE_14__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
const _excluded = (/* unused pure expression or super */ null && (["rendered", "validPath", "pageTitle"]));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

















 // import { logger } from '../../../utils/serverLogger';





function Page(_ref) {
  let {
    rendered,
    validPath,
    pageTitle
  } = _ref,
      props = _objectWithoutProperties(_ref, _excluded);

  //Valid paths with pre-rendered content
  if (rendered) {
    return /*#__PURE__*/_jsxs(_Fragment, {
      children: [pageTitle && /*#__PURE__*/_jsx(PageMetadata, {
        title: pageTitle
      }), /*#__PURE__*/_jsx(ApiDocumentationPage, _objectSpread({}, props))]
    });
  } //Valid paths with non-pre-rendered content (Internal APIs)


  if (validPath) {
    return /*#__PURE__*/_jsx(ApiController, {
      apiName: props.apiName,
      tabId: props.tabId,
      operationName: props.operationName ?? undefined
    });
  } // Invalid paths


  if (validPath === false) {
    return /*#__PURE__*/_jsx(NotFoundPage, {});
  } //Loading state is needed until we get props for pages that are not in static paths list


  return /*#__PURE__*/_jsx(ProgressRadialWithOverlay, {
    isFullPage: true
  });
}

async function getStaticPropsFunction(ctx) {
  // const childLogger = logger.child(ctx);
  const {
    apiName,
    tab = []
  } = ctx.params ?? {};
  const [tabId = MenuItems.Overview, operationName = null, ...rest] = tab;
  const validPath = ApiDocumentation.menuItems.find(item => item.id === tabId) && apiName && !rest[0];

  if (!validPath) {
    // childLogger.error('Invalid path');
    return {
      props: {
        validPath: false
      }
    };
  } //Load api group


  let api = null;
  let operationsByTags = [];
  let changelog = [];
  let apiVersions = [];
  let operation = null;
  let operationDefinitions = [];
  let authorizationServer = null;

  if (apiName !== ApiName.VisualizationV1) {
    api = (await apisApi.getApi(apiName)) ?? null;

    if (!api) {
      return {
        props: {
          validPath: true,
          apiName,
          operationName,
          tabId
        }
      };
    } //Load operations


    operationsByTags = NextUtils.isPreloading ? await apisApi.getOperationsByTagsFullData(apiName) : [];
    operation = operationName ? operationsByTags.flatMap(group => group.items).find(op => op.name === operationName) ?? null : null;
    apiVersions = api ? await apisApi.getApiVersions(api.path) : [];
    operationDefinitions = operation && tabId === MenuItems.Reference ? await apisApi.getAllDefinitionsByOperation(operation, apiName) : [];
    changelog = NextUtils.isPreloading && tabId === MenuItems.Changelog ? await apisApi.getApiLogEntries(apiName) : [];
    authorizationServer = NextUtils.isPreloading && tabId === MenuItems.Reference ? getAuthorizationServer(api) ?? null : null;
  }

  const overviewMdContent = NextUtils.isPreloading && tabId === MenuItems.Overview ? await preloadApiDocumentation(apiName) : '';
  const allApis = NextUtils.isPreloading && tabId === MenuItems.Tutorials ? await apisApi.getAllApisWithGroups(false) : [];
  const allDefinitions = NextUtils.isPreloading && tabId === MenuItems.Events ? await apisApi.getAllDefinitionsByApi(apiName) : [];
  const tutorials = NextUtils.isPreloading ? getTutorialMetadataByApi(api?.path ?? apiName) : [];
  const samples = NextUtils.isPreloading && tabId === MenuItems.Samples ? await sampleService.getSamples() : [];
  const apiSamples = sampleService.getSampleGroupsByApiPath(api?.path ?? apiName, samples);
  const currentTab = ApiDocumentation.menuItems.find(item => item.id === tabId);
  const pageTitle = operation && tabId === MenuItems.Reference ? `${operation.displayName} - ${api?.displayName ?? capitalize(apiName)} | iTwin Platform` : currentTab ? `${currentTab.displayName} - ${api?.displayName ?? capitalize(apiName)} | iTwin Platform` : `${api?.displayName ?? capitalize(apiName)} | iTwin Platform`;
  return {
    //Making props serializable
    props: Utils.clone({
      rendered: true,
      validPath: true,
      pageTitle,
      apiName,
      tabId,
      operationName,
      initialApis: apiVersions,
      api,
      operationsByTag: operationsByTags,
      operation,
      operationTags: operation?.tags ?? [],
      authorizationServer,
      operationDefinitions,
      allDefinitions,
      apiDocumentationMdContent: overviewMdContent,
      tutorialsMetadata: tutorials,
      preloadedApis: allApis,
      changelog,
      preloadedSamples: apiSamples
    }),
    revalidate: CACHE_REVALIDATION_PERIOD_IN_SECONDS
  };
}

async function getStaticPathsForApi(apiName, apiPath) {
  if (!apiPath) {
    apiPath = (await _api__WEBPACK_IMPORTED_MODULE_2__/* .apisApi.getApi */ .u.getApi(apiName))?.path;
  }

  const tutorials = (0,_services_mdxService__WEBPACK_IMPORTED_MODULE_13__/* .getTutorialMetadataByApi */ .Y)(apiName);
  return _api__WEBPACK_IMPORTED_MODULE_2__/* .apisApi.getOperationsByTagsFullData */ .u.getOperationsByTagsFullData(apiName).then(operationTags => {
    const menuItems = _constants_apiMenuItems__WEBPACK_IMPORTED_MODULE_7__/* .ApiDocumentation.getMenuItemsWithOperations */ .U.getMenuItemsWithOperations(apiName, apiPath ?? apiName, //Keeping API name as fallback
    operationTags, tutorials, false);
    return menuItems.flatMap(item => {
      const paths = (item.subItems ?? []).flatMap(tab => {
        return (tab.subItems ?? []).map(operation => ({
          params: {
            apiName: apiName,
            tab: [item.id, operation.id]
          }
        }));
      });
      paths.push({
        params: {
          apiName: apiName,
          tab: [item.id]
        }
      });
      return paths;
    });
  });
}

async function getStaticPathsFunction() {
  const apisInGroups = await Promise.all(DefaultApiGroups.publicApiGroups.map(group => apisApi.getUniqueApisByTag(group.name, false).then(apisInGroup => {
    return apisInGroup;
  })));
  const apis = apisInGroups.flat(1);
  const allPaths = await Promise.all(apis.map(api => getStaticPathsForApi(api.name, api.path)));
  return {
    paths: allPaths.flat(),
    fallback: true
  };
}

async function getStaticProps(ctx) {
  try {
    return getStaticPropsFunction(ctx);
  } catch (error) {// logger.error(error, 'Getting static properties threw an error');
  }
}
async function getStaticPaths() {
  try {
    return getStaticPathsFunction();
  } catch (error) {// logger.error(error, 'Getting static paths threw an error');
  }
}
/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (Page)));
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 78972:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony exports AuthProvider, useAuthService */
/* harmony import */ var oidc_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3712);
/* harmony import */ var oidc_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(oidc_client__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2599);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(35797);
/* harmony import */ var _utils_NextCache__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(87901);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_2__]);
_client_env__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];







const stub = () => {
  throw new Error('You forgot to wrap your component in <AuthProvider>.');
};

const noUser = {};
const initialContext = {
  isLoaded: false,
  isLoggingIn: false,
  user: noUser,
  isLoggedIn: false,
  signin: stub,
  signinInPopup: stub,
  signout: stub,
  completeSignIn: stub,
  completeSignInPopup: stub,
  silentSignin: stub,
  completeSilentSignin: stub
};
const AuthContext = /*#__PURE__*/(/* unused pure expression or super */ null && (createContext(initialContext)));
const AuthProvider = props => {
  const {
    0: isLoggedIn,
    1: setIsLoggedIn
  } = useState(false);
  const {
    0: user,
    1: setUser
  } = useState(noUser);
  const {
    0: isLoggingIn,
    1: setIsLoggingIn
  } = useState(false);
  const userManagerRef = useRef();
  const {
    0: isLoaded,
    1: setIsLoaded
  } = useState(false);
  useEffect(() => {
    const userManagerInstance = new UserManager({
      response_type: 'code',
      query_status_response_type: 'code',
      loadUserInfo: true,
      filterProtocolClaims: true,
      automaticSilentRenew: true,
      userStore: new WebStorageStateStore({
        store: window.localStorage
      }),
      authority: env.OIDC_AUTHORITY,
      client_id: env.OIDC_CLIENT_ID,
      post_logout_redirect_uri: window.location.origin,
      redirect_uri: `${window.location.origin}/redirect`,
      scope: env.OIDC_SCOPE,
      silent_redirect_uri: `${window.location.origin}/redirect-silent`
    });
    userManagerInstance.events.addUserLoaded(oidcUser => {
      storeUser(oidcUser);
    });
    userManagerInstance.events.addAccessTokenExpired(() => {
      storeUser(null);
    });
    userManagerInstance.clearStaleState();
    userManagerInstance.getUser().then(oidcUser => {
      storeUser(oidcUser);
      userManagerRef.current = userManagerInstance;
      setIsLoaded(true);
    });
  }, []);
  const silentSignin = useCallback(async () => {
    await cleanUpCachedData();

    try {
      await userManagerRef.current?.signinSilent();
    } catch (e) {
      console.warn(e);
    }
  }, []);
  const signin = useCallback(async (returnUrl, loginHint) => {
    setIsLoggingIn(true);
    await cleanUpCachedData();

    try {
      await userManagerRef.current?.signinRedirect({
        data: {
          return_url: returnUrl ? Utils.getAllowedReturnUrl(returnUrl) : window.location.href
        },
        login_hint: loginHint
      });
    } catch (e) {
      console.warn('Error trying redirect signin', e);
    } finally {
      setIsLoggingIn(false);
    }
  }, []);
  const signinInPopup = useCallback(async () => {
    setIsLoggingIn(true);
    await cleanUpCachedData();

    try {
      await userManagerRef.current?.signinPopup();
    } catch (e) {
      console.warn('Error trying redirect signin popup', e);
    } finally {
      setIsLoggingIn(false);
    }
  }, []);
  const signout = useCallback(async () => {
    await userManagerRef.current?.signoutRedirect();
    await userManagerRef.current?.removeUser();
    await cleanUpCachedData();
    setIsLoaded(false);
    storeUser(null);
  }, []);
  const completeSignIn = useCallback(async () => {
    const user = await userManagerRef.current?.signinRedirectCallback();

    if (!user) {
      return '/'; // error page
    }

    return Utils.getAllowedReturnUrl(user.state['return_url']);
  }, []);
  const completeSignInPopup = useCallback(async () => {
    return userManagerRef.current?.signinPopupCallback();
  }, []);
  const completeSilentSignin = useCallback(async () => {
    await userManagerRef.current?.signinSilentCallback();
  }, []);

  function storeUser(oidcUser) {
    if (null == oidcUser) {
      setIsLoggedIn(false);
      setUser(noUser);
      return;
    }

    setUser({
      accessToken: oidcUser.access_token,
      firstName: oidcUser.profile.given_name,
      lastName: oidcUser.profile.family_name,
      email: oidcUser.profile.email,
      sub: oidcUser.profile.sub,
      ultimateSite: oidcUser.profile.ultimate_site
    });
    setIsLoggedIn(true);
  }

  async function cleanUpCachedData() {
    return nextCache.removeAllFromLocalStorageByPatterns(['agreement:.*', 'getApisList:.*', 'getApiVersions:.*', 'getOperations:.*', 'getOperationsByTags:.*', 'getApi:.*', 'getApiReleases:.*', 'getApiTags:.*', 'taggedScopeMap:.*', 'ld:.*', 'oidc.user:.*', 'session-state:.*']);
  }

  const contextValue = useMemo(() => {
    return {
      isLoaded,
      isLoggingIn,
      isLoggedIn,
      user,
      signin,
      signinInPopup,
      signout,
      completeSignIn,
      completeSignInPopup,
      silentSignin,
      completeSilentSignin
    };
  }, [isLoaded, isLoggingIn, isLoggedIn, user, signin, signinInPopup, signout, completeSignIn, completeSignInPopup, silentSignin, completeSilentSignin]);
  return /*#__PURE__*/_jsx(AuthContext.Provider, {
    value: contextValue,
    children: props.children
  });
};
const useAuthService = () => useContext(AuthContext);
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 66189:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony exports SessionProvider, mapTierNames, backwardsMapTierName, useSession */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants_Tiers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(24161);
/* harmony import */ var _hooks_useSessionService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(73196);
/* harmony import */ var _models_session__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(84043);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(35797);
/* harmony import */ var _AuthProvider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(78972);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_hooks_useSessionService__WEBPACK_IMPORTED_MODULE_2__, _AuthProvider__WEBPACK_IMPORTED_MODULE_5__]);
([_hooks_useSessionService__WEBPACK_IMPORTED_MODULE_2__, _AuthProvider__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);








const stub = () => {
  throw new Error('You forgot to wrap your component in <SessionProvider>.');
};

const initialContext = {
  isInitializing: false,
  session: undefined,
  fetchSession: stub,
  showTrialBanner: false,
  closeTrialBanner: stub
};
const SessionContext = /*#__PURE__*/(/* unused pure expression or super */ null && (createContext(initialContext)));
const SessionProvider = props => {
  const {
    0: session,
    1: setSession
  } = useState();
  const sessionService = useSessionService();
  const {
    isLoggedIn,
    signout,
    user
  } = useAuthService();
  const {
    0: isInitializing,
    1: setIsInitializing
  } = useState(false);
  const {
    0: showTrialBanner,
    1: setShowTrialBanner
  } = useState(false);
  const {
    0: retriedAmount,
    1: setRetriedAmount
  } = useState(0);
  const sessionStateKey = `session-state:${user.sub}`;
  const clearSession = useCallback(() => {
    localStorage.removeItem(sessionStateKey);
  }, [sessionStateKey]);
  const fetchSession = useCallback(async () => {
    if (isInitializing) return;
    setIsInitializing(true);
    const newSession = await sessionService.getSession();

    if (newSession) {
      if (newSession?.subscription?.tier) {
        newSession.subscription.tier = mapTierNames(newSession.subscription.tier);
      }

      if (newSession?.profile.tier) {
        newSession.profile.tier = mapTierNames(newSession.profile.tier);
      }

      if (newSession?.account?.subscription?.tier) {
        newSession.account.subscription.tier = mapTierNames(newSession.account.subscription.tier);
      }

      localStorage.setItem(sessionStateKey, JSON.stringify(newSession));
      setSession(newSession);
    }

    setIsInitializing(false);
  }, [isInitializing, sessionService, sessionStateKey]);

  const closeTrialBanner = () => {
    setShowTrialBanner(false);
  };

  useEffect(() => {
    if (!isLoggedIn) return;
    const storedState = localStorage.getItem(sessionStateKey);

    if (!storedState) {
      setRetriedAmount(retriedAmount + 1);

      if (retriedAmount <= 5) {
        fetchSession();
        return;
      } else {
        signout();
        setRetriedAmount(0);
        Utils.unexpectedErrorToaster();
        return;
      }
    }

    setRetriedAmount(0);
    const session = JSON.parse(storedState);
    setSession(session);
    return clearSession;
  }, [clearSession, fetchSession, isLoggedIn, sessionStateKey]);
  useEffect(() => {
    if (!session || session.subscription?.tier !== 'Trial' || session.subscription?.state !== SubscriptionState.Active && session.subscription?.state !== SubscriptionState.Expired || !session.subscription?.startedDateTime || !session.subscription?.expirationDateTime) {
      setShowTrialBanner(false);
      return;
    }

    const today = new Date();
    const subscriptionDate = new Date(session.subscription?.startedDateTime); // Reset time for both datetimes because we only want to compare the date.

    today.setHours(0, 0, 0, 0);
    subscriptionDate.setHours(0, 0, 0, 0);

    if (subscriptionDate < today) {
      setShowTrialBanner(true);
      return;
    }

    setShowTrialBanner(false);
  }, [session]);

  if (session && new Date(session.managementTokenExpiry) <= new Date(Date.now()) && isLoggedIn) {
    fetchSession();
  }

  const contextValue = useMemo(() => {
    return {
      isInitializing,
      session,
      fetchSession,
      showTrialBanner,
      closeTrialBanner
    };
  }, [fetchSession, isInitializing, session, showTrialBanner]);
  return /*#__PURE__*/_jsx(SessionContext.Provider, {
    value: contextValue,
    children: props.children
  });
};
function mapTierNames(tierName) {
  switch (tierName) {
    case 'Developer':
      {
        return Tier.Basic;
      }

    case 'Partner':
      {
        return Tier.Premium;
      }

    case 'Integrator':
      {
        return Tier.Enterprise;
      }

    default:
      return tierName;
  }
}
function backwardsMapTierName(tierName) {
  switch (tierName) {
    case 'Basic':
      {
        return 'Developer';
      }

    case 'Premium':
      {
        return 'Partner';
      }

    case 'Enterprise':
      {
        return 'Integrator';
      }

    default:
      return tierName;
  }
}
const useSession = () => {
  return useContext(SessionContext);
};
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 97627:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "s": function() { return /* binding */ getImodelsApiManagementWorkflowSampleAppSpec; }
/* harmony export */ });
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2599);
/* harmony import */ var _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67105);
/* harmony import */ var _constants_ApiName__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(594);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_0__]);
_client_env__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];
/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/



const name = 'imodels-api-management-workflow-sample-app';
function getImodelsApiManagementWorkflowSampleAppSpec() {
  return {
    name,
    label: 'iModels API Sample Application',
    description: 'This is a simple React based application that demonstrates iModel management workflow that can be achieved using iModels API.',
    relatedApiPaths: [_constants_ApiName__WEBPACK_IMPORTED_MODULE_2__/* .ApiPath.iModels */ .L.iModels],
    apiGroupId: _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.DataManagement */ .mV.DataManagement,
    tags: ['Digital Twin Management APIs', 'iModels'],
    url: `${_client_env__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GITHUB_ITWIN_URL */ .Z.GITHUB_ITWIN_URL}/${name}`
  };
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 23706:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "t": function() { return /* binding */ getInsightsApiSampleConsoleAppSpec; }
/* harmony export */ });
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2599);
/* harmony import */ var _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67105);
/* harmony import */ var _constants_ApiName__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(594);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_0__]);
_client_env__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];
/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/



const name = 'insights-api-sample-console-app';
function getInsightsApiSampleConsoleAppSpec() {
  return {
    name,
    label: 'Reporting API sample Console application',
    description: 'This is a simple command line app that illustrates the workflow of configuring a report using the Reporting platform APIs.',
    relatedApiPaths: [_constants_ApiName__WEBPACK_IMPORTED_MODULE_2__/* .ApiPath.Insights */ .L.Insights, _constants_ApiName__WEBPACK_IMPORTED_MODULE_2__/* .ApiPath.Reporting */ .L.Reporting],
    apiGroupId: _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.ReportingInsights */ .mV.ReportingInsights,
    tags: ['Reporting APIs', 'Reporting & Insights'],
    url: `${_client_env__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GITHUB_ITWIN_URL */ .Z.GITHUB_ITWIN_URL}/${name}`
  };
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 18727:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "m": function() { return /* binding */ getiTwinssApiSampleAppSpec; }
/* harmony export */ });
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2599);
/* harmony import */ var _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67105);
/* harmony import */ var _constants_ApiName__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(594);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_0__]);
_client_env__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];
/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/



const name = 'itwin-api-sample-app';
function getiTwinssApiSampleAppSpec() {
  return {
    name,
    label: 'iTwin API Sample App',
    description: 'An iTwin sample application that demonstrates how to create, query and update an iTwins using the iTwin API.',
    relatedApiPaths: [_constants_ApiName__WEBPACK_IMPORTED_MODULE_2__/* .ApiPath.iTwins */ .L.iTwins],
    apiGroupId: _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.Administration */ .mV.Administration,
    tags: ['Administration APIs', 'iTwins'],
    url: `${_client_env__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GITHUB_ITWIN_URL */ .Z.GITHUB_ITWIN_URL}/${name}`
  };
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 75110:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "h": function() { return /* binding */ getLibraryApiSampleAppSpec; }
/* harmony export */ });
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2599);
/* harmony import */ var _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67105);
/* harmony import */ var _constants_ApiName__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(594);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_0__]);
_client_env__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];
/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/



const name = 'library-api-sample-app';
function getLibraryApiSampleAppSpec() {
  return {
    name,
    label: 'Library API Sample App',
    description: 'An iTwin sample application that demonstrates how to create, upload and query components in a catalog.',
    relatedApiPaths: [_constants_ApiName__WEBPACK_IMPORTED_MODULE_2__/* .ApiPath.Library */ .L.Library],
    apiGroupId: _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.DataManagement */ .mV.DataManagement,
    tags: ['Digital Twin Management APIs', 'Library'],
    url: `${_client_env__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GITHUB_ITWIN_URL */ .Z.GITHUB_ITWIN_URL}/${name}`
  };
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 4113:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "F": function() { return /* binding */ getImportAndCopyProjectTeamMembersSpec; }
/* harmony export */ });
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2599);
/* harmony import */ var _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67105);
/* harmony import */ var _constants_ApiName__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(594);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_0__]);
_client_env__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];
/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/



const name = 'platform-api-samples';
function getImportAndCopyProjectTeamMembersSpec() {
  return {
    name,
    label: 'Import and Copy Project Team Members',
    description: 'This sample demonstrates importing users into a project along with a list of project role assignments per user and copying project roles, users, and user project role assignments from one project to another.',
    relatedApiPaths: [_constants_ApiName__WEBPACK_IMPORTED_MODULE_2__/* .ApiPath.Projects */ .L.Projects],
    apiGroupId: _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.Administration */ .mV.Administration,
    tags: ['Administration APIs', 'Projects'],
    url: `${_client_env__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GITHUB_ITWIN_URL */ .Z.GITHUB_ITWIN_URL}/${name}`
  };
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 85809:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "F": function() { return /* binding */ getProjectsApiSampleAppSpec; }
/* harmony export */ });
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2599);
/* harmony import */ var _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67105);
/* harmony import */ var _constants_ApiName__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(594);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_0__]);
_client_env__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];
/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/



const name = 'project-api-sample-app';
function getProjectsApiSampleAppSpec() {
  return {
    name,
    label: 'Project API Sample App',
    description: 'An iTwin sample application that demonstrates how to create, query and update an iTwin Project using the Project API. It also demonstrates how to create a project role and add a user to the project with that role.',
    relatedApiPaths: [_constants_ApiName__WEBPACK_IMPORTED_MODULE_2__/* .ApiPath.Projects */ .L.Projects],
    apiGroupId: _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.Administration */ .mV.Administration,
    tags: ['Administration APIs', 'Projects'],
    url: `${_client_env__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GITHUB_ITWIN_URL */ .Z.GITHUB_ITWIN_URL}/${name}`
  };
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 37036:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "d": function() { return /* binding */ getStorageApiSampleAppSpec; }
/* harmony export */ });
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2599);
/* harmony import */ var _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67105);
/* harmony import */ var _constants_ApiName__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(594);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_0__]);
_client_env__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];
/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/



const name = 'storage-api-sample-app';
function getStorageApiSampleAppSpec() {
  return {
    name,
    label: 'Storage API Sample App',
    description: 'An iTwin sample application that demonstrates how to create, query and update files with folders saved in the Storage.',
    relatedApiPaths: [_constants_ApiName__WEBPACK_IMPORTED_MODULE_2__/* .ApiPath.Storage */ .L.Storage],
    apiGroupId: _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.DataManagement */ .mV.DataManagement,
    tags: ['Digital Twin Management APIs', 'Storage'],
    url: `${_client_env__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GITHUB_ITWIN_URL */ .Z.GITHUB_ITWIN_URL}/${name}`
  };
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 93282:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "r": function() { return /* binding */ getSynchronizationApiSampleAppSpec; }
/* harmony export */ });
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2599);
/* harmony import */ var _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67105);
/* harmony import */ var _constants_ApiName__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(594);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_0__]);
_client_env__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];
/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/



const name = 'synchronization-api-sample-app';
function getSynchronizationApiSampleAppSpec() {
  return {
    name,
    label: 'Synchronization Sample Using Storage Connections',
    description: 'Sample portal that demonstrates synchronization workflow using the Storage connections API.',
    relatedApiPaths: [_constants_ApiName__WEBPACK_IMPORTED_MODULE_2__/* .ApiPath.Synchronization */ .L.Synchronization],
    tags: ['Synchronization & Exports APIs', 'Synchronization'],
    apiGroupId: _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.Synchronization */ .mV.Synchronization,
    image: '../../../images/synchronizationThumbnail.png',
    url: `${_client_env__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GITHUB_ITWIN_URL */ .Z.GITHUB_ITWIN_URL}/${name}`
  };
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 67809:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "P": function() { return /* binding */ getSynchronizationManifestApiSampleSpec; }
/* harmony export */ });
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2599);
/* harmony import */ var _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67105);
/* harmony import */ var _constants_ApiName__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(594);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_0__]);
_client_env__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];
/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/



const name = 'synchronization-manifest-api-sample';
function getSynchronizationManifestApiSampleSpec() {
  return {
    name,
    label: 'Synchronization Sample Using Manifest Connections',
    description: 'Sample portal that demonstrates synchronization workflow using the Manifest connections API.',
    relatedApiPaths: [_constants_ApiName__WEBPACK_IMPORTED_MODULE_2__/* .ApiPath.Synchronization */ .L.Synchronization],
    tags: ['Synchronization & Exports APIs', 'Synchronization'],
    apiGroupId: _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.Synchronization */ .mV.Synchronization,
    image: '../../../images/synchronizationThumbnail.png',
    url: `${_client_env__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GITHUB_ITWIN_URL */ .Z.GITHUB_ITWIN_URL}/${name}`
  };
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 78869:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "j": function() { return /* binding */ getWebhooksApiV1SampleNodeJsExpressAppSpec; }
/* harmony export */ });
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2599);
/* harmony import */ var _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67105);
/* harmony import */ var _constants_ApiName__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(594);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_0__]);
_client_env__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];
/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/



const name = 'webhooks-api-v1-sample-nodejs-express-app';
function getWebhooksApiV1SampleNodeJsExpressAppSpec() {
  return {
    name,
    label: 'Webhooks API V1 Sample NodeJs Express App',
    description: 'Node.js (Express) application that shows the basic examples of consuming Webhooks V1 API and reacting to iTwin Platform events.',
    relatedApiPaths: [_constants_ApiName__WEBPACK_IMPORTED_MODULE_2__/* .ApiPath.Webhooks */ .L.Webhooks],
    apiGroupId: _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.WorkflowAutomation */ .mV.WorkflowAutomation,
    tags: ['Events', 'Workflow Automation', 'Webhooks'],
    url: `${_client_env__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GITHUB_ITWIN_URL */ .Z.GITHUB_ITWIN_URL}/webhooks-api-samples/tree/master/${name}`
  };
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 80568:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "k": function() { return /* binding */ getWebhooksApiV2SampleAzureFunctionSpec; }
/* harmony export */ });
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2599);
/* harmony import */ var _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67105);
/* harmony import */ var _constants_ApiName__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(594);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_0__]);
_client_env__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];
/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/



const name = 'webhooks-api-v2-sample-azure-function';
function getWebhooksApiV2SampleAzureFunctionSpec() {
  return {
    name,
    label: 'Webhooks API V2 Sample Azure Function',
    description: 'An Azure Function that shows the basic examples of consuming Webhooks V2 API and reacting to iTwin Platform events.',
    relatedApiPaths: [_constants_ApiName__WEBPACK_IMPORTED_MODULE_2__/* .ApiPath.Webhooks */ .L.Webhooks],
    apiGroupId: _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.WorkflowAutomation */ .mV.WorkflowAutomation,
    tags: ['Events', 'Workflow Automation', 'Webhooks'],
    url: `${_client_env__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GITHUB_ITWIN_URL */ .Z.GITHUB_ITWIN_URL}/webhooks-api-samples/tree/master/${name}`
  };
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 24708:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "C": function() { return /* binding */ getWebhooksApiV2SampleNodeJsExpressAppSpec; }
/* harmony export */ });
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2599);
/* harmony import */ var _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67105);
/* harmony import */ var _constants_ApiName__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(594);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_0__]);
_client_env__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];
/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/



const name = 'webhooks-api-v2-sample-nodejs-express-app';
function getWebhooksApiV2SampleNodeJsExpressAppSpec() {
  return {
    name,
    label: 'Webhooks API V2 Sample NodeJs Express App',
    description: 'Node.js (Express) application that shows the basic examples of consuming Webhooks V2 API and reacting to iTwin Platform events.',
    relatedApiPaths: [_constants_ApiName__WEBPACK_IMPORTED_MODULE_2__/* .ApiPath.Webhooks */ .L.Webhooks],
    apiGroupId: _constants_ApiGroupId__WEBPACK_IMPORTED_MODULE_1__/* .ApiGroupId.WorkflowAutomation */ .mV.WorkflowAutomation,
    tags: ['Events', 'Workflow Automation', 'Webhooks'],
    url: `${_client_env__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GITHUB_ITWIN_URL */ .Z.GITHUB_ITWIN_URL}/webhooks-api-samples/tree/master/${name}`
  };
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 17469:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "l": function() { return /* binding */ sampleManifest; }
/* harmony export */ });
/* harmony import */ var _constants_sandbox__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(50982);
/* harmony import */ var _code_only_samples_imodels_api_management_workflow_sample_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(97627);
/* harmony import */ var _code_only_samples_insights_api_sample_console_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(23706);
/* harmony import */ var _code_only_samples_itwin_api_sample_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(18727);
/* harmony import */ var _code_only_samples_library_api_sample_app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(75110);
/* harmony import */ var _code_only_samples_platform_api_samples__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4113);
/* harmony import */ var _code_only_samples_project_api_sample_app__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(85809);
/* harmony import */ var _code_only_samples_storage_api_sample_app__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(37036);
/* harmony import */ var _code_only_samples_synchronization_api_sample_app__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(93282);
/* harmony import */ var _code_only_samples_synchronization_manifest_api_sample__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(67809);
/* harmony import */ var _code_only_samples_webhooks_api_v1_sample_nodejs_express_app__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(78869);
/* harmony import */ var _code_only_samples_webhooks_api_v2_sample_nodejs_express_app__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(24708);
/* harmony import */ var _code_only_samples_webhooks_api_v2_sample_azure_function__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(80568);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_code_only_samples_imodels_api_management_workflow_sample_app__WEBPACK_IMPORTED_MODULE_0__, _code_only_samples_insights_api_sample_console_app__WEBPACK_IMPORTED_MODULE_1__, _code_only_samples_itwin_api_sample_app__WEBPACK_IMPORTED_MODULE_2__, _code_only_samples_library_api_sample_app__WEBPACK_IMPORTED_MODULE_3__, _code_only_samples_platform_api_samples__WEBPACK_IMPORTED_MODULE_4__, _code_only_samples_project_api_sample_app__WEBPACK_IMPORTED_MODULE_5__, _code_only_samples_storage_api_sample_app__WEBPACK_IMPORTED_MODULE_6__, _code_only_samples_synchronization_api_sample_app__WEBPACK_IMPORTED_MODULE_7__, _code_only_samples_synchronization_manifest_api_sample__WEBPACK_IMPORTED_MODULE_8__, _code_only_samples_webhooks_api_v1_sample_nodejs_express_app__WEBPACK_IMPORTED_MODULE_9__, _code_only_samples_webhooks_api_v2_sample_nodejs_express_app__WEBPACK_IMPORTED_MODULE_10__, _code_only_samples_webhooks_api_v2_sample_azure_function__WEBPACK_IMPORTED_MODULE_11__]);
([_code_only_samples_imodels_api_management_workflow_sample_app__WEBPACK_IMPORTED_MODULE_0__, _code_only_samples_insights_api_sample_console_app__WEBPACK_IMPORTED_MODULE_1__, _code_only_samples_itwin_api_sample_app__WEBPACK_IMPORTED_MODULE_2__, _code_only_samples_library_api_sample_app__WEBPACK_IMPORTED_MODULE_3__, _code_only_samples_platform_api_samples__WEBPACK_IMPORTED_MODULE_4__, _code_only_samples_project_api_sample_app__WEBPACK_IMPORTED_MODULE_5__, _code_only_samples_storage_api_sample_app__WEBPACK_IMPORTED_MODULE_6__, _code_only_samples_synchronization_api_sample_app__WEBPACK_IMPORTED_MODULE_7__, _code_only_samples_synchronization_manifest_api_sample__WEBPACK_IMPORTED_MODULE_8__, _code_only_samples_webhooks_api_v1_sample_nodejs_express_app__WEBPACK_IMPORTED_MODULE_9__, _code_only_samples_webhooks_api_v2_sample_nodejs_express_app__WEBPACK_IMPORTED_MODULE_10__, _code_only_samples_webhooks_api_v2_sample_azure_function__WEBPACK_IMPORTED_MODULE_11__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/












 // import { getRealityDataApiSampleAppSpec } from './SamplesSpecs/code-only-samples/realitydata-sample-app';

const sampleManifest = [{
  id: _constants_sandbox__WEBPACK_IMPORTED_MODULE_12__/* .iTwinPlatformApiGroupId */ .zj,
  groupName: 'iTwin Platform APIs',
  samples: [(0,_code_only_samples_synchronization_api_sample_app__WEBPACK_IMPORTED_MODULE_7__/* .getSynchronizationApiSampleAppSpec */ .r)(), (0,_code_only_samples_synchronization_manifest_api_sample__WEBPACK_IMPORTED_MODULE_8__/* .getSynchronizationManifestApiSampleSpec */ .P)(), (0,_code_only_samples_imodels_api_management_workflow_sample_app__WEBPACK_IMPORTED_MODULE_0__/* .getImodelsApiManagementWorkflowSampleAppSpec */ .s)(), (0,_code_only_samples_storage_api_sample_app__WEBPACK_IMPORTED_MODULE_6__/* .getStorageApiSampleAppSpec */ .d)(), (0,_code_only_samples_project_api_sample_app__WEBPACK_IMPORTED_MODULE_5__/* .getProjectsApiSampleAppSpec */ .F)(), (0,_code_only_samples_itwin_api_sample_app__WEBPACK_IMPORTED_MODULE_2__/* .getiTwinssApiSampleAppSpec */ .m)(), (0,_code_only_samples_webhooks_api_v1_sample_nodejs_express_app__WEBPACK_IMPORTED_MODULE_9__/* .getWebhooksApiV1SampleNodeJsExpressAppSpec */ .j)(), (0,_code_only_samples_webhooks_api_v2_sample_nodejs_express_app__WEBPACK_IMPORTED_MODULE_10__/* .getWebhooksApiV2SampleNodeJsExpressAppSpec */ .C)(), (0,_code_only_samples_webhooks_api_v2_sample_azure_function__WEBPACK_IMPORTED_MODULE_11__/* .getWebhooksApiV2SampleAzureFunctionSpec */ .k)(), (0,_code_only_samples_platform_api_samples__WEBPACK_IMPORTED_MODULE_4__/* .getImportAndCopyProjectTeamMembersSpec */ .F)(), (0,_code_only_samples_insights_api_sample_console_app__WEBPACK_IMPORTED_MODULE_1__/* .getInsightsApiSampleConsoleAppSpec */ .t)(), (0,_code_only_samples_library_api_sample_app__WEBPACK_IMPORTED_MODULE_3__/* .getLibraryApiSampleAppSpec */ .h)() // getRealityDataApiSampleAppSpec(),
  ]
}];
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 13417:
/***/ (function(module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony import */ var _providers_AuthProvider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(78972);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_providers_AuthProvider__WEBPACK_IMPORTED_MODULE_0__]);
_providers_AuthProvider__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];

__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 88252:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "hW": function() { return /* binding */ preloadAPIContent; }
});

// UNUSED EXPORTS: preloadApiDocumentation, preloadManual, preloadMarkdownContentFromFile, preloadMarketingContent, preloadOverviewContent, preloadPricingSectionMdContent, preloadTierTileMdContent

;// CONCATENATED MODULE: external "fs"
var external_fs_namespaceObject = require("fs");
// EXTERNAL MODULE: ./src/next.utils.ts
var next_utils = __webpack_require__(50743);
;// CONCATENATED MODULE: ./src/services/mdService.ts

 // import { logError, logWarn } from '../utils/serverLoggerUtils';

function preloadMarkdownContentFromFile(path) {
  return (0,external_fs_namespaceObject.readFileSync)(`${process.cwd()}/${path}`, {
    encoding: 'utf8'
  });
}
function preloadTierTileMdContent(tier) {
  let content = '';

  if (NextUtils.isPreloading) {
    try {
      content = preloadMarkdownContentFromFile(`public/pricing/tiers/${tier.toLowerCase()}-tier.md`);
    } catch (error) {// logError(
      //   error as object,
      //   `Could not retrieve Tier Tile Md Content from ${process.cwd()}/public/pricing/tiers/${tier.toLowerCase()}-tier.md`
      // );
    }
  }

  return content;
}
function preloadPricingSectionMdContent(section) {
  let content = '';

  if (NextUtils.isPreloading) {
    try {
      content = preloadMarkdownContentFromFile(`public/pricing/${section}.md`);
    } catch (error) {// logError(
      //   error as object,
      //   `Could not preload pricing section MD content from ${process.cwd()}/public/pricing/${section}.md`
      // );
    }
  }

  return content;
}
function preloadOverviewContent(topic) {
  return preloadMarkdownContentFromFile(`platform-api-documentation/apis/overview/${topic}.md`);
}
async function preloadAPIContent(apiId) {
  let content = '';

  if (next_utils/* NextUtils.isPreloading */.l.isPreloading) {
    try {
      content = preloadMarkdownContentFromFile(`public/documentation/apis/${apiId}.md`);
    } catch (e) {// logWarn(
      //   { ApiId: apiId, Error: e },
      //   `Getting API card content from "${process.cwd()}/public/documentation/apis/${apiId}.md" failed. API card content will be taken from API description.`
      // );
    }
  } else {
    content = await fetch(`/documentation/apis/${apiId}.md`).then(result => {
      return result.ok ? result.text() : '';
    }, error => {
      console.error(error, `Failed to fetch /documentation/apis/${apiId}.md`);
      return '';
    });
  }

  return content;
}
function preloadMarketingContent(apiGroupId) {
  if (NextUtils.isRuntime) {
    return '';
  }

  return preloadMarkdownContentFromFile(`public/documentation/${apiGroupId}/marketingOverview.md`);
}
async function preloadApiDocumentation(apiName) {
  let content = '';

  if (NextUtils.isPreloading) {
    try {
      content = preloadMarkdownContentFromFile(`public/documentation/apis/${apiName}-documentation.md`);
    } catch (error) {// logWarn(
      //   error as object,
      //   `Getting API overview content from "${process.cwd()}/public/documentation/apis/${apiName}-documentation.md" failed. API overview page content will be empty.`
      // );
    }
  } else {
    content = await fetch(`/documentation/apis/${apiName}-documentation.md`).then(result => {
      return result.ok ? result.text() : '';
    }, error => {
      console.error(error, `Failed to fetch /documentation/apis/${apiName}-documentation.md`);
      return '';
    });
  }

  return content;
}
function preloadManual(key) {
  // It will throw exception if it will be called during runtime
  return preloadMarkdownContentFromFile(`public/documentation/apis/${key}-manual.md`);
}

/***/ }),

/***/ 7678:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Y": function() { return /* binding */ getTutorialMetadataByApi; }
});

// UNUSED EXPORTS: getAllTutorialMetadata

// EXTERNAL MODULE: ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(83798);
// EXTERNAL MODULE: ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules
var objectWithoutProperties = __webpack_require__(31117);
// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(16689);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);
// EXTERNAL MODULE: external "@mdx-js/react"
var react_ = __webpack_require__(57425);
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/adding-attachments-and-comments-to-your-issue.mdx


var _excluded = ["components"];
var __jsx = (external_react_default()).createElement;


var readingTime = {
  "text": "7 min read",
  "minutes": 6.63,
  "time": 397800,
  "words": 1326
};
/* @jsxRuntime classic */
/* @jsx mdx */

var metadata = {
  title: 'Adding Attachments and Comments to Your Issue',
  tile: {
    name: 'Adding Attachments and Comments to Your Issue',
    description: 'Use the Issues REST API to add documents, images, and comments to an issue.',
    thumbnail: null,
    href: '/tutorials/adding-attachments-and-comments-to-your-issue/',
    durationInMinutes: 15,
    relatedApiIds: ['issues']
  }
};
var makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var Introduction = makeShortcode("Introduction");
var TutorialSection = makeShortcode("TutorialSection");
var Title = makeShortcode("Title");
var ActionLinkButton = makeShortcode("ActionLinkButton");
var CodeBlock = makeShortcode("CodeBlock");
var Alert = makeShortcode("Alert");
var ContinueLearningSection = makeShortcode("ContinueLearningSection");
var TileList = makeShortcode("TileList");
var Tile = makeShortcode("Tile");
var layoutProps = {
  metadata: metadata
};
var MDXLayout = "wrapper";
function MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);
  return (0,react_.mdx)(MDXLayout, (0,esm_extends/* default */.Z)({}, layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "15",
    summaryImageSrc: null,
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "Attachments and comments provide a great way for your team to discuss and collaborate on solving an issue. Attachments let you provide files with more details about an issue, and comments let multiple people ask questions and talk about an issue without overwriting each others\u2019 changes."), (0,react_.mdx)("p", null, "In this tutorial, you will learn how to use the Issues REST API to add comments to an already-existing issue and view all of the issue\u2019s comments. You will also use the API to attach a file to the issue and then download it."), (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "You will need to create an issue in your project so that you can add comments and attachments to it. Please complete the tutorial ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "../creating-your-first-issue/"
  }, "Creating Your First Issue"), " if you haven\u2019t already."), (0,react_.mdx)("p", null, "Once you have created an issue, note its ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " property. You will need to use that anytime you see ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "<", "your-issue-id", ">"), " in this tutorial.")), (0,react_.mdx)(TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-comments"
  }, "1. Comments"), (0,react_.mdx)("p", null, "Comments are simple text posts that are associated with a single issue. Many different users in your project can comment on an issue, and anyone who can view the issue will be able to see who said what and when. They\u2019re a useful tool for asking questions or providing clarification.")), (0,react_.mdx)(TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(Title, {
      mdxType: "Title"
    }, (0,react_.mdx)(ActionLinkButton, {
      href: "/apis/issues-v1/operations/add-comment-to-issue/",
      target: "_blank",
      title: "Try the Add Comment to Issue endpoint",
      buttonText: "Go",
      mdxType: "ActionLinkButton"
    })), (0,react_.mdx)(Title, {
      mdxType: "Title"
    }, "Method, sample URL, and headers"), (0,react_.mdx)(CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/issues/<your-issue-id>/comments HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(Title, {
      mdxType: "Title"
    }, "Sample body"), (0,react_.mdx)(CodeBlock, {
      language: "json",
      code: "{\n  \"text\": \"This has been noted and will be fixed in version 1.3.\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(Title, {
      mdxType: "Title"
    }, "Sample response"), (0,react_.mdx)(CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "11-creating-a-comment"
  }, "1.1. Creating a Comment"), (0,react_.mdx)("p", null, "Creating a comment is simple! Make a POST request to the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/issues-v1/operations/add-comment-to-issue/"
  }, "Add Comment to Issue"), " endpoint. The body is a JSON object containing just one property\u2014", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "text"), "\u2014whose string value is the contents of the message you want to send. The server will automatically generate and save metadata, including when the comment was posted and who made the request."), (0,react_.mdx)("h4", {
    "id": "url"
  }, "URL"), (0,react_.mdx)("p", null, "The path includes your issue ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " followed by ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "/comments"), ", i.e. ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/issues/<your-issue-id>/comments")), (0,react_.mdx)("h4", {
    "id": "body"
  }, "Body"), (0,react_.mdx)("p", null, "Provide a JSON object with a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "text"), " property containing your message, and no other properties."), (0,react_.mdx)("h4", {
    "id": "response"
  }, "Response"), (0,react_.mdx)("p", null, "If the request succeeds, the response will just consist of the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "201 Created"), " status code (and some headers) without a body.")), (0,react_.mdx)(TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(Title, {
      mdxType: "Title"
    }, (0,react_.mdx)(ActionLinkButton, {
      href: "/apis/issues-v1/operations/get-issue-comments/",
      target: "_blank",
      title: "Try the Get Issue Comments endpoint",
      buttonText: "Go",
      mdxType: "ActionLinkButton"
    })), (0,react_.mdx)(Title, {
      mdxType: "Title"
    }, "Sample request"), (0,react_.mdx)(CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/issues/<your-issue-id>/comments HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(Title, {
      mdxType: "Title"
    }, "Sample response"), (0,react_.mdx)(CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"comments\":[\n    {\n      \"id\":\"xospFt7H20-9uSSLOwfBeO7IKKXOvh1Nkl344vJ_s_E\",\n      \"text\":\"This has been noted and will be fixed in version 1.3.\",\n      \"authorDisplayName\":\"Andrew Menzies\",\n      \"_links\":{\n        \"author\":{\n          \"href\":\"https://api.bentley.com/projects/16ab8bc6-c7de-4fdb-bdb9-248b3b07c178/members/9e543213-2457-466d-9de3-8d8a186b4189\"\n        }\n      },\n      \"createdDateTime\":\"2021-06-14T20:34:33.9220455Z\"\n    }\n  ]\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "12-viewing-an-issues-comments"
  }, "1.2. Viewing an Issue\u2019s Comments"), (0,react_.mdx)("p", null, "You can read the comment you added by making a GET request to the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/issues-v1/operations/get-issue-comments/"
  }, "Get Issue Comments"), " endpoint."), (0,react_.mdx)("h4", {
    "id": "url-1"
  }, "URL"), (0,react_.mdx)("p", null, "The URL for this request is exactly the same as it is for creating a comment: ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/issues/<your-issue-id>/comments")), (0,react_.mdx)("h4", {
    "id": "response-1"
  }, "Response"), (0,react_.mdx)("p", null, "The response consists of an array of comments. For each comment, the author\u2019s display name and the comment\u2019s creation time are provided, even though you didn\u2019t manually set them in your request."), (0,react_.mdx)("p", null, "Each comment in the response also includes a link that can be followed to request additional information about the comment\u2019s author from the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/projects/operations/get-project-team-member-details/"
  }, "Get Project Team Member Details"), " endpoint of the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Projects"), " API, assuming you have access to it.")), (0,react_.mdx)(TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-attachments"
  }, "2. Attachments"), (0,react_.mdx)("p", null, "The Issues API supports attaching files of many different types to issues\u2014nearly any non-executable file type is supported. These can include documents, images (like a problem at the project\u2019s physical site or a screenshot of an iModel), and even short videos (up to 30MB). Adding an attachment to an issue right after you create it can be an excellent way of providing more context than words alone.")), (0,react_.mdx)(TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(Title, {
      mdxType: "Title"
    }, (0,react_.mdx)(ActionLinkButton, {
      href: "/apis/issues-v1/operations/add-attachment-to-issue/",
      target: "_blank",
      title: "Try the Add Attachment to Issue endpoint",
      buttonText: "Go",
      mdxType: "ActionLinkButton"
    })), (0,react_.mdx)(Title, {
      mdxType: "Title"
    }, "Method, sample URL, and header"), (0,react_.mdx)(CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/issues/<your-issue-id>/attachments HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(Title, {
      mdxType: "Title"
    }, "Sample body"), (0,react_.mdx)(CodeBlock, {
      language: "json",
      code: "{\n  \"fileName\":\"ExampleDoc.txt\",\n  \"caption\":\"Document related to the issue\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(Title, {
      mdxType: "Title"
    }, "Sample response"), (0,react_.mdx)(CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\nLocation: https://api.bentley.com/issues/xospFt7H20-9uSSLOwfBeBs-UbbpqxhKgAL4wWWajpw/attachments/xospFt7H20-9uSSLOwfBeM-a1K5hBDdNtT9MMU6U2dI",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(Title, {
      mdxType: "Title"
    }, (0,react_.mdx)(ActionLinkButton, {
      href: "/apis/issues-v1/operations/upload-attachment-file/",
      target: "_blank",
      title: "Try the Upload Attachment File endpoint",
      buttonText: "Go",
      mdxType: "ActionLinkButton"
    })), (0,react_.mdx)(Title, {
      mdxType: "Title"
    }, "Sample request (you will also need to include the file's bytes)"), (0,react_.mdx)(CodeBlock, {
      language: "http",
      code: "PUT https://api.bentley.com/issues/xospFt7H20-9uSSLOwfBeBs-UbbpqxhKgAL4wWWajpw/attachments/xospFt7H20-9uSSLOwfBeM-a1K5hBDdNtT9MMU6U2dI HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "21-adding-an-attachment"
  }, "2.1. Adding an Attachment"), (0,react_.mdx)("p", null, "Adding an attachment is a two-step process. First, make a POST request to the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/issues-v1/operations/add-attachment-to-issue/"
  }, "Add Attachment to Issue"), " endpoint to create metadata for the file you\u2019re about to upload."), (0,react_.mdx)("h4", {
    "id": "url-2"
  }, "URL"), (0,react_.mdx)("p", null, "The URL path includes the issue\u2019s ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " property followed by ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "/attachments"), ", i.e. ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/issues/<id>/attachments"), "."), (0,react_.mdx)("h4", {
    "id": "body-1"
  }, "Body"), (0,react_.mdx)("p", null, "The request body is a JSON object. It must contain a ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "fileName"), " property which can be any valid filename (without a directory path). The file extension should be accurate for the type of file you are about to upload to ensure that users who download the file will be able to open it."), (0,react_.mdx)("p", null, "You may also add a ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "caption"), " property. It just contains simple text that can provide additional context to users who look up the issue\u2019s attachments."), (0,react_.mdx)("h4", {
    "id": "response-2"
  }, "Response"), (0,react_.mdx)("p", null, "If successful, the response will include a ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Location"), " header with a URL. Now, for the second step: Upload your raw file (plus the Authorization header, as usual) via PUT request to that URL to complete the process."), (0,react_.mdx)("p", null, "You can upload the file using the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/issues-v1/operations/upload-attachment-file/"
  }, "Upload Attachment File"), " endpoint. The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "attachmentId"), " URL parameter is equal to the final segment of the URL that was returned in the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Location"), " header. (That is, the segment after ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "/attachments/"), ". For example, in the response shown under ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Sample response"), ", the attachment id would be ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "xospFt7H20-9uSSLOwfBeM-a1K5hBDdNtT9MMU6U2dI"), ", but it\u2019ll be different for your attachment.)"), (0,react_.mdx)(Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note: To upload a file using the Try It feature of our documentation site, choose the ", (0,react_.mdx)("strong", null, "Binary"), " radio button under ", (0,react_.mdx)("strong", null, "Body"), ".")), (0,react_.mdx)(TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(Title, {
      mdxType: "Title"
    }, (0,react_.mdx)(ActionLinkButton, {
      href: "/apis/issues-v1/operations/get-issue-attachments/",
      target: "_blank",
      title: "Try the Get Issue Attachments endpoint",
      buttonText: "Go",
      mdxType: "ActionLinkButton"
    })), (0,react_.mdx)(Title, {
      mdxType: "Title"
    }, "Sample request to get attachment list"), (0,react_.mdx)(CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/issues/<your-issue-id>/attachments HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(Title, {
      mdxType: "Title"
    }, "Sample attachment list response"), (0,react_.mdx)(CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"attachments\":[\n    {\n      \"id\":\"xospFt7H20-9uSSLOwfBeM-a1K5hBDdNtT9MMU6U2dI\",\n      \"fileName\":\"ExampleDoc.txt\",\n      \"createdDateTime\":\"2021-06-16T19:11:21.2722577Z\",\n      \"size\":405,\n      \"caption\":\"Document related to the issue\",\n      \"binding\":null,\n      \"type\":\"txt\"\n    }\n  ]\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(Title, {
      mdxType: "Title"
    }, (0,react_.mdx)(ActionLinkButton, {
      href: "/apis/issues-v1/operations/get-attachment-by-id/",
      target: "_blank",
      title: "Try the Get Attachment File endpoint",
      buttonText: "Go",
      mdxType: "ActionLinkButton"
    })), (0,react_.mdx)(Title, {
      mdxType: "Title"
    }, "Sample request to get file"), (0,react_.mdx)(CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/issues/<your-issue-id>/attachments/<your-attachment-id> HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "22-getting-the-issues-attachments"
  }, "2.2. Getting the Issue\u2019s Attachments"), (0,react_.mdx)("p", null, "Make a GET request to the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/issues-v1/operations/get-issue-attachments/"
  }, "Get Issue Attachments"), " endpoint, passing your issue\u2019s ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " as the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "id"), " parameter, to get a list of all files attached to the issue."), (0,react_.mdx)("p", null, "This will return a JSON array of attachment metadata, including ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "fileName"), ", ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "id"), ", and the auto-populated ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "size"), " (in bytes) and ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "createdDateTime"), ". Find your attachment and take note of its ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), "."), (0,react_.mdx)("p", null, "Make a GET request to the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/issues-v1/operations/get-attachment-by-id/"
  }, "Get Attachment File by ID"), " endpoint, passing the same issue ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " as the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "id"), " parameter and passing the attachment ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " as the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "attachmentId"), " parameter. This will return the file you uploaded earlier. (If using the Try It feature, our developer site will attempt to display the file\u2019s bytes as text, so it may not work well for images. It might be better to try attaching a plain .txt file for purposes of this tutorial.)")), (0,react_.mdx)(ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)(TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(Tile, {
    name: "Adding Attachments and Comments to Your Issue",
    description: "Upload images and documents, and post comments, to make your issue more detailed.",
    href: "/tutorials/adding-attachments-and-comments-to-your-issue",
    mdxType: "Tile"
  }), (0,react_.mdx)(Tile, {
    name: "Model Issues Interactive Sample",
    description: "See the Issues API in action in an iTwin Viewer app.",
    href: "https://www.itwinjs.org/sandboxes/iTwinPlatform/Issues",
    isExternal: true,
    mdxType: "Tile"
  }))));
}
;
MDXContent.isMDXComponent = true;
var tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-comments",
    level: 2,
    title: "1. Comments",
    children: [{
      id: "11-creating-a-comment",
      level: 3,
      title: "1.1. Creating a Comment",
      children: []
    }, {
      id: "12-viewing-an-issues-comments",
      level: 3,
      title: "1.2. Viewing an Issue’s Comments",
      children: []
    }]
  }, {
    id: "2-attachments",
    level: 2,
    title: "2. Attachments",
    children: [{
      id: "21-adding-an-attachment",
      level: 3,
      title: "2.1. Adding an Attachment",
      children: []
    }, {
      id: "22-getting-the-issues-attachments",
      level: 3,
      title: "2.2. Getting the Issue’s Attachments",
      children: []
    }]
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }];
};
var frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/adding-decorators-and-markers.mdx


var adding_decorators_and_markers_excluded = ["components"];
var adding_decorators_and_markers_jsx = (external_react_default()).createElement;


var adding_decorators_and_markers_readingTime = {
  "text": "18 min read",
  "minutes": 17.995,
  "time": 1079700,
  "words": 3599
};
/* @jsxRuntime classic */
/* @jsx mdx */

var adding_decorators_and_markers_metadata = {
  title: 'Adding view decorations to your iTwin Viewer',
  tile: {
    name: 'Adding view decorations to your iTwin Viewer',
    description: 'This tutorial demonstrates how to add marker decorations to the Viewer.',
    thumbnail: '/images/adding-decorators-and-markers.png',
    href: '/tutorials/adding-decorators-and-markers/',
    durationInMinutes: 45,
    relatedApiIds: ['visualization'],
    showInFirstSteps: false
  }
};
var adding_decorators_and_markers_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var adding_decorators_and_markers_Introduction = adding_decorators_and_markers_makeShortcode("Introduction");
var adding_decorators_and_markers_TutorialSection = adding_decorators_and_markers_makeShortcode("TutorialSection");
var WebMLoop = adding_decorators_and_markers_makeShortcode("WebMLoop");
var adding_decorators_and_markers_Title = adding_decorators_and_markers_makeShortcode("Title");
var adding_decorators_and_markers_CodeBlock = adding_decorators_and_markers_makeShortcode("CodeBlock");
var adding_decorators_and_markers_ContinueLearningSection = adding_decorators_and_markers_makeShortcode("ContinueLearningSection");
var adding_decorators_and_markers_TileList = adding_decorators_and_markers_makeShortcode("TileList");
var ResourceTile = adding_decorators_and_markers_makeShortcode("ResourceTile");
var adding_decorators_and_markers_layoutProps = {
  metadata: adding_decorators_and_markers_metadata
};
var adding_decorators_and_markers_MDXLayout = "wrapper";
function adding_decorators_and_markers_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, adding_decorators_and_markers_excluded);
  return (0,react_.mdx)(adding_decorators_and_markers_MDXLayout, (0,esm_extends/* default */.Z)({}, adding_decorators_and_markers_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(adding_decorators_and_markers_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "45",
    summaryImageSrc: "/unreal-docs-site/static/images/adding-decorators-and-markers.png",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial guides you through customizing your iTwin Viewer application by displaying application-specific graphics, called ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "view decorations"), ", in addition to an iModel\u2019s geometry. "), (0,react_.mdx)("p", null, "First, we explore the basics about view decorations, decorators and markers. Then, we create a simple viewer application which displays markers for elements of interest in a 3D iModel.")), (0,react_.mdx)(adding_decorators_and_markers_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Your own local source for the iTwin Web Viewer based on the template @itwin/web-viewer", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "See the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/web-application-quick-start"
  }, "Get Started!"), " tutorial for instructions."))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Configured your local source to open the \u201CHouse Model\u201D sample iModel.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "See the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-test-imodel-sample"
  }, "Create a test iModel from a Bentley provided sample"), " tutorial for instructions on using a sample iModel."))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Completed the \u201C", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/itwin-viewer-hello-world"
  }, "Customizing the iTwin Viewer"), "\u201D tutorial."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Completed the \u201C", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/adding-showcase-widgets-to-your-itwin-viewer"
  }, "Adding showcase widgets to your iTwin Viewer"), "\u201D tutorial."))), (0,react_.mdx)(adding_decorators_and_markers_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-view-decorations-decorators-and-markers"
  }, "1. View Decorations, Decorators and Markers")), (0,react_.mdx)(adding_decorators_and_markers_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "11-view-decorations"
  }, "1.1 View Decorations"), (0,react_.mdx)("p", null, "Using iTwin.js, there are many ways to customize your iTwin Viewer application, such as displaying custom graphics in the viewport. Additionally, to add graphics that are not contained in, or provided by, the iModel, use View Decorations. At their core, view decorations are application-generated graphics supplied to the viewer\u2019s render system at runtime. There are three categories of view decorations:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "View Graphic Decorations"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Canvas Decorations"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "HTML Decorations")), (0,react_.mdx)("p", null, "View graphic decorations, of which there are many sub-types, are decorations drawn using the iTwin.js rendering system through WebGL. They allow you to display complex graphics alongside the models\u2019 geometry. They are constructed using a ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/rendering/graphicbuilder/"
  }, "GraphicBuilder"), " or by using ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/tiles/readgltfgraphics"
  }, "readGltfGraphics"), " to load ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.khronos.org/gltf/"
  }, "glTF"), " assets. Depending on their sub-type, view graphic decorations can be drawn using the view\u2019s lighting, shading and render mode. A common use case of view graphic decorations is the display of 3D bounding boxes around certain elements of a model."), (0,react_.mdx)("figure", {
    style: {
      "display": "table",
      "width": "60%",
      "margin-left": "auto",
      "margin-right": "auto",
      "margin-top": "22px",
      "margin-bottom": "22px",
      "padding-left": "0px"
    }
  }, (0,react_.mdx)("img", {
    style: {
      "width": "100%"
    },
    src: "/unreal-docs-site/static/images/tutorials/adding-decorators-and-markers/project_extents.png",
    alt: "3d iModel of a red brick house over a green background with a white bounding box illustrating the model's limits."
  }), (0,react_.mdx)("figcaption", {
    style: {
      "display": "table-caption",
      "caption-side": "bottom"
    }
  }, "View graphic decorations created using a graphicsBuilder to display a bounding box around the House Model.")), (0,react_.mdx)("p", null, "Canvas decorations are decorations drawn atop the scene using ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D"
  }, "CanvasRenderingContext2D"), ", which means they always appear in front of your models. They are very useful to display information you do not want to lose sight of behind elements. Canvas decorations are created by implemention the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/rendering/canvasdecoration/"
  }, "CanvasDecoration"), " interface. The iTwin.js implementation of ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/views/sprite/"
  }, "Sprites"), " uses canvas decorations."), (0,react_.mdx)("p", null, "HTML decorations are simply HTML elements added to the DOM on top of your views. They are displayed in front of canvas decorations."), (0,react_.mdx)("p", null, "For more information on using view decorations, see ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/learning/frontend/viewdecorations/"
  }, "View Decorations"), ".")), (0,react_.mdx)(adding_decorators_and_markers_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "12-decorators"
  }, "1.2 Decorators"), (0,react_.mdx)("p", null, "View decorations are added to a viewport using a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "decorator"), ". A decorator is an object implementing the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/views/decorator/"
  }, "Decorator"), " interface that manages a set of view decorations. Each time a viewport renders a frame, each registered decorator\u2019s ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "decorate"), " method is called. The method receives a ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/rendering/decoratecontext/"
  }, "DecorateContext"), ", which is used to add the view decorations to be rendered for that frame. Decorators are registered with the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/views/viewmanager/adddecorator/"
  }, "ViewManager.addDecorator"), " method.")), (0,react_.mdx)(adding_decorators_and_markers_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "13-markers"
  }, "1.3 Markers"), (0,react_.mdx)("p", null, (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/learning/frontend/markers/"
  }, "Markers"), " are a convenient way to display information atop the view that follow a fixed point in the world. They are often used as visual indicators showing the location of data from external sources or points of interest in the world. As such, they can present information when hovered and perform actions when clicked. Markers can optionaly display all three types of view decorations.")), (0,react_.mdx)(adding_decorators_and_markers_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-creating-a-simple-app-to-display-markers-for-elements-of-interest"
  }, "2. Creating a simple app to display markers for elements of interest"), (0,react_.mdx)("p", null, "To apply what we have just learned about view decorations, decorators, and markers, we will now create a simple Viewer application using these three features. Our goal is to display markers representing interesting elements in the House Model. Those markers will consist of simple 2D images. When hovered, they will show a name for the element and, when clicked, they will take us to that element."), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Note"), ": You can have a look at the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/sandboxes/RaphaelMelancon/Simple%20Marker%20Sample%20App"
  }, "Simple Marker Sample App"), " community sandbox to see what your application will look like at the end of this tutorial."), (0,react_.mdx)("p", null, "Let\u2019s get started!"), (0,react_.mdx)(WebMLoop, {
    src: "/unreal-docs-site/static/images/tutorials/adding-decorators-and-markers/sample-app-green-bg.webm",
    alt: "Screen recording of the Viewer app being used.",
    style: {
      "display": "block",
      "width": "60%",
      "margin-left": "auto",
      "margin-right": "auto"
    },
    mdxType: "WebMLoop"
  }), (0,react_.mdx)("br", null)), (0,react_.mdx)(adding_decorators_and_markers_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(adding_decorators_and_markers_Title, {
      mdxType: "Title"
    }, "ElementOfInterestMarker class"), (0,react_.mdx)(adding_decorators_and_markers_CodeBlock, {
      language: 'typescript',
      code: "import { Marker } from \"@itwin/core-frontend\";\n\nexport class ElementOfInterestMarker extends Marker {\n  private static _height = 35;\n  private _onMouseButtonCallback: any;\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "21-creating-our-elementofinterestmarker-class"
  }, "2.1 Creating our ElementOfInterestMarker class"), (0,react_.mdx)("p", null, "First off, make sure you are starting from a newly created Viewer Test App. Have a look at the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "#Prerequisites"
  }, "prerequisites"), " if you are unsure how to do that."), (0,react_.mdx)("p", null, "Now, let\u2019s create a new file called ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ElementOfInterestMarker.ts"), " in the same directory as your ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "App.tsx"), " file. In this file, we define our custom ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ElementOfInterestMarker"), " class extending ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/views/marker/"
  }, "Marker"), ", which we import."), (0,react_.mdx)("p", null, "To have all our markers appear the same size, we add the property ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "private static _height = 35;"), " to our class.\nWe also add ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "private _onMouseButtonCallback: any;"), " to hold each marker\u2019s callback function.", (0,react_.mdx)("br", null), "\nWe will use those properties in the constructor.")), (0,react_.mdx)(adding_decorators_and_markers_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(adding_decorators_and_markers_Title, {
      mdxType: "Title"
    }, "ElementOfInterestMarker constructor"), (0,react_.mdx)(adding_decorators_and_markers_CodeBlock, {
      language: 'typescript',
      code: "constructor(\n  image: HTMLImageElement,\n  title: string,\n  onMouseButtonCallback: any,\n  worldLocation: Point3d,\n) {\n  super(worldLocation, new Point2d(image.width * (ElementOfInterestMarker._height / image.height), ElementOfInterestMarker._height));\n  this._onMouseButtonCallback = onMouseButtonCallback;\n  this.title = title;\n  this.setImage(image);\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "constructor"
  }, "Constructor"), (0,react_.mdx)("p", null, "Indeed, our marker class needs a constructor in which to setup the image to display, its position and size, the tooltip shown when hovered and the callback function triggered when clicked. We define such a constructor, which expects an image, a string for the tooltip, a callback function to call when clicked, and world coordinates."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-typescript",
    "data-language": "typescript",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>image<span class=\"token operator\">:</span> HTMLImageElement<span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> onMouseButtonCallback<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> worldLocation<span class=\"token operator\">:</span> Point3d<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("p", null, "As with any constructor of a class extending another, the first line of our constructor must call the parent class\u2019s constructor using ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "super"), ". In our case, ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Marker"), "'s ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/views/marker/constructor/"
  }, "constructor"), " expects a ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-geometry/cartesiangeometry/point3d/"
  }, "Point3d"), " representing the world coordinates of the marker and a ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-geometry/cartesiangeometry/point2d/"
  }, "Point2d"), " representing its size in pixels. We can directly use ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "worldLocation"), " for the former and a simple calculation gives us the latter, keeping the input image\u2019s aspect ratio while reducing its size."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-typescript",
    "data-language": "typescript",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>worldLocation<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Point2d</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>ElementOfInterestMarker<span class=\"token punctuation\">.</span>_height <span class=\"token operator\">/</span> image<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ElementOfInterestMarker<span class=\"token punctuation\">.</span>_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"
    }
  })), (0,react_.mdx)("p", null, "Then, we assign the callback function to the previously created ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "_onMouseButtonCallback"), " property, set the marker\u2019s ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/views/marker/title/"
  }, "title"), ", and set the image using ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/views/marker/setimage/"
  }, "setImage"), "."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-typescript",
    "data-language": "typescript",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_onMouseButtonCallback <span class=\"token operator\">=</span> onMouseButtonCallback<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> title<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setImage</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"
    }
  })), (0,react_.mdx)("p", null, "Make sure to add the necessary imports."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-typescript",
    "data-language": "typescript",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Point2d<span class=\"token punctuation\">,</span> Point3d <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@itwin/core-geometry\"</span><span class=\"token punctuation\">;</span>\n"
    }
  }))), (0,react_.mdx)(adding_decorators_and_markers_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(adding_decorators_and_markers_Title, {
      mdxType: "Title"
    }, "ElementOfInterestMarker's onMouseButton method"), (0,react_.mdx)(adding_decorators_and_markers_CodeBlock, {
      language: 'typescript',
      code: "public onMouseButton(ev: BeButtonEvent): boolean {\n  if (BeButton.Data !== ev.button || !ev.isDown || !ev.viewport || !ev.viewport.view.isSpatialView())\n    return true;\n  this._onMouseButtonCallback();\n  return true;\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(adding_decorators_and_markers_Title, {
      mdxType: "Title"
    }, "Complete ElementOfInterestMarker.ts file"), (0,react_.mdx)(adding_decorators_and_markers_CodeBlock, {
      language: 'typescript',
      code: "import { BeButton, BeButtonEvent, Marker } from \"@itwin/core-frontend\";\nimport { Point2d, Point3d } from \"@itwin/core-geometry\";\n\nexport class ElementOfInterestMarker extends Marker {\n  private static _height = 35;\n  private _onMouseButtonCallback: any;\n\n  constructor(\n    image: HTMLImageElement,\n    title: string,\n    onMouseButtonCallback: any,\n    worldLocation: Point3d,\n  ) {\n    super(worldLocation, new Point2d(image.width * (ElementOfInterestMarker._height / image.height), ElementOfInterestMarker._height));\n    this._onMouseButtonCallback = onMouseButtonCallback;\n    this.title = title;\n    this.setImage(image);\n  }\n\n  public onMouseButton(ev: BeButtonEvent): boolean {\n    if (BeButton.Data !== ev.button || !ev.isDown || !ev.viewport || !ev.viewport.view.isSpatialView())\n      return true;\n    this._onMouseButtonCallback();\n    return true;\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "onmousebutton-method"
  }, "onMouseButton method"), (0,react_.mdx)("p", null, "To complete our ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ElementOfInterestMarker"), " class, let\u2019s implement its optional ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "onMouseButton"), " method, which is called whenever a mouse button event takes place on the marker. The method receives an instance of ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/tools/bebuttonevent/"
  }, "BeButtonEvent"), " containing information about the mouse event and returns a boolean. We will trigger a callback when such an event takes place."), (0,react_.mdx)("p", null, "In our case, we only want our application to react to mouse events that correspond to the right mouse button. We thus use the condition ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "BeButton.Data !== ev.button"), " to return before doing anything if the button clicked is not the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Data"), " (left) button. We also do not want anything to happen when a mouse button is depressed rather than pressed. We thus add the condition ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "!ev.isDown"), " to also return early when the mouse button started from a down position. These two conditions ensure that we only act when the right mouse button is pressed. The other conditions are safeguards to prevent triggering the callback when the viewport is missing or invalid."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-typescript",
    "data-language": "typescript",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>BeButton<span class=\"token punctuation\">.</span>Data <span class=\"token operator\">!==</span> ev<span class=\"token punctuation\">.</span>button <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>ev<span class=\"token punctuation\">.</span>isDown <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>ev<span class=\"token punctuation\">.</span>viewport <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>ev<span class=\"token punctuation\">.</span>viewport<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">.</span><span class=\"token function\">isSpatialView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n"
    }
  })), (0,react_.mdx)("p", null, "If none of the above conditions are true, we trigger the callback stored in ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "_onMouseButtonCallback"), ". We always return ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "true"), " to signal the event was processed and not to forward it to other UI elements."), (0,react_.mdx)("p", null, "Again, make sure to add the necessary imports."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-typescript",
    "data-language": "typescript",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BeButton<span class=\"token punctuation\">,</span> BeButtonEvent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@itwin/core-frontend\"</span><span class=\"token punctuation\">;</span>\n"
    }
  })), (0,react_.mdx)("p", null, "Just like that, our ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ElementOfInterestMarker"), " class is complete! You can see the completed file in the code snippet.", (0,react_.mdx)("br", null), "\nWe suggest you review the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/views/marker/"
  }, "Marker"), " documention, as the class provides many other useful methods and properties to tweak the behavior of your markers.")), (0,react_.mdx)(adding_decorators_and_markers_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "22-creating-our-elementofinterestdecorator-class"
  }, "2.2 Creating our ElementOfInterestDecorator class"), (0,react_.mdx)("p", null, "Now that we have created our marker class, we need to create a decorator which will supply the viewport with the markers to draw on each render. First, create a new file called ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ElementtOfInterestDecorator.ts"), ".")), (0,react_.mdx)(adding_decorators_and_markers_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(adding_decorators_and_markers_Title, {
      mdxType: "Title"
    }, "ElementOfInterest interface"), (0,react_.mdx)(adding_decorators_and_markers_CodeBlock, {
      language: 'typescript',
      code: "import { Id64String } from \"@itwin/core-bentley\";\nimport { StandardViewId } from \"@itwin/core-frontend\";\n\nexport interface ElementOfInterest {\n  id: Id64String,\n  title: string,\n  viewOrientation: StandardViewId\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "elementofinterest-interface"
  }, "ElementOfInterest interface"), (0,react_.mdx)("p", null, "In this file, let\u2019s define the interface ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ElementOfInterest"), " which represents the properties our decorator needs to create an ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ElementOfInterestMarker"), " for an iModel element. We need the element\u2019s id to access information such as its position in the model and a custom title to display as the marker\u2019s tooltip. Let\u2019s also add a property indicating the best angle to see this element from, which we use to adjust the view when we select the element\u2019s marker. Do not forget to import ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Id64String"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "StandardViewId"), ".")), (0,react_.mdx)(adding_decorators_and_markers_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(adding_decorators_and_markers_Title, {
      mdxType: "Title"
    }, "ElementOfInterestDecorator class"), (0,react_.mdx)(adding_decorators_and_markers_CodeBlock, {
      language: 'typescript',
      code: "import { DecorateContext, Decorator } from \"@itwin/core-frontend\";\nimport { ElementOfInterestMarker } from \"./ElementOfInterestMarker\";\n\nexport class ElementOfInterestDecorator implements Decorator {\n  private _markers: ElementOfInterestMarker[] = [];\n\n  public decorate = (context: DecorateContext) => {\n    if (context.viewport.view.isSpatialView()) {\n      this._markers.forEach(marker => marker.addDecoration(context));\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "elementofinterestdecorator-class"
  }, "ElementOfInterestDecorator class"), (0,react_.mdx)("p", null, "It\u2019s now time to create our decorator. We create the class ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ElementOfInterestDecorator"), " implementing the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/views/decorator/"
  }, "Decorator"), " interface in ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ElementOfInterestDecorator.ts"), ". To store our decorator\u2019s markers, we add the property ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "private _markers: ElementOfInterestMarker[] = [];"), " to our class. Then, in the required decorate method, we can call the inherited ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/views/marker/adddecoration/"
  }, "addDecoration"), " method of each of our markers, supplying the context.\nRefer to the code snippet for the necessary imports.")), (0,react_.mdx)(adding_decorators_and_markers_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(adding_decorators_and_markers_Title, {
      mdxType: "Title"
    }, "ElementOfInterestDecorator's _zoomToElementCallback method"), (0,react_.mdx)(adding_decorators_and_markers_CodeBlock, {
      language: 'typescript',
      code: "private _zoomToElementCallback = (elementId: Id64String, viewOrientation: StandardViewId) => {\n  const vp = IModelApp.viewManager.selectedView;\n  if (vp !== undefined)\n    vp.zoomToElements(elementId, {standardViewId: viewOrientation, animateFrustumChange: true})\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "_zoomtoelementcallback-method"
  }, "_zoomToElementCallback method"), (0,react_.mdx)("p", null, "Our decorator needs to provide the markers with a callback function to move the view to the corresponding element, so we define the method ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "_zoomToElementCallback"), " that receives the element\u2019s id and desired view orientation. To achieve the view change, we use the viewport\u2019s built-in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/views/viewport/zoomtoelements/"
  }, "zoomToElements"), " method. We get the viewport instance through the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/imodelapp/imodelapp/"
  }, "IModelApp"), " singleton by doing ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "IModelApp.viewManager.selectedView"), ". Don\u2019t forget to import it. Then, we call its zoomToElements method with the element id and additional options to specify the view orientation and to animate the view change.")), (0,react_.mdx)(adding_decorators_and_markers_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(adding_decorators_and_markers_Title, {
      mdxType: "Title"
    }, "ElementOfInterestDecorator's _createMarker method"), (0,react_.mdx)(adding_decorators_and_markers_CodeBlock, {
      language: 'typescript',
      code: "private _createMarker = (elementProps: ElementOfInterest, image: HTMLImageElement, iModel: IModelConnection) => {\n  const _onMouseButtonCallback = () => this._zoomToElementCallback(elementProps.id, elementProps.viewOrientation);\n  iModel.elements.getPlacements(elementProps.id).then((placements) => {\n    const elementCenter = placements[0].getWorldCorners().getCenter();\n    this._markers.push(new ElementOfInterestMarker(image, elementProps.title, _onMouseButtonCallback, elementCenter));\n  });\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "_createmarker-method"
  }, "_createMarker method"), (0,react_.mdx)("p", null, "Additionaly, we need a method to create a marker for an element and add it to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "_markers"), " array of our decorator. Recall our ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ElementOfInterestMarker"), "'s constructor requires an image, a title, a callback function and a location in the world. Our method thus needs as inputs an instance of ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ElementOfInterest"), ", an image, and an iModelConnection to get the element\u2019s world location."), (0,react_.mdx)("p", null, "Let\u2019s create a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "_createMarker"), " method with those inputs."), (0,react_.mdx)("p", null, "We use our ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "_zoomToElementCallback"), " method to create the marker\u2019s callback function, providing the element\u2019s id and viewOrientation."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-typescript",
    "data-language": "typescript",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">_onMouseButtonCallback</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_zoomToElementCallback</span><span class=\"token punctuation\">(</span>elementProps<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> elementProps<span class=\"token punctuation\">.</span>viewOrientation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"
    }
  })), (0,react_.mdx)("p", null, "To get the element\u2019s world location, we can query the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/imodelconnection/imodelconnection/"
  }, "IModelConnection"), ". In our case, we fetch the element\u2019s ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-common/geometry/placement3d/"
  }, "placement"), ", which contain its location in the world, by calling ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/imodelconnection/imodelconnection/imodelconnection.elements/getplacements/"
  }, "iModel.elements.getPlacements"), " with the element\u2019s id. From the placements we get the elements center point."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-typescript",
    "data-language": "typescript",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token keyword\">const</span> elementCenter <span class=\"token operator\">=</span> placements<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getWorldCorners</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCenter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"
    }
  })), (0,react_.mdx)("p", null, "Finally, we create a new instance of ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ElementOfInterestMarker"), " and add it to our decorator\u2019s ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "_markers"), " array."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-typescript",
    "data-language": "typescript",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_markers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ElementOfInterestMarker</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> elementProps<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span> _onMouseButtonCallback<span class=\"token punctuation\">,</span> elementCenter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"
    }
  })), (0,react_.mdx)("p", null, "However, ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "getPlacements()"), " is an async method, so we need to wrap the previous lines inside a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Promise.then"), " statement."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-typescript",
    "data-language": "typescript",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "iModel<span class=\"token punctuation\">.</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">getPlacements</span><span class=\"token punctuation\">(</span>elementProps<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>placements<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"
    }
  })), (0,react_.mdx)("p", null, "Refer to the code snippet for the necessary import statements.")), (0,react_.mdx)(adding_decorators_and_markers_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(adding_decorators_and_markers_Title, {
      mdxType: "Title"
    }, "ElementOfInterestDecorator's constructor"), (0,react_.mdx)(adding_decorators_and_markers_CodeBlock, {
      language: 'typescript',
      code: "constructor(elements: ElementOfInterest[], image: HTMLImageElement, iModel: IModelConnection) {\n  elements.forEach((element) => {this._createMarker(element, image, iModel)});\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(adding_decorators_and_markers_Title, {
      mdxType: "Title"
    }, "Finalized contents of ElementOfInterestDecorator.ts"), (0,react_.mdx)(adding_decorators_and_markers_CodeBlock, {
      language: 'typescript',
      code: "import { Id64String } from \"@itwin/core-bentley\";\nimport { DecorateContext, Decorator, IModelApp, IModelConnection, StandardViewId } from \"@itwin/core-frontend\";\nimport { ElementOfInterestMarker } from \"./ElementOfInterestMarker\";\n\nexport interface ElementOfInterest {\n  id: Id64String,\n  title: string,\n  viewOrientation: StandardViewId\n}\n\nexport class ElementOfInterestDecorator implements Decorator {\n  private _markers: ElementOfInterestMarker[] = [];\n\n  private _zoomToElementCallback = (elementId: Id64String, viewOrientation: StandardViewId) => {\n    const vp = IModelApp.viewManager.selectedView;\n    if (vp !== undefined)\n      vp.zoomToElements(elementId, {standardViewId: viewOrientation, animateFrustumChange: true})\n  }\n\n  private _createMarker = (element: ElementOfInterest, image: HTMLImageElement, iModel: IModelConnection, ) => {\n    const _onMouseButtonCallback = () => this._zoomToElementCallback(element.id, element.viewOrientation);\n    iModel.elements.getPlacements(element.id).then((placements) => {\n      const elementCenter = placements[0].getWorldCorners().getCenter();\n      this._markers.push(new ElementOfInterestMarker(image, element.title, _onMouseButtonCallback, elementCenter));\n    });\n  }\n\n  constructor(elements: ElementOfInterest[], image: HTMLImageElement, iModel: IModelConnection) {\n    elements.forEach((element) => {this._createMarker(element, image, iModel)});\n  }\n\n  public decorate = (context: DecorateContext) => {\n    if (context.viewport.view.isSpatialView()) {\n      this._markers.forEach(marker => marker.addDecoration(context));\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "constructor-1"
  }, "Constructor"), (0,react_.mdx)("p", null, "To complete our decorator class, let\u2019s add a constructor that creates the markers from a supplied image, an array of ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ElementOfInterest"), " and an ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "IModelConnection"), ". We simply call the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "_createMarker"), " method for each of the elements in the supplied array."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-typescript",
    "data-language": "typescript",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "elements<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_createMarker</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> image<span class=\"token punctuation\">,</span> iModel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"
    }
  })), (0,react_.mdx)("p", null, "Again, make sure to import the required objects."), (0,react_.mdx)("p", null, "Our decorator class is now complete, you can see the final contents of ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ElementOfInterestDecorator.ts"), " in the code snippet.")), (0,react_.mdx)(adding_decorators_and_markers_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(adding_decorators_and_markers_Title, {
      mdxType: "Title"
    }, "Finalized contents of App.tsx"), (0,react_.mdx)(adding_decorators_and_markers_CodeBlock, {
      language: 'tsx',
      code: "import \"./App.scss\";\n\nimport { BrowserAuthorizationClient } from \"@itwin/browser-authorization\";\nimport { FitViewTool, imageElementFromUrl, IModelApp, IModelConnection, StandardViewId } from \"@itwin/core-frontend\";\nimport type { ScreenViewport } from \"@itwin/core-frontend\";\nimport { FillCentered } from \"@itwin/core-react\";\nimport { ProgressLinear } from \"@itwin/itwinui-react\";\nimport {\n  useAccessToken,\n  Viewer,\n  ViewerPerformance,\n} from \"@itwin/web-viewer-react\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\n\nimport { history } from \"./history\";\n\nimport { ElementOfInterest, ElementOfInterestDecorator } from \"./ElementOfInterestDecorator\";\n\nconst App: React.FC = () => {\n  const [iModelId, setIModelId] = useState(process.env.IMJS_IMODEL_ID);\n  const [iTwinId, setITwinId] = useState(process.env.IMJS_ITWIN_ID);\n\n  const accessToken = useAccessToken();\n\n  const authClient = useMemo(\n    () =>\n      new BrowserAuthorizationClient({\n        scope: process.env.IMJS_AUTH_CLIENT_SCOPES ?? \"\",\n        clientId: process.env.IMJS_AUTH_CLIENT_CLIENT_ID ?? \"\",\n        redirectUri: process.env.IMJS_AUTH_CLIENT_REDIRECT_URI ?? \"\",\n        postSignoutRedirectUri: process.env.IMJS_AUTH_CLIENT_LOGOUT_URI,\n        responseType: \"code\",\n        authority: process.env.IMJS_AUTH_AUTHORITY,\n      }),\n    []\n  );\n\n  const login = useCallback(async () => {\n    try {\n      await authClient.signInSilent();\n    } catch {\n      await authClient.signIn();\n    }\n  }, [authClient]);\n\n  useEffect(() => {\n    void login();\n  }, [login]);\n\n  useEffect(() => {\n    if (accessToken) {\n      const urlParams = new URLSearchParams(window.location.search);\n      if (urlParams.has(\"iTwinId\")) {\n        setITwinId(urlParams.get(\"iTwinId\") as string);\n      } else {\n        if (!process.env.IMJS_ITWIN_ID) {\n          throw new Error(\n            \"Please add a valid iTwin ID in the .env file and restart the application or add it to the iTwinId query parameter in the url and refresh the page. See the README for more information.\"\n          );\n        }\n      }\n\n      if (urlParams.has(\"iModelId\")) {\n        setIModelId(urlParams.get(\"iModelId\") as string);\n      } else {\n        if (!process.env.IMJS_IMODEL_ID) {\n          throw new Error(\n            \"Please add a valid iModel ID in the .env file and restart the application or add it to the iModelId query parameter in the url and refresh the page. See the README for more information.\"\n          );\n        }\n      }\n    }\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (accessToken && iTwinId && iModelId) {\n      history.push(`?iTwinId=${iTwinId}&iModelId=${iModelId}`);\n    }\n  }, [accessToken, iTwinId, iModelId]);\n\n  /** NOTE: This function will execute the \"Fit View\" tool after the iModel is loaded into the Viewer.\n   * This will provide an \"optimal\" view of the model. However, it will override any default views that are\n   * stored in the iModel. Delete this function and the prop that it is passed to if you prefer\n   * to honor default views when they are present instead (the Viewer will still apply a similar function to iModels that do not have a default view).\n   */\n  const viewConfiguration = useCallback((viewPort: ScreenViewport) => {\n    // default execute the fitview tool and use the iso standard view after tile trees are loaded\n    const tileTreesLoaded = () => {\n      return new Promise((resolve, reject) => {\n        const start = new Date();\n        const intvl = setInterval(() => {\n          if (viewPort.areAllTileTreesLoaded) {\n            ViewerPerformance.addMark(\"TilesLoaded\");\n            void ViewerPerformance.addAndLogMeasure(\n              \"TileTreesLoaded\",\n              \"ViewerStarting\",\n              \"TilesLoaded\",\n              viewPort.numReadyTiles\n            );\n            clearInterval(intvl);\n            resolve(true);\n          }\n          const now = new Date();\n          // after 20 seconds, stop waiting and fit the view\n          if (now.getTime() - start.getTime() > 20000) {\n            reject();\n          }\n        }, 100);\n      });\n    };\n\n    tileTreesLoaded().finally(() => {\n      void IModelApp.tools.run(FitViewTool.toolId, viewPort, true, false);\n      viewPort.view.setStandardRotation(StandardViewId.Iso);\n    });\n  }, []);\n\n  const viewCreatorOptions = useMemo(\n    () => ({ viewportConfigurer: viewConfiguration, skyboxOn: true }),\n    [viewConfiguration]\n  );\n\n  /** \n  * List of model elements we will create markers for. \n  * In a typical application, we would get these by querying the iModel or from an external source. \n  */\n  const elements: ElementOfInterest[] = [\n    {id: \"0x12c\", title: \"Front Door\", viewOrientation: StandardViewId.Front},\n    {id: \"0x1fa\", title: \"Small Window\", viewOrientation: StandardViewId.Front},\n    {id: \"0xf15\", title: \"Patio Door\", viewOrientation: StandardViewId.Back},\n    {id: \"0x26c\", title: \"Television\", viewOrientation: StandardViewId.Right},\n  ];\n\n  /** \n  * Our marker image\n  */\n  const markerImagePromise = imageElementFromUrl(\"magnifying-glass.svg\");\n\n  /**\n  * Function we will be called when the iModelConnection is established.\n  * We provide our decorator with the list of elements we wish to create markers for, \n  * then we add our decorator to the viewManager. \n  */\n  const onIModelConnected = async (iModel: IModelConnection) => {\n    const elementOfInterestdecorator = new ElementOfInterestDecorator(\n      elements,\n      await markerImagePromise,\n      iModel\n    );\n    IModelApp.viewManager.addDecorator(elementOfInterestdecorator);\n  }\n\n  return (\n    <div className=\"viewer-container\">\n      {!accessToken && (\n        <FillCentered>\n          <div className=\"signin-content\">\n            <ProgressLinear indeterminate={true} labels={[\"Signing in...\"]} />\n          </div>\n        </FillCentered>\n      )}\n      <Viewer\n        iTwinId={iTwinId}\n        iModelId={iModelId}\n        authClient={authClient}\n        viewCreatorOptions={viewCreatorOptions}\n        enablePerformanceMonitors={true} // see description in the README (https://www.npmjs.com/package/@itwin/desktop-viewer-react)\n        onIModelConnected={onIModelConnected} // The viewer calls this function when the connection is established\n      />\n    </div>\n  );\n};\n\nexport default App;\n",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "23-modifying-apptsx"
  }, "2.3 Modifying App.tsx"), (0,react_.mdx)("p", null, "We have created our marker class and our decorator class. All that remains is to create our decorator instance and supply it to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Viewer"), "'s ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/views/viewmanager/"
  }, "ViewManager"), " in ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "App.tsx"), "."), (0,react_.mdx)("p", null, "Our decorator\u2019s constructor requires an array of ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ElementOfInterest"), " from which to create markers. In this tutorial, we supply these manually."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-typescript",
    "data-language": "typescript",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token keyword\">const</span> elements<span class=\"token operator\">:</span> ElementOfInterest<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>id<span class=\"token operator\">:</span> <span class=\"token string\">\"0x12c\"</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token string\">\"Front Door\"</span><span class=\"token punctuation\">,</span> viewOrientation<span class=\"token operator\">:</span> StandardViewId<span class=\"token punctuation\">.</span>Front<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>id<span class=\"token operator\">:</span> <span class=\"token string\">\"0x1fa\"</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token string\">\"Small Window\"</span><span class=\"token punctuation\">,</span> viewOrientation<span class=\"token operator\">:</span> StandardViewId<span class=\"token punctuation\">.</span>Front<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>id<span class=\"token operator\">:</span> <span class=\"token string\">\"0xf15\"</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token string\">\"Patio Door\"</span><span class=\"token punctuation\">,</span> viewOrientation<span class=\"token operator\">:</span> StandardViewId<span class=\"token punctuation\">.</span>Back<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>id<span class=\"token operator\">:</span> <span class=\"token string\">\"0x26c\"</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token string\">\"Television\"</span><span class=\"token punctuation\">,</span> viewOrientation<span class=\"token operator\">:</span> StandardViewId<span class=\"token punctuation\">.</span>Right<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n"
    }
  })), (0,react_.mdx)("p", null, "In a real application, we would problably receive this information from an external source or through user interaction with our app."), (0,react_.mdx)("p", null, "The constructor also requires an image in the form of and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "HTMLImageElement"), ". To generate it, save an ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types"
  }, "HTML-compatible"), " image file in the app\u2019s ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "public"), " directory."), (0,react_.mdx)("p", null, "You can ", (0,react_.mdx)("a", {
    href: "/unreal-docs-site/static/images/tutorials/adding-decorators-and-markers/magnifying-glass.svg",
    download: true
  }, "download"), " this image,"), (0,react_.mdx)("img", {
    src: "/unreal-docs-site/static/images/tutorials/adding-decorators-and-markers/magnifying-glass.svg",
    alt: "Cartoony magnifying glass icon.",
    style: {
      "display": "block",
      "width": "80%",
      "max-width": "240px",
      "margin-left": "auto",
      "margin-right": "auto",
      "margin-top": "22px",
      "margin-bottom": "22px"
    }
  }), (0,react_.mdx)("p", null, "or you may download a different compatible one from elsewhere on the internet."), (0,react_.mdx)("p", null, "Then, load the image using the utility function ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/rendering/imageelementfromurl/"
  }, "imageElementFromUrl"), ", which is async."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-typescript",
    "data-language": "typescript",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token keyword\">const</span> markerImagePromise <span class=\"token operator\">=</span> <span class=\"token function\">imageElementFromUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"magnifying-glass.svg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"
    }
  })), (0,react_.mdx)("p", null, "Lastly, our decorator\u2019s constructor requires an ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "IModelConnection"), ", which is set up by the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Viewer"), " component. Conveniently, the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Viewer"), " component accepts an optional ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "onIModelConnected"), " property to supply a function to be called when the connection to the iModel is established. The function is called with the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "IModelConnection"), " as input. We define such a function, which we use to instantiate our decorator and supply it to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "viewManager"), "."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-typescript",
    "data-language": "typescript",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onIModelConnected</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>iModel<span class=\"token operator\">:</span> IModelConnection<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> elementOfInterestdecorator <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ElementOfInterestDecorator</span><span class=\"token punctuation\">(</span>\n    elements<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">imageElementFromUrl</span><span class=\"token punctuation\">(</span>markerImageUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    iModel\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  IModelApp<span class=\"token punctuation\">.</span>viewManager<span class=\"token punctuation\">.</span><span class=\"token function\">addDecorator</span><span class=\"token punctuation\">(</span>elementOfInterestdecorator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("p", null, "Notice our function is async because we wait on the image\u2019s promise to be resolved."), (0,react_.mdx)("p", null, "Now, we supply the function to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Viewer"), " component by setting ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "onIModelConnected={onIModelConnected}"), ". Also, make sure to add the necessary import statements."), (0,react_.mdx)("p", null, "Congratulations, your first Viewer Application using view decorations is now complete!", (0,react_.mdx)("br", null), "\nMake sure to try it out by running ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "npm start"), " and then opening ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://localhost:3000"
  }, "https://localhost:3000"), " in your browser."), (0,react_.mdx)(WebMLoop, {
    autoplay: "true",
    src: "/unreal-docs-site/static/images/tutorials/adding-decorators-and-markers/sample-app-black-bg.webm",
    alt: "Screen recording of the Viewer app being used.",
    style: {
      "display": "block",
      "width": "80%",
      "margin-left": "auto",
      "margin-right": "auto"
    },
    mdxType: "WebMLoop"
  }), (0,react_.mdx)("br", null), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Note"), ": If you wish to get rid of the black background in your app, you can turn on the default skybox by adding ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "skyboxOn: true"), " to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "viewCreatorOptions"), "."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-typescript",
    "data-language": "typescript",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token keyword\">const</span> viewCreatorOptions <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> viewportConfigurer<span class=\"token operator\">:</span> viewConfiguration<span class=\"token punctuation\">,</span> skyboxOn<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>viewConfiguration<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"
    }
  }))), (0,react_.mdx)(adding_decorators_and_markers_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(adding_decorators_and_markers_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(ResourceTile, {
    title: "View Decorations",
    href: "https://www.itwinjs.org/learning/frontend/viewdecorations/",
    description: "Detailed explanation of View Decorations and their uses in the iTwin.js Library.",
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(ResourceTile, {
    title: "Markers",
    href: "https://www.itwinjs.org/learning/frontend/markers/",
    description: "Learn more about the iTwin.js Library's Marker component.",
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(ResourceTile, {
    title: "The Display System",
    href: "https://www.itwinjs.org/learning/display/",
    description: "Dive deeper into the iTwin.js Library's display system.",
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(ResourceTile, {
    title: "Simple Marker Sample App",
    href: "https://www.itwinjs.org/sandboxes/RaphaelMelancon/Simple%20Marker%20Sample%20App",
    description: "A community sandbox implementing the iTwin Viewer Application developed in this tutorial.",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
adding_decorators_and_markers_MDXContent.isMDXComponent = true;
var adding_decorators_and_markers_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-view-decorations-decorators-and-markers",
    level: 2,
    title: "1. View Decorations, Decorators and Markers",
    children: [{
      id: "11-view-decorations",
      level: 3,
      title: "1.1 View Decorations",
      children: []
    }, {
      id: "12-decorators",
      level: 3,
      title: "1.2 Decorators",
      children: []
    }, {
      id: "13-markers",
      level: 3,
      title: "1.3 Markers",
      children: []
    }]
  }, {
    id: "2-creating-a-simple-app-to-display-markers-for-elements-of-interest",
    level: 2,
    title: "2. Creating a simple app to display markers for elements of interest",
    children: [{
      id: "21-creating-our-elementofinterestmarker-class",
      level: 3,
      title: "2.1 Creating our ElementOfInterestMarker class",
      children: []
    }, {
      id: "22-creating-our-elementofinterestdecorator-class",
      level: 3,
      title: "2.2 Creating our ElementOfInterestDecorator class",
      children: []
    }, {
      id: "23-modifying-apptsx",
      level: 3,
      title: "2.3 Modifying App.tsx",
      children: []
    }]
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var adding_decorators_and_markers_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/adding-showcase-widgets-to-your-itwin-viewer.mdx


var adding_showcase_widgets_to_your_itwin_viewer_excluded = ["components"];
var adding_showcase_widgets_to_your_itwin_viewer_jsx = (external_react_default()).createElement;


var adding_showcase_widgets_to_your_itwin_viewer_readingTime = {
  "text": "11 min read",
  "minutes": 10.39,
  "time": 623400,
  "words": 2078
};
/* @jsxRuntime classic */
/* @jsx mdx */

var adding_showcase_widgets_to_your_itwin_viewer_metadata = {
  title: 'Adding showcase widgets to your iTwin Viewer',
  tile: {
    name: 'Adding showcase widgets to your iTwin Viewer',
    description: 'This tutorial takes widgets from the sample showcase and adds them into your iTwin Viewer using the `uiProviders` prop.',
    thumbnail: '/images/view_attributes_ported_results.png',
    href: '/tutorials/adding-showcase-widgets-to-your-itwin-viewer/',
    durationInMinutes: 30,
    relatedApiIds: ['visualization'],
    showInFirstSteps: true,
    firstStepsSequenceNumber: 3
  }
};
var adding_showcase_widgets_to_your_itwin_viewer_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var adding_showcase_widgets_to_your_itwin_viewer_Introduction = adding_showcase_widgets_to_your_itwin_viewer_makeShortcode("Introduction");
var adding_showcase_widgets_to_your_itwin_viewer_TutorialSection = adding_showcase_widgets_to_your_itwin_viewer_makeShortcode("TutorialSection");
var adding_showcase_widgets_to_your_itwin_viewer_Title = adding_showcase_widgets_to_your_itwin_viewer_makeShortcode("Title");
var adding_showcase_widgets_to_your_itwin_viewer_CodeBlock = adding_showcase_widgets_to_your_itwin_viewer_makeShortcode("CodeBlock");
var adding_showcase_widgets_to_your_itwin_viewer_ContinueLearningSection = adding_showcase_widgets_to_your_itwin_viewer_makeShortcode("ContinueLearningSection");
var adding_showcase_widgets_to_your_itwin_viewer_TileList = adding_showcase_widgets_to_your_itwin_viewer_makeShortcode("TileList");
var adding_showcase_widgets_to_your_itwin_viewer_Tile = adding_showcase_widgets_to_your_itwin_viewer_makeShortcode("Tile");
var adding_showcase_widgets_to_your_itwin_viewer_ResourceTile = adding_showcase_widgets_to_your_itwin_viewer_makeShortcode("ResourceTile");
var adding_showcase_widgets_to_your_itwin_viewer_layoutProps = {
  metadata: adding_showcase_widgets_to_your_itwin_viewer_metadata
};
var adding_showcase_widgets_to_your_itwin_viewer_MDXLayout = "wrapper";
function adding_showcase_widgets_to_your_itwin_viewer_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, adding_showcase_widgets_to_your_itwin_viewer_excluded);
  return (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_MDXLayout, (0,esm_extends/* default */.Z)({}, adding_showcase_widgets_to_your_itwin_viewer_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "30",
    summaryImageSrc: "/unreal-docs-site/static/images/adding-showcase-widgets-to-your-itwin-viewer-sample.gif",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial takes widgets from the sample showcase and adds them to your iTwin Viewer using the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "uiProviders"), " prop.")), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Explored the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://www.itwinjs.org/sample-showcase"
  }, "Sample Showcase"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Created your own iTwin Web Viewer based on the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/web-application-quick-start"
  }, "Web Application Quick Start"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Configured your iTwin Viewer with the House Model sample iModel.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Instructions to use this sample iModel can be found at the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-test-imodel-sample"
  }, "create iModel sample tutorial"), "."))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Understand the concept of a ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://www.itwinjs.org/reference/appui-react/uiprovider/uiitemsprovider/"
  }, "UiItemsProvider"), " and how to add widgets on a ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://www.itwinjs.org/reference/appui-react/uiprovider/uiitemsprovider/"
  }, "UiItemsProvider"), " to an iTwin Viewer."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Completed the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/itwin-viewer-hello-world"
  }, "\u201CCustomizing the iTwin Viewer\u201D"), " tutorial."))), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-understanding-the-sample-showcase"
  }, "1. Understanding the Sample Showcase"), (0,react_.mdx)("p", null, "We hope you have given the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/sample-showcase"
  }, "Sample Showcase"), " a tour and enjoyed the many samples provided. You may want to use some of these samples in your own iTwin Viewer. To do so you first need to understand how the showcase works."), (0,react_.mdx)("p", null, "If we take a closer look at the files involved in each sample, notice they all follow the same pattern containing a few important files:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "[SampleName]App.tsx"), " - Corresponds to ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "App.tsx"), " in the iTwin Viewer template and provides the main ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Viewer"), " component."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "[SampleName]Widget.tsx"), " - Defines the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "UiItemsProvider"), " that will be passed into prop ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "uiProviders"), " for our sample widget component. This widget is the controller for our samples."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "[SampleName]Api.ts"), " - Defines widget functionality that uses the iTwin.js API being showcased."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "[SampleName].scss"), " - Defines the styles in our css classes used inside the widget.")), (0,react_.mdx)("p", null, "Given this pattern, it\u2019s simple to identify the parts required to bring our sample showcase to your iTwin Viewer. The component revolves around the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "[SampleName]Widget.tsx"), " file so we need to copy all the files associated with our custom widgets ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "UiItemsProvider"), " and pass it in the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Viewer"), " component.")), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-example-using-a-sample"
  }, "2. Example using a sample"), (0,react_.mdx)("p", null, "For this tutorial, we will be taking the widget from sample ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/sample-showcase/?group=Viewer&sample=view-attributes-sample&imodel=House+Sample"
  }, "View Attributes"), " and adding it into our iTwin Viewer.")), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_TutorialSection, {
    hasTitle: false,
    actions: [(0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_Title, {
      mdxType: "Title"
    }, "Lines you need to add in your iTwin Viewer in `App.tsx`"), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_CodeBlock, {
      language: "typescript",
      code: "... // Import the widget provider\nimport { ViewAttributesWidgetProvider } from \"./ViewAttributesWidget\";\n\n... // Pass the imported UiProvider into the uiProvider prop in the <Viewer /> component\n<Viewer\n  ...\n  uiProviders={[new ViewAttributesWidgetProvider()]}\n/>",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "The two lines shown in the code snippet are the only lines you will need to add in your iTwin Viewer in ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "App.tsx"), ".")), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_TutorialSection, {
    hasTitle: false,
    actions: [(0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_Title, {
      mdxType: "Title"
    }, "ViewAttributes.scss"), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_CodeBlock, {
      language: "scss",
      code: ".sample-options {\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    padding: 8px;\n    display: grid;\n    row-gap: 16px;\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr min-content;\n    max-width: 1200px;\n    margin: auto;\n  \n    .sample-grid {\n      display: grid;\n      gap: 16px;\n      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n      grid-auto-rows: min-content;\n      align-content: start;\n    }\n  \n    .sample-control {\n      display: grid;\n      column-gap: 8px;\n      grid-template-columns: 30px 130px auto;\n      align-items: center;\n    }\n  \n    .instructions {\n      align-self: end;\n      justify-self: start;\n    }\n  }",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "  We need to copy these three files to bring our widget over."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "ViewAttributesApi.ts")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "ViewAttributesWidget.tsx")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "ViewAttributes.scss")))), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_TutorialSection, {
    hasTitle: false,
    actions: [(0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_Title, {
      mdxType: "Title"
    }, "ViewAttributesApi.ts"), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_CodeBlock, {
      language: "typescript",
      code: "import { RenderMode, ViewFlagsProperties } from \"@itwin/core-common\";\nimport { Viewport, ViewState3d } from \"@itwin/core-frontend\";\n\nexport type ViewFlag = keyof Pick<ViewFlagsProperties, \"acsTriad\" | \"backgroundMap\" | \"grid\" | \"hiddenEdges\" | \"monochrome\" | \"visibleEdges\" | \"shadows\">;\n\nexport interface AttrValues {\n  renderMode: RenderMode;\n  backgroundTransparency: number;\n  cameraOn: boolean;\n  skybox: boolean;\n  viewFlags: Record<ViewFlag, boolean>;\n}\n\n/** This class implements the interaction between the sample and the iTwin.js API.  No user interface. */\nexport class ViewAttributesApi {\n\n  public static settings: AttrValues = {\n    renderMode: RenderMode.SmoothShade,\n    backgroundTransparency: 0,\n    cameraOn: true,\n    skybox: true,\n    viewFlags: {\n      acsTriad: false,\n      backgroundMap: true,\n      grid: false,\n      hiddenEdges: false,\n      monochrome: false,\n      visibleEdges: false,\n      shadows: false,\n    },\n  };\n\n  public static getAttrValues(vp: Viewport): AttrValues {\n    return {\n      renderMode: vp.viewFlags.renderMode,\n      backgroundTransparency: ViewAttributesApi.getBackgroundTransparency(vp),\n      cameraOn: vp.isCameraOn,\n      skybox: ViewAttributesApi.isSkyboxOn(vp),\n      viewFlags: {\n        acsTriad: vp.viewFlags.acsTriad,\n        backgroundMap: vp.viewFlags.backgroundMap,\n        grid: vp.viewFlags.grid,\n        hiddenEdges: vp.viewFlags.hiddenEdges,\n        monochrome: vp.viewFlags.monochrome,\n        visibleEdges: vp.viewFlags.visibleEdges,\n        shadows: vp.viewFlags.shadows,\n      },\n    };\n  }\n\n  // Modify flag values using the Viewport API.\n  public static setViewFlag(vp: Viewport, flag: ViewFlag, on: boolean) {\n    vp.viewFlags = vp.viewFlags.with(flag, on);\n    vp.synchWithView();\n  }\n\n  // Query map background transparency using the Viewport API\n  public static getBackgroundTransparency(vp: Viewport) {\n    return vp.backgroundMapSettings.transparency === false ? 1 : vp.backgroundMapSettings.transparency;\n  }\n\n  // Modify map background transparency using the Viewport API\n  public static setBackgroundTransparency(vp: Viewport, transparency: number) {\n    const style = vp.backgroundMapSettings.clone({ transparency });\n    vp.displayStyle.backgroundMapSettings = style;\n    vp.synchWithView();\n  }\n\n  // Modify camera setting using the Viewport API.\n  public static setCameraOnOff(vp: Viewport, on: boolean) {\n    if (on)\n      vp.turnCameraOn();\n    else\n      (vp.view as ViewState3d).turnCameraOff();\n\n    vp.synchWithView();\n  }\n\n  // Query skybox setting using the Viewport API.\n  public static isSkyboxOn(vp: Viewport) {\n    if (vp.view.is3d()) {\n      const displayStyle = vp.view.getDisplayStyle3d();\n      return displayStyle.environment.displaySky;\n    }\n\n    return false;\n  }\n\n  // Modify skybox setting using the Viewport API.\n  public static setSkyboxOnOff(vp: Viewport, on: boolean) {\n    if (vp.view.is3d()) {\n      const style = vp.view.getDisplayStyle3d();\n      style.environment = style.environment.withDisplay({ sky: on });\n    }\n  }\n\n  // Query render model setting using the Viewport API.\n  public static getRenderModel(vp: Viewport): RenderMode {\n    return vp.viewFlags.renderMode;\n  }\n\n  // Modify render mode setting using the Viewport API.\n  public static setRenderMode(vp: Viewport, mode: RenderMode) {\n    const viewFlags = vp.viewFlags.override({ renderMode: mode });\n    vp.viewFlags = viewFlags;\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_TutorialSection, {
    hasTitle: false,
    actions: [(0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_Title, {
      mdxType: "Title"
    }, "ViewAttributesWidget.tsx"), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_CodeBlock, {
      language: "jsx",
      code: "import React from \"react\";\nimport { StagePanelLocation, StagePanelSection, UiItemsProvider, Widget, WidgetState  } from \"@itwin/appui-react\";\nimport { RenderMode } from \"@itwin/core-common\";\nimport { IModelApp } from \"@itwin/core-frontend\";\nimport { SvgHelpCircularHollow } from \"@itwin/itwinui-icons-react\";\nimport { Alert, IconButton, Select, Slider, Text, ToggleSwitch, Tooltip } from \"@itwin/itwinui-react\";\nimport { AttrValues, ViewAttributesApi, ViewFlag } from \"./ViewAttributesApi\";\nimport \"./ViewAttributes.scss\";\n\nexport const ViewAttributesWidget = () => {\n  const [attrValuesState, setAttrValuesState] = React.useState<AttrValues>(() => ViewAttributesApi.settings);\n\n  const onChangeRenderMode = (renderMode: RenderMode) => {\n    const vp = IModelApp.viewManager.selectedView;\n    if (vp) {\n      ViewAttributesApi.setRenderMode(vp, renderMode);\n      setAttrValuesState({ ...attrValuesState, renderMode });\n    }\n  };\n\n  // Handle changes to the skybox toggle.\n  const onChangeSkyboxToggle = (checked: boolean) => {\n    const vp = IModelApp.viewManager.selectedView;\n    if (vp) {\n      ViewAttributesApi.setSkyboxOnOff(vp, checked);\n    }\n  };\n\n  // Handle changes to the camera toggle.\n  const onChangeCameraToggle = (checked: boolean) => {\n    const vp = IModelApp.viewManager.selectedView;\n    if (vp) {\n      ViewAttributesApi.setCameraOnOff(vp, checked);\n    }\n  };\n\n  // Handle changes to a view flag toggle.\n  const onChangeViewFlagToggle = (flag: ViewFlag, checked: boolean) => {\n    const vp = IModelApp.viewManager.selectedView;\n    if (vp) {\n      ViewAttributesApi.setViewFlag(vp, flag, checked);\n      attrValuesState.viewFlags = { ...attrValuesState.viewFlags, [flag]: checked };\n      setAttrValuesState({ ...attrValuesState });\n    }\n  };\n\n  // Handle changes to a view flag toggle.\n  const onMapTransparencyChange = (num: number) => {\n    const vp = IModelApp.viewManager.selectedView;\n    if (vp) {\n      ViewAttributesApi.setBackgroundTransparency(vp, num);\n      setAttrValuesState({ ...attrValuesState, backgroundTransparency: num });\n    }\n  };\n\n  const Help = ({ text }: { text: string }) => (\n    <Tooltip content={text}>\n      <IconButton styleType=\"borderless\" size=\"small\"><SvgHelpCircularHollow /></IconButton>\n    </Tooltip>\n  );\n\n  return (\n    <div className=\"sample-options\">\n      <div className=\"sample-grid\">\n        <div className=\"sample-control\">\n          <Help text=\"Controls the render mode.\"></Help>\n          <Text>Render Mode</Text>\n          <Select\n            size=\"small\"\n            value={attrValuesState.renderMode}\n            options={renderModelOptions}\n            onChange={onChangeRenderMode} />\n        </div>\n        <div className=\"sample-control\">\n          <Help text=\"Click to see the iModel on a map. Click again to disable map. Does not apply if the selected iModel is not geolocated.\"></Help>\n          <Text>Background Map</Text>\n          <ToggleSwitch checked={attrValuesState.viewFlags.backgroundMap} onChange={() => onChangeViewFlagToggle(\"backgroundMap\", !attrValuesState.viewFlags.backgroundMap)} />\n        </div>\n        <div className=\"sample-control\">\n          <Help text=\"Adjusting the slider changes the transparency of the background map. Does not apply if map is not currently being displayed.\"></Help>\n          <Text>Map Transparency</Text>\n          <Slider min={0} max={1} step={0.01} values={[attrValuesState.backgroundTransparency]} onChange={(values) => onMapTransparencyChange(values[0])} disabled={!attrValuesState.viewFlags.backgroundMap}></Slider>\n        </div>\n        <div className=\"sample-control\">\n          <Help text=\"Click to see a visualization of the active coordinate system.\"></Help>\n          <Text>ACS</Text>\n          <ToggleSwitch checked={attrValuesState.viewFlags.acsTriad} onChange={() => onChangeViewFlagToggle(\"acsTriad\", !attrValuesState.viewFlags.acsTriad)} />\n        </div>\n        <div className=\"sample-control\">\n          <Help text=\"Click for perspective view. Click again for orthographic view.\"></Help>\n          <Text>Camera</Text>\n          <ToggleSwitch checked={attrValuesState.cameraOn} onChange={() => onChangeCameraToggle(!attrValuesState.cameraOn)} />\n        </div>\n        <div className=\"sample-control\">\n          <Help text=\"Toggle grid view.\"></Help>\n          <Text>Grid</Text>\n          <ToggleSwitch checked={attrValuesState.viewFlags.grid} onChange={() => onChangeViewFlagToggle(\"grid\", !attrValuesState.viewFlags.grid)} />\n        </div>\n        <div className=\"sample-control\">\n          <Help text=\"Click to disable colors.\"></Help>\n          <Text>Monochrome</Text>\n          <ToggleSwitch checked={attrValuesState.viewFlags.monochrome} onChange={() => onChangeViewFlagToggle(\"monochrome\", !attrValuesState.viewFlags.monochrome)} />\n        </div>\n        <div className=\"sample-control\">\n          <Help text=\"Click to see shadows.\"></Help>\n          <Text>Shadows</Text>\n          <ToggleSwitch checked={attrValuesState.viewFlags.shadows} onChange={() => onChangeViewFlagToggle(\"shadows\", !attrValuesState.viewFlags.shadows)} />\n        </div>\n        <div className=\"sample-control\">\n          <Help text=\"Click to see the sky box.\"></Help>\n          <Text>Sky box</Text>\n          <ToggleSwitch checked={attrValuesState.skybox} onChange={() => onChangeSkyboxToggle(!attrValuesState.skybox)} />\n        </div>\n        <div className=\"sample-control\">\n          <Help text=\"Click to disable visible edges. Only applies to smooth shade render mode.\"></Help>\n          <Text>Visible Edges</Text>\n          <ToggleSwitch checked={attrValuesState.viewFlags.visibleEdges} onChange={() => onChangeViewFlagToggle(\"visibleEdges\", !attrValuesState.viewFlags.visibleEdges)} />\n        </div>\n        <div className=\"sample-control\">\n          <Help text=\"Click to see hidden edges.  Does not apply to wireframe. For smooth shade render mode, does not apply when visible edges are off.\"></Help>\n          <Text>Hidden Edges</Text>\n          <ToggleSwitch\n            checked={attrValuesState.viewFlags.hiddenEdges}\n            onChange={() => onChangeViewFlagToggle(\"hiddenEdges\", !attrValuesState.viewFlags.hiddenEdges)}\n            disabled={attrValuesState.renderMode === RenderMode.Wireframe || (attrValuesState.renderMode === RenderMode.SmoothShade && !attrValuesState.viewFlags.visibleEdges)} />\n        </div>\n      </div>\n      <Alert type=\"informational\" className=\"instructions\">\n        Use the controls to change the view attributes.\n      </Alert>\n    </div>\n  );\n};\n\nconst renderModelOptions = [\n  { value: RenderMode.HiddenLine, label: \"Hidden Line\" },\n  { value: RenderMode.SmoothShade, label: \"Smooth Shade\" },\n  { value: RenderMode.SolidFill, label: \"Solid Fill\" },\n  { value: RenderMode.Wireframe, label: \"Wireframe\" },\n];\n\nexport class ViewAttributesWidgetProvider implements UiItemsProvider {\n  public readonly id: string = \"ViewAttributesWidgetProvider\";\n\n  public provideWidgets(_stageId: string, _stageUsage: string, location: StagePanelLocation, _section?: StagePanelSection): ReadonlyArray<Widget> {\n    const widgets: Widget[] = [];\n    if (location === StagePanelLocation.Right) {\n      widgets.push(\n        {\n          id: \"ViewAttributesWidget\",\n          label: \"View Attributes Controls\",\n          defaultState: WidgetState.Open,\n          content: <ViewAttributesWidget />,\n        }\n      );\n    }\n    return widgets;\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_TutorialSection, {
    hasTitle: false,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "For this tutorial, these files will be placed directly in our src directory so your file structure should look similar to this:"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/sample_viewer_port_to_itwin_viewer.png",
    "alt": "ViewAttributesStructure"
  })), (0,react_.mdx)("p", null, "Running our iTwin Viewer, notice the same fully functional widget from the sample showcase in your iTwin Viewer."), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/view_attributes_ported_results.png",
    "alt": "ViewAttributesResults"
  })), (0,react_.mdx)("p", null, "Feel free to customize these widgets to your liking.")), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-multiple-ways-to-extend-uiproviders"
  }, "3. Multiple ways to extend uiProviders"), (0,react_.mdx)("p", null, "If you already have a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "uiProviders"), " prop passed in or would like to add more widgets from the sample showcase, the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "uiProviders"), " prop takes in an array of providers. Extending the widget is as simple as appending to your array.")), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_TutorialSection, {
    hasTitle: false,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "You can add to the uiProviders const variable, i.e.:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-jsx",
    "data-language": "jsx",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token keyword\">const</span> uiProviders <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ViewAttributesWidgetProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HyerModelingWidgetProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">]</span>\n"
    }
  })), (0,react_.mdx)("p", null, "or ignore the variable completely and pass the array in directly:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-jsx",
    "data-language": "jsx",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Viewer</span></span>\n  <span class=\"token attr-name\">iTwinId</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>iTwinId<span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">iModelId</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>iModelId<span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">authClient</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>authClient<span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">viewCreatorOptions</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>viewCreatorOptions<span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">enablePerformanceMonitors</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span> <span class=\"token comment\">// see description in the README (https://www.npmjs.com/package/@itwin/web-viewer-react)</span>\n  <span class=\"token attr-name\">onIModelAppInit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onIModelAppInit<span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">uiProviders</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ViewAttributesWidgetProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HyperModelingWidgetProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">/></span></span>\n"
    }
  }))), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_TutorialSection, {
    hasTitle: false,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "Just remember to copy corresponding files to your source.")), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_TutorialSection, {
    hasTitle: false,
    actions: [(0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_Title, {
      mdxType: "Title"
    }, "Using an existing UiItemsProvider instead of passing in multiple new ones"), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_CodeBlock, {
      language: "jsx",
      code: "export class MyCustomUiProvider extends UiItemsProvider {\n  ... // Your custom code\n  public provideWidgets(\n    _stageId: string,\n    _stageUsage: string,\n    location: StagePanelLocation,\n    _section?: StagePanelSection\n    ): ReadonlyArray<Widget> {\n      const widgets: Widget[] = [];\n\n      if (location === StagePanelLocation.Right) {\n        widgets.push({\n          id: 'ViewAttributesWidget',\n          label: 'View Attributes Controls',\n          defaultState: WidgetState.Floating,\n          content: <ViewAttributesWidget />, // Don't forget to copy code for the ViewAttributesWidget\n        });\n      }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "If you would like to use an existing UiItemsProvider instead of passing in multiple new ones, just add the widget in your ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "provideWigets()"), " function along with copying and pasting the react component to your desired location.")), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_TutorialSection, {
    hasTitle: false,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "As you can see, extending your iTwin Viewer with multiple widgets is simple.\nIt\u2019s completely up to you on how you want to structure your directories and components. Feel free to extend as many widgets as you like.")), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_Tile, {
    name: "Start building a Viewer App",
    thumbnail: "/unreal-docs-site/static/images/retail-tutorial-sample-small.png",
    description: "This quick start is intended to help you get started with using iTwin Platform visualization components. By the end of this walk-through, you will be able to build and run a web application for viewing an infrastructure digital twin (iTwin).",
    href: "/tutorials/web-application-quick-start/",
    mdxType: "Tile"
  }), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_Tile, {
    name: "Customizing the iTwin Viewer - \"The Basics\"",
    thumbnail: "/unreal-docs-site/static/images/itwin-viewer-hello-world-sample-small.png",
    description: "This tutorial will take you through the first steps of customizing your iTwin Web Viewer. First you will learn how to add a new user interface component. Later you will customize that component to change the background color of your viewer.",
    href: "/tutorials/itwin-viewer-hello-world",
    mdxType: "Tile"
  }), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_Tile, {
    name: "Adding view decorations to your iTwin Viewer",
    thumbnail: "/unreal-docs-site/static/images/adding-decorators-and-markers.png",
    description: "This tutorial guides you through customizing your iTwin Viewer application by displaying application-specific graphics, called View Decorations.",
    href: "/tutorials/adding-decorators-and-markers/",
    mdxType: "Tile"
  })), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_ResourceTile, {
    title: "Create a test iModel from a Bentley provided sample",
    href: "/tutorials/create-test-imodel-sample",
    description: "The quickest way to get access to a cloud hosted iModel is by creating an iModel seeded with Bentley provided sample data.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_ResourceTile, {
    title: "Sample House Model",
    href: "/tutorials/create-test-imodel-sample/#house-sample",
    description: "Bentley provided sample of a House for test iModel creation.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_ResourceTile, {
    title: "UI Provider",
    href: "https://www.itwinjs.org/reference/ui-abstract/uiitemsprovider/uiitemsprovider/",
    description: "Describes interface of objects that want to provide UI component to the running IModelApp.",
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_ResourceTile, {
    title: "View Attributes Sample",
    href: "https://www.itwinjs.org/sample-showcase/?group=Viewer&sample=view-attributes-sample&imodel=House+Sample",
    description: "This sample demonstrates the API used to control view attributes.",
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(adding_showcase_widgets_to_your_itwin_viewer_ResourceTile, {
    title: "Visit the iTwin Sample Showcase",
    href: "https://www.itwinjs.org/sample-showcase/",
    description: "The iTwin Sample Showcase provides many samples demonstrating options for customizing the iTwin viewer.",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
adding_showcase_widgets_to_your_itwin_viewer_MDXContent.isMDXComponent = true;
var adding_showcase_widgets_to_your_itwin_viewer_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-understanding-the-sample-showcase",
    level: 2,
    title: "1. Understanding the Sample Showcase",
    children: []
  }, {
    id: "2-example-using-a-sample",
    level: 2,
    title: "2. Example using a sample",
    children: []
  }, {
    id: "3-multiple-ways-to-extend-uiproviders",
    level: 2,
    title: "3. Multiple ways to extend uiProviders",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var adding_showcase_widgets_to_your_itwin_viewer_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/authorize-native.mdx


var authorize_native_excluded = ["components"];
var authorize_native_jsx = (external_react_default()).createElement;


var authorize_native_readingTime = {
  "text": "10 min read",
  "minutes": 9.015,
  "time": 540900,
  "words": 1803
};
/* @jsxRuntime classic */
/* @jsx mdx */

var authorize_native_metadata = {
  title: 'Authorize Native Application',
  tile: {
    name: 'Authorize Native Application',
    description: 'This tutorial will show you how to register a Native Application, get an access token with it, and use it.',
    href: '/tutorials/authorize-native/',
    durationInMinutes: 10,
    relatedApiIds: []
  }
};
var authorize_native_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var authorize_native_Introduction = authorize_native_makeShortcode("Introduction");
var authorize_native_TutorialSection = authorize_native_makeShortcode("TutorialSection");
var SignInButton = authorize_native_makeShortcode("SignInButton");
var CreateNativeAppButton = authorize_native_makeShortcode("CreateNativeAppButton");
var authorize_native_CodeBlock = authorize_native_makeShortcode("CodeBlock");
var authorize_native_Title = authorize_native_makeShortcode("Title");
var GeneratePkceButton = authorize_native_makeShortcode("GeneratePkceButton");
var LinkWithUrl = authorize_native_makeShortcode("LinkWithUrl");
var HttpSample = authorize_native_makeShortcode("HttpSample");
var authorize_native_Alert = authorize_native_makeShortcode("Alert");
var authorize_native_ContinueLearningSection = authorize_native_makeShortcode("ContinueLearningSection");
var authorize_native_layoutProps = {
  metadata: authorize_native_metadata
};
var authorize_native_MDXLayout = "wrapper";
function authorize_native_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, authorize_native_excluded);
  return (0,react_.mdx)(authorize_native_MDXLayout, (0,esm_extends/* default */.Z)({}, authorize_native_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(authorize_native_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "10",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "In this tutorial you will create a ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Native Application"), ", learn how ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "authorization code flow"), " works with\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://auth0.com/docs/authorization/flows/authorization-code-flow-with-proof-key-for-code-exchange-pkce"
  }, (0,react_.mdx)("strong", {
    parentName: "a"
  }, "Proof Key for Code Exchange (PKCE)")), ",\nand how to get an ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "access token"), " with it. In the end we will double check if the token is truly valid by making a request to one of the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iTwin Platform API endpoints"), ".")), (0,react_.mdx)(authorize_native_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-a-native-application"
  }, "1. Register a Native Application"), (0,react_.mdx)("h4", {
    "id": "what-is-a-native-application"
  }, "What is a Native Application?"), (0,react_.mdx)("p", null, "A ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Native Application"), " is an application which runs on a native operating system such as Android, Windows, or iOS.")), (0,react_.mdx)(authorize_native_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(SignInButton, {
      mdxType: "SignInButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "sign-in"
  }, "Sign in"), (0,react_.mdx)("p", null, "To be able to register an application you need to be signed in.\nIf you are not already you can do that by clicking the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Sign In"), " button in the action pane or in the top right corner of the page.")), (0,react_.mdx)(authorize_native_TutorialSection, {
    subSection: true,
    actions: function actions(data) {
      return [(0,react_.mdx)(CreateNativeAppButton, {
        tooltip: "Register a basic Native Application for this tutorial",
        allowedScopes: ['users:read'],
        clientName: "Authorize Native",
        mdxType: "CreateNativeAppButton"
      }, "Register Application"), (0,react_.mdx)(authorize_native_CodeBlock, {
        language: "json",
        code: !data.clientId || !data.redirectUris || !data.scope ? undefined : JSON.stringify({
          client_id: data.clientId,
          redirect_uri: data.redirectUris && data.redirectUris[0],
          scope: data.scope
        }, undefined, 2),
        mdxType: "CodeBlock"
      })];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "register-a-native-application"
  }, "Register a Native Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs.\nYou can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register Application"), " button to automatically create your first Native Application.\nThis will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your Native Application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "client_id"), " - This is the unique identifier for your application. It is displayed on the application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "redirectUris"), " - Specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on the application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "scope"), " - List of accesses granted to the application. Displayed on the application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "For future use:"), " Register and configure your application manually following the instructions in the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial."))), (0,react_.mdx)(authorize_native_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-an-access-token"
  }, "2. Get an Access Token"), (0,react_.mdx)("h4", {
    "id": "what-is-an-access-token"
  }, "What is an access token?"), (0,react_.mdx)("p", null, "An ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Access Token"), " is a token which contains a string that can be used to make authenticated requests to an API to access protected resources (in this case iTwin Platform APIs).The string has no meaning to the application using it, but represents that the user has authorized the application to access their account.\nThe token is bounded by an appropriate lifetime, scopes, and other information that the server may require."), (0,react_.mdx)("h4", {
    "id": "21-authorization-code-flow-with-proof-key-for-code-exchange-pkce"
  }, "2.1. Authorization Code Flow with Proof Key for Code Exchange (PKCE)"), (0,react_.mdx)("p", null, "This flow provides a way to authorize with an Authorization Server by redirecting to the authorization server,\ngetting a ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "code"), " back, and exchanging it for an ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "access token"), " in a subsequent call."), (0,react_.mdx)("p", null, "You can find more information ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorization-code-flow-with-proof-key-for-code-exchange-pkce"
  }, "here"), ", but it is more technical."), (0,react_.mdx)("p", null, "Steps to get an access token using this flow:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Generate ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code_verifier"), " and ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code_challenge"), ","), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Navigate to the authorization server,"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "The authorization server will redirect back to your application (one of the redirect URIs) with ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code"), " query parameter,"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "The application exchanges ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code"), " for an ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "access_token"), " via the Token endpoint."))), (0,react_.mdx)(authorize_native_TutorialSection, {
    subSection: true,
    actions: function actions(data) {
      return [(0,react_.mdx)(authorize_native_Title, {
        mdxType: "Title"
      }, "Generate Code Verifier and Code Challenge"), (0,react_.mdx)(GeneratePkceButton, {
        mdxType: "GeneratePkceButton"
      }), (0,react_.mdx)(authorize_native_CodeBlock, {
        language: "json",
        code: data.pkce ? JSON.stringify(data.pkce, undefined, 2) : undefined,
        mdxType: "CodeBlock"
      })];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "211-code-verifier-and-code-challenge"
  }, "2.1.1. Code Verifier and Code Challenge"), (0,react_.mdx)("p", null, "PKCE (", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://datatracker.ietf.org/doc/html/rfc7636#section-4.1"
  }, "RFC 7636"), ") is an extension to the Authorization Code flow to prevent CSRF and authorization code injection attacks."), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "code_verifier"), " is a random string between 43 and 128 characters. It provides proof that you initiated the redirect to the authorization endpoint."), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "code_challenge"), " is a string that is generated from ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "code_verifier"), " and it is passed to the authorization endpoint as a query parameter.\nPseudo code to generate code challenge:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-jsx",
    "data-language": "jsx",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token function\">base64urlEncode</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SHA256</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ASCII</span><span class=\"token punctuation\">(</span>code_verifier<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"
    }
  })), (0,react_.mdx)("p", null, "Read more about: ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://en.wikipedia.org/wiki/ASCII"
  }, "ASCII"), ", ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://en.bitcoinwiki.org/wiki/SHA-256"
  }, "SHA256"), ", ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://wiki.tcl-lang.org/page/base64url"
  }, "base64urlEncode")), (0,react_.mdx)("p", null, "You can generate them by clicking ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Generate Code Verifier and Code Challenge"), ". This is required for the following steps.")), (0,react_.mdx)(authorize_native_TutorialSection, {
    subSection: true,
    actions: function actions(data) {
      var _data$clientId, _data$pkce$code_chall, _data$pkce;
      return [(0,react_.mdx)(authorize_native_Title, {
        mdxType: "Title"
      }, "Navigate to the Authorization Server"), (0,react_.mdx)(LinkWithUrl, {
        url: data.authority + '/connect/authorize' + '?' + new URLSearchParams({
          client_id: (_data$clientId = data.clientId) !== null && _data$clientId !== void 0 ? _data$clientId : 'CLIENT_ID',
          redirect_uri: data.redirectUris && data.redirectUris[0] || 'http://localhost:3000',
          scope: data.scopes ? data.scopes + ' offline_access' : 'users:read offline_access',
          response_type: 'code',
          code_challenge: (_data$pkce$code_chall = (_data$pkce = data.pkce) === null || _data$pkce === void 0 ? void 0 : _data$pkce.code_challenge) !== null && _data$pkce$code_chall !== void 0 ? _data$pkce$code_chall : 'CODE_CHALLENGE',
          code_challenge_method: 'S256'
        }).toString(),
        disabled: !data.clientId && !data.pkce,
        mdxType: "LinkWithUrl"
      })];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "212-navigate-to-the-authorization-server"
  }, "2.1.2. Navigate to the Authorization Server"), (0,react_.mdx)("p", null, "The application should open a browser to allow the user to interact with the authorization server.\nThis allows the user to authorize agents authorization server and give consent to allow access to part of his data through your application.\nIf you follow the interactive part you can click the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Navigate"), " button and it will open a popup window that will hit the authorization endpoint with the required query parameters."), (0,react_.mdx)("p", null, "The URL will be built in this way:"), (0,react_.mdx)("p", null, "Authorization endpoint: ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://ims.bentley.com/connect/authorize")), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Native applications"), " can ask for ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "offline_access"), " scope. This will indicate that you want to receive a ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "refresh_token"), " which can be used to generate new ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "access tokens"), " ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "without"), " user interaction."), (0,react_.mdx)("p", null, "With query parameters:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "client_id"), " - This is the unique identifier for your application. Displayed on the application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), " (e.g. ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "native-example"), ")."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "redirect_uri"), " - Specifies where you want to go back after successful authorization (e.g. ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "http://localhost:3000/redirect"), ")."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "scope"), " - List of accesses granted to the application. Displayed on the application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), " (e.g. ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "users:read"), ")."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "response_type"), " - For this flow ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code"), " is the only option and it indicates that you will get code as a query parameter when the user will come back from the authorization server."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code_challenge"), " - Code challenge that was generated from code ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code_verifier")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code_challenge_method"), " - Code challenge method type which should be ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "S256"))), (0,react_.mdx)("p", null, "So in the end it should look something like this: ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://ims.bentley.com/connect/authorize?client_id=CLIENT_ID&redirect_uri=http%3A%2F%2Flocalhost%3A3000&scope=users%3Aread+offline_access&response_type=code&code_challenge=CODE_CHALLENGE&code_challenge_method=S256"))), (0,react_.mdx)(authorize_native_TutorialSection, {
    subSection: true,
    actions: function actions(data) {
      return [(0,react_.mdx)(authorize_native_Title, {
        mdxType: "Title"
      }, data.code ? 'Code query parameter value' : ''), (0,react_.mdx)(authorize_native_CodeBlock, {
        language: "text",
        code: typeof data.code === 'string' ? data.code : JSON.stringify(data.code, undefined, 2),
        mdxType: "CodeBlock"
      })];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "213-receive-the-code"
  }, "2.1.3. Receive the code"), (0,react_.mdx)("p", null, "The code will be placed inside the redirect URL query parameter (e.g. ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "http://localhost:3000/redirect"), (0,react_.mdx)("strong", {
    parentName: "p"
  }, "?code=random-string"), ").\nThe application should take care of ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "code"), " query parameter extraction. If you follow the interactive steps the code should appear in the action pane.")), (0,react_.mdx)(authorize_native_TutorialSection, {
    subSection: true,
    actions: function actions(data) {
      var _data$clientId2, _data$pkce$code_verif, _data$pkce2, _data$code;
      return [(0,react_.mdx)(authorize_native_Title, {
        mdxType: "Title"
      }, "Request to Token endpoint"), (0,react_.mdx)(HttpSample, {
        method: "POST",
        url: "".concat(data.authority, "/connect/token"),
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: new URLSearchParams({
          client_id: (_data$clientId2 = data.clientId) !== null && _data$clientId2 !== void 0 ? _data$clientId2 : 'CLIENT_ID',
          code_verifier: (_data$pkce$code_verif = (_data$pkce2 = data.pkce) === null || _data$pkce2 === void 0 ? void 0 : _data$pkce2.code_verifier) !== null && _data$pkce$code_verif !== void 0 ? _data$pkce$code_verif : 'CODE_VERIFIER',
          grant_type: 'authorization_code',
          code: (_data$code = data.code) !== null && _data$code !== void 0 ? _data$code : 'CODE',
          redirect_uri: data.redirectUris && data.redirectUris[0] || 'http://localhost:3000'
        }).toString(),
        saveResponseTo: "tokenResponse",
        canSendRequest: data.code && !data.tokenResponse,
        disabledTooltip: data.tokenResponse ? "The code can be used only once. Navigate to the authorization server one more time." : undefined,
        mdxType: "HttpSample"
      })];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "214-receive-an-access-token"
  }, "2.1.4. Receive an access token"), (0,react_.mdx)("p", null, "You need to call the token endpoint with the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Content-Type"), " header equal to ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "application/x-www-form-urlencoded"), "."), (0,react_.mdx)("p", null, "Request body (with ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.w3schools.com/tags/ref_urlencode.ASP"
  }, "URL encoded"), " characters):"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "client_id"), ": Identification that is generated when the application is created. You can find it in the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/my-apps"
  }, "My Apps"), " page. If you generated it during this tutorial you can find it in the first step."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "grant_type"), ": ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "authorization_code"), " indicates that the application will use a ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code"), " to get an ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "access_token"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code_verifier"), ": It is for verification purposes that the same application that redirected to the authorization server is calling this endpoint."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code"), ": Code that the application got after the redirect from the authorization server back to the application itself."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "redirect_uri"), ": redirect URI there was code send.")), (0,react_.mdx)(authorize_native_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, (0,react_.mdx)("b", null, "Code is short lived"), ": If your code has expired please Navigate to the authorization server one more time.")), (0,react_.mdx)(authorize_native_TutorialSection, {
    subSection: true,
    actions: function actions(data) {
      return [(0,react_.mdx)(authorize_native_Title, {
        mdxType: "Title"
      }, "Response from the Token endpoint"), (0,react_.mdx)(authorize_native_CodeBlock, {
        language: "json",
        code: JSON.stringify(data.tokenResponse || {
          "access_token": "JWT_TOKEN",
          "refresh_token": "REFRESH_TOKEN",
          "token_type": "Bearer",
          "expires_in": 3599
        }, undefined, 2),
        mdxType: "CodeBlock"
      })];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response-from-the-token-endpoint"
  }, "Response from the Token endpoint"), (0,react_.mdx)("p", null, "Response contains:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "token_type"), ": ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Bearer"), ". This is part of the Authorization header that is constructed like ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorize: token_type access_token"), ". You can read more ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://www.oauth.com/oauth2-servers/differences-between-oauth-1-2/bearer-tokens/"
  }, "here"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "access_token"), ": Access token itself (in ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://jwt.io"
  }, "JWT"), " format) that will be passed in the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Authorize"), " header for API calls as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Bearer JWT_TOKEN"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "refresh_token"), ": Token that allows getting a new ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "access token"), " without user interaction."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "expires_in"), ": Lifespan of the access token in seconds."))), (0,react_.mdx)(authorize_native_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-get-an-access-token-using-a-refresh-token"
  }, "3. Get an Access Token using a Refresh Token")), (0,react_.mdx)(authorize_native_TutorialSection, {
    subSection: true,
    actions: function actions(data) {
      var _data$clientId3, _data$tokenResponse$r, _data$tokenResponse;
      return [(0,react_.mdx)(authorize_native_Title, {
        mdxType: "Title"
      }, "Refresh Token"), (0,react_.mdx)(HttpSample, {
        method: "POST",
        url: "".concat(data.authority, "/connect/token"),
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: new URLSearchParams({
          client_id: (_data$clientId3 = data.clientId) !== null && _data$clientId3 !== void 0 ? _data$clientId3 : 'CLIENT_ID',
          grant_type: 'refresh_token',
          refresh_token: (_data$tokenResponse$r = (_data$tokenResponse = data.tokenResponse) === null || _data$tokenResponse === void 0 ? void 0 : _data$tokenResponse.refresh_token) !== null && _data$tokenResponse$r !== void 0 ? _data$tokenResponse$r : "REFRESH_TOKEN"
        }).toString(),
        saveResponseTo: "refreshedAccessToken",
        canSendRequest: data.tokenResponse && !data.refreshedAccessToken,
        disabledTooltip: data.refreshedAccessToken ? "The refresh_token from previous step can be used only once." : undefined,
        mdxType: "HttpSample"
      })];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "31-request-to-the-token-endpoint-with-a-refresh-token"
  }, "3.1. Request to the Token endpoint with a Refresh token"), (0,react_.mdx)("p", null, "You need to call the token endpoint with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Content-Type"), " header equal to ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "application/x-www-form-urlencoded"), "."), (0,react_.mdx)("p", null, "Request body (with ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.w3schools.com/tags/ref_urlencode.ASP"
  }, "URL encoded"), " characters):"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "client_id"), ": Identification that is generated when the application is created. You can find it in the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/my-apps"
  }, "My Apps"), " page. If you generated it during this tutorial you can find it in the first step."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "grant_type"), ": ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "refresh_token"), " indicates that the application will use ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "refresh_token"), " to get ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "access_token"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "refresh_token"), ": refresh_token token itself that you got from the last request to the Token endpoint."))), (0,react_.mdx)(authorize_native_TutorialSection, {
    subSection: true,
    actions: function actions(data) {
      var _data$refreshedAccess;
      return [(0,react_.mdx)(authorize_native_Title, {
        mdxType: "Title"
      }, "Response from the Token endpoint"), (0,react_.mdx)(authorize_native_CodeBlock, {
        language: "json",
        code: JSON.stringify((_data$refreshedAccess = data.refreshedAccessToken) !== null && _data$refreshedAccess !== void 0 ? _data$refreshedAccess : {
          "access_token": "JWT_TOKEN",
          "refresh_token": "REFRESH_TOKEN",
          "token_type": "Bearer",
          "expires_in": 3599
        }, undefined, 4),
        mdxType: "CodeBlock"
      })];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "32-response-from-the-token-endpoint"
  }, "3.2. Response from the Token endpoint"), (0,react_.mdx)("p", null, "Response contains:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "token_type"), ": ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Bearer"), ". This is part of the Authorization header that is constructed like ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorize: token_type access_token"), ". You can read more ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://www.oauth.com/oauth2-servers/differences-between-oauth-1-2/bearer-tokens/"
  }, "here"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "access_token"), ": Access token itself (in ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://jwt.io"
  }, "JWT"), " format) that will be passed in the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Authorize"), " header for API calls as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Bearer JWT_TOKEN"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "refresh_token"), ": Token that allows you to get a new ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "access token"), " without user interaction."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "expires_in"), ": Lifespan of the access token in seconds."))), (0,react_.mdx)(authorize_native_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-make-the-request"
  }, "4. Make the request")), (0,react_.mdx)(authorize_native_TutorialSection, {
    subSection: true,
    actions: function actions(data) {
      var _data$tokenResponse$a, _data$tokenResponse2;
      return [(0,react_.mdx)(authorize_native_Title, {
        mdxType: "Title"
      }, "Request to /users/me endpoint"), (0,react_.mdx)(HttpSample, {
        method: "GET",
        url: "".concat(data.baseUrl, "/users/me"),
        headers: {
          'Authorization': 'Bearer ' + ((_data$tokenResponse$a = (_data$tokenResponse2 = data.tokenResponse) === null || _data$tokenResponse2 === void 0 ? void 0 : _data$tokenResponse2.access_token) !== null && _data$tokenResponse$a !== void 0 ? _data$tokenResponse$a : 'JWT_TOKEN'),
          'Accept': 'application/vnd.bentley.itwin-platform.v1+json'
        },
        body: undefined,
        saveResponseTo: "me",
        canSendRequest: data.tokenResponse,
        mdxType: "HttpSample"
      })];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "41-make-the-request-to-the-usersme-endpoint"
  }, "4.1. Make the request to the /users/me endpoint"), (0,react_.mdx)("p", null, "This request will show that the newly created ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "access token"), " is valid and how to use it.\nThe ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "/users/me"), " endpoint will retrieve the logged in user\u2019s profile information.\nIf you follow the interactive part you can click the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Send request"), " button.")), (0,react_.mdx)(authorize_native_TutorialSection, {
    subSection: true,
    actions: function actions(data) {
      return [(0,react_.mdx)(authorize_native_Title, {
        mdxType: "Title"
      }, "Response from /users/me endpoint"), (0,react_.mdx)(authorize_native_CodeBlock, {
        language: "json",
        code: JSON.stringify(data.me || {
          "user": {
            "displayName": "FirstName LastName",
            "givenName": "FirstName",
            "surname": "LastName",
            "email": "FirstName.LastName@domain.com",
            "alternateEmail": "FirstName.LastName@alternative.com",
            "city": "CityName",
            "country": "US",
            "language": "EN",
            "createdDateTime": "2021-08-27T10:19:07.2510000Z"
          }
        }, undefined, 2),
        mdxType: "CodeBlock"
      })];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "42-response"
  }, "4.2. Response"), (0,react_.mdx)("p", null, "This request will return user information (name, email, country and etc.).")), (0,react_.mdx)(authorize_native_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }));
}
;
authorize_native_MDXContent.isMDXComponent = true;
var authorize_native_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "1-register-a-native-application",
    level: 2,
    title: "1. Register a Native Application",
    children: []
  }, {
    id: "2-get-an-access-token",
    level: 2,
    title: "2. Get an Access Token",
    children: []
  }, {
    id: "3-get-an-access-token-using-a-refresh-token",
    level: 2,
    title: "3. Get an Access Token using a Refresh Token",
    children: []
  }, {
    id: "4-make-the-request",
    level: 2,
    title: "4. Make the request",
    children: []
  }];
};
var authorize_native_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/authorize-service.mdx


var authorize_service_excluded = ["components"];
var authorize_service_jsx = (external_react_default()).createElement;


var authorize_service_readingTime = {
  "text": "6 min read",
  "minutes": 5.17,
  "time": 310200,
  "words": 1034
};
/* @jsxRuntime classic */
/* @jsx mdx */

var authorize_service_metadata = {
  title: 'Authorize a Service Application',
  tile: {
    name: 'Authorize a Service Application',
    description: 'This tutorial will provide you information how to authorize your Service application.',
    href: '/tutorials/authorize-service/',
    relatedApiIds: []
  }
};
var authorize_service_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var authorize_service_Alert = authorize_service_makeShortcode("Alert");
var Mermaid = authorize_service_makeShortcode("Mermaid");
var RequestLine = authorize_service_makeShortcode("RequestLine");
var ExecutableCodeBlock = authorize_service_makeShortcode("ExecutableCodeBlock");
var authorize_service_TileList = authorize_service_makeShortcode("TileList");
var authorize_service_ResourceTile = authorize_service_makeShortcode("ResourceTile");
var authorize_service_layoutProps = {
  metadata: authorize_service_metadata
};
var authorize_service_MDXLayout = "wrapper";
function authorize_service_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, authorize_service_excluded);
  return (0,react_.mdx)(authorize_service_MDXLayout, (0,esm_extends/* default */.Z)({}, authorize_service_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "When building a server-side app that securely stores secrets, use the following procedures to set up your authorization."), (0,react_.mdx)(authorize_service_Alert, {
    type: "warning",
    mdxType: "Alert"
  }, (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "IMPORTANT")), (0,react_.mdx)("p", null, "Keep your client credentials, i.e., ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "client ID"), ", ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "client secret"), ", and ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "access tokens"), ", secure. Do not include them in publicly accessible code where they could be discovered. Instead, store them safely on a backend server.")), (0,react_.mdx)(authorize_service_Alert, {
    mdxType: "Alert"
  }, (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Note")), (0,react_.mdx)("p", null, "Service apps need permission to access the your iTwin\u2019s or iTwin-related data. iTwin roles and permissions are set up using the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/access-control/"
  }, "Access Control API"), " and the generated email on the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "App Details"), " page in ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "My Apps > App Name"), ". Setting up access control is not necessary for this tutorial; however, it must be set up before making requests to the APIs.")), (0,react_.mdx)("h2", {
    "id": "before-you-begin"
  }, "Before you begin"), (0,react_.mdx)("p", null, "This guide assumes you have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Registered a service application with the necessary scopes for your use case. If you have not created an application, open the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/my-apps"
  }, "My Apps"), " page under your ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Profile"), " menu to create one. For this guide, the application type is ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Service"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "client_id"), " and the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "client_secret"), " supplied when you created your application.")), (0,react_.mdx)(authorize_service_Alert, {
    mdxType: "Alert"
  }, (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Note")), (0,react_.mdx)("p", null, "There is an optional step at the end of the tutorial that enables you to validate the token you received beyond the successful HTTP response. If you would like to perform this step, your app must have the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "users:read"), " scope assigned.")), (0,react_.mdx)("h2", {
    "id": "client-credential-flow"
  }, "Client Credential Flow"), (0,react_.mdx)("p", null, "The Client Credential Flow allows your backend process or service, i.e., a confidential client, to authenticate using its own credentials rather than impersonating a user."), (0,react_.mdx)("p", null, "An administrator grants permissions directly to the application. Since no user is involved in the authentication, the resource enforces that the application is authorized to perform an action when it presents a token to a resource."), (0,react_.mdx)("p", null, "The following steps provide an overview of the process."), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "The application makes a request to the authorization server token endpoint with the required parameters."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "The authorization server confirms the information supplied and returns an access token."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "The application uses the access token to call a given API."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "The API responds to the request with the requested data when the necessary scopes are included in the token, and the service identity has the proper permissions for that API.")), (0,react_.mdx)(Mermaid, {
    chart: "\n  sequenceDiagram\n      participant app as Application\n      participant as as Authorization Server\n      participant api as iTwin API\n  \n      app->>+as: Authenticate using client_id and client_secret\n      as->>as: Validate client_id, client_secret and scopes\n      as->>-app: Granted access token\n  \n      app->>+api: API request with the access token\n      api->>-app: API response\n",
    mdxType: "Mermaid"
  }), (0,react_.mdx)("h2", {
    "id": "set-up-authorization-for-your-app"
  }, "Set up Authorization for your App"), (0,react_.mdx)("p", null, "The following steps guide you through setting up your application and retrieving an access token with the needed permissions for your service application and identity."), (0,react_.mdx)("h3", {
    "id": "register-a-service-application"
  }, "Register a service application"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click your profile button in the upper-right corner of the page. You must be logged in to the Developer Portal."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Select ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "My Apps"), " from the drop-down."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Register New"), " button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Enter the name of your application. Service apps have a maximum of 60 characters, the following characters are not allowed: ,;[]=\\<", ">", "?\"{}", "|", "+!@", "#", "\\$%\\^", "*", "`", "~"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Select the appropriate scopes for your application in ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "API associations"), ".", (0,react_.mdx)("br", {
    parentName: "li"
  }), "Selected scopes are listed in the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Allowed scope"), " list box."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "In ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Application Type"), ", click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Service"), " to indicate you are creating a Service app."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Save"), "."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "On the ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Success"), " dialog, click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Copy"), " to copy the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "client_id"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "client_secret"), " created for your app. Make sure you save this data in a secure location. It is required to obtain a token.", (0,react_.mdx)("br", {
    parentName: "li"
  }), "Close the dialog by clicking the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "X"), " in the upper-right corner or clicking outside the box.")), (0,react_.mdx)("h2", {
    "id": "obtain-an-access-token"
  }, "Obtain an access token"), (0,react_.mdx)("p", null, "To obtain an access token for your app, follow these steps:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, (0,react_.mdx)("p", {
    parentName: "li"
  }, "Send a request to the authorization server endpoint."), (0,react_.mdx)(RequestLine, {
    method: "POST",
    baseUrl: function baseUrl(data) {
      return data.authority;
    },
    path: "/connect/token",
    mdxType: "RequestLine"
  }), (0,react_.mdx)("p", {
    parentName: "li"
  }, "The authorization request requires the following parameters:"), (0,react_.mdx)("table", {
    parentName: "li"
  }, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, (0,react_.mdx)("strong", {
    parentName: "th"
  }, "Parameter")), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, (0,react_.mdx)("strong", {
    parentName: "th"
  }, "Description")))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "grant_type"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Set to ", (0,react_.mdx)("inlineCode", {
    parentName: "td"
  }, "client_credentials"), " for service-based applications.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "client_id"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "The ID of the app you created. If you forgot the ID, find it on the ", (0,react_.mdx)("a", {
    parentName: "td",
    "href": "/my-apps/"
  }, "My Apps"), " page. Locate your app in the list. The Client ID is in the same-named column.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "client_secret"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "The secret given when you registered the app. If you did not save the client secret, generate a new one. To do so, open the ", (0,react_.mdx)("a", {
    parentName: "td",
    "href": "/my-apps/"
  }, "My Apps"), " page and find your app in the list, click the link to open the ", (0,react_.mdx)("em", {
    parentName: "td"
  }, "Details"), " page, and then click ", (0,react_.mdx)("strong", {
    parentName: "td"
  }, "Re-generate"), " in the ", (0,react_.mdx)("em", {
    parentName: "td"
  }, "Client Secret"), " field.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "scope"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Add the scopes assigned to your app during registration. Scopes enable the application to access requested resources. Separate multiple scopes with a space. ", (0,react_.mdx)("strong", {
    parentName: "td"
  }, "Note:"), " Needed scopes for each API are in their respective reference documentation pages."))))), (0,react_.mdx)("li", {
    parentName: "ol"
  }, (0,react_.mdx)("p", {
    parentName: "li"
  }, "The authorization server confirms the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "client_id"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "client_secret"), " and returns an access token. Bentley\u2019s authorization server completes this step. There is no implementation needed in your application. A successful response includes the access token.")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, (0,react_.mdx)("p", {
    parentName: "li"
  }, "Use the access token to call the API.\nRemember to call iTwin platform APIs, you must set up your iTwin roles and permissions. For more information, see the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/access-control/"
  }, "Access Control API"), " documentation."))), (0,react_.mdx)("h3", {
    "id": "token-request-example"
  }, "Token request example"), (0,react_.mdx)(ExecutableCodeBlock, {
    method: "POST",
    baseUrl: function baseUrl(data) {
      return data.authority;
    },
    path: "/connect/token",
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded'
    },
    body: new URLSearchParams('client_id=<client_id>&client_secret=<client_secret>&scope=users:read&grant_type=client_credentials').toString(),
    dataToSave: [{
      variableName: 'accessToken',
      jsonQuery: 'access_token'
    }],
    mdxType: "ExecutableCodeBlock"
  }), (0,react_.mdx)("h3", {
    "id": "validate-your-token"
  }, "Validate your token"), (0,react_.mdx)("p", null, "If you received a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "200 OK"), " response to your request for a token, it is not necessary to validate it. However, the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "users/me"), " endpoint is provided if you would like to do so. This returns the profile information for the user account assigned to the service when you created your service application."), (0,react_.mdx)("p", null, "Remember, the iTwin Platform Base URI is ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "api.bentley.com"), "."), (0,react_.mdx)(ExecutableCodeBlock, {
    method: "GET",
    path: "/users/me",
    headers: function headers(data) {
      var _data$accessToken;
      return {
        Accept: 'application/vnd.bentley.itwin-platform.v1+json',
        Authorization: "Bearer ".concat((_data$accessToken = data.accessToken) !== null && _data$accessToken !== void 0 ? _data$accessToken : '<returned token from the previous request>')
      };
    },
    mdxType: "ExecutableCodeBlock"
  }), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(authorize_service_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(authorize_service_ResourceTile, {
    title: "Access Control",
    href: "/apis/access-control/",
    description: "Manage Access Controls for your iTwin member using iTwin roles and permissions.",
    mdxType: "ResourceTile"
  })));
}
;
authorize_service_MDXContent.isMDXComponent = true;
var authorize_service_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "before-you-begin",
    level: 2,
    title: "Before you begin",
    children: []
  }, {
    id: "client-credential-flow",
    level: 2,
    title: "Client Credential Flow",
    children: []
  }, {
    id: "set-up-authorization-for-your-app",
    level: 2,
    title: "Set up Authorization for your App",
    children: [{
      id: "register-a-service-application",
      level: 3,
      title: "Register a service application",
      children: []
    }]
  }, {
    id: "obtain-an-access-token",
    level: 2,
    title: "Obtain an access token",
    children: [{
      id: "token-request-example",
      level: 3,
      title: "Token request example",
      children: []
    }, {
      id: "validate-your-token",
      level: 3,
      title: "Validate your token",
      children: []
    }]
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var authorize_service_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/authorize-spa.mdx


var authorize_spa_excluded = ["components"];
var authorize_spa_jsx = (external_react_default()).createElement;


var authorize_spa_readingTime = {
  "text": "8 min read",
  "minutes": 7.495,
  "time": 449700,
  "words": 1499
};
/* @jsxRuntime classic */
/* @jsx mdx */

var authorize_spa_metadata = {
  title: 'Authorize Single-Page Application (SPA)',
  tile: {
    name: 'Authorize Single-Page Application (SPA)',
    description: 'This tutorial will show you how to register a Single-Page Application (SPA), get an access token with it, and use it.',
    href: '/tutorials/authorize-spa/',
    durationInMinutes: 10,
    relatedApiIds: []
  }
};
var authorize_spa_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var authorize_spa_Introduction = authorize_spa_makeShortcode("Introduction");
var authorize_spa_TutorialSection = authorize_spa_makeShortcode("TutorialSection");
var authorize_spa_SignInButton = authorize_spa_makeShortcode("SignInButton");
var CreateSpaAppButton = authorize_spa_makeShortcode("CreateSpaAppButton");
var authorize_spa_CodeBlock = authorize_spa_makeShortcode("CodeBlock");
var authorize_spa_Title = authorize_spa_makeShortcode("Title");
var authorize_spa_GeneratePkceButton = authorize_spa_makeShortcode("GeneratePkceButton");
var authorize_spa_LinkWithUrl = authorize_spa_makeShortcode("LinkWithUrl");
var authorize_spa_HttpSample = authorize_spa_makeShortcode("HttpSample");
var authorize_spa_Alert = authorize_spa_makeShortcode("Alert");
var authorize_spa_ContinueLearningSection = authorize_spa_makeShortcode("ContinueLearningSection");
var authorize_spa_layoutProps = {
  metadata: authorize_spa_metadata
};
var authorize_spa_MDXLayout = "wrapper";
function authorize_spa_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, authorize_spa_excluded);
  return (0,react_.mdx)(authorize_spa_MDXLayout, (0,esm_extends/* default */.Z)({}, authorize_spa_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(authorize_spa_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "10",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "In this tutorial you will create a ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Single-Page Application (SPA)"), ", learn how ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "authorization code flow"), " works with\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://auth0.com/docs/authorization/flows/authorization-code-flow-with-proof-key-for-code-exchange-pkce"
  }, (0,react_.mdx)("strong", {
    parentName: "a"
  }, "Proof Key for Code Exchange (PKCE)")), ",\nand how to get an ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "access token"), " with it. In the end we will double check if the token is truly valid by making a request to one of the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iTwin Platform API endpoints"), ".")), (0,react_.mdx)(authorize_spa_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-a-single-page-application-spa"
  }, "1. Register a Single-Page Application (SPA)"), (0,react_.mdx)("h4", {
    "id": "what-is-a-single-page-application-spa"
  }, "What is a Single-Page Application (SPA)?"), (0,react_.mdx)("p", null, "A ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Single-Page Application (SPA)"), " is a web application or website that interacts with the user by dynamically rewriting the current web page with new data from the web server,\ninstead of the default method of a web browser loading entire new pages.")), (0,react_.mdx)(authorize_spa_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(authorize_spa_SignInButton, {
      mdxType: "SignInButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "sign-in"
  }, "Sign in"), (0,react_.mdx)("p", null, "To be able to register an application you need to be signed in.\nIf you are not already you can do that by clicking the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Sign In"), " button in the action pane or in the top right corner of the page.")), (0,react_.mdx)(authorize_spa_TutorialSection, {
    subSection: true,
    actions: function actions(data) {
      return [(0,react_.mdx)(CreateSpaAppButton, {
        tooltip: "Register a basic Single-Page Application (SPA) for this tutorial",
        allowedScopes: ['users:read'],
        clientName: "Authorize SPA",
        mdxType: "CreateSpaAppButton"
      }, "Register Application"), (0,react_.mdx)(authorize_spa_CodeBlock, {
        language: "json",
        code: !data.clientId || !data.redirectUris || !data.scope ? undefined : JSON.stringify({
          client_id: data.clientId,
          redirect_uri: data.redirectUris && data.redirectUris[0],
          scope: data.scope
        }, undefined, 2),
        mdxType: "CodeBlock"
      })];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "register-a-single-page-application-spa"
  }, "Register a Single-Page Application (SPA)"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs.\nYou can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register Application"), " button to automatically create your first Single-Page Application (SPA).\nThis will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your Single-Page Application (SPA)"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "client_id"), " - This is the unique identifier for your application. It is displayed on the application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "redirectUris"), " - Specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on the application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "scope"), " - List of accesses granted to the application. Displayed on the application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "For future use:"), " Register and configure your application manually following the instructions in the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial."))), (0,react_.mdx)(authorize_spa_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-an-access-token"
  }, "2. Get an Access Token"), (0,react_.mdx)("h4", {
    "id": "what-is-an-access-token"
  }, "What is an access token?"), (0,react_.mdx)("p", null, "An ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Access Token"), " is token which contains a string that can be used to make authenticated requests to an API to access protect resources (in this case iTwin Platform APIs).The string has no meaning to the application using it, but represents that the user has authorized the application to access their account.\nThe token is bounded by an appropriate lifetime, scopes, and other information that the server may require."), (0,react_.mdx)("h4", {
    "id": "21-authorization-code-flow-with-proof-key-for-code-exchange-pkce"
  }, "2.1. Authorization Code Flow with Proof Key for Code Exchange (PKCE)"), (0,react_.mdx)("p", null, "This flow provides a way to authorize with an Authorization Server by redirecting to the authorization server,\ngetting a ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "code"), " back, and exchanging it for an ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "access token"), " in a subsequent call."), (0,react_.mdx)("p", null, "You can find more information ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorization-code-flow-with-proof-key-for-code-exchange-pkce"
  }, "here"), ", but it is more technical."), (0,react_.mdx)("p", null, "Steps to get an access token using this flow:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Generate ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code_verifier"), " and ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code_challenge"), ","), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Navigate to the authorization server,"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "The authorization server will redirect back to your application (one of redirect URIs) with ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code"), " query parameter,"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "The application exchange ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code"), " for an ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "access_token"), " via the Token endpoint."))), (0,react_.mdx)(authorize_spa_TutorialSection, {
    subSection: true,
    actions: function actions(data) {
      return [(0,react_.mdx)(authorize_spa_Title, {
        mdxType: "Title"
      }, "Generate Code Verifier and Code Challenge"), (0,react_.mdx)(authorize_spa_GeneratePkceButton, {
        mdxType: "GeneratePkceButton"
      }), (0,react_.mdx)(authorize_spa_CodeBlock, {
        language: "json",
        code: data.pkce ? JSON.stringify(data.pkce, undefined, 2) : undefined,
        mdxType: "CodeBlock"
      })];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "211-code-verifier-and-code-challenge"
  }, "2.1.1. Code Verifier and Code Challenge"), (0,react_.mdx)("p", null, "PKCE (", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://datatracker.ietf.org/doc/html/rfc7636#section-4.1"
  }, "RFC 7636"), ") is an extension to the Authorization Code flow to prevent CSRF and authorization code injection attacks."), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "code_verifier"), " is a random string between 43 and 128 characters. It provides proof that you initiated the redirect to the authorization endpoint."), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "code_challenge"), ": is a string that is generated from ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "code_verifier"), " and it is passed to the authorization endpoint as a query parameter.\nPseudo code to generate code challenge:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-jsx",
    "data-language": "jsx",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token function\">base64urlEncode</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SHA256</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ASCII</span><span class=\"token punctuation\">(</span>code_verifier<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"
    }
  })), (0,react_.mdx)("p", null, "Read more about: ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://en.wikipedia.org/wiki/ASCII"
  }, "ASCII"), ", ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://en.bitcoinwiki.org/wiki/SHA-256"
  }, "SHA256"), ", ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://wiki.tcl-lang.org/page/base64url"
  }, "base64urlEncode")), (0,react_.mdx)("p", null, "You can generate them by clicking ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Generate Code Verifier and Code Challenge"), ". This is required for the following steps.")), (0,react_.mdx)(authorize_spa_TutorialSection, {
    subSection: true,
    actions: function actions(data) {
      var _data$clientId, _data$scope, _data$pkce$code_chall, _data$pkce;
      return [(0,react_.mdx)(authorize_spa_Title, {
        mdxType: "Title"
      }, "Navigate to the Authorization Server"), (0,react_.mdx)(authorize_spa_LinkWithUrl, {
        url: data.authority + '/connect/authorize' + '?' + new URLSearchParams({
          client_id: (_data$clientId = data.clientId) !== null && _data$clientId !== void 0 ? _data$clientId : 'CLIENT_ID',
          redirect_uri: data.redirectUris && data.redirectUris[0] || 'http://localhost:3000',
          scope: (_data$scope = data.scope) !== null && _data$scope !== void 0 ? _data$scope : 'users:read',
          response_type: 'code',
          code_challenge: (_data$pkce$code_chall = (_data$pkce = data.pkce) === null || _data$pkce === void 0 ? void 0 : _data$pkce.code_challenge) !== null && _data$pkce$code_chall !== void 0 ? _data$pkce$code_chall : 'CODE_CHALLENGE',
          code_challenge_method: 'S256'
        }).toString(),
        disabled: !data.clientId && !data.pkce,
        mdxType: "LinkWithUrl"
      })];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "212-navigate-to-the-authorization-server"
  }, "2.1.2. Navigate To the Authorization Server"), (0,react_.mdx)("p", null, "Application should make interactive redirect/navigate to authorization server.\nThis allow user to authorize agents authorization server and give consent to allow access part of his data through your application.\nIf you follow the interactive part you can click the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Navigate"), " button and it will open popup window that will hit authorization endpoint with required query parameters."), (0,react_.mdx)("p", null, "The URL will be built in this way:"), (0,react_.mdx)("p", null, "Authorization endpoint: ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://ims.bentley.com/connect/authorize")), (0,react_.mdx)("p", null, "With query parameters:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "client_id"), " this is the unique identifier for your application. Displayed on the application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), " (e.g. ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "spa-example"), ")"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "redirect_uri"), " Specify there you want go back after successful authorization (e.g. ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "http://localhost:3000/redirect"), ")"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "scope"), " list of accesses granted to the application. Displayed on the application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ". (e.g. ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "users:read"), ")"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "response_type"), " For this flow ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code"), " it is only option and that indicates, that you will get code as query parameter then user will come back from authorization server."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code_challenge"), " Code challenge that was generated from code ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code_verifier")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code_challenge_method"), " Code challenge method type it should be ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "S256"))), (0,react_.mdx)("p", null, "So in the end it should look something like this: ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://ims.bentley.com/connect/authorize?client_id=CLIENT_ID&redirect_uri=http%3A%2F%2Flocalhost%3A3000&scope=users%3Aread&response_type=code&code_challenge=CODE_CHALLENGE&code_challenge_method=S256"))), (0,react_.mdx)(authorize_spa_TutorialSection, {
    subSection: true,
    actions: function actions(data) {
      return [(0,react_.mdx)(authorize_spa_Title, {
        mdxType: "Title"
      }, data.code ? 'Code query parameter value' : ''), (0,react_.mdx)(authorize_spa_CodeBlock, {
        language: "text",
        code: typeof data.code === 'string' ? data.code : JSON.stringify(data.code, undefined, 2),
        mdxType: "CodeBlock"
      })];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "213-receive-the-code"
  }, "2.1.3. Receive the code"), (0,react_.mdx)("p", null, "The code will be placed inside the redirect URL query parameter (e.g. ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "http://localhost:3000/redirect"), (0,react_.mdx)("strong", {
    parentName: "p"
  }, "?code=random-string"), ").\nThe application should take care of ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "code"), " query parameter extraction. If you follow the interactive steps the code should appear in the action pane.")), (0,react_.mdx)(authorize_spa_TutorialSection, {
    subSection: true,
    actions: function actions(data) {
      var _data$clientId2, _data$pkce$code_verif, _data$pkce2, _data$code;
      return [(0,react_.mdx)(authorize_spa_Title, {
        mdxType: "Title"
      }, "Request to Token endpoint"), (0,react_.mdx)(authorize_spa_HttpSample, {
        method: "POST",
        url: "".concat(data.authority, "/connect/token"),
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: new URLSearchParams({
          client_id: (_data$clientId2 = data.clientId) !== null && _data$clientId2 !== void 0 ? _data$clientId2 : 'CLIENT_ID',
          code_verifier: (_data$pkce$code_verif = (_data$pkce2 = data.pkce) === null || _data$pkce2 === void 0 ? void 0 : _data$pkce2.code_verifier) !== null && _data$pkce$code_verif !== void 0 ? _data$pkce$code_verif : 'CODE_VERIFIER',
          grant_type: 'authorization_code',
          code: (_data$code = data.code) !== null && _data$code !== void 0 ? _data$code : 'CODE',
          redirect_uri: data.redirectUris && data.redirectUris[0] || 'http://localhost:3000'
        }).toString(),
        saveResponseTo: "tokenResponse",
        canSendRequest: data.code && !data.tokenResponse,
        disabledTooltip: data.tokenResponse ? "The code can be used only once. Navigate to the authorization server one more time." : undefined,
        mdxType: "HttpSample"
      })];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "214-receive-an-access-token"
  }, "2.1.4. Receive an access token"), (0,react_.mdx)("p", null, "You need to call the token endpoint with the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Content-Type"), " header equal to ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "application/x-www-form-urlencoded"), "."), (0,react_.mdx)("p", null, "Request body (with ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.w3schools.com/tags/ref_urlencode.ASP"
  }, "URL encoded"), " characters):"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "client_id"), ": Identification that is generated when the application is created. You can find it in the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/my-apps"
  }, "My Apps"), " page. If you generated it during this tutorial you can find it in the first step."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "grant_type"), ": ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "authorization_code"), " indicates that the application will use a ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code"), " to get an ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "access_token"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code_verifier"), ": It is for verification purposes that the same application that redirected to the authorization server is calling this endpoint."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "code"), ": Code that the application got after the redirect from the authorization server back to the application itself."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "redirect_uri"), ": redirect URI there was code send.")), (0,react_.mdx)(authorize_spa_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, (0,react_.mdx)("b", null, "Code is short lived"), ": If your code has expired please Navigate to the authorization server one more time.")), (0,react_.mdx)(authorize_spa_TutorialSection, {
    subSection: true,
    actions: function actions(data) {
      return [(0,react_.mdx)(authorize_spa_Title, {
        mdxType: "Title"
      }, "Response from the Token endpoint"), (0,react_.mdx)(authorize_spa_CodeBlock, {
        language: "json",
        code: JSON.stringify(data.tokenResponse || {
          "access_token": "JWT_TOKEN",
          "token_type": "Bearer",
          "expires_in": 3599
        }, undefined, 2),
        mdxType: "CodeBlock"
      })];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response-from-the-token-endpoint"
  }, "Response from the Token endpoint"), (0,react_.mdx)("p", null, "Response contains:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "token_type"), ": ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Bearer"), ". This is part of the Authorization header that is constructed like ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorize: token_type access_token"), ". You can read more ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://www.oauth.com/oauth2-servers/differences-between-oauth-1-2/bearer-tokens/"
  }, "here"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "access_token"), ": Access token itself (in ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://jwt.io"
  }, "JWT"), " format) that will be passed in the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Authorize"), " header for API calls as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Bearer JWT_TOKEN"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "expires_in"), ": Lifespan of the access token in seconds."))), (0,react_.mdx)(authorize_spa_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-make-the-request"
  }, "3. Make the request")), (0,react_.mdx)(authorize_spa_TutorialSection, {
    subSection: true,
    actions: function actions(data) {
      var _data$tokenResponse$a, _data$tokenResponse;
      return [(0,react_.mdx)(authorize_spa_Title, {
        mdxType: "Title"
      }, "Request to /users/me endpoint"), (0,react_.mdx)(authorize_spa_HttpSample, {
        method: "GET",
        url: "".concat(data.baseUrl, "/users/me"),
        headers: {
          'Authorization': 'Bearer ' + ((_data$tokenResponse$a = (_data$tokenResponse = data.tokenResponse) === null || _data$tokenResponse === void 0 ? void 0 : _data$tokenResponse.access_token) !== null && _data$tokenResponse$a !== void 0 ? _data$tokenResponse$a : 'JWT_TOKEN'),
          'Accept': 'application/vnd.bentley.itwin-platform.v1+json'
        },
        body: undefined,
        saveResponseTo: "me",
        canSendRequest: data.tokenResponse,
        mdxType: "HttpSample"
      })];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "31-make-the-request-to-the-usersme-endpoint"
  }, "3.1. Make the request to the /users/me endpoint"), (0,react_.mdx)("p", null, "This request will show that the newly created ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "access token"), " is valid and how to use it.\nThe ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "/users/me"), " endpoint will retrieve the logged in user\u2019s profile information.\nIf you follow the interactive part you can click the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Send request"), " button.")), (0,react_.mdx)(authorize_spa_TutorialSection, {
    subSection: true,
    actions: function actions(data) {
      return [(0,react_.mdx)(authorize_spa_Title, {
        mdxType: "Title"
      }, "Response from /users/me endpoint"), (0,react_.mdx)(authorize_spa_CodeBlock, {
        language: "json",
        code: JSON.stringify(data.me || {
          "user": {
            "displayName": "FirstName LastName",
            "givenName": "FirstName",
            "surname": "LastName",
            "email": "FirstName.LastName@domain.com",
            "alternateEmail": "FirstName.LastName@alternative.com",
            "city": "CityName",
            "country": "US",
            "language": "EN",
            "createdDateTime": "2021-08-27T10:19:07.2510000Z"
          }
        }, undefined, 2),
        mdxType: "CodeBlock"
      })];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "32-response"
  }, "3.2. Response"), (0,react_.mdx)("p", null, "This request will return user information (name, email, country and etc.).")), (0,react_.mdx)(authorize_spa_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }));
}
;
authorize_spa_MDXContent.isMDXComponent = true;
var authorize_spa_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "1-register-a-single-page-application-spa",
    level: 2,
    title: "1. Register a Single-Page Application (SPA)",
    children: []
  }, {
    id: "2-get-an-access-token",
    level: 2,
    title: "2. Get an Access Token",
    children: []
  }, {
    id: "3-make-the-request",
    level: 2,
    title: "3. Make the request",
    children: []
  }];
};
var authorize_spa_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/authorize-webapp.mdx


var authorize_webapp_excluded = ["components"];
var authorize_webapp_jsx = (external_react_default()).createElement;


var authorize_webapp_readingTime = {
  "text": "8 min read",
  "minutes": 7.915,
  "time": 474900,
  "words": 1583
};
/* @jsxRuntime classic */
/* @jsx mdx */

var authorize_webapp_metadata = {
  title: 'Authorize a Web Application',
  tile: {
    name: 'Authorize a Web Application',
    description: 'This tutorial will provide you information how to authorize your web application.',
    href: '/tutorials/authorize-webapp/',
    relatedApiIds: []
  }
};
var authorize_webapp_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var authorize_webapp_Alert = authorize_webapp_makeShortcode("Alert");
var authorize_webapp_Mermaid = authorize_webapp_makeShortcode("Mermaid");
var authorize_webapp_RequestLine = authorize_webapp_makeShortcode("RequestLine");
var NavigateToAuthorizationServer = authorize_webapp_makeShortcode("NavigateToAuthorizationServer");
var authorize_webapp_ExecutableCodeBlock = authorize_webapp_makeShortcode("ExecutableCodeBlock");
var authorize_webapp_TileList = authorize_webapp_makeShortcode("TileList");
var authorize_webapp_ResourceTile = authorize_webapp_makeShortcode("ResourceTile");
var authorize_webapp_layoutProps = {
  metadata: authorize_webapp_metadata
};
var authorize_webapp_MDXLayout = "wrapper";
function authorize_webapp_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, authorize_webapp_excluded);
  return (0,react_.mdx)(authorize_webapp_MDXLayout, (0,esm_extends/* default */.Z)({}, authorize_webapp_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "When developing web applications using a server-side framework, use the following procedures to set up your authorization."), (0,react_.mdx)(authorize_webapp_Alert, {
    type: "warning",
    mdxType: "Alert"
  }, (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "IMPORTANT")), (0,react_.mdx)("p", null, "Keep your client credentials, i.e., ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "client ID"), ", ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "client secret"), ", and ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "access tokens"), ", secure. Do not include them in publicly accessible code where they could be discovered. Instead, store them safely on a backend server.")), (0,react_.mdx)("h2", {
    "id": "before-you-begin"
  }, "Before you begin"), (0,react_.mdx)("p", null, "This guide assumes you have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Registered a web app with the necessary scopes for your use case. If you have not created an application, open the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/my-apps"
  }, "My Apps"), " page under your ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Profile"), " menu to create one. For this guide, the application type is ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Web App"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "client_id"), " and the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "client_secret"), " supplied when you created your application."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "This tutorial requires a redirect URI of ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "https://developer.bentley.com/redirect-tutorial"), ". Please add this redirect URI to the ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "App Details"), " for your application. The ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "App Details"), " page can be accessed through the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/my-apps"
  }, "My Apps"), " page.")), (0,react_.mdx)(authorize_webapp_Alert, {
    mdxType: "Alert"
  }, (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Note")), (0,react_.mdx)("p", null, "There is an optional step at the end of the tutorial that enables you to validate the token you received beyond the successful HTTP response. If you would like to perform this step, your app must have the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "users:read"), " scope assigned.")), (0,react_.mdx)("h2", {
    "id": "user-authorization-code-flow"
  }, "User Authorization Code Flow"), (0,react_.mdx)("p", null, "Web applications can use the OAuth 2.0 Authorization Code Flow to enable data owners to authorize third-party apps to access user data. This flow includes features like customer login and consent handling to obtain authorization from the resource owner."), (0,react_.mdx)("p", null, "The following steps provide an overview of the process."), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "The application makes a request to the authorization server endpoint."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "The end-user provides their authentication information and consents for the application to access resources on their behalf."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "The authorization server returns an authorization code to the Redirect URI specified when creating the application."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Exchange the authorization code for an access token."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Use the access token to call the API on behalf of the user.")), (0,react_.mdx)(authorize_webapp_Mermaid, {
    chart: "\n  sequenceDiagram\n      participant ro as Resource Owner\n      participant app as Application\n      participant as as Authorization Server\n      participant api as iTwin API\n  \n      ro->>+app: Connect to application\n      app->>+as: Request authorization code\n      as->>ro: Redirect to login and consent\n      ro->>as: Sign in and consent\n      as->>-app: Authorization code\n      app->>+as: Exchange authorization code for an access_token\n      as->>as: Validate client_id, client_secret, scope and redirect_uri\n      as->>-app: Granted access token\n      app->>-ro: Signed in\n  \n      ro->>+app: Perform action\n      app->>+api: API request with the access token\n      api->>-app: API response\n      app->>-ro: Render content\n",
    mdxType: "Mermaid"
  }), (0,react_.mdx)("h2", {
    "id": "set-up-authorization-for-your-app"
  }, "Set up Authorization for your App"), (0,react_.mdx)("p", null, "The following steps guide you through setting up your application and retrieving an access token with the needed permissions for your web application."), (0,react_.mdx)("h3", {
    "id": "register-a-web-application"
  }, "Register a web application"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click your profile button in the upper-right corner of the page. You must be logged in to the Developer Portal."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Select ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "My Apps"), " from the drop-down."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Register New"), " button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Enter the name of your application. Web apps have a maximum of 128 characters, the following characters are not allowed: ,;[]=\\<", ">", "?\"{}", "|", "+!@", "#", "\\$%\\^", "*", "`", "~"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Select the appropriate scopes for your application in ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "API associations"), ".", (0,react_.mdx)("br", {
    parentName: "li"
  }), "Selected scopes are listed in the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Allowed scope"), " list box."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "In ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Application Type"), ", click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Web App"), " to indicate you are creating a web application."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "In ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Redirect URIs"), ", enter the callback URL to use during the authorization process. This is the URL to which the authorization code is sent.", (0,react_.mdx)("br", {
    parentName: "li"
  }), "Optionally, you can set a ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Post logout URI"), " to which the user will be redirected when logging out of the app."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Save"), "."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "On the ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Success"), " dialog, click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Copy"), " to copy the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "client_id"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "client_secret"), " created for your app. Make sure you save this data in a secure location. It is required to obtain a token.", (0,react_.mdx)("br", {
    parentName: "li"
  }), "Close the dialog by clicking the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "X"), " in the upper-right corner or clicking outside the box.")), (0,react_.mdx)("h2", {
    "id": "obtain-an-access-token"
  }, "Obtain an Access Token"), (0,react_.mdx)("p", null, "To obtain an access token for your app, follow these steps:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, (0,react_.mdx)("p", {
    parentName: "li"
  }, "When the user opens the Web app, redirect them to the authorization server endpoint."), (0,react_.mdx)(authorize_webapp_RequestLine, {
    baseUrl: function baseUrl(data) {
      return data.authority;
    },
    path: "/connect/authorize?client_id=<client_id>&redirect_uri=<redirect_uri>&scope=<scopes>+offline_access&response_type=code",
    mdxType: "RequestLine"
  }), (0,react_.mdx)("p", {
    parentName: "li"
  }, "The request for an authorization code requires the following parameters:"), (0,react_.mdx)("table", {
    parentName: "li"
  }, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, "Parameter"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, "Description"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "response_type"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Set to ", (0,react_.mdx)("inlineCode", {
    parentName: "td"
  }, "code"), " to indicate that an authorization code is needed.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "client_id"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "The ID of the app you created. If you forgot the ID, find it on the ", (0,react_.mdx)("a", {
    parentName: "td",
    "href": "/my-apps"
  }, "My Apps"), " page. Locate your app in the list, and the Client ID is in the same-named column.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "redirect_uri"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "The callback URL you entered when registering your application. The returned authorization code is sent to this URL.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "scope"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Add the scopes assigned to your app during registration. Separate multiple scopes with a space. Your end user will consent to the app accessing this information on their behalf during the login process. When requesting a refresh token, include the scope ", (0,react_.mdx)("inlineCode", {
    parentName: "td"
  }, "offline_access"), ". For all other scopes, check the reference documentation for each respective API.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "state"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "(Optional) Used by the client to maintain state between a request and a callback. Recommended to prevent cross-site request forgery. The authorization server includes this value when redirecting the user-agent to the client.")))), (0,react_.mdx)(NavigateToAuthorizationServer, {
    query: new URLSearchParams("client_id=<client_id>&redirect_uri=<redirect_uri>&scope=users:read+offline_access&response_type=code").toString(),
    mdxType: "NavigateToAuthorizationServer"
  })), (0,react_.mdx)("li", {
    parentName: "ol"
  }, (0,react_.mdx)("p", {
    parentName: "li"
  }, "The user signs in to authenticate and consents for the application to access resources on their behalf. This page is managed by the Bentley authorization server and does not require any implementation in your application."), (0,react_.mdx)("p", {
    parentName: "li"
  }, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/tutorials/authorize-webapp/user-signin-consent.png",
    "alt": "User interface for facing Bentley authorization server"
  })), (0,react_.mdx)("p", {
    parentName: "li"
  }, "Once authenticated, the Bentley authorization server returns an authorization code to the Redirect URI registered with your application. Extract the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "code"), " in the response from the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "redirect_uri"), " field."), (0,react_.mdx)(authorize_webapp_Alert, {
    mdxType: "Alert"
  }, (0,react_.mdx)("p", {
    parentName: "li"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Note")), (0,react_.mdx)("p", {
    parentName: "li"
  }, "Authorization codes are time-sensitive. If your code expires, send a new request to the authorization server for a new code."))), (0,react_.mdx)("li", {
    parentName: "ol"
  }, (0,react_.mdx)("p", {
    parentName: "li"
  }, "Send a request to the token endpoint to exchange the authorization code for an access token."), (0,react_.mdx)(authorize_webapp_RequestLine, {
    method: "POST",
    baseUrl: function baseUrl(data) {
      return data.authority;
    },
    path: "/connect/token",
    mdxType: "RequestLine"
  }), (0,react_.mdx)("p", {
    parentName: "li"
  }, "The authorization request requires the following parameters:"), (0,react_.mdx)("table", {
    parentName: "li"
  }, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, "Field Name"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, "Description"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "client_id"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Identification generated during application creation. Found in the ", (0,react_.mdx)("a", {
    parentName: "td",
    "href": "/my-apps"
  }, "My Apps"), " page or in the first step if generated during the tutorial.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "client_secret"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Secret created during application creation.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "grant_type"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Set to ", (0,react_.mdx)("inlineCode", {
    parentName: "td"
  }, "authorization_code"), " Indicates the type of grant being used. This tells the service you are exchanging the code for a token.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "code"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "This is the authorization code returned in the previous request.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "redirect_uri"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "The callback URL you entered when registering your application. This URL must match the URL provided in the initial request.")))), (0,react_.mdx)(authorize_webapp_ExecutableCodeBlock, {
    method: "POST",
    baseUrl: function baseUrl(data) {
      return data.authority;
    },
    path: "/connect/token",
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded'
    },
    body: function body(data) {
      var _data$clientId, _data$code, _data$redirectURI;
      return new URLSearchParams("client_id=".concat((_data$clientId = data.clientId) !== null && _data$clientId !== void 0 ? _data$clientId : '<client_id>', "&client_secret=<client_secret>&grant_type=authorization_code&code=").concat((_data$code = data.code) !== null && _data$code !== void 0 ? _data$code : '<code>', "&redirect_uri=").concat((_data$redirectURI = data.redirectURI) !== null && _data$redirectURI !== void 0 ? _data$redirectURI : '<redirect_uri>')).toString();
    },
    dataToSave: [{
      variableName: 'accessToken',
      jsonQuery: 'access_token'
    }, {
      variableName: 'refreshToken',
      jsonQuery: 'refresh_token'
    }],
    mdxType: "ExecutableCodeBlock"
  })), (0,react_.mdx)("li", {
    parentName: "ol"
  }, (0,react_.mdx)("p", {
    parentName: "li"
  }, "The authorization server confirms the information sent in the request and returns an access token. Bentley\u2019s authorization server completes this step. There is no implementation needed in your application.\nA successful response includes the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "access_token"), ", an expiry of 3600 seconds, and a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "refresh_token"), ". Tokens are ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Bearer"), " type, which must be specified in your API calls.")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, (0,react_.mdx)("p", {
    parentName: "li"
  }, "Use the access token to call the API. Tokens are added to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Authorization"), " header with ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Bearer"), " type in subsequent requests.", (0,react_.mdx)("br", {
    parentName: "p"
  }), "\n", "Successfully sending a request to an API requires the end user to have the correct account permissions. Use the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/access-control/"
  }, "Access Control API"), " to ensure your user can access the required resources."))), (0,react_.mdx)("h2", {
    "id": "request-a-new-access-token-with-a-refresh-token"
  }, "Request a new access token with a refresh token"), (0,react_.mdx)("p", null, "When your access token is close to the expiry time, you must request a new one using the refresh token provided in the original request. The response contains a new token and a new refresh token. Tokens are ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Bearer"), " type, which must be specified in your API calls."), (0,react_.mdx)(authorize_webapp_RequestLine, {
    method: "POST",
    baseUrl: function baseUrl(data) {
      return data.authority;
    },
    path: "/connect/token",
    mdxType: "RequestLine"
  }), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, "Field Name"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, "Description"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "client_id"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Identification generated during application creation. Found in the ", (0,react_.mdx)("a", {
    parentName: "td",
    "href": "/my-apps"
  }, "My Apps"), " page or in the first step if generated during the tutorial.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "client_secret"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Secret created during application creation.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "grant_type"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Set to ", (0,react_.mdx)("inlineCode", {
    parentName: "td"
  }, "refresh_token"), " Indicates the type of grant being used. This tells the service you are requesting a new ", (0,react_.mdx)("inlineCode", {
    parentName: "td"
  }, "access_token"), " with a ", (0,react_.mdx)("inlineCode", {
    parentName: "td"
  }, "refresh_token"), ".")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "refresh_token"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "The refresh token. Ensure the ", (0,react_.mdx)("inlineCode", {
    parentName: "td"
  }, "refresh_token"), " you include is the same one received from the previous request.")))), (0,react_.mdx)(authorize_webapp_ExecutableCodeBlock, {
    method: "POST",
    baseUrl: function baseUrl(data) {
      return data.authority;
    },
    path: "/connect/token",
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded'
    },
    body: function body(data) {
      var _data$clientId2, _data$refreshToken, _data$redirectURI2;
      return new URLSearchParams("client_id=".concat((_data$clientId2 = data.clientId) !== null && _data$clientId2 !== void 0 ? _data$clientId2 : '<client_id>', "&client_secret=<client_secret>&grant_type=refresh_token&refresh_token=").concat((_data$refreshToken = data.refreshToken) !== null && _data$refreshToken !== void 0 ? _data$refreshToken : '<refresh_token>', "&redirect_uri=").concat((_data$redirectURI2 = data.redirectURI) !== null && _data$redirectURI2 !== void 0 ? _data$redirectURI2 : '<redirect_uri>')).toString();
    },
    dataToSave: [{
      variableName: 'accessToken',
      jsonQuery: 'access_token'
    }],
    mdxType: "ExecutableCodeBlock"
  }), (0,react_.mdx)("h2", {
    "id": "validate-your-token"
  }, "Validate your token"), (0,react_.mdx)("p", null, "If you received a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "200 OK"), " response to your request for a token, it is not necessary to validate it. However, the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "users/me"), " endpoint is provided if you would like to do so. This request returns the profile information for the user account associated with the token received."), (0,react_.mdx)("p", null, "Remember, the iTwin Platform Base URI is ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "api.bentley.com"), "."), (0,react_.mdx)(authorize_webapp_ExecutableCodeBlock, {
    method: "GET",
    path: "/users/me",
    headers: function headers(data) {
      var _data$accessToken;
      return {
        Accept: 'application/vnd.bentley.itwin-platform.v1+json',
        Authorization: "Bearer ".concat((_data$accessToken = data.accessToken) !== null && _data$accessToken !== void 0 ? _data$accessToken : '<returned token from the previous request>')
      };
    },
    mdxType: "ExecutableCodeBlock"
  }), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(authorize_webapp_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(authorize_webapp_ResourceTile, {
    title: "Access Control",
    href: "/apis/access-control/",
    description: "Manage Access Controls for your iTwin member using iTwin roles and permissions.",
    mdxType: "ResourceTile"
  })));
}
;
authorize_webapp_MDXContent.isMDXComponent = true;
var authorize_webapp_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "before-you-begin",
    level: 2,
    title: "Before you begin",
    children: []
  }, {
    id: "user-authorization-code-flow",
    level: 2,
    title: "User Authorization Code Flow",
    children: []
  }, {
    id: "set-up-authorization-for-your-app",
    level: 2,
    title: "Set up Authorization for your App",
    children: [{
      id: "register-a-web-application",
      level: 3,
      title: "Register a web application",
      children: []
    }]
  }, {
    id: "obtain-an-access-token",
    level: 2,
    title: "Obtain an Access Token",
    children: []
  }, {
    id: "request-a-new-access-token-with-a-refresh-token",
    level: 2,
    title: "Request a new access token with a refresh token",
    children: []
  }, {
    id: "validate-your-token",
    level: 2,
    title: "Validate your token",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var authorize_webapp_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/changed-elements-api.mdx


var changed_elements_api_excluded = ["components"];
var changed_elements_api_jsx = (external_react_default()).createElement;


var changed_elements_api_readingTime = {
  "text": "28 min read",
  "minutes": 27.695,
  "time": 1661700,
  "words": 5539
};
/* @jsxRuntime classic */
/* @jsx mdx */

var changed_elements_api_metadata = {
  title: 'Changed Elements API Tutorial',
  tile: {
    name: 'Changed Elements API Tutorial',
    description: 'This tutorial will teach you how to use the Changed Elements API to visualize change in your iTwin Application',
    thumbnail: '/images/changed-elements-thumbnail.png',
    href: '/tutorials/changed-elements-api',
    durationInMinutes: 45,
    relatedApiIds: ['changedelements', 'visualization']
  }
};
var changed_elements_api_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var changed_elements_api_Introduction = changed_elements_api_makeShortcode("Introduction");
var changed_elements_api_TutorialSection = changed_elements_api_makeShortcode("TutorialSection");
var LinkButton = changed_elements_api_makeShortcode("LinkButton");
var NodeJsIcon = changed_elements_api_makeShortcode("NodeJsIcon");
var GitIcon = changed_elements_api_makeShortcode("GitIcon");
var changed_elements_api_Title = changed_elements_api_makeShortcode("Title");
var changed_elements_api_CodeBlock = changed_elements_api_makeShortcode("CodeBlock");
var GoogleChromeIcon = changed_elements_api_makeShortcode("GoogleChromeIcon");
var VSCodeIcon = changed_elements_api_makeShortcode("VSCodeIcon");
var PostmanIcon = changed_elements_api_makeShortcode("PostmanIcon");
var changed_elements_api_Alert = changed_elements_api_makeShortcode("Alert");
var changed_elements_api_ContinueLearningSection = changed_elements_api_makeShortcode("ContinueLearningSection");
var changed_elements_api_TileList = changed_elements_api_makeShortcode("TileList");
var changed_elements_api_ResourceTile = changed_elements_api_makeShortcode("ResourceTile");
var changed_elements_api_layoutProps = {
  metadata: changed_elements_api_metadata
};
var changed_elements_api_MDXLayout = "wrapper";
function changed_elements_api_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, changed_elements_api_excluded);
  return (0,react_.mdx)(changed_elements_api_MDXLayout, (0,esm_extends/* default */.Z)({}, changed_elements_api_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(changed_elements_api_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "45",
    summaryImageSrc: "/unreal-docs-site/static/images/changed-elements-header.png",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "The Changed Elements API is a REST API that allows the consumer to inspect what elements have changed in an iModel between two versions of the iModel. In this tutorial, we will explore using the API operations and we will write an iTwin.js application to visualize change.")), (0,react_.mdx)(changed_elements_api_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-set-up-your-environment"
  }, "1. Set up your environment"), (0,react_.mdx)("p", null, "To do this tutorial, it is recommended that you do the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/web-application-quick-start/"
  }, "Web Application Quick Start tutorial"), " first. This tutorial expects that you have a registered application as shown in the quick start tutorial.")), (0,react_.mdx)(changed_elements_api_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(LinkButton, {
      href: "https://nodejs.org",
      target: "_blank",
      title: "Node.js",
      icon: (0,react_.mdx)(NodeJsIcon, {
        mdxType: "NodeJsIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(LinkButton, {
      href: "https://git-scm.com/downloads",
      target: "_blank",
      title: "Git",
      icon: (0,react_.mdx)(GitIcon, {
        mdxType: "GitIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(changed_elements_api_Title, {
      mdxType: "Title"
    }, "Clone starting point for tutorial"), (0,react_.mdx)(changed_elements_api_CodeBlock, {
      language: "bash",
      code: "git clone https://github.com/iTwin/changed-elements-tutorial -b start",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(changed_elements_api_Title, {
      mdxType: "Title"
    }, "Finished tutorial application"), (0,react_.mdx)(changed_elements_api_CodeBlock, {
      language: "bash",
      code: "git clone https://github.com/iTwin/changed-elements-tutorial",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "11-required-materials"
  }, "1.1 Required materials"), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpsnodejsorg-target_blanknodejs-14x-lts-versiona"
  }, (0,react_.mdx)("a", {
    href: "https://nodejs.org",
    target: "_blank"
  }, "Node.js (14.x LTS version)")), (0,react_.mdx)("p", null, "This tool provides the backend JavaScript runtime necessary for your computer to read and render code appropriately. It also allows you to run NPM command line (required for every iTwin project)."), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpsgit-scmcomdownloads-target_blankgita"
  }, (0,react_.mdx)("a", {
    href: "https://git-scm.com/downloads",
    target: "_blank"
  }, "Git")), (0,react_.mdx)("p", null, "This is the source code control system for the iTwin repositories."), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpsgithubcomitwinchanged-elements-tutorial-target_blanktutorial-repositorya"
  }, (0,react_.mdx)("a", {
    href: "https://github.com/iTwin/changed-elements-tutorial",
    target: "_blank"
  }, "Tutorial Repository")), (0,react_.mdx)("p", null, "This is the github repository that you will use in this tutorial. You should clone the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "start"), " branch as a starting point to follow along. If at any point you are unsure on how to setup the code demonstrated in the snippets, or just want to take a shortcut, the repository\u2019s ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "main"), " branch contains the finished tutorial application.")), (0,react_.mdx)(changed_elements_api_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(LinkButton, {
      href: "https://www.google.com/chrome/",
      target: "_blank",
      title: "Google Chrome",
      icon: (0,react_.mdx)(GoogleChromeIcon, {
        mdxType: "GoogleChromeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(LinkButton, {
      href: "https://code.visualstudio.com/",
      target: "_blank",
      title: "Visual Studio Code",
      icon: (0,react_.mdx)(VSCodeIcon, {
        mdxType: "VSCodeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "12-suggested-materials"
  }, "1.2 Suggested materials"), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpswwwgooglecomchrome-target_blankgoogle-chromea"
  }, (0,react_.mdx)("a", {
    href: "https://www.google.com/chrome/",
    target: "_blank"
  }, "Google Chrome")), (0,react_.mdx)("p", null, "This software can help you to develop and debug frontend JavaScript problems."), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpscodevisualstudiocom-target_blankvisual-studio-codea"
  }, (0,react_.mdx)("a", {
    href: "https://code.visualstudio.com/",
    target: "_blank"
  }, "Visual Studio Code")), (0,react_.mdx)("p", null, "This is our recommended editor and debugger tool for developing iTwin.js applications. It is free, open source and includes a GUI for working with GIT."), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpswwwpostmancomdownloads-target_blankpostmana"
  }, (0,react_.mdx)("a", {
    href: "https://www.postman.com/downloads/",
    target: "_blank"
  }, "Postman")), (0,react_.mdx)("p", null, "If you want to test the REST API calls directly, you can use ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.postman.com/downloads/"
  }, "Postman"), " or any other solution capable of sending HTTP requests. If you do it this way, you will require an authorization token for the requests to work."), (0,react_.mdx)("p", null, "To learn more about how authentication and authorization works in an iTwin powered application, check out the full ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "documentation"), " on how to obtain the token.")), (0,react_.mdx)(changed_elements_api_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-overview-of-changed-elements-api"
  }, "2. Overview of Changed Elements API"), (0,react_.mdx)("p", null, "Before diving into writing code to leverage the changed elements API with an iTwin.js application, let\u2019s take a look at the operations that are available in the API first")), (0,react_.mdx)(changed_elements_api_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "21-enabling-change-tracking"
  }, "2.1 Enabling Change Tracking"), (0,react_.mdx)("p", null, "This is the first operation of the API and is used to enable change tracking of an iModel."), (0,react_.mdx)("p", null, "The API requires the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "changedelements:modify"), " scope to be added to your App. It can be added to your apps in the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/my-apps/"
  }, "Developer Portal"), ".")), (0,react_.mdx)(changed_elements_api_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "211-what-is-change-tracking-and-why-do-we-need-it"
  }, "2.1.1 What is change tracking and why do we need it?"), (0,react_.mdx)("p", null, "An iModel evolves over time. Every time a design file is changed and the iModel is synchronized, new ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/learning/imodelhub/briefcases/#changesets"
  }, "Changesets"), " are published to the iModel, updating the iModel data."), (0,react_.mdx)("p", null, "An iModel may contain graphical elements that are related to business data. For example, let\u2019s think about a piece of equipment:"), (0,react_.mdx)("div", {
    style: {
      marginTop: '16px',
      marginBottom: '16px'
    }
  }, (0,react_.mdx)("img", {
    src: '../../images/changed-elements-related-property.png',
    style: {
      margin: 'auto'
    }
  })), (0,react_.mdx)("p", null, "This equipment may be displayed in an iModel with a bare-bones ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-backend/elements/geometricelement/?term=geometric+element"
  }, "Geometric Element"), ", however, business data that relates to it (like the pump diameter in the image above), exists under the properties of a different non-graphical element."), (0,react_.mdx)("p", null, "A changeset may contain changes to the equipment\u2019s related pump diameter property, but the geometric counterpart of the equipment will not contain a change. To be able to find which elements relate to which change, you can use the Changed Elements API."), (0,react_.mdx)("p", null, "The Changed Elements API will track the iModel for changes, and when a ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/learning/imodelhub/versions/?term=named+version"
  }, "Named Version"), " is created, the API will find all related elements that have changed in each of the changesets and store a summary of them in the cloud.")), (0,react_.mdx)(changed_elements_api_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(changed_elements_api_Title, {
      mdxType: "Title"
    }, "Example HTTP Request for Enable Change Tracking Operation"), (0,react_.mdx)(changed_elements_api_CodeBlock, {
      language: "http",
      code: "PUT https://api.bentley.com/changedelements/tracking HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json\n\n{\n  \"enable\":true,\n  \"iModelId\":\"myIModelId\",\n  \"iTwinId\":\"myITwinId\"\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "212-how-do-i-enable-tracking-in-the-changed-elements-api"
  }, "2.1.2 How do I enable tracking in the Changed Elements API?"), (0,react_.mdx)("p", null, "The API has an operation to enable the changed elements feature for an iModel. As mentioned before, for this operation to work, your App needs to have the scope: ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "changedelements:modify"), "."), (0,react_.mdx)("p", null, "Here is an example request that shows how to enable the APIs change tracking for an iModel, you would just need to replace the iTwin Id, iModel Id and authorization token with your own."), (0,react_.mdx)("p", null, "The body should contain a JSON object with a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "enable"), " property, and it must be either true or false as shown in the example above."), (0,react_.mdx)("p", null, "Here is the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/changed-elements/operations/enable-change-tracking/"
  }, "documentation"), " for this operation.")), (0,react_.mdx)(changed_elements_api_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "213-my-imodel-is-being-tracked-for-change-now-what"
  }, "2.1.3 My iModel is being tracked for change, now what?"), (0,react_.mdx)("p", null, "Once change tracking is enabled for your iModel, whenever a new ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/learning/imodelhub/versions/?term=named+version"
  }, "Named Version"), " gets created, either by a design application or a ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/learning/imodel-connectors/?term=connector"
  }, "Connector"), ", the API will process the changesets and store the results of what elements have changed in your iModel."), (0,react_.mdx)("p", null, "This operation can take time, and the time it takes is dependent on data complexity and size. It is recommended to use a small iModel to do this tutorial if you are following along, as a very large iModel may take hours to process if it has never been processed and has a lot of data.")), (0,react_.mdx)(changed_elements_api_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "22-getting-changed-elements"
  }, "2.2 Getting Changed Elements"), (0,react_.mdx)("p", null, "The next operation allows us to query the API to get the elements that have changed after processing is ready. To use this operation, you must provide the start and end changeset Ids that you want to obtain results for. To get changeset Ids, you can use ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/imodels/operations/get-imodel-changesets/"
  }, "Get iModel Changesets API"), "."), (0,react_.mdx)("p", null, "The API requires the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "changedelements:read"), " scope to be added to your App. It can be added to your apps in the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/my-apps/"
  }, "Developer Portal"))), (0,react_.mdx)(changed_elements_api_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(changed_elements_api_Title, {
      mdxType: "Title"
    }, "Example HTTP Request for Get Comparison Operation"), (0,react_.mdx)(changed_elements_api_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/changedelements/comparison?iTwinId=myITwinId&iModelId=myIModelId&startChangesetId=myStartChangesetId&endChangesetId=myEndChangesetId HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(changed_elements_api_Title, {
      mdxType: "Title"
    }, "Example result from the Get Comparison Operation"), (0,react_.mdx)(changed_elements_api_CodeBlock, {
      language: "json",
      code: "{\n  \"changedElements\": {\n    \"elements\":[\"0x30000000f69\"],\n    \"classIds\":[\"0x670\"],\n    \"opcodes\":[23],\n    \"modelIds\":[\"0x20000000002\"],\n    \"type\":[1],\n    \"properties\":[[\"UserLabel\"]],\n    \"oldChecksums\":[[1448094486]],\n    \"newChecksums\":[[362149254]],\n    \"parentIds\":[\"0\"],\n    \"parentClassIds\":[\"0\"]\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "221-using-the-api-to-get-changed-elements"
  }, "2.2.1 Using the API to get changed elements"), (0,react_.mdx)("p", null, "Here is an example request that shows how to get the changed elements between two changesets, ensure to replace the iTwin Id, iModel Id, start changeset Id, end changeset Id and authorization token with your own."), (0,react_.mdx)("p", null, "This operation will return a JSON object that contains which elements have changed between the two given changeset Ids. The returned JSON corresponds to the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-common/entities/changedelements/"
  }, "ChangedElements"), " interface. We will explore the format a bit more in the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "#41-changed-elements-json"
  }, "Changed Elements JSON Section"), ". Here\u2019s an example of the data returned for a single element that changed:"), (0,react_.mdx)(changed_elements_api_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "The results are inclusive to both start and end changesets. This means that the changes found in both changesets will be contained in the results. This is important to think about because if you have an iModel with 2 Named Versions, A and B, and you want to get what has changed between A and B, you should *not* include A's changeset in the query. Consider the following example:", (0,react_.mdx)("div", {
    style: {
      marginTop: '16px',
      marginBottom: '16px'
    }
  }, (0,react_.mdx)("img", {
    src: '../../images/changed-elements-changeset-example.png',
    style: {
      margin: 'auto'
    }
  })), (0,react_.mdx)("p", null, "In the example above, even though Changeset 2 is the changeset related to Named Version A, to get what has changed between A and B, start changeset should be Changeset 3 and end changeset should be Changeset 4, as Changeset 2 is already applied to the iModel in Named Version A."), (0,react_.mdx)("p", null, "Another thing to keep in mind is that if you want to obtain changed elements for a single changeset, since the range is inclusive, you can provide the same changeset Id for start and end changesets, and it will return the elements for the given changeset."), (0,react_.mdx)("p", null, "Here\u2019s the ", (0,react_.mdx)("a", {
    style: {
      textDecoration: "underline"
    },
    href: "/apis/changed-elements/operations/get-comparison/"
  }, "documentation"), " for this operation."))), (0,react_.mdx)(changed_elements_api_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-putting-it-to-work"
  }, "3. Putting it to work"), (0,react_.mdx)("p", null, "Now that we have covered how the API works, we will use it to create a simple application that can visualize change."), (0,react_.mdx)("p", null, "We will implement a simple widget that will allow us to use both operations of the changed elements API. It will have a button to enable change tracking, a dropdown that will allow us to pick a named version and another button to visualize the differences between the current version and the one selected in the dropdown.")), (0,react_.mdx)(changed_elements_api_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(changed_elements_api_Title, {
      mdxType: "Title"
    }, "Necessary imports"), (0,react_.mdx)(changed_elements_api_CodeBlock, {
      language: "typescript",
      code: "import { IModelApp, IModelConnection } from \"@itwin/core-frontend\";\nimport { IModelsClient, NamedVersion, NamedVersionState, toArray } from \"@itwin/imodels-client-management\";\nimport { Button, LabeledSelect, SelectOption } from \"@itwin/itwinui-react\";\nimport React, { useEffect, useState } from \"react\";\nimport { useCallback } from \"react\";\nimport { ChangedElementsFeatureOverrides } from \"./ChangedElemensFeatureOverrides\";\nimport { ChangedElementsClient } from \"./ChangedElementsClient\";\nimport \"./ChangedElementsWidget.scss\";\n\n/**\n * React hook to query named versions\n * @param props \n * @returns \n */\nfunction useNamedVersions(props: { iModel: IModelConnection | undefined }) {\n  const [versions, setVersions] = useState<NamedVersion[]>();\n\n  // Load named versions that can be used for comparison\n  useEffect(() => {\n    const loadChangesets = async () => {\n      // Ensure we have a proper iModel with an iModel Id\n      if (props.iModel?.iModelId === undefined) {\n        console.error(\"iModel is not valid\");\n        return;\n      }\n      /** Uses the IModelClient to the request the Named Version of the IModel. Only selects name and changeset id.  Limited to top 10 Named Versions. */\n      const client = new IModelsClient();\n      const iModelIterator = client.namedVersions.getRepresentationList({\n        urlParams: { $top: 10 },\n        iModelId: props.iModel.iModelId,\n        authorization: ChangedElementsClient.getAuthorization,\n      });\n\n      // Get the versions and set them to our state\n      const namedVersions = (await toArray(iModelIterator)).filter((version) => version.state === NamedVersionState.Visible);\n      setVersions(namedVersions);\n    };\n    // Call the asynchronous function to load named versions\n    loadChangesets();\n  }, [props.iModel]);\n\n  return versions;\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(changed_elements_api_Title, {
      mdxType: "Title"
    }, "Write the widget UI component"), (0,react_.mdx)(changed_elements_api_CodeBlock, {
      language: "typescript",
      code: "export interface ChangedElementsWidgetProps {\n  iModel: IModelConnection | undefined;\n}\n\nexport function ChangedElementsWidget(props: ChangedElementsWidgetProps) {\n  // Named versions of the iModel\n  const versions = useNamedVersions(props);\n  // Named version selected in dropdown\n  const [selectedVersion, setSelectedVersion] = useState<NamedVersion | undefined>();\n\n  // Callback for when clicking the 'Visualize Changed Elements' button\n  const onVisualizeChangedElements = useCallback(async () => {\n    // We will implement this later in the tutorial\n  }, []);\n\n  // Callback for when clicking the 'Enable Change Tracking' button\n  const onEnableTracking = useCallback(async () => {\n     // We will implement this later in the tutorial\n  }, []);\n\n  const selectOptions: SelectOption<NamedVersion | undefined>[] = [];\n  if (versions) {\n    for (const version of versions) {\n      selectOptions.push({\n        value: version,\n        label: version.name ?? \"Unknown Named Version\"\n      });\n    }\n  }\n\n  // On react select change set the new selected version\n  const onReactSelectChange = (option: any) => {\n    setSelectedVersion(option);\n  };\n\n  return (\n    <div className=\"widget-container\">\n      <div className=\"widget-label\">Select Named Version:</div>\n      <LabeledSelect\n        value={selectedVersion}\n        options={selectOptions}\n        onChange={onReactSelectChange} />\n      <Button className={\"widget-button\"} onClick={onVisualizeChangedElements}>\n        Visualize Changed Elements\n      </Button>\n      <Button className={\"widget-button\"} onClick={onEnableTracking}>\n        Enable Change Tracking\n      </Button>\n    </div>\n  );\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(changed_elements_api_Title, {
      mdxType: "Title"
    }, "SCSS for the UI Component"), (0,react_.mdx)(changed_elements_api_CodeBlock, {
      language: "scss",
      code: ".widget-container {\n  margin: 8px;\n}\n\n.widget-label {\n  color: white;\n  font-size: 14px;\n}\n\n.widget-button {\n  width: 100%;\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "31-creating-the-widget"
  }, "3.1 Creating the widget"), (0,react_.mdx)("p", null, "After cloning the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "main"), " branch of the repository, create a new .tsx file and call it ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ChangedElementsWidget.tsx"), ". We are going to write a react hook that will allow us to query the named versions of the iModel, so that we can populate the dropdown list to select our version to compare against."), (0,react_.mdx)("p", null, "The named versions object also contains the Id of the changesets, which we will use later on to do the API calls."), (0,react_.mdx)("p", null, "Now that we have a working react hook for that purpose, we can write our widget component. The widget will have a label, a react select dropdown and two buttons. We will write the button\u2019s onClick handlers later on in the tutorial, so we will leave them empty for now."), (0,react_.mdx)("p", null, "To stylize the UI component a little bit, create a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ChangedElementsWidget.scss"), " file and add the styles shown in the code snippet."), (0,react_.mdx)("p", null, "We can now proceed to add the widget to the viewer application.")), (0,react_.mdx)(changed_elements_api_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(changed_elements_api_Title, {
      mdxType: "Title"
    }, "Create a UI Items Provider"), (0,react_.mdx)(changed_elements_api_CodeBlock, {
      language: "typescript",
      code: "import {\n  AbstractWidgetProps,\n  StagePanelLocation,\n  StagePanelSection,\n  UiItemsProvider,\n} from '@bentley/ui-abstract';\nimport { UiFramework } from '@bentley/ui-framework';\nimport * as React from 'react';\nimport { ChangedElementsWidget } from './ChangedElementsWidget';\n\nexport class ChangedElementsUiProvider implements UiItemsProvider {\n  public readonly id = 'ChangedElementsProviderId';\n  \n  public provideWidgets(\n    stageId: string,\n    stageUsage: string,\n    location: StagePanelLocation,\n    section?: StagePanelSection\n  ): ReadonlyArray<AbstractWidgetProps> {\n\n    const widgets: AbstractWidgetProps[] = [];\n    if (\n      location === StagePanelLocation.Right &&\n      section === StagePanelSection.Start\n    ) {\n      const changedElementsWidget: AbstractWidgetProps = {\n        id: 'ChangedElementsWidget',\n        label: 'Changed Elements',\n        getWidgetContent() {\n          return (\n            <ChangedElementsWidget iModel={UiFramework.getIModelConnection()} />\n          );\n        },\n      };\n\n      widgets.push(changedElementsWidget);\n    }\n\n    return widgets;\n  }\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(changed_elements_api_Title, {
      mdxType: "Title"
    }, "Import the ChangedElementsUiProvider in App.tsx"), (0,react_.mdx)(changed_elements_api_CodeBlock, {
      language: "typescript",
      code: "import { ChangedElementsUiProvider } from \"./ChangedElementsUiProvider\";",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(changed_elements_api_Title, {
      mdxType: "Title"
    }, "Add the UI Items Provider to the viewer in App.tsx"), (0,react_.mdx)(changed_elements_api_CodeBlock, {
      language: "typescript",
      code: "<Viewer\n  contextId={contextId}\n  iModelId={iModelId}\n  authConfig={{ config: authConfig }}\n  onIModelAppInit={onIModelAppInit}\n  backend={{ buddiRegion: 103 }}\n  uiProviders={[new ChangedElementsUiProvider()]}\n/>",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "32-adding-the-widget-to-the-application"
  }, "3.2 Adding the widget to the application"), (0,react_.mdx)("p", null, "Now that we have the component ready, we need to create a ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/appui-abstract/uiitemsprovider/uiitemsprovider/"
  }, "UiItemsProvider"), " that will feed the our widget to the viewer. Create a new file ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ChangedElementsUiProvider.tsx"), " to put the code in. Then, import the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ChangedElementsUiProvider"), " in our ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "App.tsx"), " file, and add the provider to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "uiProviders"), " array prop of the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Viewer"), " react component."), (0,react_.mdx)(changed_elements_api_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "If you want a more in-depth explanation on the usage of the provider, see", ' ', (0,react_.mdx)("a", {
    style: {
      textDecoration: 'underline'
    },
    href: "/tutorials/itwin-viewer-hello-world"
  }, "iTwin Viewer Hello World tutorial"), "."), (0,react_.mdx)("p", null, "Then, we must pass the provider to the viewer\u2019s react component, and it should now show in right panel like so:"), (0,react_.mdx)("div", {
    style: {
      marginTop: '16px',
      marginBottom: '16px'
    }
  }, (0,react_.mdx)("img", {
    src: '../../images/changed-elements-widget.png',
    style: {
      margin: 'auto'
    }
  })), (0,react_.mdx)("p", null, "If you want to verify that you have added the code in the right place, you can check the final results for ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/changed-elements-tutorial/blob/main/src/App.tsx"
  }, "App.tsx"), ", ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/changed-elements-tutorial/blob/main/src/ChangedElementsWidget.tsx"
  }, "ChangedElementsWidget.tsx"), " and ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/changed-elements-tutorial/blob/main/src/ChangedElementsUiProvider.tsx"
  }, "ChangedElementsUiProvider.tsx"), ". Keep in mind that the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/changed-elements-tutorial/blob/main/src/ChangedElementsWidget.tsx"
  }, "ChangedElementsWidget.tsx"), " code in the repository is already in its final state, containing button handlers that we will be adding later on in this tutorial.")), (0,react_.mdx)(changed_elements_api_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(changed_elements_api_Title, {
      mdxType: "Title"
    }, "Changed Elements Client"), (0,react_.mdx)(changed_elements_api_CodeBlock, {
      language: "typescript",
      code: "import { ChangedElements } from \"@itwin/core-common\";\nimport { IModelApp, IModelConnection } from \"@itwin/core-frontend\";\nimport { Authorization } from \"@itwin/imodels-client-management\";\n\n/**\n * Class for using the Changed Elements API\n */\nexport class ChangedElementsClient {\n  /**\n   * Get base URL for changed elements API\n   * @returns URL for changed elements API\n   */\n  public getUrl() {\n    return \"https://api.bentley.com/changedelements\";\n  }\n\n  /**\n   * Function to form the URL for the comparison operation of changed elements API\n   * @param iModelId iModel Id to query for\n   * @param iTwinId iTwin Id of the iModel\n   * @param startChangesetId Start changeset for comparison data\n   * @param endChangesetId End changeset for comparison data\n   * @returns Url for querying changed elements from the changed elements API\n   */\n  public getComparisonOperationUrl(\n    iModelId: string,\n    iTwinId: string,\n    startChangesetId: string,\n    endChangesetId: string\n  ) {\n    return this.getUrl() +\n      \"/comparison?iModelId=\" + iModelId +\n      \"&iTwinId=\" + iTwinId +\n      \"&startChangesetId=\" + startChangesetId +\n      \"&endChangesetId=\" + endChangesetId;\n  }\n\n  /**\n   * Function to form the URL for the enable change tracking operation of changed elements API\n   * @returns Url for enabling/disabling change tracking\n   */\n  public getEnableChangeTrackingUrl() {\n    return this.getUrl() + \"/tracking\"\n  }\n\n  /**\n   * Get authorization for getting named versions\n   * @returns \n   */\n  public static async getAuthorization(): Promise<Authorization> {\n    if (!IModelApp.authorizationClient)\n      throw new Error(\"AuthorizationClient is not defined. Most likely IModelApp.startup was not called yet.\");\n\n    const token = await IModelApp.authorizationClient.getAccessToken();\n    const parts = token.split(\" \");\n    return parts.length === 2\n      ? { scheme: parts[0], token: parts[1] }\n      : { scheme: \"Bearer\", token };\n  }\n\n  /**\n   * Gets the changed elements between two changesets using the changed elements API\n   * This results in a GET request to the comparison endpoint\n   * @param iModel iModel to test\n   * @param startChangesetId Start changeset Id\n   * @param endChangesetId End changeset Id\n   * @returns ChangedElements object or undefined\n   */\n  public async getComparison(\n    iModel: IModelConnection,\n    startChangesetId: string,\n    endChangesetId: string\n  ): Promise<ChangedElements | undefined> {\n    // Parse out iModel Id and iTwin Id\n    const iModelId = iModel.iModelId;\n    const iTwinId = iModel.iTwinId;\n    // Ensure they are properly defined\n    if (iModelId === undefined || iTwinId === undefined) {\n      throw new Error(\"IModel is not properly defined\");\n    }\n\n    // Get the request URL for the comparison operation\n    const url: string = this.getComparisonOperationUrl(iModelId, iTwinId, startChangesetId, endChangesetId);\n    // Options for the request\n    const authorization = await ChangedElementsClient.getAuthorization()\n    const options = {\n      method: \"GET\",\n      headers: {\n        Authorization: authorization.scheme + \" \" + authorization.token,\n        Accept: \"application/vnd.bentley.itwin-platform.v1+json\",\n      },\n    };\n    try {\n      // Execute the request\n      const response = await fetch(url, options);\n      // Ensure we got a proper response\n      const body = await response.json();\n      if (response.status === 200 && body?.changedElements !== undefined) {\n        // If so, cast the changedElements object of the body as a ChangedElements type\n        return body.changedElements as ChangedElements;\n      }\n      // Something went wrong, log it to console\n      console.error(\"Could not get changed elements. Status: \" + response.status + \". Body: \" + response.body);\n    } catch (e) {\n      console.error(\"Error obtaining changed elements: \" + e);\n    }\n\n    // We did not get a proper response, return undefined\n    return undefined;\n  }\n\n  /**\n   * Enable or disable change tracking for an iModel\n   * This will cause the iModel to be monitored for named versions\n   * Whenever a named version gets created, the changed elements API will process the changesets\n   * so that a comparison operation can be made against the new named versions\n   * @param iModel IModel to track change for\n   * @param value true for enabling, false for disabling\n   * @returns true if successful, false if failed\n   */\n  public async enableChangeTracking(\n    iModel: IModelConnection,\n    value: boolean,\n  ): Promise<boolean> {\n    // Parse out iModel Id and iTwin Id\n    const iModelId = iModel.iModelId;\n    const iTwinId = iModel.iTwinId;\n    // Ensure they are properly defined\n    if (iModelId === undefined || iTwinId === undefined) {\n      throw new Error(\"IModel is not properly defined\");\n    }\n\n    // Get the request URL for the comparison operation\n    const url: string = this.getEnableChangeTrackingUrl();\n\n    const authorization = await ChangedElementsClient.getAuthorization()\n    // Options for the request\n    const options = {\n      method: \"PUT\",\n      headers: {\n        Authorization: authorization.scheme + \" \" + authorization.token,\n        Accept: \"application/vnd.bentley.itwin-platform.v1+json\",\n      },\n      body: JSON.stringify({\n        enable: value,\n        iModelId,\n        iTwinId,\n      })\n    };\n    try {\n      // Execute the request\n      const response = await fetch(url, options);\n      // Ensure we get a proper response\n      if (response.status === 202) {\n        return true;\n      }\n      // Something went wrong, log it to console\n      console.error(\"Could not enable change tracking. Status: \" + response.status + \". Body: \" + response.body);\n    } catch (e) {\n      console.error(\"Error change tracking: \" + e);\n    }\n\n    // We did not get a proper response, return undefined\n    return false;\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "33-writing-a-client-for-the-api"
  }, "3.3 Writing a client for the API"), (0,react_.mdx)("p", null, "To use the API in our viewer, we will need to create a client class that interfaces with the API and gives us the proper results."), (0,react_.mdx)("p", null, "Create a new file called ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ChangedElementsClient.ts"), " and create a class like shown in the code snippet. We are first going to write functions to create the correct URLs for our operations based on some input parameters, like our iModel\u2019s Id and changeset Ids."), (0,react_.mdx)("p", null, "Now that we have the scaffolding for the client class, let\u2019s add functions for calling the API for each operation."), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "getComparison"), " function will use the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/changed-elements/operations/get-comparison/"
  }, "Get Comparison"), " endpoint to get the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-common/entities/changedelements/"
  }, "ChangedElements"), " that were found between the given changesets, for a given iModel."), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "enableChangeTracking"), " function will use the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/changed-elements/operations/enable-change-tracking/"
  }, "Enable Change Tracking"), " endpoint to enable or disable tracking for an iModel."), (0,react_.mdx)("p", null, "Both operations require an authorization token. The repository comes with a simple ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "AuthorizationClient"), " class that will get the necessary tokens as long as your ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, ".env"), " file is properly setup as explained in the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/changed-elements-tutorial/blob/main/README.md"
  }, "README"), " of the repo"), (0,react_.mdx)("p", null, "Here\u2019s what the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/changed-elements-tutorial/blob/main/src/ChangedElementsClient.ts"
  }, "ChangedElementsClient.ts"), " file should look like when you are done with this section.")), (0,react_.mdx)(changed_elements_api_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(changed_elements_api_Title, {
      mdxType: "Title"
    }, "Import the ChangedElementsClient class in ChangedElementsWidget"), (0,react_.mdx)(changed_elements_api_CodeBlock, {
      language: "typescript",
      code: "import { ChangedElementsClient } from \"./ChangedElementsClient\"; ",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(changed_elements_api_Title, {
      mdxType: "Title"
    }, "Enable Change Tracking Button Handler"), (0,react_.mdx)(changed_elements_api_CodeBlock, {
      language: "typescript",
      code: "// Callback for when clicking the 'Enable Change Tracking' button\nconst onEnableTracking = useCallback(async () => {\n  const iModel = props.iModel;\n  // Ensure our iModel is defined\n  if (iModel) {\n    // Create a changed elements client object\n    const client = new ChangedElementsClient();\n    // Enable change tracking for the iModel\n    await client.enableChangeTracking(iModel, true);\n  }\n}, [props.iModel]);\n",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(changed_elements_api_Title, {
      mdxType: "Title"
    }, "Visualize Changed Elements Button Handler"), (0,react_.mdx)(changed_elements_api_CodeBlock, {
      language: "typescript",
      code: "// Callback for when clicking the 'Visualize Changed Elements' button\n  const onVisualizeChangedElements = useCallback(async () => {\n    const iModel = props.iModel;\n    if (iModel === undefined || iModel.changeset.id === undefined) {\n      console.error(\"iModel is not valid\");\n      return;\n    }\n    if (selectedVersion?.changesetId === undefined || selectedVersion.changesetId == null) {\n      console.error(\"Selected version is not defined\");\n      return;\n    }\n    const client = new ChangedElementsClient();\n    const endChangesetId = iModel.changeset.id;\n    const startChangesetId = selectedVersion.changesetId;\n    const changedElements = await client.getComparison(\n      iModel,\n      startChangesetId,\n      endChangesetId\n    );\n    // Log the results to console to inspect them\n    console.log(changedElements);\n    const viewport = IModelApp.viewManager.selectedView;\n    if (changedElements && viewport) {\n      // Emphasize the changed elements in the view\n      EmphasizeElements.getOrCreate(viewport).emphasizeElements(\n        changedElements.elements,\n        viewport\n      );\n    }\n  }, [selectedVersion, props.iModel]);",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "34-using-the-client"
  }, "3.4 Using the client"), (0,react_.mdx)("p", null, "Now, we must implement the onClick handlers of the widget buttons so that they use the client and call the necessary API endpoints. First, ensure you import the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ChangedElementsClient"), " to be used in the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ChangedElementsWidget.tsx"), " file."), (0,react_.mdx)("p", null, "For enabling change tracking, all we need to do is use the client\u2019s ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "enableChangeTracking"), " method we wrote earlier. Paste the code in the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "onEnableTracking"), " callback that we left blank earlier in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "#31-creating-the-widget"
  }, "Section 3.1"), ". For this to work, we just need to pass the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iModel"), " object and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "true"), " to the client\u2019s function. If you have not enabled change tracking on your iModel yet, do so now. Keep in mind that as mentioned in section 2.1.3, processing may take a while, so take a break and get some coffee to ensure that the API processes your iModel."), (0,react_.mdx)("p", null, "For visualizing changed elements, we are going to need to use the client\u2019s ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "getComparison"), " method. This requires us to pass the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iModel"), " object, ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "startChangesetId"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "endChangesetId"), ". We can obtain the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iModel"), " from the passed props of the widget. The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "endChangesetId"), " we can obtain by looking at the iModel\u2019s current changeset. For ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "startChangesetId"), ", we need to use the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "selectedVersion"), " variable we setup in the widget that should contain the changeset Id of the named version that got selected by the user. Paste the code in the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "onVisualizeChangedElements"), " callback that we left blank earlier in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "#31-creating-the-widget"
  }, "Section 3.1"), ". If you get a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "404"), " response from the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/changed-elements/operations/get-comparison/"
  }, "Get Comparison"), " operation, it means the API has not yet processed your iModel, and you must wait."), (0,react_.mdx)("p", null, "If authorization has been properly setup, you should obtain results from the API. To display the results in the viewport, let\u2019s emphasize the elements that have changed on the screen. We can use the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/rendering/emphasizeelements/"
  }, "EmphasizeElements"), " class, which is a ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/views/featureoverrideprovider/"
  }, "FeatureOverrideProvider"), " that will highlight the elements on the viewport."), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "changedElements.elements"), " is an array that contains the element Ids of all elements that have changed in the iModel between the changesets that we are looking at. Here\u2019s more information about the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-common/entities/changedelements/"
  }, "ChangedElements"), " result."), (0,react_.mdx)("p", null, "Here\u2019s what the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/changed-elements-tutorial/blob/main/src/ChangedElementsWidget.tsx"
  }, "ChangedElementsWidget.tsx"), " file should look like when you are done with this section.")), (0,react_.mdx)(changed_elements_api_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(changed_elements_api_Title, {
      mdxType: "Title"
    }, "Changed Elements Feature Override Provider"), (0,react_.mdx)(changed_elements_api_CodeBlock, {
      language: "typescript",
      code: "import { DbOpcode, Id64String } from \"@itwin/core-bentley\";\nimport { ChangedElements, FeatureAppearance } from \"@itwin/core-common\";\nimport { FeatureOverrideProvider, FeatureSymbology, Viewport } from \"@itwin/core-frontend\";\n\n/**\n * Feature Override Provider to visualize changed elements and colorize them\n * in the viewport\n */\nexport class ChangedElementsFeatureOverrides implements FeatureOverrideProvider {\n  // Array of inserted element Ids\n  private _insertedElements: Id64String[] = [];\n  // Array of updated element Ids\n  private _updatedElements: Id64String[] = [];\n\n  /**\n   * Constructor\n   * @param changedElements Changed Elements to visualize\n   */\n  public constructor(changedElements: ChangedElements) {\n    // Go over all changed elements array, all arrays are guaranteed to have same size\n    for (let i = 0; i < changedElements.elements.length; ++i) {\n      // Element Id of the changed element\n      const elementId: Id64String = changedElements.elements[i];\n      // Operation code of the changed element\n      const opcode: DbOpcode = changedElements.opcodes[i];\n      // Add the element Id to the proper list\n      switch (opcode) {\n        case DbOpcode.Delete:\n          // Deleted elements do not exist in the current version of the iModel\n          // Displaying non-iModel elements in the same view is out of scope for this tutorial\n          break;\n        case DbOpcode.Update:\n          this._updatedElements.push(elementId);\n          break;\n        case DbOpcode.Insert:\n          this._insertedElements.push(elementId);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Adds the colorization and emphasis of the elements we care about\n   * @param overrides Overrides to be updated with our changed elements\n   * @param viewport Viewport we are overriding features on\n   */\n  public addFeatureOverrides(overrides: FeatureSymbology.Overrides, viewport: Viewport): void {\n    // Create a default appearance for non-changed elements, set it to transparent light gray\n    const defaultAppearance = FeatureAppearance.fromJSON({\n      rgb: {r: 200, g: 200, b: 200},\n      transparency: 0.9,\n      // Make unchanged elements non-locatable\n      // This is to allow selecting changed elements that are behind unchanged elements in the view\n      nonLocatable: true,\n    });\n    // Override the default coloring for all other elements\n    overrides.setDefaultOverrides(defaultAppearance);\n\n    // Create an appearance with the color green for inserted elements and emphasize them\n    const insertedAppearance = FeatureAppearance.fromJSON({\n      rgb: {r: 0, g: 255, b: 0},\n      emphasized: true,\n    });\n    // Override the inserted elements with the appearance\n    this._insertedElements.forEach((elementId: string) => {\n      overrides.override({\n        elementId,\n        appearance: insertedAppearance\n      });\n    });\n\n    // Create an appearance with the color blue for updated elements\n    const updatedAppearance = FeatureAppearance.fromJSON({\n      rgb: {r: 0, g: 0, b: 255},\n      emphasized: true\n    });\n    // Override the updated elements with the appearance\n    this._updatedElements.forEach((elementId: string) => {\n      overrides.override({\n        elementId,\n        appearance: updatedAppearance\n      });\n    });\n  }\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(changed_elements_api_Title, {
      mdxType: "Title"
    }, "Updated Visualize Changed Elements Button Callback"), (0,react_.mdx)(changed_elements_api_CodeBlock, {
      language: "typescript",
      code: "// Updated callback for when clicking the 'Visualize Changed Elements' button\n  const onVisualizeChangedElements = useCallback(async () => {\n    const iModel = props.iModel;\n    if (iModel === undefined || iModel.changeset.id === undefined) {\n      console.error(\"iModel is not valid\");\n      return;\n    }\n    if (selectedVersion?.changesetId === undefined || selectedVersion.changesetId == null) {\n      console.error(\"Selected version is not defined\");\n      return;\n    }\n    const client = new ChangedElementsClient();\n    const endChangesetId = iModel.changeset.id;\n    const startChangesetId = selectedVersion.changesetId;\n    const changedElements = await client.getComparison(\n      iModel,\n      startChangesetId,\n      endChangesetId\n    );\n    // Log the results to console to inspect them\n    console.log(changedElements);\n\n    const viewport = IModelApp.viewManager.selectedView;\n    if (changedElements && viewport) {\n      // Ensure we are not currently visualizing changed elements\n      const oldProvider = viewport.findFeatureOverrideProviderOfType(ChangedElementsFeatureOverrides);\n      if (oldProvider) {\n        // If we are, drop the override provider so that we start with a clean viewport\n        viewport.dropFeatureOverrideProvider(oldProvider);\n      }\n      // Create our feature override provider object\n      const overrideProvider = new ChangedElementsFeatureOverrides(changedElements);\n      // Add it to the viewport\n      viewport.addFeatureOverrideProvider(overrideProvider);\n    }\n  }, [selectedVersion, props.iModel]);",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "35-enhancing-the-change-visualization"
  }, "3.5 Enhancing the change visualization"), (0,react_.mdx)("p", null, "By now, you should have changed elements being emphasized in your view, but it would be better if we colorize them by their operation codes, see ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-bentley/besqlite/dbopcode/"
  }, "DbOpcode"), "."), (0,react_.mdx)("p", null, "To be able to colorize the elements, we will implement our own ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/views/featureoverrideprovider/"
  }, "FeatureOverrideProvider"), ". Create a new file ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ChangedElementsFeatureOverrides.ts"), " and follow the code snippet to the right."), (0,react_.mdx)("p", null, "The provider\u2019s constructor finds which elements are inserted or updated based on their ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-bentley/besqlite/dbopcode/"
  }, "DbOpcode"), ". Then, it implements the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "addFeatureOverrides"), " function that will colorize inserted elements as green, updated elements as blue and make everything else transparent gray."), (0,react_.mdx)(changed_elements_api_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Displaying deleted elements is not as straightforward because the deleted elements are not present in the current iModel that we are displaying in the viewport. This can be done by implementing a", ' ', (0,react_.mdx)("a", {
    style: {
      textDecoration: 'underline'
    },
    href: "https://www.itwinjs.org/reference/imodeljs-frontend/views/tiledgraphicsprovider/"
  }, "TiledGraphicsProvider"), ", but this is out of the scope for this tutorial."), (0,react_.mdx)("p", null, "Now that we have a feature override provider that will colorize our elements properly, let\u2019s use it in our ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "onVisualizeChangedElements"), " button callback. Import the class in ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ChangedElementsWidget.tsx"), "."), (0,react_.mdx)("p", null, "Before adding a provider to the viewport, t\u2019s important to drop any feature override providers from the viewport before we add one to ensure we start with a clean viewport each time."), (0,react_.mdx)("p", null, "You should now be able to see the elements colorized, showing inserted elements as green and updated elements as blue whenever we click the visualize button:"), (0,react_.mdx)("div", {
    style: {
      marginTop: '16px',
      marginBottom: '16px'
    }
  }, (0,react_.mdx)("img", {
    src: '../../images/changed-elements-colorized.png',
    style: {
      margin: 'auto'
    }
  })), (0,react_.mdx)("p", null, "Here\u2019s what the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/changed-elements-tutorial/blob/main/src/ChangedElemensFeatureOverrides.ts"
  }, "ChangedElementsFeatureOverrides.ts"), " file should look like when you are done with this section.")), (0,react_.mdx)(changed_elements_api_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "36-about-changed-properties"
  }, "3.6 About changed properties"), (0,react_.mdx)("p", null, "We will cover working with properties from Changed Elements API in a different tutorial, but here\u2019s an overview of what\u2019s provided in the API:"), (0,react_.mdx)("p", null, "The API returns a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "properties"), " array that contains the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "EC Property Access Strings"), " of any properties that had changes between the two versions being queried. The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "properties"), " array is 2-dimensional, the first index corresponds to the element you are looking at, the second index will allow you to iterate through all properties that changed in the element."), (0,react_.mdx)("p", null, "As explained in the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "#21-enabling-change-tracking"
  }, "Enabling Change Tracking Section"), ", the properties of an element may not live in the element itself, so we can\u2019t simply query for its value using ECSQL, the element Id and the property access string."), (0,react_.mdx)("p", null, "To properly inspect an elements properties, including properties that do not exist on the element, we need to use ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/presentation/"
  }, "iTwin.js Presentation Library"), ", which is out of scope for this tutorial."), (0,react_.mdx)("p", null, "The change data also contains the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "newChecksums"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "oldChecksums"), " arrays. Each property of an element will have a matching new and old checksum. These arrays are useful to quickly check if the property value indeed has changed, or if it has flipped back and forth to the same value between versions.")), (0,react_.mdx)(changed_elements_api_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-making-sense-of-changed-elements-data"
  }, "4. Making sense of Changed Elements data"), (0,react_.mdx)("p", null, "The returned data is a JSON object that contains arrays of data. Each of these arrays are of the same length. This length is the number of changed elements that were found during processing.")), (0,react_.mdx)(changed_elements_api_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "41-changed-elements-json"
  }, "4.1 Changed Elements JSON"), (0,react_.mdx)("p", null, (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-common/entities/changedelements/"
  }, "ChangedElements"), " class is defined in the @bentley/imodeljs-common package."), (0,react_.mdx)("p", null, "As mentioned before, this interface contains different arrays. Let\u2019s go over each of the arrays and what they are:"), (0,react_.mdx)("h5", {
    "id": "elements"
  }, (0,react_.mdx)("strong", {
    parentName: "h5"
  }, "elements")), (0,react_.mdx)("p", null, "Contains the element Ids of the changed elements. This is useful if you want to query the iModel for more information about the element."), (0,react_.mdx)("h5", {
    "id": "classids"
  }, (0,react_.mdx)("strong", {
    parentName: "h5"
  }, "classIds")), (0,react_.mdx)("p", null, "Contains the ECClass Ids of the changed elements. This is useful if you want to access specific properties of the element that are in its ECClass."), (0,react_.mdx)("h5", {
    "id": "opcodes"
  }, (0,react_.mdx)("strong", {
    parentName: "h5"
  }, "opcodes")), (0,react_.mdx)("p", null, "Contains the operation codes that tells us if the element was inserted, updated or deleted in the change. See ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-bentley/besqlite/dbopcode/"
  }, "DbOpcode")), (0,react_.mdx)("h5", {
    "id": "type"
  }, (0,react_.mdx)("strong", {
    parentName: "h5"
  }, "type")), (0,react_.mdx)("p", null, "Contains the type of change that occurred to the element. This number is a bitflag, and can be used to know whether the element had property changes, geometric changes, placement changes, indirect changes and/or hidden property changes."), (0,react_.mdx)("h5", {
    "id": "modelids"
  }, (0,react_.mdx)("strong", {
    parentName: "h5"
  }, "modelIds")), (0,react_.mdx)("p", null, "Contains the model Ids of the changed elements. This is useful for visualization purposes, like ensuring the model the changed element resides in is displayed in the viewport."), (0,react_.mdx)("h5", {
    "id": "properties"
  }, (0,react_.mdx)("strong", {
    parentName: "h5"
  }, "properties")), (0,react_.mdx)("p", null, "Contains the property accessor string names of changed properties an element may have. This property accessor string can be used in conjunction with the element\u2019s class Id to obtain the property value."), (0,react_.mdx)("h5", {
    "id": "oldchecksums"
  }, (0,react_.mdx)("strong", {
    parentName: "h5"
  }, "oldChecksums")), (0,react_.mdx)("p", null, "Contains the old checksum for the property value of the index that matches the property array. This is useful to determine using newChecksums array, whether the property value has indeed changed in the before and after states of the iModel. This is useful because there are cases in which a property may be flipped back and forth, and you may still want to know it was touched, but you can determine whether the change is valuable using a simple checksum comparison."), (0,react_.mdx)("h5", {
    "id": "newchecksums"
  }, (0,react_.mdx)("strong", {
    parentName: "h5"
  }, "newChecksums")), (0,react_.mdx)("p", null, "Contains the new checksum for the property value of the index that matches the property array"), (0,react_.mdx)("h5", {
    "id": "parentids"
  }, (0,react_.mdx)("strong", {
    parentName: "h5"
  }, "parentIds")), (0,react_.mdx)("p", null, "Contains the parent Id of the element. If the element does not have a parent, this id will be \u201C0\u201D"), (0,react_.mdx)("h5", {
    "id": "parentclassids"
  }, (0,react_.mdx)("strong", {
    parentName: "h5"
  }, "parentClassIds")), (0,react_.mdx)("p", null, "Contains the ECClass Id of the parent of the element. If the element does not have a parent, this id will be \u201C0\u201D")), (0,react_.mdx)(changed_elements_api_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "conclusion"
  }, "Conclusion"), (0,react_.mdx)("p", null, "Congratulations on completing this tutorial, at this point you should have been able to visualize change using the API! In conclusion, the Changed Elements API can help you understand what elements have changed in your iModel and how they have changed between the given changesets. You could use this API to generate reports, visualize change using an iTwin.js application like we did in this tutorial, or review properties that have changed on the elements that you find relevant in your iModel.")), (0,react_.mdx)(changed_elements_api_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(changed_elements_api_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(changed_elements_api_ResourceTile, {
    title: "Create React App",
    href: "https://create-react-app.dev",
    description: "Set up a modern web app by running one command.",
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(changed_elements_api_ResourceTile, {
    title: "iTwin Viewer React",
    href: "https://www.npmjs.com/package/@itwin/web-viewer-react",
    description: (0,react_.mdx)((external_react_default()).Fragment, null, "The iTwin Viewer is a configurable iTwin.js viewer that offers basic tooling and widgets out-of-the-box and can be further extended through the use of ", (0,react_.mdx)("a", {
      href: "https://github.com/imodeljs/extension-sample",
      target: "_blank"
    }, "iTwin.js extensions"), ". This package contains the Viewer as a React component and some additional Typescript APIs."),
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(changed_elements_api_ResourceTile, {
    title: "iTwin Viewer Create React App Template",
    href: "https://www.npmjs.com/package/@itwin/cra-template-web-viewer",
    description: (0,react_.mdx)((external_react_default()).Fragment, null, "This is a template for applications that are based on the ", (0,react_.mdx)("a", {
      href: "https://github.com/iTwin/viewer/tree/master/packages/modules/web-viewer-react",
      target: "_blank"
    }, "iTwin Viewer"), " for ", (0,react_.mdx)("a", {
      href: "https://github.com/facebook/create-react-app",
      target: "_blank"
    }, "Create React App"), "."),
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(changed_elements_api_ResourceTile, {
    title: "Bentley React Scripts",
    href: "https://www.npmjs.com/package/@bentley/react-scripts",
    description: "This is the iTwin.js fork of react-scripts.",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
changed_elements_api_MDXContent.isMDXComponent = true;
var changed_elements_api_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "1-set-up-your-environment",
    level: 2,
    title: "1. Set up your environment",
    children: [{
      id: "11-required-materials",
      level: 3,
      title: "1.1 Required materials",
      children: []
    }, {
      id: "12-suggested-materials",
      level: 3,
      title: "1.2 Suggested materials",
      children: []
    }]
  }, {
    id: "2-overview-of-changed-elements-api",
    level: 2,
    title: "2. Overview of Changed Elements API",
    children: [{
      id: "21-enabling-change-tracking",
      level: 3,
      title: "2.1 Enabling Change Tracking",
      children: []
    }, {
      id: "22-getting-changed-elements",
      level: 3,
      title: "2.2 Getting Changed Elements",
      children: []
    }]
  }, {
    id: "3-putting-it-to-work",
    level: 2,
    title: "3. Putting it to work",
    children: [{
      id: "31-creating-the-widget",
      level: 3,
      title: "3.1 Creating the widget",
      children: []
    }, {
      id: "32-adding-the-widget-to-the-application",
      level: 3,
      title: "3.2 Adding the widget to the application",
      children: []
    }, {
      id: "33-writing-a-client-for-the-api",
      level: 3,
      title: "3.3 Writing a client for the API",
      children: []
    }, {
      id: "34-using-the-client",
      level: 3,
      title: "3.4 Using the client",
      children: []
    }, {
      id: "35-enhancing-the-change-visualization",
      level: 3,
      title: "3.5 Enhancing the change visualization",
      children: []
    }, {
      id: "36-about-changed-properties",
      level: 3,
      title: "3.6 About changed properties",
      children: []
    }]
  }, {
    id: "4-making-sense-of-changed-elements-data",
    level: 2,
    title: "4. Making sense of Changed Elements data",
    children: [{
      id: "41-changed-elements-json",
      level: 3,
      title: "4.1 Changed Elements JSON",
      children: []
    }]
  }, {
    id: "conclusion",
    level: 2,
    title: "Conclusion",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var changed_elements_api_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/clash-suppression-rules-basics.mdx


var clash_suppression_rules_basics_excluded = ["components"];
var clash_suppression_rules_basics_jsx = (external_react_default()).createElement;


var clash_suppression_rules_basics_readingTime = {
  "text": "9 min read",
  "minutes": 8.15,
  "time": 489000,
  "words": 1630
};
/* @jsxRuntime classic */
/* @jsx mdx */

var clash_suppression_rules_basics_metadata = {
  title: 'Clash Suppression Rules Basics',
  tile: {
    name: 'Clash Suppression Rules Basics',
    description: 'Walk-through of the creation and usage of suppression rules for clash detection tests.',
    href: '/tutorials/clash-suppression-rules-basics/',
    thumbnail: '/images/ClashDetectionSample.png',
    durationInMinutes: 20,
    relatedApiIds: ['clashdetection']
  }
};
var clash_suppression_rules_basics_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var clash_suppression_rules_basics_Introduction = clash_suppression_rules_basics_makeShortcode("Introduction");
var clash_suppression_rules_basics_TutorialSection = clash_suppression_rules_basics_makeShortcode("TutorialSection");
var clash_suppression_rules_basics_Alert = clash_suppression_rules_basics_makeShortcode("Alert");
var clash_suppression_rules_basics_Title = clash_suppression_rules_basics_makeShortcode("Title");
var clash_suppression_rules_basics_CodeBlock = clash_suppression_rules_basics_makeShortcode("CodeBlock");
var clash_suppression_rules_basics_ContinueLearningSection = clash_suppression_rules_basics_makeShortcode("ContinueLearningSection");
var clash_suppression_rules_basics_TileList = clash_suppression_rules_basics_makeShortcode("TileList");
var clash_suppression_rules_basics_ResourceTile = clash_suppression_rules_basics_makeShortcode("ResourceTile");
var clash_suppression_rules_basics_layoutProps = {
  metadata: clash_suppression_rules_basics_metadata
};
var clash_suppression_rules_basics_MDXLayout = "wrapper";
function clash_suppression_rules_basics_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, clash_suppression_rules_basics_excluded);
  return (0,react_.mdx)(clash_suppression_rules_basics_MDXLayout, (0,esm_extends/* default */.Z)({}, clash_suppression_rules_basics_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(clash_suppression_rules_basics_Introduction, {
    skillLevel: "Intermediate",
    durationInMinutes: "20",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "Suppression rules are rules for clash detection tests that will allow you to filter out potentially unwanted results based on properties of either or both of the clashing elements. In this tutorial, you will learn how to:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Create a suppression rule"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Associate a suppression rule with a test"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Interpret the results of a test using suppression rules"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Update your suppression rule"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Delete your suppression rule"))), (0,react_.mdx)(clash_suppression_rules_basics_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Access to an iModel and the associated projectId and imodelId for that iModel, along with the named version ID for the version you want to run the test against\n-If you do not have a model, instructions on creating one and retrieving the associated model data can be found ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/retrieve-validation-model-data"
  }, "here")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Access to an iModel and the associated projectId and imodelId for that iModel, along with the named version ID for the version you want to run the test against"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Knowledge of how to run a clash detection test", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Instructions on clash test basics, including creation and running are located ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/clash-test-basics"
  }, "here")))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Property and schema information for the rules you want to implement", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Instructions on retrieving schema information for a specific model can be found ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/retrieve-validation-model-data"
  }, "here")))))), (0,react_.mdx)(clash_suppression_rules_basics_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-get-a-token"
  }, "1. Get a token"), (0,react_.mdx)("p", null, "To make request to the API a user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application. You will need to include the scopes clashdetection:read and clashdetection:modify."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-api-reference-try-it-section"
  }, "Grab a user token from Api reference \u201CTry it\u201D Section"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/clash-detection/operations/create-clashdetection-tests/"
  }, "here")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click \u201CTry it\u201D button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "On Authorization section select \u201CAuthorizationCode\u201D."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After popup closes Authorization header with your user token value should be visible."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Save user token value for this tutorial.")), (0,react_.mdx)(clash_suppression_rules_basics_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(clash_suppression_rules_basics_TutorialSection, {
    actions: [(0,react_.mdx)(clash_suppression_rules_basics_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(clash_suppression_rules_basics_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/clashdetection/suppressionRuleTemplates?projectId=00000000-0000-0000-0000-000000000000 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_suppression_rules_basics_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(clash_suppression_rules_basics_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nPrefer: return=representation\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_suppression_rules_basics_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(clash_suppression_rules_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"suppressionRuleTemplates\":[\n    {\n      \"id\":\"0000000000000000000000000000000000000000000\",\n      \"displayName\":\"Suppression/Definition/Generic/AnyProperty\",\n      \"description\":\"Suppress clashes based on properties of any one of the clashing elements\",\n      \"prompt\":\"Suppress clashes if any one of the clashing elements has a property that satisfies the expression: -Expression-. Note: Use wild card \"_\" to match any single character, and \"%\" to match multiple characters\",\n      \"templateExpression\":{\n        \"propertyExpression\":{\n          \"relationshipPath\":\"ArchitecturalPhysical:Door\",\n          \"propertyName\":\"Origin\",\n          \"operator\":\"IS NOT NULL\",\n          \"propertyValue\":\"\"\n        }\n      }\n    }\n  ],\n  \"_links\":{\n    \"next\":{\n      \"href\":\"https://api.bentley.com/clashdetection/suppressionRuleTemplates?projectId=00000000-0000-0000-0000-000000000000&continuationToken=00000000000000000000000000000000000000\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-suppression-rules-templates"
  }, "2. Get Suppression Rules Templates"), (0,react_.mdx)("p", null, "Suppression rules work by checking elements in a valid clash against specific criteria. A rule can suppress a clash based on matching query criteria on a single element in a clash, matching criteria on both elements in a clash, or even matching criteria based on the relationship between two elements in a clash."), (0,react_.mdx)("p", null, "To make it simpler, we\u2019ve provided a variety of suppression rule templates. A HTTP ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GET https://api.bentley.com/clashdetection/suppressionRuleTemplates?projectId[&continuationToken][&$top]"), " request will return all of the valid suppression rule templates for the given project id. You simply choose the template that sounds best suited for your goals based on the prompt description.")), (0,react_.mdx)(clash_suppression_rules_basics_TutorialSection, {
    actions: [(0,react_.mdx)(clash_suppression_rules_basics_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(clash_suppression_rules_basics_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/clashdetection/suppressionRules HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_suppression_rules_basics_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(clash_suppression_rules_basics_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nPrefer: return=representation\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_suppression_rules_basics_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(clash_suppression_rules_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"projectId\":\"00000000-0000-0000-0000-000000000000\",\n  \"displayName\":\"Suppress Long Pipes\",\n  \"reason\":\"Sample Demo\",\n  \"templateId\":\"0000000000000000000000000000000000000000000\",\n  \"parameters\":{\n    \"propertyExpression\":{\n      \"relationshipPath\":\"ProcessPhysical:IsmCurveMember\",\n      \"propertyName\":\"AutoLength\",\n      \"operator\":\">\",\n      \"propertyValue\":\"24\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_suppression_rules_basics_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(clash_suppression_rules_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"suppressionRule\":{\n    \"id\":\"0000000000000000000000000000000000000000000\",\n    \"_links\":{\n      \"self\":{\n        \"href\":\"https://api.bentley.com/clashdetection/suppressionRules/0000000000000000000000000000000000000000000\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-creating-a-suppression-rule"
  }, "3. Creating a Suppression Rule"), (0,react_.mdx)("p", null, "To create a suppression rule, you need to include the template id of your chosen template, a name for the rule, a reason that describes why the rule exists and what it covers, and the test parameters and send an HTTP request to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "POST https://api.bentley.com/clashdetection/suppressionRules")), (0,react_.mdx)("p", null, "The parameters will vary based on your chosen template. Some templates, like 'suppress clashes if clashing elements are in the same category\u2019, don\u2019t require any parameters- we don\u2019t need any more information from you, we can just check the element categories against each other. For templates that do require parameters, you should follow the guidelines set forth by the template expression."), (0,react_.mdx)("p", null, "For more advanced users, or those who wish to do something a little more complicated that isn\u2019t covered by the standard templates, there are UnaryECSql and BinaryECSql templates that are essentially freeform and allow you to write the desired query criteria yourself in an ECSql expression."), (0,react_.mdx)("p", null, "If your rule creation is successful, it will return the rule metadata and a rule id. This will be used in the following steps to associate the rule with a test.")), (0,react_.mdx)(clash_suppression_rules_basics_TutorialSection, {
    actions: [(0,react_.mdx)(clash_suppression_rules_basics_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(clash_suppression_rules_basics_CodeBlock, {
      language: "http",
      code: "PUT https://api.bentley.com/clashdetection/tests/000000000000000-000000000000000000000000000 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_suppression_rules_basics_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(clash_suppression_rules_basics_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nPrefer: return=representation\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_suppression_rules_basics_Title, {
      mdxType: "Title"
    }, "Update Clash Test Request Body"), (0,react_.mdx)(clash_suppression_rules_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"projectId\":\"00000000-0000-0000-0000-000000000000\",\n  \"displayName\":\"Sample Test\",\n  \"description\":\"Categories: Tag v Structure\",\n  \"setA\":{\n    \"modelIds\":[],\n    \"categoryIds\":[\"0x4000000000d\"],\n    \"selfCheck\":false,\n    \"clearance\":0\n  },\n  \"setB\":{\n    \"modelIds\":[],\n    \"categoryIds\":[\"0x40000000e71\"],\n    \"selfCheck\":false,\n    \"clearance\":0\n  },\n  \"suppressTouching\":true,\n  \"touchingTolerance\":0.001,\n  \"includeSubModels\":false,\n  \"suppressionRules\":[\"0000000000000000000000000000000000000000000\"]\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_suppression_rules_basics_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(clash_suppression_rules_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"test\":{\n    \"id\":\"000000000000000-000000000000000000000000000\",\n    \"_links\":{\n      \"self\":{\n        \"href\":\"https://api.bentley.com/clashdetection/tests/000000000000000-000000000000000000000000000\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-adding-a-suppression-rule-to-a-clash-test"
  }, "4. Adding a Suppression Rule to a Clash Test"), (0,react_.mdx)("p", null, "You can either use your suppression rule when creating a fresh clash test or when updating a previously created test. If you need a refresher, full instructions and parameter explanations for either option are located ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/clash-test-basics"
  }, "here")), (0,react_.mdx)("p", null, "The only new step for either option is including a suppression rules array in the request block properties. This will be an array of IDs including the testId returned in the previous creation step, along with any other rules you would want to associate with the test."), (0,react_.mdx)("p", null, "Note that when updating a test, this is a replacement update, so if there were previously any rules associated with a test, you will need to include them in the array if you want them to continue to be associated with the test. This also means to disassociate a suppression rule with a clash test, all you would have to do is send an update request ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "without"), " the specified ID in the suppressionRules array.")), (0,react_.mdx)(clash_suppression_rules_basics_TutorialSection, {
    actions: [(0,react_.mdx)(clash_suppression_rules_basics_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(clash_suppression_rules_basics_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/clashdetection/results/000000000000000-000000000000000000000000000 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_suppression_rules_basics_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(clash_suppression_rules_basics_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nPrefer: return=representation\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_suppression_rules_basics_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(clash_suppression_rules_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"result\":[\n    {\n      \"clashType\":\"Collision\",\n      \"clearance\":-1,\n      \"elementAId\":\"0x400000000c4\",\n      \"elementALabel\":\"1-SWS-0104-EX-OPM [4-5G]\",\n      \"elementACategoryIndex\":0,\n      \"elementAModelIndex\":0,\n      \"elementBId\":\"0x4000000003e\",\n      \"elementBLabel\":\"IsmCurveMember [4-1Q]\",\n      \"elementBCategoryIndex\":1,\n      \"elementBModelIndex\":0,\n      \"center\":{\n        \"x\":12.192031860351562,\n        \"y\":407.69541931152344,\n        \"z\":122.92329406738281\n      },\n      \"suppressingRuleIndexArray\":[0]\n    }\n  ],\n  \"categoryList\":[\n    {\n      \"id\":\"0x4000000000d\",\n      \"displayName\":\"Tag-Category\"\n    },\n    {\n      \"id\":\"0x40000000e71\",\n      \"displayName\":\"Structure\"\n    }\n  ],\n  \"modelList\":[\n    {\n      \"id\":\"0x20000000002\",\n      \"displayName\":\"Sample\"\n    }\n  ],\n  \"suppressingRuleList\":[\n    {\n      \"id\":\"0000000000000000000000000000000000000000000\",\n      \"displayName\":\"Sample Suppression Rule\"\n    }\n  ]\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-interpreting-clash-results-with-suppression-rules"
  }, "5. Interpreting Clash Results with Suppression Rules"), (0,react_.mdx)("p", null, "At this point, you should already understand the basics of how clash tests work and how to run them, so go ahead and run your updated test now, or if you need to, go ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/clash-test-basics"
  }, "here"), " to review the process."), (0,react_.mdx)("p", null, "While the process of running a test hasn\u2019t changed, the results themselves will if there were clashes affected by your new suppression rule. Clashes that fit the suppression rule criteria are not removed from results directly; rather, they have an array property (suppressingRuleIndexArray) that includes the zero-based index of any suppression rule. You can then use this array index to look up the relevant suppressing rule in the suppressingRuleList array, which includes the id and name. This will allow you to see the effect of multiple suppression rules, and which clashes they impact, without having to rerun the test multiple times.")), (0,react_.mdx)(clash_suppression_rules_basics_TutorialSection, {
    actions: [(0,react_.mdx)(clash_suppression_rules_basics_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(clash_suppression_rules_basics_CodeBlock, {
      language: "http",
      code: "PUT https://api.bentley.com/clashdetection/suppressionRules/0000000000000000000000000000000000000000000 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_suppression_rules_basics_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(clash_suppression_rules_basics_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nPrefer: return=representation\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_suppression_rules_basics_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(clash_suppression_rules_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"displayName\":\"Long Pipes Suppression Rule\",\n  \"reason\":\"Suppress long pipes over 24 meters.\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_suppression_rules_basics_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(clash_suppression_rules_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"suppressionRule\":{\n    \"id\":\"0000000000000000000000000000000000000000000\",\n    \"_links\":{\n      \"self\":{\n        \"href\":\"https://api.bentley.com/clashdetection/suppressionRules/0000000000000000000000000000000000000000000\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-updating-a-suppression-rule"
  }, "6. Updating a Suppression Rule"), (0,react_.mdx)("p", null, "To update a suppression rule is relatively simple, all you need to do is send a HTTP ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "PUT https://api.bentley.com/clashdetection/suppressionRules/{id}"), " request. However, you can only update the name and reason- you will not be able to change the rule parameters and would have to create a new rule instead. Both parameters are optional, so if you only want to update one or the other, you can only send that property during the update. You will not need to update any of the associated tests- next time you run them, they will returns responses based on the updated rule.")), (0,react_.mdx)(clash_suppression_rules_basics_TutorialSection, {
    actions: [(0,react_.mdx)(clash_suppression_rules_basics_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(clash_suppression_rules_basics_CodeBlock, {
      language: "http",
      code: "DELETE https://api.bentley.com/clashdetection/suppressionRules/0000000000000000000000000000000000000000000 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_suppression_rules_basics_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(clash_suppression_rules_basics_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nPrefer: return=representation\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "7-deleting-a-suppression-rule"
  }, "7. Deleting a Suppression Rule"), (0,react_.mdx)("p", null, "Deleting a suppression rule is also easy, just send a HTTP request to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "DELETE https://api.bentley.com/clashdetection/suppressionRules/{id}"), " Upon a successful deletion, the response body will be empty; it will only include additional information if the deletion failed."), (0,react_.mdx)("p", null, "At this time, deleting a suppression rule does not automatically delete them from associated tests, so please make an effort to update the tests in conjunction with the rule deletion to keep things consistent.")), (0,react_.mdx)(clash_suppression_rules_basics_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "8-conclusion"
  }, "8. Conclusion"), (0,react_.mdx)("p", null, "You should now be able to successfully create and update suppression rules. This will allow you to filter the number of clashes based on your specified criteria so you only have to spend time investigating the issues you think might need attention.")), (0,react_.mdx)(clash_suppression_rules_basics_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(clash_suppression_rules_basics_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(clash_suppression_rules_basics_ResourceTile, {
    title: "Validation API documentation",
    href: "/api-groups/validation/",
    description: "An overview and detailed version of Validation API documentation, including both Clash Detection and Property Validation.",
    mdxType: "ResourceTile"
  }))));
}
;
clash_suppression_rules_basics_MDXContent.isMDXComponent = true;
var clash_suppression_rules_basics_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-get-a-token",
    level: 2,
    title: "1. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-api-reference-try-it-section",
      level: 3,
      title: "Grab a user token from Api reference “Try it” Section",
      children: []
    }]
  }, {
    id: "2-get-suppression-rules-templates",
    level: 2,
    title: "2. Get Suppression Rules Templates",
    children: []
  }, {
    id: "3-creating-a-suppression-rule",
    level: 2,
    title: "3. Creating a Suppression Rule",
    children: []
  }, {
    id: "4-adding-a-suppression-rule-to-a-clash-test",
    level: 2,
    title: "4. Adding a Suppression Rule to a Clash Test",
    children: []
  }, {
    id: "5-interpreting-clash-results-with-suppression-rules",
    level: 2,
    title: "5. Interpreting Clash Results with Suppression Rules",
    children: []
  }, {
    id: "6-updating-a-suppression-rule",
    level: 2,
    title: "6. Updating a Suppression Rule",
    children: []
  }, {
    id: "7-deleting-a-suppression-rule",
    level: 2,
    title: "7. Deleting a Suppression Rule",
    children: []
  }, {
    id: "8-conclusion",
    level: 2,
    title: "8. Conclusion",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var clash_suppression_rules_basics_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/clash-test-basics.mdx


var clash_test_basics_excluded = ["components"];
var clash_test_basics_jsx = (external_react_default()).createElement;


var clash_test_basics_readingTime = {
  "text": "11 min read",
  "minutes": 10.68,
  "time": 640800,
  "words": 2136
};
/* @jsxRuntime classic */
/* @jsx mdx */

var clash_test_basics_metadata = {
  title: 'Clash Test Basics',
  tile: {
    name: 'Clash Test Basics',
    description: 'Walk-through of the clash detection lifecycle-creating, running and retrieving the results.',
    href: '/tutorials/clash-test-basics/',
    thumbnail: '/images/ClashDetectionSample.png',
    durationInMinutes: 20,
    relatedApiIds: ['clashdetection']
  }
};
var clash_test_basics_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var clash_test_basics_Introduction = clash_test_basics_makeShortcode("Introduction");
var clash_test_basics_TutorialSection = clash_test_basics_makeShortcode("TutorialSection");
var clash_test_basics_Alert = clash_test_basics_makeShortcode("Alert");
var clash_test_basics_Title = clash_test_basics_makeShortcode("Title");
var clash_test_basics_CodeBlock = clash_test_basics_makeShortcode("CodeBlock");
var clash_test_basics_ContinueLearningSection = clash_test_basics_makeShortcode("ContinueLearningSection");
var clash_test_basics_TileList = clash_test_basics_makeShortcode("TileList");
var clash_test_basics_ResourceTile = clash_test_basics_makeShortcode("ResourceTile");
var clash_test_basics_layoutProps = {
  metadata: clash_test_basics_metadata
};
var clash_test_basics_MDXLayout = "wrapper";
function clash_test_basics_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, clash_test_basics_excluded);
  return (0,react_.mdx)(clash_test_basics_MDXLayout, (0,esm_extends/* default */.Z)({}, clash_test_basics_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(clash_test_basics_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "20",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "Clash detection is used to analyze the potential conflicts between multiple elements in an iModel. Based on criteria you set, it detects geometrical clashes between object element sets and returns information about each of these clashes so you can follow up and determine which might lead to potential problems. In this tutorial, you will learn how to:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Create a clash test"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Run the clash test against a specific iModel version"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Monitor the Clash Test run process"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Retrieve and interpret the resulting clashes"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Update your clash test"))), (0,react_.mdx)(clash_test_basics_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Access to an iModel and the associated projectId and imodelId for that iModel, along with the named version ID for the version you want to run the test against", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "If you do not have a model, instructions on creating one and retrieving the associated model data can be found ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/retrieve-validation-model-data/#1-optional-create-a-sample-imodel-for-testing"
  }, "here")))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A list of model and category IDs you wish to check for clashes", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Instructions on retrieving lists of models and categories for a specific model can be found ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/retrieve-validation-model-data/#2-retrieving-models-and-categories"
  }, "here")))))), (0,react_.mdx)(clash_test_basics_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-get-a-token"
  }, "1. Get a token"), (0,react_.mdx)("p", null, "To make request to the API a user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application. You will need to include the scopes clashdetection:read and clashdetection:modify."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-api-reference-try-it-section"
  }, "Grab a user token from Api reference \u201CTry it\u201D Section"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/clash-detection/operations/create-clashdetection-tests/"
  }, "here")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click \u201CTry it\u201D button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "On Authorization section select \u201CAuthorizationCode\u201D."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After popup closes Authorization header with your user token value should be visible."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Save user token value for this tutorial.")), (0,react_.mdx)(clash_test_basics_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(clash_test_basics_TutorialSection, {
    actions: [(0,react_.mdx)(clash_test_basics_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(clash_test_basics_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/clashdetection/tests HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_test_basics_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(clash_test_basics_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nPrefer: return=representation\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_test_basics_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(clash_test_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"projectId\":\"00000000-0000-0000-0000-000000000000\",\n  \"displayName\":\"Sample Test\",\n  \"description\":\"Categories: Tag v Structure\",\n  \"setA\":{\n    \"modelIds\":[],\n    \"categoryIds\":[\"0x4000000000d\"],\n    \"selfCheck\":false,\n    \"clearance\":0\n  },\n  \"setB\":{\n    \"modelIds\":[],\n    \"categoryIds\":[\"0x40000000e71\"],\n    \"selfCheck\":false,\n    \"clearance\":0\n  },\n  \"suppressTouching\":true,\n  \"touchingTolerance\":0.001,\n  \"includeSubModels\":false\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_test_basics_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(clash_test_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"test\":{\n    \"id\":\"000000000000000-000000000000000000000000000\",\n    \"_links\":{\n      \"self\":{\n        \"href\":\"https://api.bentley.com/clashdetection/tests/000000000000000-000000000000000000000000000\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-create-a-clash-test"
  }, "2. Create a Clash Test"), (0,react_.mdx)("p", null, "Now that we have an authorization token, along with the prerequisites we should have everything we need to run our first clash test."), (0,react_.mdx)(clash_test_basics_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note: Many people's first inclination when experimenting with clash tests is to run every model or category against every other model or category. While this does usually guarantee you will see clashes, it also usually guarantees a long wait time while the engine processes the sets. Consider selecting a smaller subset if you're just starting out. You can always look in the iTwin Viewer and find two elements you know are clashing, and note the models/categories they belong to to use in your practice test."), (0,react_.mdx)("p", null, "Clash tests are saved and associated with a specific project; if you run a clash test and find issues that you plan to fix in your model, once you upload the new model version you can rerun the same test to ensure they\u2019ve been resolved."), (0,react_.mdx)(clash_test_basics_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note: Even if iModels share category and model display names, the ids may differ. Please check before running a test against a different iModel than the one it was initially created for."), (0,react_.mdx)("p", null, "To create a clash test send an HTTP POST request to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "POST https://api.bentley.com/clashdetection/tests/")), (0,react_.mdx)("p", null, "Clash detection tests are highly configurable. so let\u2019s quickly go over all of the different parameters you can set in the request body:\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "projectId"), " - Id of the project this test will be associated with. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "displayName"), " - Name of the clash test. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "description"), " - Additional identifying information or descriptions of the clash. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "setA/setB"), " - Object containing clash test information about a given set of elements. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "modelIds"), " - Array of model IDs which contain elements to check for clashes. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "categoryIds"), " - Array of category IDs which contain elements to check for clashes ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "selfCheck"), " - Boolean value. When this is true, elements in this set will be checked for clashes against other elements in this set. When false, it will only check against elements in the opposing set. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "clearance"), " - When this is set above 0, any elements within this distance will be reported as a clash, even when not touching. A \u201CClearance\u201D value will be supplied in results, telling you the distance between the elements. This is in meters. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "suppressTouching"), " - Boolean value. When this is true, the results will not include elements that are touching, or whose clash overlap falls within the touching tolerance limits specified below. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "touchingTolerance"), " - Elements that are overlapping by less than this amount will be suppressed. This is in meters. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "includeSubModels"), " - Boolean value. When this is true, any elements under any model that falls under the model hierarchy of the models you\u2019ve specified will be included. When false, this test will only include elements directly under the models you\u2019ve specified.", (0,react_.mdx)("br", null)), (0,react_.mdx)("p", null, "The response from the server will include the id of the newly created test, as well as a link to the test."), (0,react_.mdx)(clash_test_basics_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note: You will need this test ID later to run the test.")), (0,react_.mdx)(clash_test_basics_TutorialSection, {
    actions: [(0,react_.mdx)(clash_test_basics_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(clash_test_basics_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/clashdetection/runs/ HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_test_basics_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(clash_test_basics_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nPrefer: return=representation\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_test_basics_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(clash_test_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"testId\":\"00000000-0000-0000-0000-000000000000\",\n  \"iModelId\":\"00000000-0000-0000-0000-000000000000\",\n  \"namedVersionId\":\"00000000-0000-0000-0000-000000000000\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_test_basics_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(clash_test_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"run\":{\n    \"id\":\"000000000000000-000000000000000000000000000\",\n    \"_links\":{\n      \"run\":{\n        \"href\":\"https://api.bentley.com/clashdetection/runs/000000000000000-000000000000000000000000000\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-run-the-clash-detection-test"
  }, "3. Run the Clash Detection Test"), (0,react_.mdx)("p", null, "Now that you have created a test, we\u2019re going to go ahead and run it. To run a Clash Detection test, you just need to send the HTTP POST request ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "POST https://api.bentley.com/clashdetection/runs/"), " with a request body containing the testId from the previous step, the iModel id and Named Version Id you want to run against."), (0,react_.mdx)("p", null, "Clash detection tests are asynchronous, so instead of containing the results directly, the result body contains the runId as well as a link to the run. You will use this in the next step to retrieve the run status.")), (0,react_.mdx)(clash_test_basics_TutorialSection, {
    actions: [(0,react_.mdx)(clash_test_basics_Title, {
      mdxType: "Title"
    }, "Retrieve Run Results Request Syntax"), (0,react_.mdx)(clash_test_basics_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/clashdetection/runs/000000000000000-000000000000000000000000000 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_test_basics_Title, {
      mdxType: "Title"
    }, "Retrieve Run Results Request Headers"), (0,react_.mdx)(clash_test_basics_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nPrefer: return=representation\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_test_basics_Title, {
      mdxType: "Title"
    }, "Retrieve Run Results Response Body"), (0,react_.mdx)(clash_test_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"run\":{\n    \"id\":\"000000000000000-000000000000000000000000000\",\n    \"displayName\":\"ClashDetectionTest1-12/1/2020 5:12:50 PM\",\n    \"executedDateTime\":\"12/1/2020 5:12:50 PM\",\n    \"count\":\"0\",\n    \"userName\":\"Your Name\",\n    \"status\":\"queued\",\n    \"_links\":{\n      \"result\":{\n        \"href\":\"https://api.bentley.com/clashdetection/results/000000000000000-000000000000000000000000000\"\n      },\n      \"test\":{\n        \"href\":\"https://api.bentley.com/clashdetection/tests/000000000000000-000000000000000000000000000\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_test_basics_Title, {
      mdxType: "Title"
    }, "Retrieve Clash Results Request Syntax"), (0,react_.mdx)(clash_test_basics_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/clashdetection/results/000000000000000-000000000000000000000000000 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_test_basics_Title, {
      mdxType: "Title"
    }, "Retrieve Clash Results Request Headers"), (0,react_.mdx)(clash_test_basics_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nPrefer: return=representation\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_test_basics_Title, {
      mdxType: "Title"
    }, "Retrieve Clash Results Response Body"), (0,react_.mdx)(clash_test_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"result\":[\n    {\n      \"clashType\":\"Collision\",\n      \"clearance\":-1,\n      \"elementAId\":\"0x400000000c4\",\n      \"elementALabel\":\"1-SWS-0104-EX-OPM [4-5G]\",\n      \"elementACategoryIndex\":0,\n      \"elementAModelIndex\":0,\n      \"elementBId\":\"0x4000000003e\",\n      \"elementBLabel\":\"IsmCurveMember [4-1Q]\",\n      \"elementBCategoryIndex\":1,\n      \"elementBModelIndex\":0,\n      \"center\":{\n        \"x\":12.192031860351562,\n        \"y\":407.69541931152344,\n        \"z\":122.92329406738281\n      },\n      \"suppressingRuleIndexArray\":[]\n    }\n  ],\n  \"categoryList\":[\n    {\n      \"id\":\"0x4000000000d\",\n      \"displayName\":\"Tag-Category\"\n    },\n    {\n      \"id\":\"0x40000000e71\",\n      \"displayName\":\"Structure\"\n    }\n  ],\n  \"modelList\":[\n    {\n      \"id\":\"0x20000000002\",\n      \"displayName\":\"Sample\"\n    }\n  ],\n  \"suppressingRuleList\":[]\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-retrieve-clash-detection-results"
  }, "4. Retrieve Clash Detection Results"), (0,react_.mdx)("p", null, "Once you\u2019ve run a clash detection test, you\u2019ll need to wait for the engine to finish processing the test. This can take less than ten minutes or several hours depending on the queue time and number of elements and potential collision are in your element sets."), (0,react_.mdx)("p", null, "There are two parts to results retrieval, retrieving the information about the clash test run itself, and then the actual results:"), (0,react_.mdx)("h3", {
    "id": "retrieve-run-results"
  }, "Retrieve Run Results"), (0,react_.mdx)("p", null, "You can check on the status of your clash job via an HTTP ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GET https://api.bentley.com/clashdetection/runs/{id}"), " using the runId returned in the previous create step. It can take a while, so you might want to run this on a loop until you get the \u201Cstatus: completed\u201D result."), (0,react_.mdx)("p", null, "In addition to the status, the results body will also include some metadata, and most importantly for us a results link we will use to retrieve the actual clash results."), (0,react_.mdx)(clash_test_basics_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note: While the results link will always appear in the response body, you will not be able to actually retrieve the results until the status is shown as complete."), (0,react_.mdx)("h3", {
    "id": "retrieve-clash-results"
  }, "Retrieve Clash Results"), (0,react_.mdx)("p", null, "Using the results link from the previous step, we can now retrieve the actual clash results we\u2019ve been waiting for using a GET HTTP request ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GET https://api.bentley.com/clashdetection/results/{id}"), ". The clash results object contains a lot of information, so let\u2019s quickly go over them. There are four main array objects in the result body:"), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "categoryList"), " - Category lookup table. Contains an array of category id and category display name pairs.", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "modelList"), " - Model lookup table. Contains an array of model id and model display name pairs. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "suppressingRuleList"), " - Suppression rule lookup table. Contains an array of suppression rule ids and suppression rule display name pairs. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "clashDetectionResult"), " - Array of all the clashes in this clash detection result. ", (0,react_.mdx)("br", null)), (0,react_.mdx)("p", null, "A single clash object in the clashDetectionResult array contains:", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "clashType"), " - The type of clash detected - possible values: Collision, Clearance, Touching, Not Initialized. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "clearance"), " - When the clash type is Clearance, the value is returned in meters. Otherwise -1 is returned. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "elementAId"), " - The unique id of element A. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "elementALabel"), " - The display label of element A. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "elementACategoryIndex"), " - The zero-based index used to lookup the element A category in the categoryList. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "elementAModelIndex"), " - The zero-based index used to lookup the element A model in the modelList. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "elementBId"), " - The unique id of element B. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "elementBLabel"), " - The display label of element B. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "elementBCategoryIndex"), " - The zero-based index used to lookup the element B category in the categoryList. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "elementBModelIndex"), " - The zero-based index used to lookup the element B model in the modelList. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "center"), " - The clash center point. This contains x, y, and z properties for the exact spatial position of the center point. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "suppressingRuleIndexArray"), " - An array of the zero-based indexes used to lookup any suppression rules this clash would be suppressed by in the suppressingRuleList. ", (0,react_.mdx)("br", null))), (0,react_.mdx)(clash_test_basics_TutorialSection, {
    actions: [(0,react_.mdx)(clash_test_basics_Title, {
      mdxType: "Title"
    }, " Get Clash Test Request Syntax"), (0,react_.mdx)(clash_test_basics_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/clashdetection/tests/000000000000000-000000000000000000000000000 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_test_basics_Title, {
      mdxType: "Title"
    }, "Get Clash Test Request Headers"), (0,react_.mdx)(clash_test_basics_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nPrefer: return=representation\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_test_basics_Title, {
      mdxType: "Title"
    }, "Get Clash Test Response Body"), (0,react_.mdx)(clash_test_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"test\":{\n    \"displayName\":\"Sample Test\",\n    \"description\":\"Categories: Tag v Structure\",\n    \"setA\":{\n      \"modelIds\":[],\n      \"categoryIds\":[\"0x4000000000d\"],\n      \"selfCheck\":false,\n      \"clearance\":0\n    },\n    \"setB\":{\n      \"modelIds\":[],\n      \"categoryIds\":[\"0x40000000e71\"],\n      \"selfCheck\":false,\n      \"clearance\":0\n    },\n    \"suppressTouching\":true,\n    \"touchingTolerance\":0.001,\n    \"includeSubModels\":false,\n    \"_links\":{\n      \"createdBy\":{\n        \"href\":\"https://api.bentley.com/projects/00000000-0000-0000-0000-000000000000/members/00000000-0000-0000-0000-000000000000\"\n      },\n      \"lastModifiedBy\":{\n        \"href\":\"https://api.bentley.com/projects/00000000-0000-0000-0000-000000000000/members/00000000-0000-0000-0000-000000000000\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_test_basics_Title, {
      mdxType: "Title"
    }, "Update Clash Test Request Syntax"), (0,react_.mdx)(clash_test_basics_CodeBlock, {
      language: "http",
      code: "PUT https://api.bentley.com/clashdetection/tests/000000000000000-000000000000000000000000000 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_test_basics_Title, {
      mdxType: "Title"
    }, "Update Clash Test Request Headers"), (0,react_.mdx)(clash_test_basics_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nPrefer: return=representation\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_test_basics_Title, {
      mdxType: "Title"
    }, "Update Clash Test Request Body"), (0,react_.mdx)(clash_test_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"projectId\":\"00000000-0000-0000-0000-000000000000\",\n  \"displayName\":\"Sample Test\",\n  \"description\":\"Categories: Tag v Structure\",\n  \"setA\":{\n    \"modelIds\":[],\n    \"categoryIds\":[\"0x4000000000d\"],\n    \"selfCheck\":true,\n    \"clearance\":0\n  },\n  \"setB\":{\n    \"modelIds\":[],\n    \"categoryIds\":[\"0x40000000e71\"],\n    \"selfCheck\":false,\n    \"clearance\":0\n  },\n  \"suppressTouching\":true,\n  \"touchingTolerance\":0.005,\n  \"includeSubModels\":true\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(clash_test_basics_Title, {
      mdxType: "Title"
    }, "Update Clash Test Response Body"), (0,react_.mdx)(clash_test_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"test\":{\n    \"id\":\"000000000000000-000000000000000000000000000\",\n    \"_links\":{\n      \"self\":{\n        \"href\":\"https://api.bentley.com/clashdetection/tests/000000000000000-000000000000000000000000000\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-update-a-clash-test"
  }, "5. Update a Clash Test"), (0,react_.mdx)("p", null, "After running your test, you might realize you want to tweak your criteria slightly. Instead of making a new test, you can just update the one you just made previously. This is a replacement update, so you will still need the full test criteria you enetered previously. If you still have your test criteria handy, you can just copy it and update as necessary. If not, you can use a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GET https://api.bentley.com/clashdetection/tests/{id}"), ", with your test id to retrieve the test details and update from there."), (0,react_.mdx)("p", null, "Once you have your test criteria and have implemented any updates you want to make, you can use an HTTP ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "PUT https://api.bentley.com/clashdetection/tests/{id}"), " using the test id.")), (0,react_.mdx)(clash_test_basics_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-conclusion"
  }, "6. Conclusion"), (0,react_.mdx)("p", null, "You have now gone through the entire life cycle of a clash detection test: creating, running and retrieving the results. This will aid you in detecting any potential problems or clashes earlier in the modeling process while they are easier to fix. As you continue to practice and gain experience creating and running tests, you will be able to refine the criteria to be specific to your individual needs and issues.")), (0,react_.mdx)(clash_test_basics_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(clash_test_basics_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(clash_test_basics_ResourceTile, {
    title: "Validation API documentation",
    href: "/api-groups/validation/",
    description: "An overview and detailed version of Validation API documentation, including both Clash Detection and Property Validation.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(clash_test_basics_ResourceTile, {
    title: "Clash Review Sample Showcase",
    href: "https://www.itwinjs.org/sandboxes/iTwinPlatform/Clash%20Review",
    description: "A sample showcase that demonstrates calling Clash Detection APIs to retrieve clash data and present it for review in a viewer app.",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
clash_test_basics_MDXContent.isMDXComponent = true;
var clash_test_basics_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-get-a-token",
    level: 2,
    title: "1. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-api-reference-try-it-section",
      level: 3,
      title: "Grab a user token from Api reference “Try it” Section",
      children: []
    }]
  }, {
    id: "2-create-a-clash-test",
    level: 2,
    title: "2. Create a Clash Test",
    children: []
  }, {
    id: "3-run-the-clash-detection-test",
    level: 2,
    title: "3. Run the Clash Detection Test",
    children: []
  }, {
    id: "4-retrieve-clash-detection-results",
    level: 2,
    title: "4. Retrieve Clash Detection Results",
    children: [{
      id: "retrieve-run-results",
      level: 3,
      title: "Retrieve Run Results",
      children: []
    }, {
      id: "retrieve-clash-results",
      level: 3,
      title: "Retrieve Clash Results",
      children: []
    }]
  }, {
    id: "5-update-a-clash-test",
    level: 2,
    title: "5. Update a Clash Test",
    children: []
  }, {
    id: "6-conclusion",
    level: 2,
    title: "6. Conclusion",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var clash_test_basics_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/combine-physical-models-v2-transformation.mdx


var combine_physical_models_v2_transformation_excluded = ["components"];
var combine_physical_models_v2_transformation_jsx = (external_react_default()).createElement;


var combine_physical_models_v2_transformation_readingTime = {
  "text": "8 min read",
  "minutes": 7.605,
  "time": 456300,
  "words": 1521
};
/* @jsxRuntime classic */
/* @jsx mdx */

var combine_physical_models_v2_transformation_metadata = {
  title: 'Transforming an iModel - Combining physical models v2',
  tile: {
    name: 'Transforming an iModel - Combining physical models',
    description: 'This tutorial will demonstrate how to combine physical models in second version using iModel Transformations API.',
    thumbnail: '/images/Metro_Station.png',
    href: '/tutorials/combine-physical-models-v2-transformation/',
    durationInMinutes: 20,
    relatedApiIds: ['transformations']
  }
};
var combine_physical_models_v2_transformation_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var combine_physical_models_v2_transformation_Introduction = combine_physical_models_v2_transformation_makeShortcode("Introduction");
var combine_physical_models_v2_transformation_TutorialSection = combine_physical_models_v2_transformation_makeShortcode("TutorialSection");
var combine_physical_models_v2_transformation_LinkButton = combine_physical_models_v2_transformation_makeShortcode("LinkButton");
var combine_physical_models_v2_transformation_VSCodeIcon = combine_physical_models_v2_transformation_makeShortcode("VSCodeIcon");
var combine_physical_models_v2_transformation_PostmanIcon = combine_physical_models_v2_transformation_makeShortcode("PostmanIcon");
var CreateSampleAppButton = combine_physical_models_v2_transformation_makeShortcode("CreateSampleAppButton");
var combine_physical_models_v2_transformation_Alert = combine_physical_models_v2_transformation_makeShortcode("Alert");
var combine_physical_models_v2_transformation_Title = combine_physical_models_v2_transformation_makeShortcode("Title");
var combine_physical_models_v2_transformation_CodeBlock = combine_physical_models_v2_transformation_makeShortcode("CodeBlock");
var combine_physical_models_v2_transformation_layoutProps = {
  metadata: combine_physical_models_v2_transformation_metadata
};
var combine_physical_models_v2_transformation_MDXLayout = "wrapper";
function combine_physical_models_v2_transformation_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, combine_physical_models_v2_transformation_excluded);
  return (0,react_.mdx)(combine_physical_models_v2_transformation_MDXLayout, (0,esm_extends/* default */.Z)({}, combine_physical_models_v2_transformation_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(combine_physical_models_v2_transformation_Introduction, {
    skillLevel: "Intermediate",
    durationInMinutes: "20",
    summaryImageSrc: "/unreal-docs-site/static/images/Metro_Station.png",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This quick start is intended to help you create a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "CombinePhysicalModelsV2"), " transformation.\nIn this walk-through you will configure a transformation, run it, and wait for it to complete and then view the result.")), (0,react_.mdx)(combine_physical_models_v2_transformation_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(combine_physical_models_v2_transformation_LinkButton, {
      href: "https://code.visualstudio.com/",
      target: "_blank",
      title: "Visual Studio Code",
      icon: (0,react_.mdx)(combine_physical_models_v2_transformation_VSCodeIcon, {
        mdxType: "VSCodeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(combine_physical_models_v2_transformation_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(combine_physical_models_v2_transformation_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A tool such as ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Postman"), " that can be used to execute HTTP calls. These calls can also be made using the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Try it out"), " button in the API documentation or any other http request tool."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A created and connected project. You can create a project by following instructions at ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-and-query-projects-guide/"
  }, "Create a new iTwin Project"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A source iModel with some data for the transformation. You can create an iModel from Bentley Sample by following instructions at ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/web-application-quick-start/"
  }, "Create an iModel"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "An empty target iModel for the transformation. You can create an empty iModel by following instructions at ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/web-application-quick-start/"
  }, "Create an iModel"), "."))), (0,react_.mdx)(combine_physical_models_v2_transformation_TutorialSection, {
    actions: [(0,react_.mdx)(CreateSampleAppButton, {
      scopes: ['transformations:modify', 'transformations:read'],
      clientName: "Combine physical models v2",
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Transformations API"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "transformations:modify transformations:read"), " scopes enabled."))), (0,react_.mdx)(combine_physical_models_v2_transformation_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "To make requests to the API, a user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application."), (0,react_.mdx)(combine_physical_models_v2_transformation_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Here you can use Client ID generated from previous registration step."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-api-reference-try-it-out-section"
  }, "Grab a user token from Api reference \u201CTry it out\u201D Section"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go to ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/transformations/operations/combinephysicalmodelsv2/"
  }, "Create Configuration")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click \u201CTry it out\u201D button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "On Authorization section select \u201CAuthorizationCode\u201D."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After popup closes Authorization header with your user token value should be visible."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Save user token value for this tutorial.")), (0,react_.mdx)(combine_physical_models_v2_transformation_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(combine_physical_models_v2_transformation_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-decide-which-models-in-source-imodel-to-transform"
  }, "3. Decide which models in source iModel to transform."), (0,react_.mdx)("p", null, "Open a source iModel and pick models that you want to group. In order to group models, you will need to specify an ECSQL query."), (0,react_.mdx)("p", null, "Easiest way to query for iModel data is by using an iModel Console web application. Open your source iModel by replacing values in this link:\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://imodelconsole.bentley.com/?projectid=%7ByourSourceProjectId%7D&imodelid=%7ByourSourceIModelId%7D&changesetid=%7ByourChangeSetId%7D"
  }, "https://imodelconsole.bentley.com/?projectid={yourSourceProjectId}&imodelid={yourSourceIModelId}&changesetid={yourChangeSetId}")), (0,react_.mdx)("h3", {
    "id": "31-transform-parameters-peculiarities"
  }, "3.1 Transform parameters peculiarities:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Each model group must have name and source query."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Source model queries must select ECInstanceId by using ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "*"), " or explicitly selecting that column."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "If you want to combine all models that were left unselected, you should set ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "groupUnselectedModels"), " parameter to true (it is set to false by default) and specify the name in ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "unselectedModelsGroupName"), " parameter.")), (0,react_.mdx)(combine_physical_models_v2_transformation_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note: You should only select models that are sub-modeling PhysicalPartition ECClassID."), (0,react_.mdx)("h3", {
    "id": "32-query-for-all-elements-that-sub-model-physical-partition"
  }, "3.2 Query for all elements that sub-model Physical Partition"), (0,react_.mdx)("p", null, "Run ECSQL query:\n", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "SELECT ECInstanceId, CodeValue, UserLabel from bis.PhysicalPartition"), ".\nTo learn more about ECSQL follow ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/learning/ecsql"
  }, "this"), " link."), (0,react_.mdx)("p", null, "This ECSQL query returns a list of all elements inside an iModel that can be used in transformation. To learn more about iModel internals, follow ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/bis/guide/data-organization/information-hierarchy/#example-information-hierarchy"
  }, "this"), " link.")), (0,react_.mdx)(combine_physical_models_v2_transformation_TutorialSection, {
    actions: [(0,react_.mdx)(combine_physical_models_v2_transformation_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(combine_physical_models_v2_transformation_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/transformations/configurations/combinephysicalmodelsv2 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(combine_physical_models_v2_transformation_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(combine_physical_models_v2_transformation_CodeBlock, {
      language: "http",
      code: "Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(combine_physical_models_v2_transformation_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(combine_physical_models_v2_transformation_CodeBlock, {
      language: "json",
      code: "{\n  \"transformName\":\"Combine physical models v2\",\n  \"sourceProjectId\":\"SourceProjectId\",\n  \"sourceIModelId\":\"SourceIModelId\",\n  \"targetProjectId\":\"TargetProjectId\",\n  \"targetIModelId\":\"TargetIModelId\",\n  \"comment\":\"Example comment\",\n  \"transformParameters\":{\n    \"modelGroups\":[{\n        \"targetModelName\": \"Your specified name for the first group\",\n        \"sourceModelQuery\": \"Your specified query (you can use example query that was shown in section 3.2)\"\n    },{\n        \"targetModelName\": \"Your specified name for second group\",\n        \"sourceModelQuery\": \"Your specified query (you can use example query that was shown in section 3.2)\"\n    }],\n    \"groupUnselectedModels\": true,\n    \"unselectedModelsGroupName\": \"Your specified name for ungrouped models\"\n  }\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(combine_physical_models_v2_transformation_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(combine_physical_models_v2_transformation_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(combine_physical_models_v2_transformation_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(combine_physical_models_v2_transformation_CodeBlock, {
      language: "json",
      code: "{\n  \"configuration\":{\n    \"transformParameters\": {\n      \"modelGroups\":[{\n        \"targetModelName\": \"Your specified name for the first group\",\n        \"sourceModelQuery\": \"Your specified query (you can use example query that was shown in section 3.2)\"\n      },{\n        \"targetModelName\": \"Your specified name for second group\",\n        \"sourceModelQuery\": \"Your specified query (you can use example query that was shown in section 3.2)\"\n      }],\n      \"groupUnselectedModels\": true,\n      \"unselectedModelsGroupName\": \"Your specified name for ungrouped models\"\n    },\n    \"comment\": \"Example comment\",\n    \"createdDateTime\": \"0000-00-00T00:00:00.0000000Z\",\n    \"modifiedDateTime\": \"0000-00-00T00:00:00.0000000Z\",\n    \"_links\": {\n      \"sourceIModel\": {\n        \"href\": \"https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000\"\n      },\n      \"targetIModel\": {\n        \"href\": \"https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000\"\n      },\n      \"sourceProject\": {\n        \"href\": \"https://api.bentley.com/projects/00000000-0000-0000-0000-000000000000\"\n      },\n      \"targetProject\": {\n        \"href\": \"https://api.bentley.com/projects/00000000-0000-0000-0000-000000000000\"\n      }\n    },\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\n    \"transformName\": \"Combine physical models v2\"\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-create-a-configuration"
  }, "4. Create a configuration"), (0,react_.mdx)("p", null, "A transformation configuration is needed to create an association between source and target iModels with some additional metadata to successfully carry out the transformation.\nCreating a configuration does not start the transformation process itself."), (0,react_.mdx)("p", null, "A configuration is created by sending a request to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/transformations/configurations/combinephysicalmodelsv2"
  }, "https://api.bentley.com/transformations/configurations/combinephysicalmodelsv2"), " endpoint with the payload describing the source and target iModel association."), (0,react_.mdx)("p", null, "These are the required properties for the endpoint:"), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "transformName"), " - free form text field so you could name your configuration. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "sourceProjectId"), " - source projectId. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "sourceIModelId"), " - iModelId of an iModal that is going to be used as a source of the transformation. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "targetProjectId"), " - target projectId. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "targetIModelId"), " - iModelId of an iModal that is going to be used as a target of the transformation. Initial transformation should always run on an empty target iModel. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "comment"), " - a comment of the transformation. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "transformParameters"), " - parameters that were mentioned in section 3."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/transformations/operations/combinephysicalmodelsv2/"
  }, "CombinePhysicalModelsV2"), " page, \u201CTry it out\u201D section."), (0,react_.mdx)("p", null, "After executing the request, save returned Id from the response.")), (0,react_.mdx)(combine_physical_models_v2_transformation_TutorialSection, {
    actions: [(0,react_.mdx)(combine_physical_models_v2_transformation_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(combine_physical_models_v2_transformation_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/transformations HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(combine_physical_models_v2_transformation_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(combine_physical_models_v2_transformation_CodeBlock, {
      language: "http",
      code: "Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(combine_physical_models_v2_transformation_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(combine_physical_models_v2_transformation_CodeBlock, {
      language: "json",
      code: "{\n  \"configurationId\":\"Your saved configurationId from step number 3.\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(combine_physical_models_v2_transformation_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(combine_physical_models_v2_transformation_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(combine_physical_models_v2_transformation_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(combine_physical_models_v2_transformation_CodeBlock, {
      language: "json",
      code: "{\n  \"transformation\": {\n    \"errorMessage\": \"\",\n    \"processedElementCount\": 0,\n    \"totalElementCount\": 0,\n    \"_links\": {\n      \"configuration\": {\n        \"href\": \"https://dev-api.bentley.com/transformations/configurations/00000000-0000-0000-0000-000000000000\"\n      }\n    },\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\n    \"status\": \"Created\"\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-create-a-transformation"
  }, "5. Create a transformation"), (0,react_.mdx)("p", null, "A transformation is created by sending a request to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/transformations"
  }, "https://api.bentley.com/transformations"), " endpoint with the payload indicating which configuration should be used.\nThe request is submitting a transformation job based on the configuration Id value that was provided."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/transformations/operations/create-transformation/"
  }, "Create transformation"), " page, \u201CTry it out\u201D section."), (0,react_.mdx)("p", null, "Response indicates the current status of the transformation. After submitting a transformation the status is \u201CCreated\u201D which means that the transformation is enqueued and waiting to start.\nPossible status messages:"), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Created"), " - transformation is created and waiting to be started. The transformation should start automatically, no additional actions are needed. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Started"), " - transformation is started and waiting to finish. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Succeeded"), " - transformation succeeded. You can open target iModel and inspect the results. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Failed"), " - transformation failed. Check the errorMessage node for more information on what happened. ", (0,react_.mdx)("br", null)), (0,react_.mdx)("p", null, "After executing the request, save returned transformation Id from the response.")), (0,react_.mdx)(combine_physical_models_v2_transformation_TutorialSection, {
    actions: [(0,react_.mdx)(combine_physical_models_v2_transformation_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(combine_physical_models_v2_transformation_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/transformations/{savedTransformationId} HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(combine_physical_models_v2_transformation_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(combine_physical_models_v2_transformation_CodeBlock, {
      language: "http",
      code: "Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(combine_physical_models_v2_transformation_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(combine_physical_models_v2_transformation_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(combine_physical_models_v2_transformation_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(combine_physical_models_v2_transformation_CodeBlock, {
      language: "json",
      code: "{\n  \"transformation\": {\n    \"errorMessage\": \"\",\n    \"processedElementCount\": 428,\n    \"totalElementCount\": 428,\n    \"startedDateTime\": \"0000-00-00T00:00:00.0000000Z\",\n    \"finishedDateTime\": \"0000-00-00T00:00:00.0000000Z\",\n    \"sourceChangeSetId\": \"0\",\n    \"lastTargetChangesetPushed\": \"0\",\n    \"_links\": {\n      \"configuration\": {\n        \"href\": \"https://dev-api.bentley.com/transformations/configurations/00000000-0000-0000-0000-000000000000\"\n      }\n    },\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\n    \"status\": \"Succeeded\"\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-waiting-for-transformation-to-finish"
  }, "6. Waiting for transformation to finish"), (0,react_.mdx)("p", null, "Send a GET request to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/transformations/%7ByourTransformationId%7D"
  }, "https://api.bentley.com/transformations/{yourTransformationId}"), " endpoint to get an updated transformation status.\nYou can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/transformations/operations/get-transformation/"
  }, "Get transformation"), " page, \u201CTry it out\u201D section."), (0,react_.mdx)("p", null, "Query for the transformation multiple times until the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "status"), " changes from ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Created"), " to ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Started"), " and eventually to ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Succeeded"), "."), (0,react_.mdx)("p", null, "Go to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/my-itwins/"
  }, "My iTwins"), " and view the target iModel."), (0,react_.mdx)("h2", {
    "id": "7-conclusion"
  }, "7. Conclusion"), (0,react_.mdx)("p", null, "We have successfully created a configuration, ran a transformation that combined models, waited for the transformation to be completed and inspected the results.")));
}
;
combine_physical_models_v2_transformation_MDXContent.isMDXComponent = true;
var combine_physical_models_v2_transformation_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-api-reference-try-it-out-section",
      level: 3,
      title: "Grab a user token from Api reference “Try it out” Section",
      children: []
    }]
  }, {
    id: "3-decide-which-models-in-source-imodel-to-transform",
    level: 2,
    title: "3. Decide which models in source iModel to transform.",
    children: [{
      id: "31-transform-parameters-peculiarities",
      level: 3,
      title: "3.1 Transform parameters peculiarities:",
      children: []
    }, {
      id: "32-query-for-all-elements-that-sub-model-physical-partition",
      level: 3,
      title: "3.2 Query for all elements that sub-model Physical Partition",
      children: []
    }]
  }, {
    id: "4-create-a-configuration",
    level: 2,
    title: "4. Create a configuration",
    children: []
  }, {
    id: "5-create-a-transformation",
    level: 2,
    title: "5. Create a transformation",
    children: []
  }, {
    id: "6-waiting-for-transformation-to-finish",
    level: 2,
    title: "6. Waiting for transformation to finish",
    children: []
  }, {
    id: "7-conclusion",
    level: 2,
    title: "7. Conclusion",
    children: []
  }];
};
var combine_physical_models_v2_transformation_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/contextcapture-api-better-calibration.mdx


var contextcapture_api_better_calibration_excluded = ["components"];
var contextcapture_api_better_calibration_jsx = (external_react_default()).createElement;


var contextcapture_api_better_calibration_readingTime = {
  "text": "3 min read",
  "minutes": 2.885,
  "time": 173100,
  "words": 577
};
/* @jsxRuntime classic */
/* @jsx mdx */

var contextcapture_api_better_calibration_metadata = {
  title: 'Better calibration in Reality Modeling',
  tile: {
    name: 'Better calibration in Reality Modeling',
    description: 'Learn how to specify calibration settings in Reality Modeling, and download the result of a calibration',
    thumbnail: '/images/cccs-calibration-thumb.jpg',
    href: '/tutorials/contextcapture-api-better-calibration/',
    durationInMinutes: 10,
    relatedApiIds: ['contextcapture']
  }
};
var contextcapture_api_better_calibration_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var contextcapture_api_better_calibration_Introduction = contextcapture_api_better_calibration_makeShortcode("Introduction");
var contextcapture_api_better_calibration_TutorialSection = contextcapture_api_better_calibration_makeShortcode("TutorialSection");
var contextcapture_api_better_calibration_Title = contextcapture_api_better_calibration_makeShortcode("Title");
var contextcapture_api_better_calibration_CodeBlock = contextcapture_api_better_calibration_makeShortcode("CodeBlock");
var contextcapture_api_better_calibration_ContinueLearningSection = contextcapture_api_better_calibration_makeShortcode("ContinueLearningSection");
var contextcapture_api_better_calibration_TileList = contextcapture_api_better_calibration_makeShortcode("TileList");
var contextcapture_api_better_calibration_Tile = contextcapture_api_better_calibration_makeShortcode("Tile");
var contextcapture_api_better_calibration_ResourceTile = contextcapture_api_better_calibration_makeShortcode("ResourceTile");
var contextcapture_api_better_calibration_layoutProps = {
  metadata: contextcapture_api_better_calibration_metadata
};
var contextcapture_api_better_calibration_MDXLayout = "wrapper";
function contextcapture_api_better_calibration_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, contextcapture_api_better_calibration_excluded);
  return (0,react_.mdx)(contextcapture_api_better_calibration_MDXLayout, (0,esm_extends/* default */.Z)({}, contextcapture_api_better_calibration_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(contextcapture_api_better_calibration_Introduction, {
    skillLevel: "Expert",
    durationInMinutes: "10",
    summaryImageSrc: "/unreal-docs-site/static/images/cccs-calibration-header.jpg",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "The goal of this tutorial is to specify calibration settings to ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), ", so that you can obtain a better model."), (0,react_.mdx)("p", null, "In this tutorial, we will cover how to send calibration settings to ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), ", and how to retrieve calibration reports from the service.")), (0,react_.mdx)(contextcapture_api_better_calibration_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Completed the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/contextcapture-api-quick-start"
  }, "Reality Modeling Quick Start tutorial"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A basic understanding of the calibration/aerotriangulation concept in Reality Modeling. See ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://docs.bentley.com/LiveContent/web/ContextCapture%20Help-v10/en/GUID-95336991-F284-4AD8-A33B-9AE341507D5C.html"
  }, "Reality Modeling Master Help"), " for a description of the calibration settings"))), (0,react_.mdx)(contextcapture_api_better_calibration_TutorialSection, {
    actions: [(0,react_.mdx)(contextcapture_api_better_calibration_Title, {
      mdxType: "Title"
    }, "AT Settings exchange structure"), (0,react_.mdx)(contextcapture_api_better_calibration_CodeBlock, {
      language: "json",
      code: "{\n  \"ATSettingsExchange\":{\n    \"PhotogroupEstimationMode\": \"OnePass\"-\"MultiPass\",\n    \"ColorEqualizationMode\": \"EqualizeBlockwise\"-\"EqualizeNone\",\n    \"SplatsMode\": \"SplatsAtlas\"-\"SplatsNone\",\n    \"AdjustmentConstraints\": \"None\"|\"UserConstraints\"|\"ControlPoints\"|\"PositionMetadata\"|\"PointClouds\"|\"Automatic\",\n    \"RigidRegistration\": \"None\"|\"UserConstraints\"|\"ControlPoints\"|\"PositionMetadata\"|\"PointClouds\"|\"Automatic\",\n    \"EstimationGroups\": \"PerPhotogroup\"-\"PerPhoto\",\n    \"RotationPolicy\": \"Compute\"-\"Keep\"-\"Adjust\"-\"AdjustWithinTolerance %.%\",\n    \"CenterPolicy\": \"Compute\"-\"Keep\"-\"Adjust\"-\"AdjustWithinTolerance %.%\",\n    \"FocalPolicy\": \"Compute\"-\"Keep\"-\"Adjust\"-\"AdjustWithinTolerance %.%\",\n    \"PrincipalPolicy\": \"Compute\"-\"Keep\"-\"Adjust\"-\"AdjustWithinTolerance %.%\",\n    \"RadialPolicy\": \"Compute\"-\"Keep\"-\"Adjust\"-\"AdjustWithinTolerance %.%\",\n    \"TangentialPolicy\": \"Compute\"-\"Keep\"-\"Adjust\"-\"AdjustWithinTolerance %.%\",\n    \"TiePointsPolicy\": \"Compute\"-\"Keep\",\n    \"FisheyeFocalPolicy\": \"Compute\"-\"Keep\"-\"AdjustFisheyeFocalSymmetric\"-\"AdjustFisheyeFocalAsymmetric\",\n    \"FisheyeDistortionPolicy\": \"Compute\"-\"Keep\"-\"AdjustFisheyeDistortion_01xx0\"-\"AdjustFisheyeDistortion_x1xx0\"-\"AdjustFisheyeDistortion_x1xxx\"-\"AdjustWithinTolerance %.%\",\n    \"AspectRatioPolicy\": \"Compute\"-\"Keep\"-\"Adjust\"-\"AdjustWithinTolerance %.%\",\n    \"SkewPolicy\": \"Compute\"-\"Keep\"-\"Adjust\"-\"AdjustWithinTolerance %.%\",\n    \"PairSelectionMode\": \"Default\"-\"Sequence\"-\"Loop\"-\"Exhaustive\"-\"Similar images only\",\n    \"PairSelectionMaxDistance\": int,\n    \"KeyPointsDensity\": \"Normal\"-\"High\",\n    \"ExtractQR\": \"QR Codes\"|\"April Tags\"|\"Chili Tags\"|\"Disabled\",\n    \"ComponentConstructionMode\": \"OnePass\"-\"MultiPass\"\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-specifying-calibration-settings"
  }, "1. Specifying calibration settings"), (0,react_.mdx)("p", null, "If you want to apply specific settings for the calibration, you can add a file in the workspace reality data: the file ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "at_settings.json"), " has to be uploaded to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "/{jobId}/data/"), ".\nNote that no check on the uploaded file is performed until the job is actually submitted, and if the parameters are not fitted to the inputs, the job will failed."), (0,react_.mdx)("p", null, "Note that every properties in the following structure are optional.\nStrings separated by ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "-"), " mean only one option can be specified. Strings separated by ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "|"), " can be combined using ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "|"), ", eg: ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "\"QR Codes|Chili Tags\""), ". For parameter ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "\"AdjustWithinTolerance %.%\""), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "%.%"), " has to be replace by a double."), (0,react_.mdx)("p", null, "If you have a preset and you want to apply it, upload it as ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "at_preset.cfg"), " in ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "/{jobId}/data/"), ". No need to specify the name in the the ATSettings file.")), (0,react_.mdx)(contextcapture_api_better_calibration_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-accessing-calibration-results"
  }, "2. Accessing calibration results"), (0,react_.mdx)("p", null, "Once the step ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "AT_CloudExport"), " is executed, you can access calibration results (including reports) through the workspace reality data."), (0,react_.mdx)("p", null, "In ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "/{jobId}/outputs/calibration/"), " you will find:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "acquisition_report"), ", a folder containing an HTML page with CSS regarding the acquisition of your images"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "quality_report"), ", a folder containing HTML pages regarding with quality of your calibration"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "block.xmlz"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "block - TiePoints.xmlz"), ", the corresponding ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "CCOrientations"), " of this calibration"))), (0,react_.mdx)(contextcapture_api_better_calibration_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)("p", null, "Congratulations for completing the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), " calibration tutorial!\nYou should now be able to specify calibration settings and retrieve reports once a calibration is completed."), (0,react_.mdx)("p", null, "To go further and use ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), " to its maximum potential, you can check the following tutorials."), (0,react_.mdx)(contextcapture_api_better_calibration_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(contextcapture_api_better_calibration_Tile, {
    name: "Using cache in Reality Modeling",
    description: "This tutorial focuses on using cache for faster processing in Reality Modeling",
    thumbnail: "/unreal-docs-site/static/images/cccs-cache-thumb.png",
    href: "/tutorials/contextcapture-api-how-to-use-cache",
    mdxType: "Tile"
  }), (0,react_.mdx)(contextcapture_api_better_calibration_Tile, {
    name: "Better production in Reality Modeling",
    description: "Learn how to specify production settings in Reality Modeling",
    thumbnail: "/unreal-docs-site/static/images/cccs-production-thumb.jpg",
    href: "/tutorials/contextcapture-api-better-production",
    mdxType: "Tile"
  })), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(contextcapture_api_better_calibration_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(contextcapture_api_better_calibration_ResourceTile, {
    title: "Projects API",
    href: "/apis/projects/",
    description: "Project is necessary for using Reality Modeling API. You can check its possibilities.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(contextcapture_api_better_calibration_ResourceTile, {
    title: "Reality Data API",
    href: "/apis/realitydata/",
    description: "Reality Data API is necessary for uploading inputs for Reality Modeling, and downloading outputs.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(contextcapture_api_better_calibration_ResourceTile, {
    title: "Reality Management API",
    href: "/apis/reality-management/",
    description: "Reality Management API is necessary for uploading inputs for Reality Modeling, and downloading outputs.",
    mdxType: "ResourceTile"
  }))));
}
;
contextcapture_api_better_calibration_MDXContent.isMDXComponent = true;
var contextcapture_api_better_calibration_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-specifying-calibration-settings",
    level: 2,
    title: "1. Specifying calibration settings",
    children: []
  }, {
    id: "2-accessing-calibration-results",
    level: 2,
    title: "2. Accessing calibration results",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var contextcapture_api_better_calibration_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/contextcapture-api-better-production.mdx


var contextcapture_api_better_production_excluded = ["components"];
var contextcapture_api_better_production_jsx = (external_react_default()).createElement;


var contextcapture_api_better_production_readingTime = {
  "text": "6 min read",
  "minutes": 5.73,
  "time": 343800,
  "words": 1146
};
/* @jsxRuntime classic */
/* @jsx mdx */

var contextcapture_api_better_production_metadata = {
  title: 'Better production in Reality Modeling',
  tile: {
    name: 'Better production in Reality Modeling',
    description: 'Learn how to specify production settings in Reality Modeling',
    thumbnail: '/images/cccs-production-thumb.jpg',
    href: '/tutorials/contextcapture-api-better-production/',
    durationInMinutes: 10,
    relatedApiIds: ['contextcapture']
  }
};
var contextcapture_api_better_production_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var contextcapture_api_better_production_Introduction = contextcapture_api_better_production_makeShortcode("Introduction");
var contextcapture_api_better_production_TutorialSection = contextcapture_api_better_production_makeShortcode("TutorialSection");
var contextcapture_api_better_production_Title = contextcapture_api_better_production_makeShortcode("Title");
var contextcapture_api_better_production_CodeBlock = contextcapture_api_better_production_makeShortcode("CodeBlock");
var contextcapture_api_better_production_ContinueLearningSection = contextcapture_api_better_production_makeShortcode("ContinueLearningSection");
var contextcapture_api_better_production_TileList = contextcapture_api_better_production_makeShortcode("TileList");
var contextcapture_api_better_production_Tile = contextcapture_api_better_production_makeShortcode("Tile");
var contextcapture_api_better_production_ResourceTile = contextcapture_api_better_production_makeShortcode("ResourceTile");
var contextcapture_api_better_production_layoutProps = {
  metadata: contextcapture_api_better_production_metadata
};
var contextcapture_api_better_production_MDXLayout = "wrapper";
function contextcapture_api_better_production_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, contextcapture_api_better_production_excluded);
  return (0,react_.mdx)(contextcapture_api_better_production_MDXLayout, (0,esm_extends/* default */.Z)({}, contextcapture_api_better_production_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(contextcapture_api_better_production_Introduction, {
    skillLevel: "Expert",
    durationInMinutes: "10",
    summaryImageSrc: "/unreal-docs-site/static/images/cccs-production-header.jpg",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "The goal of this tutorial is to specify production settings to ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), ", so that your exports are closer to what you\u2019d like."), (0,react_.mdx)("p", null, "In this tutorial, we will cover how to send production settings to ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), ", and go over the different settings and their usage.")), (0,react_.mdx)(contextcapture_api_better_production_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Completed the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/contextcapture-api-quick-start"
  }, "Reality Modeling Quick Start tutorial"), "."))), (0,react_.mdx)(contextcapture_api_better_production_TutorialSection, {
    actions: [(0,react_.mdx)(contextcapture_api_better_production_Title, {
      mdxType: "Title"
    }, "Example of a production settings file"), (0,react_.mdx)(contextcapture_api_better_production_CodeBlock, {
      language: "json",
      code: "{\n  \"ProductionSettingsExchange\":[\n    {\n      \"name\":\"OBJ\",\n      \"settings\":{\n        \"TexturedEnabled\":false,\n        \"DoublePrecision\":true\n      }\n    },\n    {\n      \"name\":\"FBX\",\n      \"settings\":\"\"\n    }\n  ]\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-specifying-production-settings"
  }, "1. Specifying production settings"), (0,react_.mdx)("p", null, "If you want to apply specific settings to the productions - that is outputs like ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "3MX"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "OBJ"), ", etc. - you can add a file in the workspace reality data: the file ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "prod_settings.json"), " has to be uploaded to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "/{jobId}/data/"), ".\nNote that no check on the uploaded file is performed until the job is actually submitted, and if the parameters are not fitted to the inputs, the job will failed.\nAlso, if you provide this file, all the outputs should be present in the file.\nThat is, if you requested ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "OBJ"), " and ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "FBX"), ", both of these outputs should be present in the file, even if you only want to apply specific settings to the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "OBJ"), " format, see the example.")), (0,react_.mdx)(contextcapture_api_better_production_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-list-of-existing-production-settings"
  }, "2. List of existing production settings"), (0,react_.mdx)("p", null, "You will find here a complete list of the existing options for the existing ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), " formats. Properties separated by a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "-"), " mean you have to chose between one of the options.")), (0,react_.mdx)(contextcapture_api_better_production_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_better_production_CodeBlock, {
      language: "json",
      code: "{\n  \"TexturedEnabled\": true-false,\n  \"TextureColorSource\": \"Visible\"-\"Thermal\"-\"Resolution\",\n  \"TextureColorSourceResRangeMin\": double,\n  \"TextureColorSourceResRangeMax\": double,\n  \"TextureColorSourceThermalUnit\": \"Absolute\"-\"Equalized\"-\"Celsius\"-\"Fahrenheit\",\n  \"TextureColorSourceThermalRangeMin\": double,\n  \"TextureColorSourceThermalRangeMax\": double,\n  \"TextureCompressionQuality\": 50-75-90-100,\n  \"MaximumTextureSize\": int,\n  \"TextureSharpening\": 0-100\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "texture"
  }, "Texture"), (0,react_.mdx)("p", null, "These settings can be used for ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "3MX"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "3SM"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Cesium 3D Tiles"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "ESRI i3s"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "DGN"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "FBX"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "OBJ"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "POD"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "LAS"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "LODTreeExport"), "."), (0,react_.mdx)("p", null, "They are used to enabled the texturing of a model, select the color source, change the compression of the texture and so on.")), (0,react_.mdx)(contextcapture_api_better_production_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_better_production_CodeBlock, {
      language: "json",
      code: "{\n  \"TileOverlap\": double (in units or meters)\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "tile-overlap"
  }, "Tile overlap"), (0,react_.mdx)("p", null, "These settings can be used for ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "3MX"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "3SM"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Cesium 3D Tiles"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "ESRI i3s"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "DGN"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "FBX"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "OBJ"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "LODTreeExport"), "."), (0,react_.mdx)("p", null, "They are used to determinate the overlap distance between two tiles, in order to avoid gaps.")), (0,react_.mdx)(contextcapture_api_better_production_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_better_production_CodeBlock, {
      language: "json",
      code: "{\n  \"SRS\": string,\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "spatial-reference-system"
  }, "Spatial Reference System"), (0,react_.mdx)("p", null, "A spatial reference system describes the coordinates system of the produced output.\nWe expect a string Well Known Text definition (e.g. WGS84), \u201CEPSG: \u201D or a PROJ.4 definition."), (0,react_.mdx)("p", null, "These settings can be used for ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "3MX"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "3SM"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Cesium 3D Tiles"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "ESRI i3s"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "DGN"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "FBX"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "OBJ"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "LAS"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "POD"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Orthophoto/DSM"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "LODTreeExport"), ".")), (0,react_.mdx)(contextcapture_api_better_production_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_better_production_CodeBlock, {
      language: "json",
      code: "{\n  \"SRSOrigin\": \"15.0;2.3;-25.3\"\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "srs-origin"
  }, "SRS Origin"), (0,react_.mdx)("p", null, "These settings can be used for ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "3MX"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "DGN"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "FBX"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "OBJ"), "."), (0,react_.mdx)("p", null, "They describe the origin of the Spatial Reference System.")), (0,react_.mdx)(contextcapture_api_better_production_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_better_production_CodeBlock, {
      language: "json",
      code: "{\n  \"LODType\": \"type - see table\",\n  \"LODSize\": 0.707106781186547-1-1.4142135623731-2\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "level-of-details"
  }, "Level of details"), (0,react_.mdx)("p", null, "These settings can be used for ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "3MX"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "3SM"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Cesium 3D Tiles"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "ESRI i3s"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "DGN"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "FBX"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "OBJ"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "LODTreeExport"), "."), (0,react_.mdx)("p", null, "They describe the type of level of details to be used, and their size."), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "center"
  }, "Type Table"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "center"
  }, "None"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "center"
  }, "Adaptive"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "center"
  }, "Octree"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "center"
  }, "Unary"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "center"
  }, "Quadtree"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "center"
  }, "BingMaps"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "3MX"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u274C"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u274C"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u274C"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u274C")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "3SM"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u274C"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u274C"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u274C"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u274C"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u274C")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "Cesium 3D Tiles"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u274C"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u274C"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u274C"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u274C"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u274C")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "ESRI i3s"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u274C"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u274C"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u274C"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u274C")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "DGN"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "FBX"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "OBJ"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "LODTreeExport"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"))))), (0,react_.mdx)(contextcapture_api_better_production_TutorialSection, {
    actions: [(0,react_.mdx)(contextcapture_api_better_production_Title, {
      mdxType: "Title"
    }, "3MX settings"), (0,react_.mdx)(contextcapture_api_better_production_CodeBlock, {
      language: "json",
      code: "{\n  \"GenerateWebGLApp\": bool,\n  \"IncludeProxy3DModel\": bool\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(contextcapture_api_better_production_Title, {
      mdxType: "Title"
    }, "Cesium settings"), (0,react_.mdx)(contextcapture_api_better_production_CodeBlock, {
      language: "json",
      code: "{\n  \"GenerateCesiumApp\": bool\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "generate-webapp"
  }, "Generate WebApp"), (0,react_.mdx)("p", null, "These settings can be used for ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "3MX"), " or ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Cesium 3D Tiles"), ", but they differ in the structure."), (0,react_.mdx)("p", null, "They are used to generate a web application that can be hosted on a server for displaying 3D models.")), (0,react_.mdx)(contextcapture_api_better_production_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_better_production_CodeBlock, {
      language: "json",
      code: "{\n  \"DoublePrecision\": bool\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "double-precision"
  }, "Double precision"), (0,react_.mdx)("p", null, "These settings can be used for ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "OBJ"), ".")), (0,react_.mdx)(contextcapture_api_better_production_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_better_production_CodeBlock, {
      language: "json",
      code: "{\n  \"PointSamplingUnit\": \"pixel\"-\"meter\"-\"unit\",\n  \"PointSamplingDistance\": double\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "point-sampling"
  }, "Point sampling"), (0,react_.mdx)("p", null, "These settings can be used for ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "POD"), ", ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "LAS"), "."), (0,react_.mdx)("p", null, "PointSamplingUnit is used to describe what unit you want to use for sampling.\nPixel means ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "One point every x pixels"), " so that the sampling is relative to the resolution of your input.\nMeter or unit means ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "One point every x unit"), " so that the sampling is uniform for the point cloud."), (0,react_.mdx)("p", null, "PointSamplingDistance specifies ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "x"), ".")), (0,react_.mdx)(contextcapture_api_better_production_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_better_production_CodeBlock, {
      language: "json",
      code: "{\n  \"CompressionMethod\":\"None\"-\"LAZ\"\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "las-compression"
  }, "LAS Compression"), (0,react_.mdx)("p", null, "These settings can be used for ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "LAS"), "."), (0,react_.mdx)("p", null, "Set it to ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "LAZ"), " in order to compress the point cloud.")), (0,react_.mdx)(contextcapture_api_better_production_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_better_production_CodeBlock, {
      language: "json",
      code: "{\n  \"SamplingDistance\": double,\n  \"ProjectionMode\": \"HighestPoint\"-\"LowestPoint\",\n  \"MaxImagePartDimension\": int,\n  \"Orthophoto\":{\n    \"Enabled\": bool,\n    \"Format\": \"GeoTIFF\"-\"JPEG\"-\"KML_SuperOverlay\",\n    \"NoDataValue\": \"255 255 255\",\n    \"ColorSource\": \"Reference3dModelVisible\"-\"OptimizedComputationVisible\"-\"Reference3dModelThermal\"-\"OptimizedComputationThermal\",\n    \"ImageSharpening\": 0-100\n  },\n  \"DSM\":{\n    \"Enabled\": bool,\n    \"Format\": \"GeoTIFF\"-\"XYZ\"-\"ASC\",\n    \"NoDataValue\": double\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "orthophotodsm-settings"
  }, "Orthophoto/DSM settings"), (0,react_.mdx)("p", null, "These settings can be used for ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Orthophoto/DSM"), "."), (0,react_.mdx)("p", null, "Settings are split between Orthophoto and DSM. You can disable one or the other with the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Enabled"), " property.")), (0,react_.mdx)(contextcapture_api_better_production_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)("p", null, "Congratulations for completing the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), " production tutorial! You should now be able to specify production settings in order to export more precisely your formats."), (0,react_.mdx)("p", null, "To go further and use ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), " to its maximum potential, you can check the following tutorials."), (0,react_.mdx)(contextcapture_api_better_production_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(contextcapture_api_better_production_Tile, {
    name: "Using cache in Reality Modeling",
    description: "This tutorial focuses on using cache for faster processing in Reality Modeling",
    thumbnail: "/unreal-docs-site/static/images/cccs-cache-thumb.png",
    href: "/tutorials/contextcapture-api-how-to-use-cache",
    mdxType: "Tile"
  }), (0,react_.mdx)(contextcapture_api_better_production_Tile, {
    name: "Better calibration in Reality Modeling",
    description: "Learn how to specify calibration settings in Reality Modeling, and download the result of a calibration",
    thumbnail: "/unreal-docs-site/static/images/cccs-calibration-thumb.jpg",
    href: "/tutorials/contextcapture-api-better-calibration",
    mdxType: "Tile"
  })), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(contextcapture_api_better_production_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(contextcapture_api_better_production_ResourceTile, {
    title: "Projects API",
    href: "/apis/projects/",
    description: "Project is necessary for using Reality Modeling API. You can check its possibilities.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(contextcapture_api_better_production_ResourceTile, {
    title: "Reality Data API",
    href: "/apis/realitydata/",
    description: "Reality Data API is necessary for uploading inputs for Reality Modeling, and downloading outputs.",
    mdxType: "ResourceTile"
  }))));
}
;
contextcapture_api_better_production_MDXContent.isMDXComponent = true;
var contextcapture_api_better_production_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-specifying-production-settings",
    level: 2,
    title: "1. Specifying production settings",
    children: []
  }, {
    id: "2-list-of-existing-production-settings",
    level: 2,
    title: "2. List of existing production settings",
    children: [{
      id: "texture",
      level: 3,
      title: "Texture",
      children: []
    }, {
      id: "tile-overlap",
      level: 3,
      title: "Tile overlap",
      children: []
    }, {
      id: "spatial-reference-system",
      level: 3,
      title: "Spatial Reference System",
      children: []
    }, {
      id: "srs-origin",
      level: 3,
      title: "SRS Origin",
      children: []
    }, {
      id: "level-of-details",
      level: 3,
      title: "Level of details",
      children: []
    }, {
      id: "generate-webapp",
      level: 3,
      title: "Generate WebApp",
      children: []
    }, {
      id: "double-precision",
      level: 3,
      title: "Double precision",
      children: []
    }, {
      id: "point-sampling",
      level: 3,
      title: "Point sampling",
      children: []
    }, {
      id: "las-compression",
      level: 3,
      title: "LAS Compression",
      children: []
    }, {
      id: "orthophotodsm-settings",
      level: 3,
      title: "Orthophoto/DSM settings",
      children: []
    }]
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var contextcapture_api_better_production_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/contextcapture-api-how-to-use-cache.mdx


var contextcapture_api_how_to_use_cache_excluded = ["components"];
var contextcapture_api_how_to_use_cache_jsx = (external_react_default()).createElement;


var contextcapture_api_how_to_use_cache_readingTime = {
  "text": "5 min read",
  "minutes": 4.84,
  "time": 290400,
  "words": 968
};
/* @jsxRuntime classic */
/* @jsx mdx */

var contextcapture_api_how_to_use_cache_metadata = {
  title: 'Using cache in Reality Modeling API',
  tile: {
    name: 'Using cache in Reality Modeling API',
    description: 'This tutorial focuses on using cache for faster processing in Reality Modeling',
    thumbnail: '/images/cccs-cache-thumb.png',
    href: '/tutorials/contextcapture-api-how-to-use-cache/',
    durationInMinutes: 15,
    relatedApiIds: ['contextcapture']
  }
};
var contextcapture_api_how_to_use_cache_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var contextcapture_api_how_to_use_cache_Introduction = contextcapture_api_how_to_use_cache_makeShortcode("Introduction");
var contextcapture_api_how_to_use_cache_TutorialSection = contextcapture_api_how_to_use_cache_makeShortcode("TutorialSection");
var contextcapture_api_how_to_use_cache_CodeBlock = contextcapture_api_how_to_use_cache_makeShortcode("CodeBlock");
var contextcapture_api_how_to_use_cache_Alert = contextcapture_api_how_to_use_cache_makeShortcode("Alert");
var contextcapture_api_how_to_use_cache_ContinueLearningSection = contextcapture_api_how_to_use_cache_makeShortcode("ContinueLearningSection");
var contextcapture_api_how_to_use_cache_TileList = contextcapture_api_how_to_use_cache_makeShortcode("TileList");
var contextcapture_api_how_to_use_cache_Tile = contextcapture_api_how_to_use_cache_makeShortcode("Tile");
var contextcapture_api_how_to_use_cache_ResourceTile = contextcapture_api_how_to_use_cache_makeShortcode("ResourceTile");
var contextcapture_api_how_to_use_cache_layoutProps = {
  metadata: contextcapture_api_how_to_use_cache_metadata
};
var contextcapture_api_how_to_use_cache_MDXLayout = "wrapper";
function contextcapture_api_how_to_use_cache_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, contextcapture_api_how_to_use_cache_excluded);
  return (0,react_.mdx)(contextcapture_api_how_to_use_cache_MDXLayout, (0,esm_extends/* default */.Z)({}, contextcapture_api_how_to_use_cache_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(contextcapture_api_how_to_use_cache_Introduction, {
    skillLevel: "Advanced",
    durationInMinutes: "15",
    summaryImageSrc: "/unreal-docs-site/static/images/cccs-cache-header.jpg",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "The goal of this tutorial is to leverage the caching mechanism of ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling REST API"), " in order to speed up your processing."), (0,react_.mdx)("p", null, "In this tutorial, we will create a job to be cached, then use this cache to export another format without reprocessing the complete data.")), (0,react_.mdx)(contextcapture_api_how_to_use_cache_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Completed the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/contextcapture-api-quick-start"
  }, "Reality Modeling Quick Start tutorial"), ":", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/contextcapture-api-quick-start/#3-create-a-workspace"
  }, "Created a workspace")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Uploaded input data (images and orientations)"))))), (0,react_.mdx)(contextcapture_api_how_to_use_cache_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-cache-re-usage-and-behavior"
  }, "1. Cache re-usage and behavior"), (0,react_.mdx)("h3", {
    "id": "cache-re-usage"
  }, "Cache re-usage"), (0,react_.mdx)("p", null, "Before creating jobs, it is important to understand how caching works in ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), ".\nWhen asked for, a cache will be created if the job is successful. If a job is failed or cancelled, no cache will be created."), (0,react_.mdx)("p", null, "A created cache can be used for later jobs in order to reuse it (new exports for example). This is the table of possible workflows:"), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "right"
  }), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "center"
  }, "Cached Calibration"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "center"
  }, "Cached Reconstruction"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": "center"
  }, "Cached Full"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "right"
  }, "Calibration"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u274C"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "right"
  }, "Reconstruction"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "right"
  }, "Full"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u274C\uFE0F"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": "center"
  }, "\u2714\uFE0F")))), (0,react_.mdx)("p", null, "A new calibration job based on a cached reconstruction will failed for example."), (0,react_.mdx)("h3", {
    "id": "cache-behavior"
  }, "Cache behavior"), (0,react_.mdx)("p", null, (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), " considers that cache is the truth, and will use it as much as possible.\nFor example, if you submit a full job with a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Draft"), " mesh quality to produce a 3MX, then use it as cache for a full job with ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Extra"), " mesh quality to produce an OBJ, you will have a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Draft"), " OBJ result."), (0,react_.mdx)("p", null, "Caches are standalone snapshot of a job. They don\u2019t depend on each other. Note that for large projects, cache can be very large:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Cache upload will then slow marginally your job"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Usage of Reality Data will increase")), (0,react_.mdx)("p", null, "Cache can be cleaned: they are uploaded in the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), " workspace reality data on ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Management"), " - reality data id is the workspace id, in ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "{JOB_ID}/cache"), ".")), (0,react_.mdx)(contextcapture_api_how_to_use_cache_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-create-a-job-that-will-be-cache"
  }, "2. Create a job that will be cache"), (0,react_.mdx)("p", null, "In order to tell ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), " we want to create a cache of the job, we just need to specify a setting in the job creation payload.")), (0,react_.mdx)(contextcapture_api_how_to_use_cache_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_how_to_use_cache_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/contextcapture/jobs HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request"
  }, "Request"), (0,react_.mdx)("p", null, "A new job with cache is created by sending a HTTP POST message to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/contextcapture/jobs"
  }, "https://api.bentley.com/contextcapture/jobs"), " endpoint with the payload describing the job.")), (0,react_.mdx)(contextcapture_api_how_to_use_cache_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_how_to_use_cache_CodeBlock, {
      language: "json",
      code: "{\n  \"type\": \"Full\",\n  \"name\": \"My Reality Modeling job to be cached\",\n  \"workspaceId\": \"WORKSPACE_ID\",\n  \"inputs\": [\n    {\n      \"id\": \"IMAGECOLLECTION_RD_ID\",\n      \"description\": \"Drone ImageCollection\"\n    },\n    {\n      \"id\": \"CCORIENTATIONS_RD_ID\",\n      \"description\": \"Drone CCOrientations\"\n    }\n  ],\n  \"settings\": {\n    \"quality\": \"Extra\",\n    \"processingEngines\": 0,\n    \"outputs\": [\n      \"OBJ\"\n    ],\n    \"cacheSettings\":\n    {\n      \"createCache\": true\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-body"
  }, "Request Body"), (0,react_.mdx)("p", null, "As you can see, we added in the settings a new section ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "cacheSettings"), " with the property ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "createCache"), " set to ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "True"), "."), (0,react_.mdx)("p", null, "At the end of the job, if it is successful, the cache will be automatically uploaded to ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), " workspace reality data on ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Management"), " - reality data id is the workspace id, in ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "{JOB_ID}/cache"), "."), (0,react_.mdx)(contextcapture_api_how_to_use_cache_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note the JOB_ID created by this job. It will be useful later for using the cache.")), (0,react_.mdx)(contextcapture_api_how_to_use_cache_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-use-a-cached-job"
  }, "3. Use a cached job"), (0,react_.mdx)("p", null, "If you want to export your data to another format - 3SM for example, we can use the cached job to speed up the processing time.")), (0,react_.mdx)(contextcapture_api_how_to_use_cache_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_how_to_use_cache_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/contextcapture/jobs HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-1"
  }, "Request"), (0,react_.mdx)("p", null, "A new job with using cache is created by sending a HTTP POST message to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/contextcapture/jobs"
  }, "https://api.bentley.com/contextcapture/jobs"), " endpoint with the payload describing the job.")), (0,react_.mdx)(contextcapture_api_how_to_use_cache_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_how_to_use_cache_CodeBlock, {
      language: "json",
      code: "{\n  \"type\":\"Full\",\n  \"name\":\"My Reality Modeling job using cache\",\n  \"workspaceId\":\"WORKSPACE_ID\",\n  \"inputs\":[\n    {\n      \"id\":\"IMAGECOLLECTION_RD_ID\",\n      \"description\":\"Drone ImageCollection\"\n    },\n    {\n      \"id\":\"CCORIENTATIONS_RD_ID\",\n      \"description\":\"Drone CCOrientations\"\n    }\n  ],\n  \"settings\":{\n    \"meshQuality\":\"Extra\",\n    \"processingEngines\":0,\n    \"outputs\":[\n      \"3SM\"\n    ],\n    \"cacheSettings\":{\n      \"useCache\":\"JOB_ID_OF_CACHED_JOB\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-body-1"
  }, "Request Body"), (0,react_.mdx)("p", null, "As you can see, we added in the settings a section ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "cacheSettings"), " with the property ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "useCache"), " set to ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "JOB_ID_OF_CACHED_JOB"), ".\nThis tells ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), " to download and use the cached job.\nThat way, your job will be faster, since geometry was cached and only need to be converted to ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "3SM"), " format."), (0,react_.mdx)(contextcapture_api_how_to_use_cache_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "It is possible to combine both properties in ", (0,react_.mdx)("code", null, "cacheSettings"), ". For example you may want to use the cache of a ", (0,react_.mdx)("i", null, "Calibration"), " job for a", ' ', (0,react_.mdx)("i", null, "Full"), " job, and have the result of this job cached for future exports.")), (0,react_.mdx)(contextcapture_api_how_to_use_cache_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)("p", null, "Congratulations for completing the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), " cache tutorial! You should now be able to create and use cached job for faster processing.\nTo go further and use ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), " to its maximum potential, you can check the following tutorials."), (0,react_.mdx)(contextcapture_api_how_to_use_cache_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(contextcapture_api_how_to_use_cache_Tile, {
    name: "Better calibration in Reality Modeling",
    description: "Learn how to specify calibration settings in Reality Modeling, and download the result of a calibration",
    thumbnail: "/unreal-docs-site/static/images/cccs-calibration-thumb.jpg",
    href: "/tutorials/contextcapture-api-better-calibration",
    mdxType: "Tile"
  }), (0,react_.mdx)(contextcapture_api_how_to_use_cache_Tile, {
    name: "Better production in Reality Modeling",
    description: "Learn how to specify production settings in Reality Modeling",
    thumbnail: "/unreal-docs-site/static/images/cccs-production-thumb.jpg",
    href: "/tutorials/contextcapture-api-better-production",
    mdxType: "Tile"
  })), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(contextcapture_api_how_to_use_cache_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(contextcapture_api_how_to_use_cache_ResourceTile, {
    title: "Projects API",
    href: "/apis/projects/",
    description: "Project is necessary for using Reality Modeling API. You can check its possibilities.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(contextcapture_api_how_to_use_cache_ResourceTile, {
    title: "Reality Data API",
    href: "/apis/realitydata/",
    description: "Reality Data API is necessary for uploading inputs for Reality Modeling, and downloading outputs.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(contextcapture_api_how_to_use_cache_ResourceTile, {
    title: "Reality Management API",
    href: "/apis/reality-management/",
    description: "Reality Management API is necessary for uploading inputs for Reality Modeling, and downloading outputs.",
    mdxType: "ResourceTile"
  }))));
}
;
contextcapture_api_how_to_use_cache_MDXContent.isMDXComponent = true;
var contextcapture_api_how_to_use_cache_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-cache-re-usage-and-behavior",
    level: 2,
    title: "1. Cache re-usage and behavior",
    children: [{
      id: "cache-re-usage",
      level: 3,
      title: "Cache re-usage",
      children: []
    }, {
      id: "cache-behavior",
      level: 3,
      title: "Cache behavior",
      children: []
    }]
  }, {
    id: "2-create-a-job-that-will-be-cache",
    level: 2,
    title: "2. Create a job that will be cache",
    children: []
  }, {
    id: "3-use-a-cached-job",
    level: 2,
    title: "3. Use a cached job",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var contextcapture_api_how_to_use_cache_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/contextcapture-api-quick-start.mdx


var contextcapture_api_quick_start_excluded = ["components"];
var contextcapture_api_quick_start_jsx = (external_react_default()).createElement;


var contextcapture_api_quick_start_readingTime = {
  "text": "11 min read",
  "minutes": 10.235,
  "time": 614100,
  "words": 2047
};
/* @jsxRuntime classic */
/* @jsx mdx */

var contextcapture_api_quick_start_metadata = {
  title: 'Get started with Reality Modeling API',
  tile: {
    name: 'Get started with Reality Modeling API',
    description: 'This tutorial is an introduction to Reality Modeling API, explaining the basic workflows.',
    thumbnail: '/images/cccs-quick-start-thumb.jpg',
    href: '/tutorials/contextcapture-api-quick-start/',
    durationInMinutes: 30,
    relatedApiIds: ['contextcapture']
  }
};
var contextcapture_api_quick_start_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var contextcapture_api_quick_start_Introduction = contextcapture_api_quick_start_makeShortcode("Introduction");
var contextcapture_api_quick_start_TutorialSection = contextcapture_api_quick_start_makeShortcode("TutorialSection");
var contextcapture_api_quick_start_CreateSampleAppButton = contextcapture_api_quick_start_makeShortcode("CreateSampleAppButton");
var contextcapture_api_quick_start_CodeBlock = contextcapture_api_quick_start_makeShortcode("CodeBlock");
var contextcapture_api_quick_start_Alert = contextcapture_api_quick_start_makeShortcode("Alert");
var contextcapture_api_quick_start_ContinueLearningSection = contextcapture_api_quick_start_makeShortcode("ContinueLearningSection");
var contextcapture_api_quick_start_TileList = contextcapture_api_quick_start_makeShortcode("TileList");
var contextcapture_api_quick_start_Tile = contextcapture_api_quick_start_makeShortcode("Tile");
var contextcapture_api_quick_start_ResourceTile = contextcapture_api_quick_start_makeShortcode("ResourceTile");
var contextcapture_api_quick_start_layoutProps = {
  metadata: contextcapture_api_quick_start_metadata
};
var contextcapture_api_quick_start_MDXLayout = "wrapper";
function contextcapture_api_quick_start_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, contextcapture_api_quick_start_excluded);
  return (0,react_.mdx)(contextcapture_api_quick_start_MDXLayout, (0,esm_extends/* default */.Z)({}, contextcapture_api_quick_start_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(contextcapture_api_quick_start_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "30",
    summaryImageSrc: "/unreal-docs-site/static/images/cccs-quick-start-header.jpg",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This quick start tutorial is going to help you work with Reality Modeling, and also understand the basic objects of Reality Modeling: workspaces and jobs."), (0,react_.mdx)("p", null, "In this tutorial, we will create a new workspace, submit a simple job, track its progress and check its result.")), (0,react_.mdx)(contextcapture_api_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Project created. Try the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-and-query-projects-guide/"
  }, "create and query projects guide"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Knowledge of the ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Reality Management"), " API. Try ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/reality-management"
  }, "Reality Management API"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Knowledge of the ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "CCImageCollection"), " and the ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "CCOrientations"), " formats. Try ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/contextcapture/cc-ic/"
  }, "CCImageCollection format"), " or ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/contextcapture/cc-ori/"
  }, "CCOrientations format")))), (0,react_.mdx)(contextcapture_api_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(contextcapture_api_quick_start_CreateSampleAppButton, {
      clientName: "CC basic tutorial",
      scopes: ["contextcapture:read", "contextcapture:modify"],
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Reality Modeling API"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "contextcapture:read contextcapture:modify"), " scopes enabled."))), (0,react_.mdx)(contextcapture_api_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "To make request to the API, a user token is needed. There are several ways to get it. Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application.")), (0,react_.mdx)(contextcapture_api_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-create-a-workspace"
  }, "3. Create a workspace"), (0,react_.mdx)("p", null, "In order to process jobs, we first need to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/contextcapture/operations/workspaces-create/"
  }, "create a workspace"), ".")), (0,react_.mdx)(contextcapture_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_quick_start_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/contextcapture/workspaces HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request"
  }, "Request"), (0,react_.mdx)("p", null, "A new workspace is created by sending a HTTP POST message to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/contextcapture/workspaces"
  }, "https://api.bentley.com/contextcapture/workspaces"), " endpoint with the payload describing the workspace.")), (0,react_.mdx)(contextcapture_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"iTwinId\":\"ITWIN_ID\",\n  \"name\":\"My first Reality Modeling workspace\"\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-body"
  }, "Request Body"), (0,react_.mdx)("p", null, "The request body handles two properties:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "name"), " - Workspace name (", (0,react_.mdx)("em", {
    parentName: "li"
  }, "mandatory"), ")"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "iTwinId"), " - Project associated with the workspace")), (0,react_.mdx)(contextcapture_api_quick_start_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note that unless you have an Enterprise admin role within your organization, you will need to provide a ", (0,react_.mdx)("code", null, "iTwinId"), ". For easier project management, we highly recommend you always use an ", (0,react_.mdx)("code", null, "iTwinId"), ".")), (0,react_.mdx)(contextcapture_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"workspace\":{\n    \"id\":\"WORKSPACE_ID\",\n    \"creationDateTime\":\"2020-09-14T13:46:11Z\",\n    \"name\":\"My first Reality Modeling workspace\",\n    \"iTwinId\":\"ITWIN_ID\"\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response-body"
  }, "Response body"), (0,react_.mdx)("p", null, "The API will respond with a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "201 Created"), " status code if the call is successful.\nNote that creating a workspace will also create a new reality data (accessible through the Reality Management API), with a similar id to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "WORKSPACE_ID"), ".\nThough it is not useful in our current tutorial, this reality data becomes necessary for advanced workflows.")), (0,react_.mdx)(contextcapture_api_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-create-a-job"
  }, "4. Create a job"), (0,react_.mdx)("p", null, "In order to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/contextcapture/operations/jobs-create/"
  }, "create a job"), ", we need inputs. Reality Modeling supports 3 types of Reality Data as inputs:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/contextcapture/cc-ic"
  }, "CCImageCollection")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "ScanCollection"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/contextcapture/cc-ori"
  }, "CCOrientations"))), (0,react_.mdx)("p", null, "Currently, the only way to create ScanCollection is through a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), " desktop application."), (0,react_.mdx)("p", null, "Reality data need to be stored in the same region as the project selected for the workspace, and must be accessible to the user for processing.\nWe highly recommend you use the same project for your inputs and for your workspace.")), (0,react_.mdx)(contextcapture_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_quick_start_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/contextcapture/jobs HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-1"
  }, "Request"), (0,react_.mdx)("p", null, "A new job is created by sending a HTTP POST message to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/contextcapture/jobs"
  }, "https://api.bentley.com/contextcapture/jobs"), " endpoint with the payload describing the job.")), (0,react_.mdx)(contextcapture_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"type\":\"Full\",\n  \"name\":\"My first Reality Modeling job\",\n  \"workspaceId\":\"WORKSPACE_ID\",\n  \"costEstimationParameters\":{\n    \"gigaPixels\":2.5,\n    \"megaPoints\":1.5,\n    \"meshQuality\":\"Extra\"\n  },\n  \"inputs\":[\n    {\n      \"id\":\"IMAGECOLLECTION_RD_ID\",\n      \"description\":\"Drone ImageCollection\"\n    },\n    {\n      \"id\":\"CCORIENTATIONS_RD_ID\",\n      \"description\":\"Drone CCOrientations\"\n    }\n  ],\n  \"settings\":{\n    \"quality\":\"Extra\",\n    \"processingEngines\":0,\n    \"outputs\":[\n      \"OBJ\"\n    ]\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-body-1"
  }, "Request Body"), (0,react_.mdx)("p", null, "The request body handles multiple properties"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "type"), " - Job type, can be ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Full"), ", ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Reconstruction"), " or ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Calibration")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "name"), " - Name of the job"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "workspaceId"), " - Workspace linked to the job"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "costEstimationParameters"), " - Parameters to be passed to estimate the cost of the job"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "inputs"), " - List of inputs, consisting of the reality data ids and descriptions of the inputs"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "settings"), " - High level processing settings")), (0,react_.mdx)("p", null, "There are three types of job:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Calibration"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Reconstruction"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Full")), (0,react_.mdx)("p", null, "A calibration job will take images and point clouds and calibrate them in 3D.\nA reconstruction job will start from calibrated images and/or point clouds and reconstruct them (that is, create a mesh or an orthophoto).\nA full job will do a calibration and reconstruction at once."), (0,react_.mdx)("p", null, "You need to specify one and only one ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "CCOrientations"), " in your input list for the job to be valid.\nThe ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "CCImageCollection"), "s and ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "ScanCollection"), "s are the ones used in the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "CCOrientations"), ", though the service won\u2019t checked the correspondence right away."), (0,react_.mdx)("p", null, "Regarding settings:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Mesh quality can be ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Draft"), ", ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Medium"), " and ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Extra")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Processing engines can not be higher than 20 in a normal case. Check the actual limit for your account with the limit endpoint. If set to 0, the service will use the limit of your account."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Outputs is a list of the format you want to produce", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "In case of calibration job, only ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "CCOrientations"), " is an acceptable output"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "In case of full/reconstruction job, at least one output must be specified for the job to be valid")))), (0,react_.mdx)("p", null, "Small note on outputs: most of the time, an output is generated during the reconstruction phase of the job.\nThe exception is the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "CCOrientations"), " format, that is produced during the calibration phase of the job.\nTherefore, ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "CCOrientations"), " can be produced only with a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Full"), " or ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Calibration"), " job, while other formats can be produced only with a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Full"), " or ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reconstruction"), " job.")), (0,react_.mdx)(contextcapture_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"job\":{\n    \"id\":\"JOB_ID\",\n    \"name\":\"My first Reality Modeling job\",\n    \"type\":\"Full\",\n    \"state\":\"unsubmitted\",\n    \"createdDateTime\": \"2020-09-14T14:29:55Z\",\n    \"lastModifiedDateTime\":\"2020-09-14T14:29:55Z\",\n    \"location\":\"EastUs\",\n    \"iTwinId\": \"ITWIN_ID\",\n    \"workspaceId\":\"WORKSPACE_ID\",\n    \"email\":\"john.doe@example.com\",\n    \"executionInformation\":null,\n    \"costEstimationParameters\":{\n    \"gigaPixels\":2.5,\n    \"megaPoints\":1.5,\n    \"meshQuality\":\"Extra\"\n    },\n    \"estimatedCost\": 3.5,\n    \"inputs\":[\n      {\n        \"id\":\"IMAGECOLLECTION_RD_ID\",\n        \"description\":\"Drone ImageCollection\"\n      },\n      {\n        \"id\":\"CCORIENTATIONS_RD_ID\",\n        \"description\":\"Drone CCOrientations\"\n      }\n    ],\n    \"jobSettings\":{\n      \"quality\":\"Extra\",\n      \"processingEngines\":20,\n      \"cacheSettings\":null,\n      \"outputs\":[\n        {\n          \"format\":\"OBJ\",\n          \"id\":\"OBJ_RD_ID\"\n        }\n      ]\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response-body-1"
  }, "Response body"), (0,react_.mdx)("p", null, "The API will respond with a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "201 Created"), " status code if the call is successful."), (0,react_.mdx)("p", null, "You can see the job is in state ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "New"), ", meaning that it has been created but not yet submitted.\nThis is the only state where you can still delete a job. Once a job is submitted, it cannot be deleted anymore."), (0,react_.mdx)("p", null, (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "location"), " indicates the region in which the job will be submitted. It is determined thanks to the project linked in your workspace."), (0,react_.mdx)("p", null, "Outputs now have two properties: the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "format"), " and the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "realityDataId"), ".\nCreating a job automatically creates output reality data for your formats.\nCreating a job calculates its estimated cost from the \u201CcostEstimationParameters\u201D provided.\nOnce the job is completed and successful, you will be able to download your output from ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Management API"), " thanks to this id.")), (0,react_.mdx)(contextcapture_api_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-submit-a-job"
  }, "5. Submit a job"), (0,react_.mdx)("p", null, "Now that the job is created, we will ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/contextcapture/operations/jobs-patch/"
  }, "submit it for processing"), ".")), (0,react_.mdx)(contextcapture_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_quick_start_CodeBlock, {
      language: "http",
      code: "PATCH https://api.bentley.com/contextcapture/jobs/JOB_ID HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-2"
  }, "Request"), (0,react_.mdx)("p", null, "Submit an existing job by sending a HTTP PATCH message to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/contextcapture/jobs/JOB_ID"
  }, "https://api.bentley.com/contextcapture/jobs/JOB_ID"), " endpoint with the payload describing to change to apply.")), (0,react_.mdx)(contextcapture_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"state\":\"active\"\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-body-2"
  }, "Request Body"), (0,react_.mdx)("p", null, "To submit a job, the request body should only contain one property"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "state"), " - State of the job, should be ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "active"), " in order to submit the job"))), (0,react_.mdx)(contextcapture_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"job\":{\n    \"id\":\"JOB_ID\",\n    \"name\":\"My first Reality Modeling job\",\n    \"type\":\"Full\",\n    \"state\":\"active\",\n    \"createdDateTime\":\"2020-09-14T14:29:55Z\",\n    \"lastModifiedDateTime\":\"2020-09-14T14:29:55Z\",\n    \"location\":\"EastUs\",\n    \"iTwinId\": \"ITWIN_ID\",\n    \"workspaceId\":\"WORKSPACE_ID\",\n    \"email\":\"john.doe@example.com\",\n    \"costEstimationParameters\":{\n    \"gigaPixels\":2.5,\n    \"megaPoints\":1.5,\n    \"meshQuality\":\"Extra\"\n    },\n    \"estimatedCost\": 3.5,\n    \"executionInformation\":{\n      \"submittedDateTime\":\"2020-09-14T14:34:20Z\",\n      \"startedDateTime\":null,\n      \"endedDateTime\":null,\n      \"outcome\":null,\n      \"estimatedUnits\":null\n    },\n    \"inputs\":[\n      {\n        \"id\":\"IMAGECOLLECTION_RD_ID\",\n        \"description\":\"Drone ImageCollection\"\n      },\n      {\n        \"id\":\"CCORIENTATIONS_RD_ID\",\n        \"description\":\"Drone CCOrientations\"\n      }\n    ],\n    \"jobSettings\":{\n      \"quality\":\"Extra\",\n      \"processingEngines\":20,\n      \"cacheSettings\":null,\n      \"outputs\":[\n        {\n          \"format\":\"OBJ\",\n          \"id\":\"OBJ_RD_ID\"\n        }\n      ]\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response-body-2"
  }, "Response body"), (0,react_.mdx)("p", null, "The API will respond with a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "200 OK"), " status code if the call is successful."), (0,react_.mdx)("p", null, "The job is now in state ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "active"), ", meaning that it is awaiting to be processed or being processed.")), (0,react_.mdx)(contextcapture_api_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-track-a-job-progress"
  }, "6. Track a job progress"), (0,react_.mdx)("p", null, "In order to follow your ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/contextcapture/operations/jobs-progress/"
  }, "job progress"), ", we have a specific endpoint you can call.")), (0,react_.mdx)(contextcapture_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_quick_start_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/contextcapture/jobs/JOB_ID/progress HTTP/1.\n\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-3"
  }, "Request"), (0,react_.mdx)("p", null, "Job tracking is done by sending a HTTP GET message to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/contextcapture/jobs/JOB_ID/progress"
  }, "https://api.bentley.com/contextcapture/jobs/JOB_ID/progress"), " endpoint."), (0,react_.mdx)("p", null, "In order to reduce stress on the service, we ask you to query with backoff intervals of ", "[15, 30, 60, 120]", " seconds.\nThe interval between the first and second query is 15 sec and then 30 sec\u2026 If the percentage changes the sequence is restarted.")), (0,react_.mdx)(contextcapture_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"jobProgress\":{\n    \"percentage\":98,\n    \"state\":\"Active\",\n    \"step\":\"Reconstruction\"\n  }\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(contextcapture_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"jobProgress\":{\n    \"percentage\":100,\n    \"state\":\"Completed\",\n    \"step\":\"\"\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response-body-3"
  }, "Response body"), (0,react_.mdx)("p", null, "The response will give you progress percentage of the job, with its state and the current processing step."), (0,react_.mdx)("p", null, "Once the job is completed, you will see the state as ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Completed"), ". It doesn\u2019t mean the job is successful, it states the job cannot evolve anymore.")), (0,react_.mdx)(contextcapture_api_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "7-retrieve-a-job-result"
  }, "7. Retrieve a job result"), (0,react_.mdx)("p", null, "Once the job is completed, you can ask for the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/contextcapture/operations/jobs-get/"
  }, "complete job result"), ".")), (0,react_.mdx)(contextcapture_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_quick_start_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/contextcapture/jobs/JOB_ID HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-4"
  }, "Request"), (0,react_.mdx)("p", null, "Job information is retrieved by sending a HTTP GET message to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/contextcapture/jobs/JOB_ID"
  }, "https://api.bentley.com/contextcapture/jobs/JOB_ID"), " endpoint.")), (0,react_.mdx)(contextcapture_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(contextcapture_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"job\":{\n    \"id\":\"JOB_ID\",\n    \"name\":\"My first Reality Modeling job\",\n    \"type\":\"Full\",\n    \"state\":\"New\",\n    \"createdDateTime\":\"2020-09-14T14:29:55Z\",\n    \"lastModifiedDateTime\":\"2020-09-14T14:29:55Z\",\n    \"location\":\"EastUs\",\n    \"iTwinId\": \"ITWIN_ID\",\n    \"workspaceId\":\"WORKSPACE_ID\",\n    \"email\":\"john.doe@example.com\",\n    \"costEstimationParameters\":{\n    \"gigaPixels\":2.5,\n    \"megaPoints\":1.5,\n    \"meshQuality\":\"Extra\"\n    },\n    \"estimatedCost\": 3.5,\n    \"executionInformation\":{\n      \"submittedDateTime\":\"2020-09-14T14:34:20Z\",\n      \"startedDateTime\":\"2020-09-14T14:34:28Z\",\n      \"endedDateTime\":\"2020-09-14T14:41:49Z\",\n      \"outcome\":\"Success\",\n      \"estimatedUnits\":0.05297\n    },\n    \"inputs\":[\n      {\n        \"id\":\"IMAGECOLLECTION_RD_ID\",\n        \"description\":\"Drone ImageCollection\"\n      },\n      {\n        \"id\":\"CCORIENTATIONS_RD_ID\",\n        \"description\":\"Drone CCOrientations\"\n      }\n    ],\n    \"jobSettings\":{\n      \"quality\":\"Extra\",\n      \"processingEngines\":20,\n      \"cacheSettings\":null,\n      \"outputs\":[\n        {\n          \"format\":\"OBJ\",\n          \"id\":\"OBJ_RD_ID\"\n        }\n      ]\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response-body-4"
  }, "Response body"), (0,react_.mdx)("p", null, "The API will respond with a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "200 OK"), " status code if the call is successful."), (0,react_.mdx)("p", null, "You can see the job outcome in the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "executionInformation"), " section.\nIf it is ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Success"), ", you can retrieve the job outputs based on their reality data id.\nOutcome can also be ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Failed"), " or ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Cancelled")), (0,react_.mdx)("p", null, "You have some more information about the execution, namely the start time (when your job was picked up by a worker) and the end time.\n", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "estimatedUnits"), " are an estimate of the units billed for this job. They hold no legal value compared to billing.")), (0,react_.mdx)(contextcapture_api_quick_start_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)("p", null, "Congratulations for completing the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling REST API"), " tutorial! You should now be able to create a workspace and a job, submit and track a job inside ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), ".\nTo go further and use ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality Modeling"), " to its maximum potential, you can check the following tutorials."), (0,react_.mdx)(contextcapture_api_quick_start_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(contextcapture_api_quick_start_Tile, {
    name: "Using cache in Reality Modeling",
    description: "This tutorial focuses on using cache for faster processing in Reality Modeling",
    thumbnail: "/unreal-docs-site/static/images/cccs-cache-thumb.png",
    href: "/tutorials/contextcapture-api-how-to-use-cache",
    mdxType: "Tile"
  }), (0,react_.mdx)(contextcapture_api_quick_start_Tile, {
    name: "Better calibration in Reality Modeling",
    description: "Learn how to specify calibration settings in Reality Modeling, and download the result of a calibration",
    thumbnail: "/unreal-docs-site/static/images/cccs-calibration-thumb.jpg",
    href: "/tutorials/contextcapture-api-better-calibration",
    mdxType: "Tile"
  }), (0,react_.mdx)(contextcapture_api_quick_start_Tile, {
    name: "Better production in Reality Modeling",
    description: "Learn how to specify production settings in Reality Modeling",
    thumbnail: "/unreal-docs-site/static/images/cccs-production-thumb.jpg",
    href: "/tutorials/contextcapture-api-better-production",
    mdxType: "Tile"
  })), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(contextcapture_api_quick_start_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(contextcapture_api_quick_start_ResourceTile, {
    title: "Projects API",
    href: "/apis/projects/",
    description: "Project is necessary for using Reality Modeling API. You can check its possibilities.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(contextcapture_api_quick_start_ResourceTile, {
    title: "Reality Data API",
    href: "/apis/realitydata/",
    description: "Reality Data API is necessary for uploading inputs for Reality Modeling, and downloading outputs.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(contextcapture_api_quick_start_ResourceTile, {
    title: "Reality Management API",
    href: "/apis/reality-management/",
    description: "Reality Management API is necessary for uploading inputs for Reality Modeling, and downloading outputs.",
    mdxType: "ResourceTile"
  }))));
}
;
contextcapture_api_quick_start_MDXContent.isMDXComponent = true;
var contextcapture_api_quick_start_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: []
  }, {
    id: "3-create-a-workspace",
    level: 2,
    title: "3. Create a workspace",
    children: []
  }, {
    id: "4-create-a-job",
    level: 2,
    title: "4. Create a job",
    children: []
  }, {
    id: "5-submit-a-job",
    level: 2,
    title: "5. Submit a job",
    children: []
  }, {
    id: "6-track-a-job-progress",
    level: 2,
    title: "6. Track a job progress",
    children: []
  }, {
    id: "7-retrieve-a-job-result",
    level: 2,
    title: "7. Retrieve a job result",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var contextcapture_api_quick_start_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/copy-project-team-members-and-roles-to-another-project.mdx


var copy_project_team_members_and_roles_to_another_project_excluded = ["components"];
var copy_project_team_members_and_roles_to_another_project_jsx = (external_react_default()).createElement;


var copy_project_team_members_and_roles_to_another_project_readingTime = {
  "text": "5 min read",
  "minutes": 4.155,
  "time": 249300,
  "words": 831
};
/* @jsxRuntime classic */
/* @jsx mdx */

var copy_project_team_members_and_roles_to_another_project_metadata = {
  title: 'Copy Project Team Members and Roles to another Project',
  tile: {
    name: 'Copy Project Team Members and Roles to another Project',
    description: 'This tutorial will demonstrate how to copy team members and roles from one Project to another.',
    href: '/tutorials/copy-project-team-members-and-roles-to-another-project/',
    durationInMinutes: 10,
    relatedApiIds: ['projects']
  }
};
var copy_project_team_members_and_roles_to_another_project_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var copy_project_team_members_and_roles_to_another_project_Introduction = copy_project_team_members_and_roles_to_another_project_makeShortcode("Introduction");
var copy_project_team_members_and_roles_to_another_project_TutorialSection = copy_project_team_members_and_roles_to_another_project_makeShortcode("TutorialSection");
var copy_project_team_members_and_roles_to_another_project_Alert = copy_project_team_members_and_roles_to_another_project_makeShortcode("Alert");
var copy_project_team_members_and_roles_to_another_project_Title = copy_project_team_members_and_roles_to_another_project_makeShortcode("Title");
var copy_project_team_members_and_roles_to_another_project_CodeBlock = copy_project_team_members_and_roles_to_another_project_makeShortcode("CodeBlock");
var copy_project_team_members_and_roles_to_another_project_ContinueLearningSection = copy_project_team_members_and_roles_to_another_project_makeShortcode("ContinueLearningSection");
var copy_project_team_members_and_roles_to_another_project_TileList = copy_project_team_members_and_roles_to_another_project_makeShortcode("TileList");
var copy_project_team_members_and_roles_to_another_project_ResourceTile = copy_project_team_members_and_roles_to_another_project_makeShortcode("ResourceTile");
var copy_project_team_members_and_roles_to_another_project_layoutProps = {
  metadata: copy_project_team_members_and_roles_to_another_project_metadata
};
var copy_project_team_members_and_roles_to_another_project_MDXLayout = "wrapper";
function copy_project_team_members_and_roles_to_another_project_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, copy_project_team_members_and_roles_to_another_project_excluded);
  return (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_MDXLayout, (0,esm_extends/* default */.Z)({}, copy_project_team_members_and_roles_to_another_project_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "10",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial will demonstrate how to copy team members and roles from one Project to another. This tutorial is accompanied by a sample powershell script located ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/platform-api-samples/tree/main/Administration/Project-Copy-Users"
  }, "here"), ". Authorization is provided as a separate ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/platform-api-samples/blob/main/Authorization/New-OidcAuthCodePkceLogin.ps1"
  }, "script"), ".")), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://docs.microsoft.com/en-us/powershell/scripting/overview?view=powershell-7.1"
  }, "PowerShell"), " (Recommended 7.0+ version) installed."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Access to, or create a new, two projects to use this sample.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Process of creating a new project is covered in ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-and-query-projects-guide/"
  }, "this tutorial")))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Your own ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Desktop/Mobile"), " application/client registered on iTwin Platform.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Steps to follow for registering an application can be found ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/register-and-modify-application/"
  }, "here"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Make sure that your application/client is associated with ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Projects API"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "projects:read"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "projects:modify"), " scopes enabled."))))), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-request-access-token-for-use-in-authorization-header"
  }, "1. Request access token for use in Authorization header"), (0,react_.mdx)("p", null, "Authorization is required for all iTwin Platform API endpoints. See the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/platform-api-samples/tree/main/Authorization"
  }, "Authorization README"), " for more information.\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/platform-api-samples/blob/main/Administration/Project-Copy-Users/Copy-ProjectUsers.ps1"
  }, "This tutorial powershell sample"), " already includes code that obtains an authorization token."), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_Alert, {
    mdxType: "Alert"
  }, "These samples require an Authorization Code + PKCE client. Registration of a", ' ', (0,react_.mdx)("strong", null, "Desktop/Mobile"), " application/client will give you an Authorization Code + PKCE client.")), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_TutorialSection, {
    actions: [(0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_Title, {
      mdxType: "Title"
    }, "Example HTTP request"), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/projects/38b7e366-bc20-4bb1-9572-0797cf5221f/roles HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-project-roles-from-the-source-project"
  }, "2. Get project roles from the source project"), (0,react_.mdx)("p", null, "Getting roles from the source project requires sending a GET request to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/projects/{id}/roles"), " endpoint."), (0,react_.mdx)("h4", {
    "id": "request-headers"
  }, "Request headers"), (0,react_.mdx)("p", null, "Two headers are required. An authorization header is needed."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-HTTP",
    "data-language": "HTTP",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "Authorization: Bearer JWT_TOKEN\nContent-Type: application/json\n"
    }
  }))), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_Title, {
      mdxType: "Title"
    }, "Example response body"), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_CodeBlock, {
      language: "json",
      code: "{\n  \"roles\":[\n    {\n      \"roleId\":\"752b5a3d-b9f2-4845-824a-99dd310b4898\",\n      \"displayName\":\"Project Reader\",\n      \"description\":\"Project Reader description\"\n    },\n    {\n      \"roleId\":\"ce5399cc-088c-4c48-9f7b-0bff2d72fc25\",\n      \"displayName\":\"Project Contributor\",\n      \"description\":\"Project Contributor description\"\n    }\n  ]\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response-body"
  }, "Response body"), (0,react_.mdx)("p", null, "On the successful response you will get returned the array of project roles from the source project.")), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_TutorialSection, {
    actions: [(0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_Title, {
      mdxType: "Title"
    }, "Example HTTP request"), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/projects/38b7e366-bc20-4bb1-9572-0797cf5221f/roles HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-add-each-role-to-the-destination-project"
  }, "3. Add each role to the destination project"), (0,react_.mdx)("p", null, "Adding a role to a project requires sending a POST request to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/projects/{id}/roles"), " endpoint."), (0,react_.mdx)("h4", {
    "id": "request-headers-1"
  }, "Request headers"), (0,react_.mdx)("p", null, "Two headers are required. An authorization header is needed."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-HTTP",
    "data-language": "HTTP",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "Authorization: Bearer JWT_TOKEN\nContent-Type: application/json\n"
    }
  }))), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_Title, {
      mdxType: "Title"
    }, "Example request body"), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_CodeBlock, {
      language: "json",
      code: "{\n  \"displayName\":\"Sample role\",\n  \"description\":\"Sample role description\"\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-body"
  }, "Request body"), (0,react_.mdx)("p", null, "The request body is specified as JSON and requires ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "displayName"), " and ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "description"), " as properties. The API works with one role at a time.")), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_Title, {
      mdxType: "Title"
    }, "Example response body"), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_CodeBlock, {
      language: "json",
      code: "{\n  \"role\":{\n    \"roleId\":\"faa3dca1-a901-4659-9da1-d9f29ddcc288\",\n    \"displayName\":\"Project Role\",\n    \"description\":\"An example project role\"\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response-body-1"
  }, "Response body"), (0,react_.mdx)("p", null, "The response returns a JSON object that contains displayName, description and roleId properties. This response body could be used to set roleIds for the users we want to copy from the source project to the destination project.")), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_TutorialSection, {
    actions: [(0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_Title, {
      mdxType: "Title"
    }, "Example HTTP request"), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/projects/38b7e366-bc20-4bb1-9572-0797cf5221f/members HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-get-project-team-members-from-the-source-project"
  }, "4. Get project team members from the source project"), (0,react_.mdx)("p", null, "Getting team members from the source projects requires sending a GET request to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/projects/{id}/members"), " endpoint."), (0,react_.mdx)("h4", {
    "id": "request-headers-2"
  }, "Request headers"), (0,react_.mdx)("p", null, "Two headers are required. An authorization header is needed."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-HTTP",
    "data-language": "HTTP",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "Authorization: Bearer JWT_TOKEN\nContent-Type: application/json\n"
    }
  }))), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_Title, {
      mdxType: "Title"
    }, "Example response body"), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_CodeBlock, {
      language: "json",
      code: "{\n  \"members\":[\n    {\n      \"userId\":\"99cf5e21-735c-4598-99eb-fe3940f96353\",\n      \"email\":\"John.Johnson@org.com\",\n      \"givenName\":\"John\",\n      \"surname\":\"Johnson\",\n      \"organization\":\"Organization Corp.\",\n      \"roles\":[\n        \"Read Access\",\n        \"Write Access\"\n      ]\n    },\n    {\n      \"userId\":\"25407933-cad2-41a2-acf4-5a074c83046b\",\n      \"email\":\"Maria.Miller@org.com\",\n      \"givenName\":\"Maria\",\n      \"surname\":\"Miller\",\n      \"organization\":\"Organization Corp.\",\n      \"roles\":[\n        \"Read Access\"\n      ]\n    }\n  ],\n  \"_links\":{\n    \"next\":{\n      \"href\":\"https://api.bentley.com/projects/806b19d5-c037-48a4-aa98-e297c81453f1/member?$skip=2&$top=2\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response-body-2"
  }, "Response body"), (0,react_.mdx)("p", null, "On the successful response you will get returned the array of project members from the source project.")), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_TutorialSection, {
    actions: [(0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_Title, {
      mdxType: "Title"
    }, "Example HTTP request"), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/projects/38b7e366-bc20-4bb1-9572-0797cf5221f/members HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-add-each-team-member-to-the-destination-project"
  }, "5. Add each team member to the destination project"), (0,react_.mdx)("p", null, "Adding a member to a project requires sending a POST request to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/projects/{id}/members"), " endpoint."), (0,react_.mdx)("h4", {
    "id": "request-headers-3"
  }, "Request headers"), (0,react_.mdx)("p", null, "Two headers are required. An authorization header is needed."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-HTTP",
    "data-language": "HTTP",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "Authorization: Bearer JWT_TOKEN\nContent-Type: application/json\n"
    }
  }))), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_Title, {
      mdxType: "Title"
    }, "Example request body"), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_CodeBlock, {
      language: "json",
      code: "{\n  \"userId\":\"john.doe@my-org.com\",\n  \"roleIds\":[\n    \"722b866c-ef99-48e7-8d9b-d59953f2231c\"\n  ]\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-body-1"
  }, "Request body"), (0,react_.mdx)("p", null, "The request body is specified as JSON and requires the userId and roleIds properties. The API works with one user at a time. Multiple roles may be assigned to the user via the roleIds array.")), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_ResourceTile, {
    title: "Administration API group",
    href: "/api-groups/administration/",
    description: "Manage the users, projects, and organizations that interact with your iTwin.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_ResourceTile, {
    title: "Projects API documentation",
    href: "/apis/projects/",
    description: "An overview and detailed Projects API documentation.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(copy_project_team_members_and_roles_to_another_project_ResourceTile, {
    title: "iTwin Platform API samples",
    href: "https://github.com/iTwin/platform-api-samples",
    description: "PowerShell samples demonstrating API endpoints.",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
copy_project_team_members_and_roles_to_another_project_MDXContent.isMDXComponent = true;
var copy_project_team_members_and_roles_to_another_project_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-request-access-token-for-use-in-authorization-header",
    level: 2,
    title: "1. Request access token for use in Authorization header",
    children: []
  }, {
    id: "2-get-project-roles-from-the-source-project",
    level: 2,
    title: "2. Get project roles from the source project",
    children: []
  }, {
    id: "3-add-each-role-to-the-destination-project",
    level: 2,
    title: "3. Add each role to the destination project",
    children: []
  }, {
    id: "4-get-project-team-members-from-the-source-project",
    level: 2,
    title: "4. Get project team members from the source project",
    children: []
  }, {
    id: "5-add-each-team-member-to-the-destination-project",
    level: 2,
    title: "5. Add each team member to the destination project",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var copy_project_team_members_and_roles_to_another_project_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/create-a-component.mdx


var create_a_component_excluded = ["components"];
var create_a_component_jsx = (external_react_default()).createElement;


var create_a_component_readingTime = {
  "text": "14 min read",
  "minutes": 13.335,
  "time": 800100,
  "words": 2667
};
/* @jsxRuntime classic */
/* @jsx mdx */

var create_a_component_metadata = {
  title: 'Create a Component',
  tile: {
    name: 'Create a Component',
    description: 'This tutorial will guide you through the process of creating a component in an organization.',
    href: '/tutorials/create-a-component',
    durationInMinutes: 20,
    relatedApiIds: ['library'],
    showInFirstSteps: false,
    firstStepsSequenceNumber: 3
  }
};
var create_a_component_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var create_a_component_Introduction = create_a_component_makeShortcode("Introduction");
var create_a_component_TutorialSection = create_a_component_makeShortcode("TutorialSection");
var create_a_component_LinkButton = create_a_component_makeShortcode("LinkButton");
var create_a_component_PostmanIcon = create_a_component_makeShortcode("PostmanIcon");
var create_a_component_CreateSampleAppButton = create_a_component_makeShortcode("CreateSampleAppButton");
var create_a_component_Alert = create_a_component_makeShortcode("Alert");
var create_a_component_Title = create_a_component_makeShortcode("Title");
var create_a_component_CodeBlock = create_a_component_makeShortcode("CodeBlock");
var create_a_component_ContinueLearningSection = create_a_component_makeShortcode("ContinueLearningSection");
var create_a_component_TileList = create_a_component_makeShortcode("TileList");
var create_a_component_Tile = create_a_component_makeShortcode("Tile");
var create_a_component_ResourceTile = create_a_component_makeShortcode("ResourceTile");
var create_a_component_layoutProps = {
  metadata: create_a_component_metadata
};
var create_a_component_MDXLayout = "wrapper";
function create_a_component_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, create_a_component_excluded);
  return (0,react_.mdx)(create_a_component_MDXLayout, (0,esm_extends/* default */.Z)({}, create_a_component_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(create_a_component_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "20",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial will take you through the process of creating a component in an organization."), (0,react_.mdx)("p", null, "By the end of this walk-through, you will be able to utilize the API endpoints in order to create a component and its variations, documents and webLinks.")), (0,react_.mdx)(create_a_component_TutorialSection, {
    actions: [(0,react_.mdx)(create_a_component_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(create_a_component_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A tool such as ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Postman"), " that can be used to execute http calls. These calls can also be made using the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "TryIt"), " button in the API documentation."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "User must be affiliated with an Organization and should either be an Organization Administrator or have \u201CUpload\u201D and \u201CRead\u201D permission at Organization level to upload components to catalog."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "For more information about User Management please visit our Bentley Communities ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0"
  }, "Licensing, Cloud, and Web Services"), " wiki page."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Most of the time, a component should have a design file associated to the component as part of design document. Design file is a CAD file, used in CAD applications i.e. MicroStation, Revit etc. Library API supports all types of design files to create components. You should have a design file to associate\nto component as a design document. Theoretically a component can exist without any files, but that may not be beneficial. In this example we will use rfa design file."))), (0,react_.mdx)(create_a_component_TutorialSection, {
    actions: [(0,react_.mdx)(create_a_component_CreateSampleAppButton, {
      tooltip: "Register a basic SPA App for this tutorial",
      scopes: ['realitydata:read', 'imodels:read', 'imodels:modify', 'library:read', 'library:modify', 'storage:read', 'storage:modify'],
      clientName: "Upload component to catalog tutorial",
      mdxType: "CreateSampleAppButton"
    }, "Register Application")],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iModels"), ", ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Library"), ", ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "RealityData"), " and ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Storage"), " APIs and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "realitydata:read imodels:read imodels:modify library:read library:modify storage:read storage:modify"), " scopes enabled."))), (0,react_.mdx)(create_a_component_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "Before you can make a request to the APIs, a user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application."), (0,react_.mdx)(create_a_component_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Here you can use Client ID generated from previous registration step."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-api-reference-try-it-section"
  }, "Grab a user token from Api reference \u201CTry it\u201D Section"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/library/operations/upload-component/"
  }, "here")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Try it"), " button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Under the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " section, select ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "authorizationCode"), " from the dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After the sign in popup closes, the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " header with token value should be visible beneath the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "HTTP request"), " dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Copy & paste the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " value for this tutorial.")), (0,react_.mdx)(create_a_component_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(create_a_component_TutorialSection, {
    actions: [(0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/library/catalogs HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "json",
      code: "{\n    \"displayName\": \"Tutorial Sample Catalog\",\n    \"description\": \"Tutorial Sample Description\",\n    \"region\": \"US\",\n    \"hashtags\": [\"SampleHashtag1\", \"SampleHashtag2\"]\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\ncontent-length: 937\ncontent-type: application/json\ndate: Thu, 24 Jun 2021 14:44:18 GMT\nrequest-context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 5262b13f-394e-49b8-95ea-a5361d2513a3\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "json",
      code: "{\n    \"catalog\": {\n      \"id\": \"7f427c30-8dce-4803-81dc-e8681a3bd757\",\n      \"displayName\": \"Tutorial Sample Catalog\",\n      \"description\": \"Tutorial Sample Description\",\n      \"region\": \"US\",\n      \"createdDateTime\": \"2021-09-06T06:03:56.1923267Z\",\n      \"lastModifiedDateTime\": \"2021-09-06T06:03:56.1923267Z\",\n      \"hashtags\": [\"SampleHashtag1\", \"SampleHashtag2\"]\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-difference-between-upload-component-and-create-component"
  }, "3. Difference Between Upload Component and Create Component"), (0,react_.mdx)("p", null, "The Library API provides two options to add components in an organization repository i.e. Upload Component and Create Component."), (0,react_.mdx)("p", null, "Upload Component expects a design file should be uploaded in the system and upload background job extracts information from the design file i.e. thumbnail image, variations, manufacturer, category and application etc.\nupload activity uses all this information to create a component and associate all this metadata to the component. This saves from the effort of making multiple requests to add the information to the component. Currently Upload Component support only three types of design files i.e. rfa, dgn and cel files."), (0,react_.mdx)("p", null, "Instructions to upload components to a catalog can be found ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/upload-component-to-catalog"
  }, "here")), (0,react_.mdx)("p", null, "We can add component without using upload workflow explained above but this needs more effort in terms of calling API endpoints since we have to make additional requests for adding thumbnail document, creating\nmanufacturer, application, category, if required and also adding variations in the components. So it is recommended to use upload workflow if the design file is rfa, dgn or cel. In this tutorial we will create\ncomponent without upload workflow.")), (0,react_.mdx)(create_a_component_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-referenced-entities"
  }, "4. Referenced Entities"), (0,react_.mdx)("p", null, "A component can have referenced entities i.e. Catalog, Category, Application and Manufacturer. These are optional properties of a component to be created, but provide useful information. Manufacturer as the name specifies, is manufacturer of the component.\nApplication specifies the CAD application, a component can be consumed for different purposes. Similarly category and catalogs are used to group the components. You need to have the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " property value of each of these entities to be used for component\ncreation.\nIf you don\u2019t already have, the Library API provides endpoints to create and manage these referenced entities. You can create these entities if applicable to the component and may save the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " property of each to be used in next steps."), (0,react_.mdx)("p", null, "You can use following TryIt options in the Library API documentation to create these entities."), (0,react_.mdx)("p", null, (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/library/operations/create-catalog"
  }, "Library API documentation to create Catalog")), (0,react_.mdx)("p", null, (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/library/operations/create-category"
  }, "Library API documentation to create Category")), (0,react_.mdx)("p", null, (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/library/operations/create-application"
  }, "Library API documentation to create Application")), (0,react_.mdx)("p", null, (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/library/operations/create-manufacturer"
  }, "Library API documentation to create Manufacturer"))), (0,react_.mdx)(create_a_component_TutorialSection, {
    actions: [(0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/library/upload-component HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "json",
      code: "{\n    \"displayName\": \"Tutorial Sample Door\",\n    \"description\": \"Tutorial Sample Door\",\n    \"state\": \"Draft\",\n    \"catalogs\": [\"7f427c30-8dce-4803-81dc-e8681a3bd757\"],\n    \"category\": \"63b7d70a-a426-4530-8c0f-3efd6a6c0da7\",\n    \"application\": \"1418693a-8f60-4719-af0b-ceee1ad41e33\",\n    \"manufacturer\": \"d4485150-ad6d-4d76-a3e2-50a0f690afc9\",\n    \"hashtags\": [\n        \"samplehashtag1\",\n        \"samplehashtag2\"\n    ]\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 202 Accepted\ncontent-length: 776\ncontent-type: application/json\ndate: Thu, 09 Sep 2021 13:34:53 GMT\nlocation: https://api.bentley.com/library/components/afd712cf-db65-46fa-a05d-9c6bc8be0d1f\nodata-version: 4.0\nrequest-context: appId=cid-v1:6ee7c246-23f0-43be-ac34-bbbb36da72e9\nx-correlation-id: 8c0daea7-c45b-4d01-b4c5-29e99278316a\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "json",
      code: "{\n    \"component\": {\n        \"id\": \"afd712cf-db65-46fa-a05d-9c6bc8be0d1f\",\n        \"displayName\": \"Tutorial Sample Door\",\n        \"description\": \"Tutorial Sample Door\",\n        \"state\": \"Draft\",\n        \"createdDateTime\": \"2021-09-09T13:34:54.6310298Z\",\n        \"lastModifiedDateTime\": \"2021-09-09T13:34:54.6310298Z\",\n        \"supportedFileTypes\": [],\n        \"hashtags\": [\"samplehashtag1\", \"samplehashtag2\"],\n        \"_links\": {\n            \"catalogs\": [{\n                \"href\": \"https://api.bentley.com/library/catalogs/7f427c30-8dce-4803-81dc-e8681a3bd757\"\n            }],\n            \"application\": {\n                \"href\": \"https://api.bentley.com/library/applications/1418693a-8f60-4719-af0b-ceee1ad41e33\"\n            },\n            \"manufacturer\": {\n                \"href\": \"https://api.bentley.com/library/manufacturers/d4485150-ad6d-4d76-a3e2-50a0f690afc9\"\n            },\n            \"category\": {\n                \"href\": \"https://api.bentley.com/library/categories/63b7d70a-a426-4530-8c0f-3efd6a6c0da7\"\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-create-component"
  }, "5. Create Component"), (0,react_.mdx)("p", null, "To create a component, prepare request body and make a POST call to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/library/create-component"), " endpoint. ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "state"), " are required properties.\nProvide appropriate ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), " value, We have rfa file of a digital door, so let\u2019s set ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), " as 'Tutorial Sample Door\u2019. ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "state"), " property can have enum values Draft, Published, Checked, Approved and Archived, which are used during different stages of component life cycle.\nFor now we assign the value 'Draft\u2019. We already have ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " property of referenced entities, so we will provide these values to manufacturer, catalog, category and application respectively."), (0,react_.mdx)("p", null, "See the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/library/operations/create-component"
  }, "Library API documentation"), " for descriptions of the different properties.")), (0,react_.mdx)(create_a_component_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-add-documents"
  }, "6. Add Documents"), (0,react_.mdx)("p", null, "At this stage a component is created but it doesn\u2019t have any documents. You can associate Design, Reference, Thumbnail and GalleryImage documents to the component. In this example we will associate a design document\nto the component, other documents can also be associated with same steps, the only difference is setting the value of \u201Cpurpose\u201D property in document request body. You should have corresponding images, reference files to upload\nduring the document creation process, depending upon which document you are creating."), (0,react_.mdx)("p", null, "See the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/library/operations/create-component-document"
  }, "Library API documentation"), " for descriptions of the different properties."), (0,react_.mdx)("p", null, "Adding document is a multi-step process, we will go through these steps next.")), (0,react_.mdx)(create_a_component_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/library/components/afd712cf-db65-46fa-a05d-9c6bc8be0d1f/documents HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "json",
      code: "{\n    \"displayName\": \"Tutorial Sample Design Document\",\n    \"extension\": \"rfa\",\n    \"purpose\": \"Design\",\n    \"available\": false,\n    \"isActive\": true,\n    \"version\": null,\n    \"previousVersionId\": null,\n    \"associatedDesignDocument\": null\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\ncontent-length: 719\ncontent-type: application/json\ndate: Thu, 09 Sep 2021 15:29:08 GMT\nlocation: https://api.bentley.com/library/components/afd712cf-db65-46fa-a05d-9c6bc8be0d1f/documents/648486bf-6f04-4750-aa67-7fe521d01896\nodata-version: 4.0\nrequest-context: appId=cid-v1:6ee7c246-23f0-43be-ac34-bbbb36da72e9\nx-correlation-id: e4912dc9-983e-4f31-bd50-87423fd21ad2\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "json",
      code: "{\n    \"document\": {\n        \"id\": \"648486bf-6f04-4750-aa67-7fe521d01896\",\n        \"displayName\": \"Tutorial Sample Design Document\",\n        \"extension\": \"rfa\",\n        \"version\": \"1\",\n        \"previousVersionId\": null,\n        \"purpose\": \"Design\",\n        \"size\": -1,\n        \"available\": false,\n        \"isActive\": true,\n        \"createdDateTime\": \"2021-09-09T15:29:08.3172685Z\",\n        \"lastModifiedDateTime\": \"2021-09-09T15:29:08.3172685Z\",\n        \"_links\": {\n            \"fileUrl\": {\n                \"href\": \"https://componentscenprodeussa01.blob.core.windows.net/private-5a7b3c7c-03af-49f0-b1df-115ddc0e0048/afd712cf-db65-46fa-a05d-9c6bc8be0d1f/648486bf-6f04-4750-aa67-7fe521d01896.rfa?sv=2018-03-28&sr=b&sig=03LfBtIfpFgpOnQPp4YaEj%2BbSsNBXQE1XOd83J6tXrA%3D&se=2021-09-09T16%3A29%3A08Z&sp=rcw&rscd=attachment%3B%20filename%3DTutorial%2BSample%2BDesign%2BDocument.rfa\"\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "61-create-document-instance"
  }, "6.1 Create Document Instance"), (0,react_.mdx)("p", null, "A POST call to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/library/components/afd712cf-db65-46fa-a05d-9c6bc8be0d1f/documents"), " endpoint will create a new document instance for the component. ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "purpose"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "extension"), " are required properties. ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "purpose"), " can have enum values Design, Thumbnail, Reference, GalleryImage and TypeCatalog, depending upon which type of document you want\nto associate to a component. As we are associating a design document, ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "purpose"), " should be set to 'Design\u2019."), (0,react_.mdx)("p", null, "The POST call will return a new document instance. The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " will be used in next steps, you may want to save this Id. At this moment a document instance has been associated\nto the component but there is no actual file attached to this document. We will do that in the next step.")), (0,react_.mdx)(create_a_component_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "http",
      code: "PUT https://componentscenprodeussa01.blob.core.windows.net/private-5a7b3c7c-03af-49f0-b1df-115ddc0e0048/afd712cf-db65-46fa-a05d-9c6bc8be0d1f/648486bf-6f04-4750-aa67-7fe521d01896.rfa?sv=2018-03-28&sr=b&sig=03LfBtIfpFgpOnQPp4YaEj%2BbSsNBXQE1XOd83J6tXrA%3D&se=2021-09-09T16%3A29%3A08Z&sp=rcw&rscd=attachment%3B%20filename%3DTutorial%2BSample%2BDesign%2BDocument.rfa HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "http",
      code: "x-ms-blob-type: BlockBlob",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "http",
      code: "File Binary Content",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "62-upload-document-file"
  }, "6.2 Upload Document File"), (0,react_.mdx)("p", null, "Create Document response from the previous step contains a url in ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "_links->fileUrl->href"), " property. File upload can be done by making a Http PUT request on the provided url via tool such as ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Postman"), " or programmatically use Azure libraries to upload file (", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://docs.microsoft.com/en-us/rest/api/storageservices/put-blob"
  }, "https://docs.microsoft.com/en-us/rest/api/storageservices/put-blob"), ").")), (0,react_.mdx)(create_a_component_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "http",
      code: "PUT https://api.bentley.com/library/components/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/documents/afd712cf-db65-46fa-a05d-9c6bc8be0d1f HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "json",
      code: "{\n    \"displayName\": \"Tutorial Sample Design Document\",\n    \"extension\": \"rfa\",\n    \"version\": \"1\",\n    \"previousVersionId\": null,\n    \"purpose\": \"Design\",\n    \"available\": true,\n    \"isActive\": true\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\ncontent-encoding: gzip\ncontent-type: application/json\ndate: Fri, 10 Sep 2021 05:28:03 GMT\nodata-version: 4.0\nrequest-context: appId=cid-v1:6ee7c246-23f0-43be-ac34-bbbb36da72e9\nvary: Accept-Encoding\nx-correlation-id: 3b4b2e41-3ea6-4597-bda0-6db60a038320\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "json",
      code: "{\n    \"document\": {\n        \"id\": \"648486bf-6f04-4750-aa67-7fe521d01896\",\n        \"displayName\": \"Tutorial Sample Design Document\",\n        \"extension\": \"rfa\",\n        \"version\": \"1\",\n        \"previousVersionId\": null,\n        \"purpose\": \"Design\",\n        \"size\": 0,\n        \"available\": true,\n        \"isActive\": true,\n        \"createdDateTime\": \"2021-09-09T15:29:08.3172685Z\",\n        \"lastModifiedDateTime\": \"2021-09-10T05:28:03.4442503Z\",\n        \"_links\": {\n            \"fileUrl\": {\n                \"href\": \"https://componentscenprodeussa01.blob.core.windows.net/private-5a7b3c7c-03af-49f0-b1df-115ddc0e0048/afd712cf-db65-46fa-a05d-9c6bc8be0d1f/648486bf-6f04-4750-aa67-7fe521d01896.rfa?sv=2018-03-28&sr=b&sig=lTnFsfrQmEqIdEMqLD%2FQ%2FjEQTAjL5T5Y8mFsR8idPQ4%3D&se=2021-09-10T06%3A28%3A03Z&sp=r&rscd=attachment%3B%20filename%3DTutorial%2BSample%2BDesign%2BDocument.rfa\"\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "63-update-document-instance"
  }, "6.3 Update Document Instance"), (0,react_.mdx)("p", null, "The last step in associating a document to component is to notify the system that file has been uploaded. This is achieved by setting \u201Cavailable\u201D property of the document instance to true.\nMake a PUT call to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/library/components/afd712cf-db65-46fa-a05d-9c6bc8be0d1f/documents/648486bf-6f04-4750-aa67-7fe521d01896"), " endpoint to update the document. Update request expects\nrequest body must contain all the desired properties since this will replace existing document with current document definition.")), (0,react_.mdx)(create_a_component_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/library/components/afd712cf-db65-46fa-a05d-9c6bc8be0d1f/variations HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "json",
      code: "{\n    \"associatedDesignDocument\": \"648486bf-6f04-4750-aa67-7fe521d01896\",\n    \"displayName\": \"Sample Variation for Door\",\n    \"adHocProperties\": [{\n        \"displayName\": \"Width\",\n        \"value\": \"50\",\n        \"type\": \"DoubleType\",\n        \"unitOfMeasure\": \"Millimeters\"\n    }, {\n        \"displayName\": \"Height\",\n        \"value\": \"2200\",\n        \"type\": \"DoubleType\",\n        \"unitOfMeasure\": \"Millimeters\"\n    }, {\n        \"displayName\": \"Length\",\n        \"value\": \"900\",\n        \"type\": \"DoubleType\",\n        \"unitOfMeasure\": \"Millimeters\"\n    }, {\n        \"displayName\": \"Material\",\n        \"value\": \"Wood\",\n        \"type\": \"StringType\",\n        \"unitOfMeasure\": \"\"\n    }]\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\ncontent-length: 749\ncontent-type: application/json\ndate: Fri, 10 Sep 2021 06:47:25 GMT\nlocation: https://api.bentley.com/library/components/afd712cf-db65-46fa-a05d-9c6bc8be0d1f/variations/99e5cb56-0057-47af-86da-9c8f793a296f\nodata-version: 4.0\nrequest-context: appId=cid-v1:6ee7c246-23f0-43be-ac34-bbbb36da72e9\nx-correlation-id: 7e5f1fe2-f813-4711-914f-0f5b9826ffd9\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "json",
      code: "{\n    \"variation\": {\n        \"id\": \"99e5cb56-0057-47af-86da-9c8f793a296f\",\n        \"displayName\": \"Sample Variation for Door\",\n        \"createdDateTime\": \"2021-09-10T06:47:25.728234Z\",\n        \"lastModifiedDateTime\": \"2021-09-10T06:47:25.728234Z\",\n        \"adHocProperties\": [{\n            \"displayName\": \"Width\",\n            \"value\": \"50\",\n            \"type\": \"DoubleType\",\n            \"unitOfMeasure\": \"Millimeters\"\n        }, {\n            \"displayName\": \"Height\",\n            \"value\": \"2200\",\n            \"type\": \"DoubleType\",\n            \"unitOfMeasure\": \"Millimeters\"\n        }, {\n            \"displayName\": \"Length\",\n            \"value\": \"900\",\n            \"type\": \"DoubleType\",\n            \"unitOfMeasure\": \"Millimeters\"\n        }, {\n            \"displayName\": \"Material\",\n            \"value\": \"Wood\",\n            \"type\": \"StringType\",\n            \"unitOfMeasure\": \"\"\n        }],\n        \"_links\": {\n            \"associatedDesignDocument\": {\n                \"href\": \"https://api.bentley.com/library/components/afd712cf-db65-46fa-a05d-9c6bc8be0d1f/documents/648486bf-6f04-4750-aa67-7fe521d01896\"\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "7-add-variations"
  }, "7. Add Variations"), (0,react_.mdx)("p", null, "A component can have different variations, a variation essentially is different models, sizes, types of the same component. Since component itself has fixed schema, variation can also be used to add other metadata related to the component. Even if there are not\nmultiple variations available, a default variation can be created to add any additional properties which can\u2019t be added in a component directly. The core of the component is design file, since component can have multiple design files, each design file can have its\nown variations. ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "associatedDesignDocument"), " property is used to set the corresponding design file ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " to make a connection of the variation to design file in the component."), (0,react_.mdx)("p", null, "A POST call to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/library/components/afd712cf-db65-46fa-a05d-9c6bc8be0d1f/variations"), " endpoint will create a new variation. Let\u2019s add a variation for the component we have created in this example, we will assign ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " of the design document\ncreated in the previous steps to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "associatedDesignDocument"), " in the request Body. Add an appropriate ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), " for the variation. A variation has list of adhoc properties containing ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "value"), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "type"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "unitOfMeasure"), ". ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "type"), " is enum and can have StringType, IntegerType, DoubleType, FloatType and BooleanType. Adhoc properties give you more control to add\nany type of metadata/properties to a component. In case of our example, a door, we can add adhoc properties by adding door dimensions and its material. In case of material, ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "unitOfMeasure"), " is not applicable, so we can\nleave that field empty for this case."), (0,react_.mdx)("p", null, "See the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/library/operations/create-component-variation"
  }, "Library API documentation to create variation"), " for descriptions of the different properties."), (0,react_.mdx)("p", null, "See the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/library/operations/get-component-variations"
  }, "Library API documentation to get variations"))), (0,react_.mdx)(create_a_component_TutorialSection, {
    actions: [(0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/library/components/afd712cf-db65-46fa-a05d-9c6bc8be0d1f/weblinks HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "json",
      code: "{\n    \"displayName\": \"Tutorial sample webLink\",\n    \"uri\": \"https://www.sampleweblink.com/sampleweblink\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\ncontent-length: 252\ncontent-type: application/json\ndate: Fri, 10 Sep 2021 09:55:29 GMT\nlocation: https://api.bentley.com/library/components/afd712cf-db65-46fa-a05d-9c6bc8be0d1f/weblinks/2e3e34d1-b01c-42c8-9669-beef6a2e843b\nodata-version: 4.0\nrequest-context: appId=cid-v1:6ee7c246-23f0-43be-ac34-bbbb36da72e9\nx-correlation-id: f6452b93-a875-4496-b73b-633c82f500c5\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_a_component_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_a_component_CodeBlock, {
      language: "json",
      code: "{\n    \"webLink\": {\n        \"id\": \"2e3e34d1-b01c-42c8-9669-beef6a2e843b\",\n        \"displayName\": \"Tutorial sample webLink\",\n        \"uri\": \"https://www.sampleweblink.com/sampleweblink\",\n        \"createdDateTime\": \"2021-09-10T09:55:28.5295325Z\",\n        \"lastModifiedDateTime\": \"2021-09-10T09:55:28.5295325Z\"\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "8-add-weblinks"
  }, "8. Add WebLinks"), (0,react_.mdx)("p", null, "Another optional related entity you can add in a component is webLink. Component can have some related material over the web, some specification document, description or any related information. You can add the web url to a component as a webLink.\nA POST call to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/library/components/afd712cf-db65-46fa-a05d-9c6bc8be0d1f/weblinks"), " endpoint will create a new webLink."), (0,react_.mdx)("p", null, "See the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/library/operations/create-component-weblink"
  }, "Library API documentation to create webLink"), " for descriptions of the different properties."), (0,react_.mdx)("p", null, "See the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/library/operations/get-component-weblinks"
  }, "Library API documentation to get webLinks"))), (0,react_.mdx)(create_a_component_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)("p", null, "Congratulation for completing Creating Component tutorial! You should be able to create components and associate related variations, documents and webLinks to the component."), (0,react_.mdx)(create_a_component_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(create_a_component_Tile, {
    name: "Query and Download Component from a Catalog",
    description: "Guide on querying and downloading component from a catalog.",
    href: "/tutorials/query-and-download-component-from-catalog/",
    mdxType: "Tile"
  }), (0,react_.mdx)(create_a_component_Tile, {
    name: "Upload Component to a Catalog",
    description: "Guide on uploading component to a catalog.",
    href: "/tutorials/upload-component-to-catalog/",
    mdxType: "Tile"
  })), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(create_a_component_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(create_a_component_ResourceTile, {
    title: "Library API",
    href: "/apis/library/",
    description: "There are more capabilities, which could be used for managing components in library.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(create_a_component_ResourceTile, {
    title: "iTwin Library Sample App",
    href: "https://github.com/iTwin/library-api-sample-app",
    description: "Sample application that uses the Library API to create, upload and query components.",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
create_a_component_MDXContent.isMDXComponent = true;
var create_a_component_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-api-reference-try-it-section",
      level: 3,
      title: "Grab a user token from Api reference “Try it” Section",
      children: []
    }]
  }, {
    id: "3-difference-between-upload-component-and-create-component",
    level: 2,
    title: "3. Difference Between Upload Component and Create Component",
    children: []
  }, {
    id: "4-referenced-entities",
    level: 2,
    title: "4. Referenced Entities",
    children: []
  }, {
    id: "5-create-component",
    level: 2,
    title: "5. Create Component",
    children: []
  }, {
    id: "6-add-documents",
    level: 2,
    title: "6. Add Documents",
    children: [{
      id: "61-create-document-instance",
      level: 3,
      title: "6.1 Create Document Instance",
      children: []
    }, {
      id: "62-upload-document-file",
      level: 3,
      title: "6.2 Upload Document File",
      children: []
    }, {
      id: "63-update-document-instance",
      level: 3,
      title: "6.3 Update Document Instance",
      children: []
    }]
  }, {
    id: "7-add-variations",
    level: 2,
    title: "7. Add Variations",
    children: []
  }, {
    id: "8-add-weblinks",
    level: 2,
    title: "8. Add WebLinks",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var create_a_component_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/create-and-merge-forked-imodel.mdx


var create_and_merge_forked_imodel_excluded = ["components"];
var create_and_merge_forked_imodel_jsx = (external_react_default()).createElement;


var create_and_merge_forked_imodel_readingTime = {
  "text": "14 min read",
  "minutes": 13.585,
  "time": 815100,
  "words": 2717
};
/* @jsxRuntime classic */
/* @jsx mdx */

var create_and_merge_forked_imodel_metadata = {
  title: 'Create and Merge Forked iModel',
  tile: {
    name: 'Create Forked iModel and Merge it Back to the Main iModel',
    description: 'This tutorial will create a forked iModel and merge it back into the main iModel',
    thumbnail: '/images/fork-and-merge-thumbnail.svg',
    href: '/tutorials/create-and-merge-forked-imodel/',
    durationInMinutes: 40,
    relatedApiIds: ['transformations']
  }
};
var create_and_merge_forked_imodel_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var create_and_merge_forked_imodel_Introduction = create_and_merge_forked_imodel_makeShortcode("Introduction");
var create_and_merge_forked_imodel_TutorialSection = create_and_merge_forked_imodel_makeShortcode("TutorialSection");
var create_and_merge_forked_imodel_LinkButton = create_and_merge_forked_imodel_makeShortcode("LinkButton");
var create_and_merge_forked_imodel_VSCodeIcon = create_and_merge_forked_imodel_makeShortcode("VSCodeIcon");
var create_and_merge_forked_imodel_PostmanIcon = create_and_merge_forked_imodel_makeShortcode("PostmanIcon");
var create_and_merge_forked_imodel_CreateSampleAppButton = create_and_merge_forked_imodel_makeShortcode("CreateSampleAppButton");
var create_and_merge_forked_imodel_Alert = create_and_merge_forked_imodel_makeShortcode("Alert");
var create_and_merge_forked_imodel_Title = create_and_merge_forked_imodel_makeShortcode("Title");
var create_and_merge_forked_imodel_CodeBlock = create_and_merge_forked_imodel_makeShortcode("CodeBlock");
var create_and_merge_forked_imodel_ActionLinkButton = create_and_merge_forked_imodel_makeShortcode("ActionLinkButton");
var ITwinPlatformIcon = create_and_merge_forked_imodel_makeShortcode("ITwinPlatformIcon");
var create_and_merge_forked_imodel_ContinueLearningSection = create_and_merge_forked_imodel_makeShortcode("ContinueLearningSection");
var create_and_merge_forked_imodel_TileList = create_and_merge_forked_imodel_makeShortcode("TileList");
var create_and_merge_forked_imodel_Tile = create_and_merge_forked_imodel_makeShortcode("Tile");
var create_and_merge_forked_imodel_ResourceTile = create_and_merge_forked_imodel_makeShortcode("ResourceTile");
var create_and_merge_forked_imodel_layoutProps = {
  metadata: create_and_merge_forked_imodel_metadata
};
var create_and_merge_forked_imodel_MDXLayout = "wrapper";
function create_and_merge_forked_imodel_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, create_and_merge_forked_imodel_excluded);
  return (0,react_.mdx)(create_and_merge_forked_imodel_MDXLayout, (0,esm_extends/* default */.Z)({}, create_and_merge_forked_imodel_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(create_and_merge_forked_imodel_Introduction, {
    skillLevel: "Intermediate",
    durationInMinutes: "40",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This quick start is intended to help you get started with forking and merging workflow using Transformations API. In this walk-through you will\ncreate a forked iModel and after modifying it, merge it back to the main iModel.")), (0,react_.mdx)(create_and_merge_forked_imodel_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(create_and_merge_forked_imodel_LinkButton, {
      href: "https://code.visualstudio.com/",
      target: "_blank",
      title: "Visual Studio Code",
      icon: (0,react_.mdx)(create_and_merge_forked_imodel_VSCodeIcon, {
        mdxType: "VSCodeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(create_and_merge_forked_imodel_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A tool such as ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Postman"), " that can be used to execute HTTP calls. These calls can also be made using the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Try it out"), " button in the API documentation or\nany other http request tool."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A created and connected project. You can create a project by following instructions at ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-and-query-projects-guide/"
  }, "Create a new iTwin Project"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A source iModel with some data for the transformation. You can create an iModel from Bentley Sample by following instructions at ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/web-application-quick-start/"
  }, "Create an iModel"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A way to modify an existing iModel. This can be achieved by using any existing application or by using Synchronization API. You can modify iModel using\nSynchronization API by following instructions at ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/synchronization-storage-tutorial/"
  }, "Synchronize a file from iTwin Storage"), "."))), (0,react_.mdx)(create_and_merge_forked_imodel_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "understanding-imodel-forking-and-merging"
  }, "Understanding iModel Forking and Merging"), (0,react_.mdx)("p", null, "First we should understand how forking and merging workflow works."), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/fork-and-merge-explanation.png",
    "alt": "Diagram iliustrating fork and merge "
  })), (0,react_.mdx)("p", null, "As you can see in the diagram, this workflow involves 2 iModels. The first iModel is the main one and is treated as the source of truth. The second iModel is\nthe forked iModel. This is a separate iModel, which is a duplicate of the first iModel."), (0,react_.mdx)("p", null, "The workflow starts by connecting this duplicate iModel to the main iModel. This is achieved by CreateFork transformation."), (0,react_.mdx)("p", null, "Once iModels are connected, you can work with the forked iModel and modify it as needed."), (0,react_.mdx)("p", null, "Once all changes are ready, you can transfer those changes to the main iModel by using MergeFork transformation."), (0,react_.mdx)("p", null, "After all of this, the main iModel has all the changes which were made in the forked iModel, but it doesn\u2019t have intermediate changesets, which might not be approved or\nshouldn\u2019t be in the main iModel.")), (0,react_.mdx)(create_and_merge_forked_imodel_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_merge_forked_imodel_CreateSampleAppButton, {
      scopes: ['imodels:modify', 'transformations:modify', 'transformations:read'],
      clientName: "Fork and Merge",
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Transformations API"), " and ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Digital Twin Management"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "transformations:modify transformations:read imodels:modify"), " scopes enabled."))), (0,react_.mdx)(create_and_merge_forked_imodel_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "To make requests to the API, a user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application."), (0,react_.mdx)(create_and_merge_forked_imodel_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Here you can use Client ID generated from previous registration step."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-api-reference-try-it-out-section"
  }, "Grab a user token from Api reference \u201CTry it out\u201D Section"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go to ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/transformations/operations/createfork/"
  }, "Create Configuration")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click \u201CTry it out\u201D button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "On Authorization section select \u201CAuthorizationCode\u201D."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After popup closes Authorization header with your user token value should be visible."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Save user token value for this tutorial.")), (0,react_.mdx)(create_and_merge_forked_imodel_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(create_and_merge_forked_imodel_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-create-duplicate-imodel"
  }, "3. Create duplicate iModel"), (0,react_.mdx)("p", null, "The forked iModel is a duplicate copy which has connection to the main instance. iModel is connected to another one when each element in it has a link to the original\nelement in the main iModel. To create a forked iModel you need to duplicate iModel and then connect it by running CreateFork transformation."), (0,react_.mdx)("p", null, "You can use iModels API to create exact copy of the main iModel.")), (0,react_.mdx)(create_and_merge_forked_imodel_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000/changesets?$top=1&$orderBy=index%20desc HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "http",
      code: "Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "json",
      code: "{\n  \"changesets\": [{\n    \"id\": \"LATEST_CHANGESET_ID\",\n    \"displayName\": \"2\",\n    \"description\": \"Changeset description\",\n    \"index\": 40,\n    \"parentId\": \"PARENT_CHANGESET_ID\",\n    \"briefcaseId\": 1,\n    \"fileSize\": 1,\n    \"state\": \"fileUploaded\",\n    \"containingChanges\": 10,\n    \"creatorId\": \"00000000-0000-0000-0000-000000000000\",\n    \"pushDateTime\": \"0000-00-00T00:00:00.0000000Z\",\n    \"_links\": {\n      \"self\": {\n        \"href\": \"https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000/changesets/LATEST_CHANGESET_ID\"\n      },\n      \"creator\": {\n        \"href\": \"https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000/users/00000000-0000-0000-0000-000000000000\"\n      }\n    }\n  }],\n  \"_links\": {\n    \"self\": {\n      \"href\": \"https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000/changesets?$skip=0&$top=1&$orderBy=index%20desc\"\n    },\n    \"prev\": null,\n    \"next\": {\n      \"href\": \"https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000/changesets?$skip=1&$top=1&$orderBy=index%20desc\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "get-imodels-latest-changeset"
  }, "Get iModels latest changeset"), (0,react_.mdx)("p", null, "To create exact copy of an iModel, first the latest changeset id is required. You can retrieve this by sending GET request to\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/imodels/%7BIMODEL_ID%7D/changesets?$top=1&$orderBy=index%20desc"
  }, "https://api.bentley.com/imodels/{IMODEL_ID}/changesets?$top=1&$orderBy=index%20desc"), " endpoint. You will need to replace ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "{IMODEL_ID}"), " with the id of the main iModel.\nResponse body will contain a single changeset instance with the required id.")), (0,react_.mdx)(create_and_merge_forked_imodel_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/imodels HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "http",
      code: "Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "json",
      code: "{\n  \"projectId\": \"00000000-0000-0000-0000-000000000000\",\n  \"name\": \"COPY_IMODEL_NAME\",\n  \"template\": {\n    \"iModelId\": \"00000000-0000-0000-0000-000000000000\",\n    \"changesetId\": \"LATEST_CHANGESET_ID\"\n  }\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "json",
      code: "{\n  \"iModel\": {\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\n    \"displayName\": \"COPY_IMODEL_NAME\",\n    \"name\": \"COPY_IMODEL_NAME\",\n    \"description\": null,\n    \"createdDateTime\": \"0000-00-00T00:00:00.0000000Z\",\n    \"state\": \"notInitialized\",\n    \"projectId\": \"00000000-0000-0000-0000-000000000000\",\n    \"extent\": null,\n    \"_links\": {\n      \"creator\": {\n        \"href\": \"https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000/users/00000000-0000-0000-0000-000000000000\"\n      },\n      \"namedVersions\": {\n        \"href\": \"https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000/namedversions\"\n      },\n      \"changesets\": {\n        \"href\": \"https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000/changesets\"\n      },\n      \"upload\": null,\n      \"complete\": null\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "duplicate-imodel-using-imodels-api"
  }, "Duplicate iModel using iModels API"), (0,react_.mdx)("p", null, "iModel can be duplicated by using ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/imodels/operations/create-imodel/"
  }, "Create iModel"), " endpoint in iModels API. You will need to send POST request to\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/imodels/"
  }, "https://api.bentley.com/imodels/"), " endpoint with filled in body payload with this information:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "projectId"), " - id of the project where iModel should be created."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "name"), " - name of the duplicate iModel."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "description"), " - description of the duplicate iModel."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "template"), (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "iModelId"), " - id of the main iModel."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "changesetId"), " - id of the latest changeset. Use ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "LATEST_CHANGESET_ID"), " value from the response body of the previous step."))))), (0,react_.mdx)(create_and_merge_forked_imodel_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-run-createfork-transformation"
  }, "4. Run CreateFork transformation")), (0,react_.mdx)(create_and_merge_forked_imodel_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/transformations/configurations/createfork HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "http",
      code: "Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "json",
      code: "{\n  \"transformName\": \"Example name\",\n  \"sourceProjectId\": \"00000000-0000-0000-0000-000000000000\",\n  \"sourceIModelId\": \"00000000-0000-0000-0000-000000000000\",\n  \"targetProjectId\": \"00000000-0000-0000-0000-000000000000\",\n  \"targetIModelId\": \"00000000-0000-0000-0000-000000000000\",\n  \"comment\": \"Example comment\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "json",
      code: "{\n  \"configuration\": {\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\n    \"transformName\": \"Example name\",\n    \"comment\": \"Example comment\",\n    \"createdDateTime\": \"0000-00-00T00:00:00.0000000Z\",\n    \"modifiedDateTime\": \"0000-00-00T00:00:00.0000000Z\",\n    \"_links\": {\n      \"sourceIModel\": {\n        \"href\": \"https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000\"\n      },\n      \"targetIModel\": {\n        \"href\": \"https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000\"\n      },\n      \"sourceProject\": {\n        \"href\": \"https://api.bentley.com/projects/00000000-0000-0000-0000-000000000000\"\n      },\n      \"targetProject\": {\n        \"href\": \"https://api.bentley.com/projects/00000000-0000-0000-0000-000000000000\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "create-configuration-for-createfork-transformation"
  }, "Create configuration for CreateFork transformation"), (0,react_.mdx)("p", null, "After the iModel is duplicated, it needs to be connected to the main iModel. This is done by Create Fork transformation. To run it you first need to create a configuration\nfor it. You can do this by sending POST request to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/transformations/configurations/createfork"
  }, "https://api.bentley.com/transformations/configurations/createfork"), " endpoint with filled in body payload with\nthis information:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "transformName"), " - free form text field so you could name your configuration."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "sourceProjectId"), " - projectId of the main iModel."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "sourceIModelId"), " - iModelId of the main iModel."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "targetProjectId"), " - projectId of the duplicate iModel."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "targetIModelId"), " - iModelId of the duplicate iModel."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "comment"), " - a comment of the transformation.")), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://developer.bentley.com/apis/transformations/operations/createfork/"
  }, "CreateFork"), " page, \u201CTry it out\u201D section."), (0,react_.mdx)("p", null, "After executing the request, you should save returned configuration Id from the response as it will be needed in several later steps."), (0,react_.mdx)(create_and_merge_forked_imodel_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use this configuration id to replace FORKING_CONFIGURATION_ID dynamic parameter in the next steps.")), (0,react_.mdx)(create_and_merge_forked_imodel_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/transformations/ HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "http",
      code: "Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "json",
      code: "{\n  \"configurationId\": \"FORKING_CONFIGURATION_ID\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "json",
      code: "{\n  \"transformation\": {\n    \"errorMessage\": \"\",\n    \"processedElementCount\": 123,\n    \"totalElementCount\": 123,\n    \"startedDateTime\": \"0000-00-00T00:00:00.0000000Z\",\n    \"finishedDateTime\": \"0000-00-00T00:00:00.0000000Z\",\n    \"sourceChangeSetId\": \"1\",\n    \"lastTargetChangesetPushed\": \"2\",\n    \"_links\": {\n      \"configuration\": {\n        \"href\": \"https://dev-api.bentley.com/transformations/configurations/00000000-0000-0000-0000-000000000000\"\n      }\n    },\n    \"status\": \"Succeeded\",\n    \"id\": \"00000000-0000-0000-0000-000000000000\"\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "create-createfork-transformation"
  }, "Create CreateFork transformation"), (0,react_.mdx)("p", null, "You can create transformation by sending POST request to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/transformations"
  }, "https://api.bentley.com/transformations"), " endpoint with the payload indicating which configuration should be used.\nThe request is submitting a transformation job based on the configuration Id value that was provided."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/transformations/operations/create-transformation/"
  }, "Create transformation"), " page, \u201CTry it out\u201D section."), (0,react_.mdx)("p", null, "Response indicates the current status of the transformation. After submitting a transformation the status is \u201CCreated\u201D which means that the transformation is enqueued and waiting to start.\nPossible status messages:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Created"), " - transformation is created and waiting to be started. The transformation should start automatically, no additional actions are needed."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Started"), " - transformation is started and waiting to finish."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Succeeded"), " - transformation succeeded. You can open the target iModel and inspect the results."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Failed"), " - transformation failed. Check the errorMessage node for more information on what happened.")), (0,react_.mdx)("p", null, "After executing the request, save returned transformation Id from the response.")), (0,react_.mdx)(create_and_merge_forked_imodel_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/transformations/{savedTransformationId} HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "http",
      code: "Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "json",
      code: "{\n  \"transformation\": {\n    \"errorMessage\": \"\",\n    \"processedElementCount\": 123,\n    \"totalElementCount\": 123,\n    \"startedDateTime\": \"0000-00-00T00:00:00.0000000Z\",\n    \"finishedDateTime\": \"0000-00-00T00:00:00.0000000Z\",\n    \"sourceChangeSetId\": \"1\",\n    \"lastTargetChangesetPushed\": \"2\",\n    \"_links\": {\n      \"configuration\": {\n        \"href\": \"https://dev-api.bentley.com/transformations/configurations/00000000-0000-0000-0000-000000000000\"\n      }\n    },\n    \"status\": \"Succeeded\",\n    \"id\": \"00000000-0000-0000-0000-000000000000\"\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "waiting-for-transformation-to-finish"
  }, "Waiting for transformation to finish"), (0,react_.mdx)("p", null, "Send a GET request to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/transformations/%7ByourTransformationId%7D"
  }, "https://api.bentley.com/transformations/{yourTransformationId}"), " endpoint to get an updated transformation status.\nYou can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/transformations/operations/get-transformation/"
  }, "Get transformation"), " page, \u201CTry it out\u201D section."), (0,react_.mdx)("p", null, "Query for the transformation multiple times until the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "status"), " changes from ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Created"), " to ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Started"), " and eventually to ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Succeeded"), ".")), (0,react_.mdx)(create_and_merge_forked_imodel_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_merge_forked_imodel_ActionLinkButton, {
      href: "/tutorials/synchronization-storage-tutorial/",
      target: "_blank",
      title: "Synchronize a file from iTwin Storage",
      buttonText: "Open",
      icon: (0,react_.mdx)(ITwinPlatformIcon, {
        mdxType: "ITwinPlatformIcon"
      }),
      mdxType: "ActionLinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-modify-forked-imodel"
  }, "5. Modify forked iModel"), (0,react_.mdx)("p", null, "After Create Fork transformation succeeds, forked iModel is ready to be modified. You must have at least one new changeset pushed to the forked iModel before it can\nbe merged back to the main iModel. There are multiple ways to modify iModel and you can use any of them. If you have no easy way to modify iModel you can follow\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/synchronization-storage-tutorial/"
  }, "Synchronize a file from iTwin Storage"), " tutorial from step 4. You will need to use the forked iModel that was created\nin this tutorial instead of creating a new one and you can reuse the registered application and the access token from this tutorial. That tutorial will allow you\nto connect a new file to the iModel and synchronize it, which will bring new changes to the forked iModel and will modify it in the process.")), (0,react_.mdx)(create_and_merge_forked_imodel_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-run-mergefork-transformation"
  }, "6. Run MergeFork transformation")), (0,react_.mdx)(create_and_merge_forked_imodel_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/transformations/configurations/mergefork HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "http",
      code: "Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "json",
      code: "{\n  \"transformName\": \"Example name\",\n  \"sourceProjectId\": \"00000000-0000-0000-0000-000000000000\",\n  \"sourceIModelId\": \"00000000-0000-0000-0000-000000000000\",\n  \"targetProjectId\": \"00000000-0000-0000-0000-000000000000\",\n  \"targetIModelId\": \"00000000-0000-0000-0000-000000000000\",\n  \"comment\": \"Example comment\",\n  \"transformParameters\": {\n    \"configurationId\": \"FORKING_CONFIGURATION_ID\"\n  }\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "json",
      code: "{\n  \"configuration\": {\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\n    \"transformName\": \"Example name\",\n    \"comment\": \"Example comment\",\n    \"createdDateTime\": \"0000-00-00T00:00:00.0000000Z\",\n    \"modifiedDateTime\": \"0000-00-00T00:00:00.0000000Z\",\n    \"transformParameters\": {\n      \"_links\": {\n        \"configuration\": {\n          \"href\": \"https://api.bentley.com/transformations/configurations/FORKING_CONFIGURATION_ID\"\n        }\n      }\n    },\n    \"_links\": {\n      \"sourceIModel\": {\n        \"href\": \"https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000\"\n      },\n      \"targetIModel\": {\n        \"href\": \"https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000\"\n      },\n      \"sourceProject\": {\n        \"href\": \"https://api.bentley.com/projects/00000000-0000-0000-0000-000000000000\"\n      },\n      \"targetProject\": {\n        \"href\": \"https://api.bentley.com/projects/00000000-0000-0000-0000-000000000000\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "create-configuration-for-mergefork-transformation"
  }, "Create configuration for MergeFork transformation"), (0,react_.mdx)("p", null, "Once the forked iModel has new changesets it is ready to be merged. Merging the forked iModel back into the main iModel is done by Merge Fork transformation.\nTo run it you first need to create a configuration for it. You can do this by sending POST request to\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/transformations/configurations/mergefork"
  }, "https://api.bentley.com/transformations/configurations/mergefork"), " endpoint with filled in body payload with this information:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "transformName"), " - free form text field so you could name your configuration."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "sourceProjectId"), " - projectId of the forked iModel."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "sourceIModelId"), " - iModelId of the forked iModel."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "targetProjectId"), " - projectId of the main iModel."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "targetIModelId"), " - iModelId of the main iModel."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "comment"), " - a comment of the transformation.")), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://developer.bentley.com/apis/transformations/operations/mergefork/"
  }, "MergeFork"), " page, \u201CTry it out\u201D section."), (0,react_.mdx)(create_and_merge_forked_imodel_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Source and target iModels are switched in MergeFork configuration. This means that source project and iModel information comes from the forked iModel and target project and iModel information comes from the main iModel.")), (0,react_.mdx)(create_and_merge_forked_imodel_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/transformations/ HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "http",
      code: "Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "json",
      code: "{\n  \"configurationId\": \"CONFIGURATION_ID_FROM_LAST_STEP\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "json",
      code: "{\n  \"transformation\": {\n    \"errorMessage\": \"\",\n    \"processedElementCount\": 123,\n    \"totalElementCount\": 123,\n    \"startedDateTime\": \"0000-00-00T00:00:00.0000000Z\",\n    \"finishedDateTime\": \"0000-00-00T00:00:00.0000000Z\",\n    \"sourceChangeSetId\": \"1\",\n    \"lastTargetChangesetPushed\": \"2\",\n    \"_links\": {\n      \"configuration\": {\n        \"href\": \"https://dev-api.bentley.com/transformations/configurations/00000000-0000-0000-0000-000000000000\"\n      }\n    },\n    \"status\": \"Succeeded\",\n    \"id\": \"00000000-0000-0000-0000-000000000000\"\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "create-mergefork-transformation"
  }, "Create MergeFork transformation"), (0,react_.mdx)("p", null, "You can create transformation by sending POST request to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/transformations"
  }, "https://api.bentley.com/transformations"), " endpoint with the payload indicating which configuration should be used.\nThe request is submitting a transformation job based on the configuration Id value that was provided."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/transformations/operations/create-transformation/"
  }, "Create transformation"), " page, \u201CTry it out\u201D section."), (0,react_.mdx)("p", null, "Response indicates the current status of the transformation. After submitting a transformation the status is \u201CCreated\u201D which means that the transformation is enqueued and waiting to start.\nPossible status messages:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Created"), " - transformation is created and waiting to be started. The transformation should start automatically, no additional actions are needed."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Started"), " - transformation is started and waiting to finish."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Succeeded"), " - transformation succeeded. You can open target the iModel and inspect the results."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Failed"), " - transformation failed. Check the errorMessage node for more information on what happened.")), (0,react_.mdx)("p", null, "After executing the request, save returned transformation Id from the response.")), (0,react_.mdx)(create_and_merge_forked_imodel_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/transformations/{savedTransformationId} HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "http",
      code: "Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_merge_forked_imodel_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_merge_forked_imodel_CodeBlock, {
      language: "json",
      code: "{\n  \"transformation\": {\n    \"errorMessage\": \"\",\n    \"processedElementCount\": 123,\n    \"totalElementCount\": 123,\n    \"startedDateTime\": \"0000-00-00T00:00:00.0000000Z\",\n    \"finishedDateTime\": \"0000-00-00T00:00:00.0000000Z\",\n    \"sourceChangeSetId\": \"1\",\n    \"lastTargetChangesetPushed\": \"2\",\n    \"_links\": {\n      \"configuration\": {\n        \"href\": \"https://dev-api.bentley.com/transformations/configurations/00000000-0000-0000-0000-000000000000\"\n      }\n    },\n    \"status\": \"Succeeded\",\n    \"id\": \"00000000-0000-0000-0000-000000000000\"\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "waiting-for-transformation-to-finish-1"
  }, "Waiting for transformation to finish"), (0,react_.mdx)("p", null, "Send a GET request to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/transformations/%7ByourTransformationId%7D"
  }, "https://api.bentley.com/transformations/{yourTransformationId}"), " endpoint to get an updated transformation status.\nYou can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/transformations/operations/get-transformation/"
  }, "Get transformation"), " page, \u201CTry it out\u201D section."), (0,react_.mdx)("p", null, "Query for the transformation multiple times until the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "status"), " changes from ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Created"), " to ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Started"), " and eventually to ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Succeeded"), "."), (0,react_.mdx)("p", null, "Go to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/my-itwins/"
  }, "My iTwins"), " and view the target iModel.")), (0,react_.mdx)(create_and_merge_forked_imodel_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "7-conclusion"
  }, "7. Conclusion"), (0,react_.mdx)("p", null, "We have successfully duplicated the main iModel, created a configuration, ran transformation that connected the forked iModel to the main iModel, waited for the transformation\nto complete. Then after modifying the forked iModel we have successfully created a configuration, ran a transformation that merged back the changes to the main\niModel and inspected the results.")), (0,react_.mdx)(create_and_merge_forked_imodel_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)(create_and_merge_forked_imodel_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(create_and_merge_forked_imodel_Tile, {
    name: "Synchronize a file from iTwin Storage",
    thumbnail: "/unreal-docs-site/static/images/synchronizationThumbnail.png",
    description: "Walk-through how to synchronize a file from iTwin Storage to an iModel using Synchronization API.",
    href: "/tutorials/synchronization-storage-tutorial/",
    mdxType: "Tile"
  }), (0,react_.mdx)(create_and_merge_forked_imodel_Tile, {
    name: "Synchronize a file from Azure Blob Storage",
    thumbnail: "/unreal-docs-site/static/images/synchronizationThumbnail.png",
    description: "Walk-through how to synchronize a file from Azure Blob Storage to an iModel using Synchronization API.",
    href: "/tutorials/synchronization-blob-tutorial/",
    mdxType: "Tile"
  }), (0,react_.mdx)(create_and_merge_forked_imodel_Tile, {
    name: "Unmap an Azure Blob Storage file from an iModel",
    thumbnail: "/unreal-docs-site/static/images/synchronizationThumbnail.png",
    description: "Walk-through how to unmap an Azure Blob Storage file from an iModel using Synchronization API.",
    href: "/tutorials/synchronization-storage-tutorial/",
    mdxType: "Tile"
  })), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(create_and_merge_forked_imodel_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(create_and_merge_forked_imodel_ResourceTile, {
    title: "CreateFork documentation",
    href: "/apis/transformations/operations/createfork/",
    description: "iModel Transformations API CreateFork endpoint documentation.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(create_and_merge_forked_imodel_ResourceTile, {
    title: "MergeFork documentation",
    href: "/apis/transformations/operations/mergefork/",
    description: "iModel Transformations API MergeFork endpoint documentation.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(create_and_merge_forked_imodel_ResourceTile, {
    title: "Transformations API documentation",
    href: "/apis/transformations/overview/",
    description: "iModel Transformations API documentation.",
    mdxType: "ResourceTile"
  }))));
}
;
create_and_merge_forked_imodel_MDXContent.isMDXComponent = true;
var create_and_merge_forked_imodel_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "understanding-imodel-forking-and-merging",
    level: 2,
    title: "Understanding iModel Forking and Merging",
    children: []
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-api-reference-try-it-out-section",
      level: 3,
      title: "Grab a user token from Api reference “Try it out” Section",
      children: []
    }]
  }, {
    id: "3-create-duplicate-imodel",
    level: 2,
    title: "3. Create duplicate iModel",
    children: [{
      id: "get-imodels-latest-changeset",
      level: 3,
      title: "Get iModels latest changeset",
      children: []
    }, {
      id: "duplicate-imodel-using-imodels-api",
      level: 3,
      title: "Duplicate iModel using iModels API",
      children: []
    }]
  }, {
    id: "4-run-createfork-transformation",
    level: 2,
    title: "4. Run CreateFork transformation",
    children: [{
      id: "create-configuration-for-createfork-transformation",
      level: 3,
      title: "Create configuration for CreateFork transformation",
      children: []
    }, {
      id: "create-createfork-transformation",
      level: 3,
      title: "Create CreateFork transformation",
      children: []
    }, {
      id: "waiting-for-transformation-to-finish",
      level: 3,
      title: "Waiting for transformation to finish",
      children: []
    }]
  }, {
    id: "5-modify-forked-imodel",
    level: 2,
    title: "5. Modify forked iModel",
    children: []
  }, {
    id: "6-run-mergefork-transformation",
    level: 2,
    title: "6. Run MergeFork transformation",
    children: [{
      id: "create-configuration-for-mergefork-transformation",
      level: 3,
      title: "Create configuration for MergeFork transformation",
      children: []
    }, {
      id: "create-mergefork-transformation",
      level: 3,
      title: "Create MergeFork transformation",
      children: []
    }, {
      id: "waiting-for-transformation-to-finish-1",
      level: 3,
      title: "Waiting for transformation to finish",
      children: []
    }]
  }, {
    id: "7-conclusion",
    level: 2,
    title: "7. Conclusion",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var create_and_merge_forked_imodel_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/create-and-query-itwin-entities.mdx


var create_and_query_itwin_entities_excluded = ["components"];
var create_and_query_itwin_entities_jsx = (external_react_default()).createElement;


var create_and_query_itwin_entities_readingTime = {
  "text": "8 min read",
  "minutes": 7.375,
  "time": 442500,
  "words": 1475
};
/* @jsxRuntime classic */
/* @jsx mdx */

var create_and_query_itwin_entities_metadata = {
  title: 'Create and Query iTwin Entities',
  tile: {
    name: 'Create and Query iTwin Entities',
    description: 'This tutorial will guide you through the process of creating and querying an entity for an iTwin',
    href: '/tutorials/create-and-query-itwin-entities',
    durationInMinutes: 15,
    relatedApiIds: ['itwin-entities'],
    showInFirstSteps: false
  }
};
var create_and_query_itwin_entities_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var create_and_query_itwin_entities_Introduction = create_and_query_itwin_entities_makeShortcode("Introduction");
var create_and_query_itwin_entities_TutorialSection = create_and_query_itwin_entities_makeShortcode("TutorialSection");
var create_and_query_itwin_entities_LinkButton = create_and_query_itwin_entities_makeShortcode("LinkButton");
var create_and_query_itwin_entities_PostmanIcon = create_and_query_itwin_entities_makeShortcode("PostmanIcon");
var create_and_query_itwin_entities_CreateSampleAppButton = create_and_query_itwin_entities_makeShortcode("CreateSampleAppButton");
var create_and_query_itwin_entities_Alert = create_and_query_itwin_entities_makeShortcode("Alert");
var create_and_query_itwin_entities_Title = create_and_query_itwin_entities_makeShortcode("Title");
var create_and_query_itwin_entities_CodeBlock = create_and_query_itwin_entities_makeShortcode("CodeBlock");
var create_and_query_itwin_entities_layoutProps = {
  metadata: create_and_query_itwin_entities_metadata
};
var create_and_query_itwin_entities_MDXLayout = "wrapper";
function create_and_query_itwin_entities_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, create_and_query_itwin_entities_excluded);
  return (0,react_.mdx)(create_and_query_itwin_entities_MDXLayout, (0,esm_extends/* default */.Z)({}, create_and_query_itwin_entities_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(create_and_query_itwin_entities_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "20",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial will take you through the process of creating and querying an iTwin entity."), (0,react_.mdx)("p", null, "By the end of this walk-through, you will be able to utilize the API endpoints to create or query entities.")), (0,react_.mdx)(create_and_query_itwin_entities_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_itwin_entities_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(create_and_query_itwin_entities_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A tool, such as ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Postman"), " that can be used to execute HTTP calls. These calls can also be made using the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Try it out"), " button in the API documentation."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "The user should be a member of the iTwin for which they want to create an entity. You would need to know the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "iTwin id"), " GUID for the iTwin. If you don\u2019t have an iTwin to work with, you can create one using the instructions ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-and-query-itwins-guide/"
  }, "Create and Query an iTwin"), "."))), (0,react_.mdx)(create_and_query_itwin_entities_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_itwin_entities_CreateSampleAppButton, {
      tooltip: "Register a basic SPA App for this tutorial",
      clientName: "Create and Query Entities",
      scopes: ["itwin-entities:read", "itwin-entities:modify"],
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iTwin Entities API"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "itwin-entities:modify"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "itwin-entities:read"), " scopes enabled."))), (0,react_.mdx)(create_and_query_itwin_entities_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "Before you can make a request to the APIs, a user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application."), (0,react_.mdx)(create_and_query_itwin_entities_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Here you can use Client ID generated from previous registration step."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-the-itwin-entities-documentation-page"
  }, "Grab a user token from the iTwin Entities documentation page"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/itwin-entities/operations/create-entity/"
  }, "here")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Try it out"), " button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Under the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " section, select ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "authorizationCode"), " from the dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After the sign in popup closes, the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " header with token value should be visible beneath the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "HTTP request"), " dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Copy & paste the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " value for this tutorial.")), (0,react_.mdx)(create_and_query_itwin_entities_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(create_and_query_itwin_entities_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_itwin_entities_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_query_itwin_entities_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/itwin-entities/iTwins/{ITWIN_ID}/entities/ HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_entities_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_query_itwin_entities_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_entities_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(create_and_query_itwin_entities_CodeBlock, {
      language: "json",
      code: "{\n    \"class\": \"CentrifugalPump\",\n    \"classification\": \"CentrifugalPump\",\n    \"bisClassPath\": \"bis:Element;bis:RoleElement;func:FunctionalElement;func:FunctionalComponentElement;pfunc:PLANT_BASE_OBJECT;pfunc:NAMED_ITEM;pfunc:DEVICE;pfunc:EQUIPMENT;pfunc:ROTATING_EQUIPMENT;pfunc:PUMP;pfunc:DYNAMIC_PUMP;pfunc:CENTRIFUGAL_PUMP\",\n    \"code\": \"CodeSpecId:CodeScopeId:P-101\",\n    \"name\": \"P-101\",\n    \"type\": \"GE CP T22a\",\n    \"geospatialLocation\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            12.1,\n            13.2\n        ]\n    },\n    \"tags\": [\n        \"Pump\"\n    ],\n    \"federationId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_entities_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_and_query_itwin_entities_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\ncontent-length: 937\ncontent-type: application/json\ndate: Thu, 24 Jun 2021 14:44:18 GMT\nrequest-context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 5262b13f-394e-49b8-95ea-a5361d2513a3\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_entities_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_query_itwin_entities_CodeBlock, {
      language: "json",
      code: "{\n    \"entity\": {\n        \"class\": \"CentrifugalPump\",\n        \"classification\": \"CentrifugalPump\",\n        \"bisClassPath\": \"bis:Element;bis:RoleElement;func:FunctionalElement;func:FunctionalComponentElement;pfunc:PLANT_BASE_OBJECT;pfunc:NAMED_ITEM;pfunc:DEVICE;pfunc:EQUIPMENT;pfunc:ROTATING_EQUIPMENT;pfunc:PUMP;pfunc:DYNAMIC_PUMP;pfunc:CENTRIFUGAL_PUMP\",\n        \"code\": \"CodeSpecId:CodeScopeId:P-101\",\n        \"name\": \"P-101\",\n        \"type\": \"GE CP T22a\",\n        \"geospatialLocation\": {\n            \"type\": \"Point\",\n            \"coordinates\": [\n                12.1,\n                13.2\n            ]\n        },\n        \"tags\": [\n            \"Pump\"\n        ],\n        \"federationId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n        \"links\": [],\n        \"createdDateTime\": \"2023-01-18T21:03:00.3704659\",\n        \"createdByUser\": \"user@bentley.com\",\n        \"LastModifiedDateTime\": \"2023-01-18T21:03:00.3704659\",\n        \"LastModifiedByUser\": \"user@bentley.com\"\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-create-a-new-entity"
  }, "3. Create a new entity"), (0,react_.mdx)("p", null, "The iTwin Entities API is used to create and manage entities. A POST call to the entities endpoint will create a new entity for the iTwin specified by the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwinId"), ". You need to replace the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ITWIN_ID"), " with the your iTwinId in the request as mentioned in the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "#prerequisites"
  }, "Prerequisites"), " section."), (0,react_.mdx)("p", null, "At minimum, ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "class"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "code"), " are required for creating a new entity. The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "code"), " property should be unique. If you already have a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "federationId"), " for the entity also specify it. Otherwise, a new ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "federationId"), " would be auto-generated for the new entity. If you get a conflict error, then you must replace the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "federationId"), " with a unique value. See the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/itwin-entities/operations/create-entity/"
  }, "iTwin Entities API documentation"), " for descriptions of the different properties, including default values."), (0,react_.mdx)("p", null, "The POST call will return a new entity instance. The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "federationId"), " can be used to query for the entity. The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "federationId"), " is also used by in many other iTwin-Entities APIs. You may want to save this ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "federationId"), " to use in other tutorials.")), (0,react_.mdx)(create_and_query_itwin_entities_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_itwin_entities_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_query_itwin_entities_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/itwins/{ITWIN_ID}/entities/3fa85f64-5717-4562-b3fc-2c963f66afa6 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_entities_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_query_itwin_entities_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_entities_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_and_query_itwin_entities_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\ncontent-length: 936\ncontent-type: application/json\ndate: Thu, 24 Jun 2021 18:10:04 GMT\nrequest-context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: fed95960-ea7c-43b5-a9af-66ab5353d073\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_entities_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_query_itwin_entities_CodeBlock, {
      language: "json",
      code: "{\n    \"entity\": {\n        \"class\": \"CentrifugalPump\",\n        \"classification\": \"CentrifugalPump\",\n        \"bisClassPath\": \"bis:Element;bis:RoleElement;func:FunctionalElement;func:FunctionalComponentElement;pfunc:PLANT_BASE_OBJECT;pfunc:NAMED_ITEM;pfunc:DEVICE;pfunc:EQUIPMENT;pfunc:ROTATING_EQUIPMENT;pfunc:PUMP;pfunc:DYNAMIC_PUMP;pfunc:CENTRIFUGAL_PUMP\",\n        \"code\": \"CodeSpecId:CodeScopeId:P-101\",\n        \"name\": \"P-101\",\n        \"type\": \"GE CP T22a\",\n        \"geospatialLocation\": {\n            \"type\": \"Point\",\n            \"coordinates\": [\n                12.1,\n                13.2\n            ]\n        },\n        \"tags\": [\n            \"Pump\"\n        ],\n        \"federationId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n        \"links\": [],\n        \"createdDateTime\": \"2023-01-18T21:03:00.3704659\",\n        \"createdByUser\": \"user@bentley.com\",\n        \"LastModifiedDateTime\": \"2023-01-18T21:03:00.3704659\",\n        \"LastModifiedByUser\": \"user@bentley.com\"\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-query-for-an-entity-using-the-federationid"
  }, "4. Query for an entity using the federationId"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "federationId"), " of an entity can be used to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/itwin-entities/operations/get-entity/"
  }, "query for a specific entity"), ". In addition to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "federationId"), ", you need to know the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwinId"), " for the iTwin to which the queried entity belongs.")), (0,react_.mdx)(create_and_query_itwin_entities_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_itwin_entities_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_query_itwin_entities_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/itwins/{ITWIN_ID}/entities?code=CodeSpecId:CodeScopeId:P-101 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_entities_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_query_itwin_entities_CodeBlock, {
      language: "http",
      code: "Prefer: return=representation\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_entities_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_and_query_itwin_entities_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK \ncache-control: must-revalidate, no-cache, private\ncontent-encoding: gzip\ncontent-type: application/json\ndate: Thu, 24 Jun 2021 18:20:43 GMT\nrequest-context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: dd4d68c9-614d-4d67-8e51-7147c18513f8\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_entities_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_query_itwin_entities_CodeBlock, {
      language: "json",
      code: "{\n    \"entities\": [{\n        \"class\": \"CentrifugalPump\",\n        \"classification\": \"CentrifugalPump\",\n        \"bisClassPath\": \"bis:Element;bis:RoleElement;func:FunctionalElement;func:FunctionalComponentElement;pfunc:PLANT_BASE_OBJECT;pfunc:NAMED_ITEM;pfunc:DEVICE;pfunc:EQUIPMENT;pfunc:ROTATING_EQUIPMENT;pfunc:PUMP;pfunc:DYNAMIC_PUMP;pfunc:CENTRIFUGAL_PUMP\",\n        \"code\": \"CodeSpecId:CodeScopeId:P-101\",\n        \"name\": \"P-101\",\n        \"type\": \"GE CP T22a\",\n        \"geospatialLocation\": {\n            \"type\": \"Point\",\n            \"coordinates\": [\n                12.1,\n                13.2\n            ]\n        },\n        \"tags\": [\n            \"Pump\"\n        ],\n        \"federationId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n        \"links\": [],\n        \"createdDateTime\": \"2016-01-18T21:03:00.3704659\",\n        \"createdByUser\": \"user@bentley.com\",\n        \"LastModifiedDateTime\": \"2016-01-18T21:03:00.3704659\",\n        \"LastModifiedByUser\": \"user@bentley.com\"\n    }]\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-query-for-entities-using-code-or-name-class-etc"
  }, "5. Query for entities using code (or name, class etc.)"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "code"), " query parameter can be used to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/itwin-entities/operations/get-entities/"
  }, "find entities"), ". Because this is a query, the response will be a list of entities that will usually contain only one element. The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "code"), " value should ideally be unique within an iTwin, however, this is not strictly enforced and you can theoratically get multiple entities with the same ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "code"), " value. Again, the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwinId"), " must to be specified in the request."), (0,react_.mdx)("p", null, "Similarly you can use the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "name"), " or ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "class"), " paramaters (or a combination of any of the rest of the query parameter listed for the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/itwin-entities/operations/get-entities/"
  }, "get entities API"), ") to search for entities by these values.")), (0,react_.mdx)(create_and_query_itwin_entities_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_itwin_entities_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_query_itwin_entities_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/itwins/{ITWIN_ID}/entities?code=P-1&partialMatchFiltersList=code HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_entities_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_query_itwin_entities_CodeBlock, {
      language: "http",
      code: "Prefer: return=minimal\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_entities_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_and_query_itwin_entities_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK \ncache-control: must-revalidate, no-cache, private\ncontent-encoding: gzip\ncontent-type: application/json\ndate: Thu, 24 Jun 2021 18:40:47 GMT\nrequest-context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 86bc760f-d0c4-4292-b72d-97a078ce1c7a\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_entities_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_query_itwin_entities_CodeBlock, {
      language: "json",
      code: "{\n    \"entities\": [{\n        \"class\": \"CentrifugalPump\",\n        \"classification\": \"CentrifugalPump\",\n        \"bisClassPath\": \"bis:Element;bis:RoleElement;func:FunctionalElement;func:FunctionalComponentElement;pfunc:PLANT_BASE_OBJECT;pfunc:NAMED_ITEM;pfunc:DEVICE;pfunc:EQUIPMENT;pfunc:ROTATING_EQUIPMENT;pfunc:PUMP;pfunc:DYNAMIC_PUMP;pfunc:CENTRIFUGAL_PUMP\",\n        \"code\": \"CodeSpecId:CodeScopeId:P-101\",\n        \"name\": \"P-101\",\n        \"type\": \"GE CP T22a\",\n        \"geospatialLocation\": {\n            \"type\": \"Point\",\n            \"coordinates\": [\n                12.1,\n                13.2\n            ]\n        },\n        \"tags\": [\n            \"Pump\"\n        ],\n        \"federationId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n        \"links\": [],\n        \"createdDateTime\": \"2016-01-18T21:03:00.3704659\",\n        \"createdByUser\": \"user@bentley.com\",\n        \"LastModifiedDateTime\": \"2016-01-18T21:03:00.3704659\",\n        \"LastModifiedByUser\": \"user@bentley.com\"\n    }]\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-query-for-entities-using-partial-code"
  }, "6. Query for entities using partial code"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "partialMatchFiltersList"), " query parameter can be used to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/itwin-entities/operations/get-entities/"
  }, "find entities"), " using a query string that will return entities for which the property values partially match the provided filter. For example, if we provide a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "code"), " value of \u201CP-1\u201D in the query parameter and specify the value \u201Ccode\u201D in the PartialMatchFiltersList query parameter, then we can search for all entities that have the property ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "code"), " with a value that contain the substring \u201CP-1\u201D. So, the entity that we created in the step 3 with code value \u201CCodeSpecId:CodeScopeId:P-101\u201D should be returned in this example. This example is the SQL equivalent of ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "code like '%P-1%'"), ". The query is not case sensitive and you should not add wildcard characters to the query string."), (0,react_.mdx)("p", null, "Because this is a query, the response will be a list that could contain many entities."), (0,react_.mdx)("p", null, "Similary, the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "partiamMatchFiltersList"), " can be used for other properties of entities. See the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/itwin-entities/operations/get-entities/"
  }, "get entities API"), " for details.")));
}
;
create_and_query_itwin_entities_MDXContent.isMDXComponent = true;
var create_and_query_itwin_entities_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-the-itwin-entities-documentation-page",
      level: 3,
      title: "Grab a user token from the iTwin Entities documentation page",
      children: []
    }]
  }, {
    id: "3-create-a-new-entity",
    level: 2,
    title: "3. Create a new entity",
    children: []
  }, {
    id: "4-query-for-an-entity-using-the-federationid",
    level: 2,
    title: "4. Query for an entity using the federationId",
    children: []
  }, {
    id: "5-query-for-entities-using-code-or-name-class-etc",
    level: 2,
    title: "5. Query for entities using code (or name, class etc.)",
    children: []
  }, {
    id: "6-query-for-entities-using-partial-code",
    level: 2,
    title: "6. Query for entities using partial code",
    children: []
  }];
};
var create_and_query_itwin_entities_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/create-and-query-itwin-groups-guide.mdx


var create_and_query_itwin_groups_guide_excluded = ["components"];
var create_and_query_itwin_groups_guide_jsx = (external_react_default()).createElement;


var create_and_query_itwin_groups_guide_readingTime = {
  "text": "7 min read",
  "minutes": 6.965,
  "time": 417900,
  "words": 1393
};
/* @jsxRuntime classic */
/* @jsx mdx */

var create_and_query_itwin_groups_guide_metadata = {
  title: 'Create and Query iTwin Groups',
  tile: {
    name: 'Create and Query iTwin Groups',
    description: 'This tutorial will guide you through the process of creating and querying groups on an iTwin',
    href: '/tutorials/create-and-query-itwin-groups-guide',
    durationInMinutes: 15,
    relatedApiIds: ['accesscontrol'],
    showInFirstSteps: false
  }
};
var create_and_query_itwin_groups_guide_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var create_and_query_itwin_groups_guide_Introduction = create_and_query_itwin_groups_guide_makeShortcode("Introduction");
var create_and_query_itwin_groups_guide_Alert = create_and_query_itwin_groups_guide_makeShortcode("Alert");
var create_and_query_itwin_groups_guide_TutorialSection = create_and_query_itwin_groups_guide_makeShortcode("TutorialSection");
var create_and_query_itwin_groups_guide_LinkButton = create_and_query_itwin_groups_guide_makeShortcode("LinkButton");
var create_and_query_itwin_groups_guide_GoogleChromeIcon = create_and_query_itwin_groups_guide_makeShortcode("GoogleChromeIcon");
var create_and_query_itwin_groups_guide_VSCodeIcon = create_and_query_itwin_groups_guide_makeShortcode("VSCodeIcon");
var create_and_query_itwin_groups_guide_PostmanIcon = create_and_query_itwin_groups_guide_makeShortcode("PostmanIcon");
var create_and_query_itwin_groups_guide_CreateSampleAppButton = create_and_query_itwin_groups_guide_makeShortcode("CreateSampleAppButton");
var create_and_query_itwin_groups_guide_Title = create_and_query_itwin_groups_guide_makeShortcode("Title");
var create_and_query_itwin_groups_guide_CodeBlock = create_and_query_itwin_groups_guide_makeShortcode("CodeBlock");
var create_and_query_itwin_groups_guide_ContinueLearningSection = create_and_query_itwin_groups_guide_makeShortcode("ContinueLearningSection");
var create_and_query_itwin_groups_guide_TileList = create_and_query_itwin_groups_guide_makeShortcode("TileList");
var create_and_query_itwin_groups_guide_ResourceTile = create_and_query_itwin_groups_guide_makeShortcode("ResourceTile");
var create_and_query_itwin_groups_guide_layoutProps = {
  metadata: create_and_query_itwin_groups_guide_metadata
};
var create_and_query_itwin_groups_guide_MDXLayout = "wrapper";
function create_and_query_itwin_groups_guide_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, create_and_query_itwin_groups_guide_excluded);
  return (0,react_.mdx)(create_and_query_itwin_groups_guide_MDXLayout, (0,esm_extends/* default */.Z)({}, create_and_query_itwin_groups_guide_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(create_and_query_itwin_groups_guide_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "15",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)(create_and_query_itwin_groups_guide_Alert, {
    mdxType: "Alert"
  }, "This tutorial is for the", ' ', (0,react_.mdx)("a", {
    href: "/apis/access-control-v2/overview/"
  }, "Access Control API V2"), ". To control the API version,", ' ', (0,react_.mdx)("a", {
    href: "/apis/overview/lifecycle/#api-versions"
  }, "see the API versions documentation")), (0,react_.mdx)("p", null, "This tutorial will take you through the process of creating and retrieving groups for a given iTwin. iTwin groups provide the ability to manage groups of users at one time. You can create groups on the Account iTwin to manage access across iTwins or create a group for an individual iTwin. Groups created on an individual iTwin are available only on that iTwin. For more information for managing access using the Account iTwin, see ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/access-control/#managingaccessusingtheaccountitwin"
  }, "Managing access using the Account iTwin")), (0,react_.mdx)("p", null, "Groups can contain individual users and can also reference Bentley Identity Management System (IMS) groups. By referencing an IMS group, you can manage groups of individuals in your Active Directory, while providing them access to iTwin Platform using role assignments. IMS groups are created and controlled on the team level, and can be accessed ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://usermanagement.bentley.com/management/users"
  }, "here"), " through Bentley\u2019s User Management service. Only Accout Administrators, Co-Administrators, and Group Administrators will have access to the User Management Service. More information about creating and maintaining IMS groups can be found ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50713/managing-groups"
  }, "here"), "."), (0,react_.mdx)("p", null, "By the end of this walk-through, you will be able to utilize the API endpoints in order to create and retrieve a list of iTwin groups.")), (0,react_.mdx)(create_and_query_itwin_groups_guide_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_itwin_groups_guide_LinkButton, {
      href: "https://www.google.com/chrome/",
      target: "_blank",
      title: "Google Chrome",
      icon: (0,react_.mdx)(create_and_query_itwin_groups_guide_GoogleChromeIcon, {
        mdxType: "GoogleChromeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(create_and_query_itwin_groups_guide_LinkButton, {
      href: "https://code.visualstudio.com/",
      target: "_blank",
      title: "Visual Studio Code",
      icon: (0,react_.mdx)(create_and_query_itwin_groups_guide_VSCodeIcon, {
        mdxType: "VSCodeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(create_and_query_itwin_groups_guide_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(create_and_query_itwin_groups_guide_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A tool, such as ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Postman"), " that can be used to execute HTTP calls. These calls can also be made using the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Try it out"), " button in the API documentation."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "If a user is affiliated with an Organization, the user must be an Organization Administrator to create an iTwin. An Organization Administrator\nmust have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0"
  }, "Licensing, Cloud, and Web Services"), " wiki page."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "An IMS group. IMS (Identity Management System) groups are created and controlled on the team level, and can be accessed ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://usermanagement.bentley.com/management/users"
  }, "here"), " through Bentley\u2019s User Management service. Only Accout Administrators, Co-Administrators, and Group Administrators will have access to the User Management Service. More information about creating and maintaining IMS groups can be found ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50713/managing-groups"
  }, "here"), "."))), (0,react_.mdx)(create_and_query_itwin_groups_guide_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_itwin_groups_guide_CreateSampleAppButton, {
      tooltip: "Register a basic SPA App for this tutorial",
      clientName: "Create and Query iTwins tutorial",
      scopes: ["itwins:modify", "itwins:read"],
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorizesinglepageapplicationsspaanddesktopmobileapplicationsnative"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iTwins API"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwins:modify"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwins:read"), " scopes enabled."))), (0,react_.mdx)(create_and_query_itwin_groups_guide_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "Before you can make a request to the APIs, a user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application."), (0,react_.mdx)(create_and_query_itwin_groups_guide_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Here you can use Client ID generated from previous registration step."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-the-itwins-documentation-page"
  }, "Grab a user token from the iTwins documentation page"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/access-control/operations/get-iTwin-roles/"
  }, "here")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Try it out"), " button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Under the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " section, select ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "authorizationCode"), " from the dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After the sign in popup closes, the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " header with token value should be visible beneath the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "HTTP request"), " dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Copy & paste the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " value for this tutorial.")), (0,react_.mdx)(create_and_query_itwin_groups_guide_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(create_and_query_itwin_groups_guide_TutorialSection, {
    actions: [(0,react_.mdx)((external_react_default()).Fragment, null, (0,react_.mdx)(create_and_query_itwin_groups_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/accesscontrol/itwins/{id}/groups HTTP/1.1",
      mdxType: "CodeBlock"
    }), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_Title, {
      mdxType: "Title"
    }, "Request Body"), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_CodeBlock, {
      language: "json",
      code: "{\n        \"name\": \"Engineers\",\n        \"description\": \"This is a group for engineers\",\n      }",
      mdxType: "CodeBlock"
    }), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\ncontent-length: 203\ncontent-type: application/json\ndate: Wed, 30 Jun 2021 17:26:10 GMT\nrequest-context: appId=cid-v2:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 74e263d7-ded7-45a5-8347-ca1f98ffab86\nx-itwinplatform-media-type: bentley.itwin-platform.v2\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_CodeBlock, {
      language: "json",
      code: "{\n            \"group\": {\n                \"id\": \"d0ec803b-de9a-41cd-9d97-c8edddd4cb0d\",\n                \"name\": \"Engineers\",\n                \"description\": \"This is a group for engineers\",\n                \"contextId\": \"a9c999c9-5516-4ea0-adc3-28238c02b18e\",\n                \"users\": [],\n                \"imsGroups\": []\n            }\n        }",
      mdxType: "CodeBlock"
    }))],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-create-itwin-group"
  }, "3. Create iTwin Group"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/access-control/operations/create-iTwin-groups/"
  }, "Create iTwin group"), " endpoint is used to create iTwin groups. After a group is created, users and IMS groups can be added."), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwin id"), " from an existing iTwin (see ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/create-and-query-itwins-guide/"
  }, "create and query iTwins guide"), ") is required to create a group. A ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "name"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "description"), " are required in the POST body."), (0,react_.mdx)("p", null, "The POST call will return a new group instance. The returned group ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " along with the iTwin ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " will be used to add users and IMS groups in the next step.")), (0,react_.mdx)(create_and_query_itwin_groups_guide_TutorialSection, {
    actions: [(0,react_.mdx)((external_react_default()).Fragment, null, (0,react_.mdx)(create_and_query_itwin_groups_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_CodeBlock, {
      language: "http",
      code: "PATCH https://api.bentley.com/accesscontrol/itwins/{id}/groups/{groupId} HTTP/1.1",
      mdxType: "CodeBlock"
    }), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_Title, {
      mdxType: "Title"
    }, "Request Body"), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_CodeBlock, {
      language: "json",
      code: "{\n        \"name\": \"A new Group name\",\n        \"description\": \"A new Group description\",\n        \"imsGroups\": [\n          \"IMS Engineers\"\n        ],\n        \"users\": [\n            \"John.Doe@bentley.com\"\n        ]\n  }",
      mdxType: "CodeBlock"
    }), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\ncontent-length: 324\ncontent-type: application/json\ndate: Wed, 30 Jun 2021 18:17:39 GMT\nrequest-context: appId=cid-v2:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: f16d2765-4a9c-40a4-995e-bd7c6b8b8d4a\nx-itwinplatform-media-type: bentley.itwin-platform.v2\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_CodeBlock, {
      language: "json",
      code: "{\n    \"group\":{\n      \"id\":\"10a2d277-ea41-4e81-b309-f7a9aea09d51\",\n      \"name\": \"A new Group name\",\n      \"description\": \"A new Group description\",\n      \"contextId\": \"a9c999c9-5516-4ea0-adc3-28238c02b18e\",\n      \"imsGroups\": [\n        \"IMS Engineers\"\n      ],\n      \"users\": [\n          \"John.Doe@bentley.com\"\n      ]\n    }\n  }",
      mdxType: "CodeBlock"
    }))],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-update-itwins-groups-using-the-itwin-id-and-group-id"
  }, "4. Update iTwins Groups Using the iTwin Id and Group Id"), (0,react_.mdx)("p", null, "To assign ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "users"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "imsGroups"), ", the group needs to be ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/access-control/operations/update-iTwin-group/"
  }, "updated"), ". ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwin id"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "group id"), " are required. The POST body should contain a list of ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "users"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "imsGroups"), "."), (0,react_.mdx)("p", null, "IMS groups are created and controlled on the team level, and can be accessed ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://usermanagement.bentley.com/management/users"
  }, "here"), " through Bentley\u2019s User Management service. Only Accout Administrators, Co-Administrators, and Group Administrators will have access to the User Management Service. More information about creating and maintaining IMS groups can be found ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50713/managing-groups"
  }, "here"), "."), (0,react_.mdx)("p", null, "The response will contain the group details along with the list of ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "users"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "imsGroups"), " added.")), (0,react_.mdx)(create_and_query_itwin_groups_guide_TutorialSection, {
    actions: [(0,react_.mdx)((external_react_default()).Fragment, null, (0,react_.mdx)(create_and_query_itwin_groups_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/accesscontrol/itwins/{id}/groups HTTP/1.1",
      mdxType: "CodeBlock"
    }), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\ncontent-type: application/json\ndate: Mon, 29 Aug 2022 19:24:14 GMT\nrequest-context: appId=cid-v2:7a353d36-9a8b-423e-965e-9d7f51324584\nvary: Accept-Encoding\nx-correlation-id: 260678e5-0244-413d-bc60-f6dac19fd450\nx-itwinplatform-media-type: bentley.itwin-platform.v2\nx-itwinplatform-region: East US\nx-rate-limit-limit: 1s\nx-rate-limit-remaining: 49\nx-rate-limit-reset: 2022-08-29T19:24:15.3864257Z",
      mdxType: "CodeBlock"
    }), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), ",", (0,react_.mdx)(create_and_query_itwin_groups_guide_CodeBlock, {
      language: "json",
      code: "{\n        \"groups\": [\n            {\n                \"id\": \"149d0860-39e9-4ae9-9b05-0b5dcedd2d4b\",\n                \"name\": \"Engineers\",\n                \"description\": \"This is a group of engineers\",\n                \"contextId\": \"a9c999c9-5516-4ea0-adc3-28238c02b18e\",\n                \"imsGroups\": [\n                  \"IMS Engineers\"\n                ],\n                \"users\": [\n                    \"John.Doe@bentley.com\"\n                ]\n            },\n            {\n                \"id\": \"d0ec803b-de9a-41cd-9d97-c8edddd4cb0d\",\n                \"name\": \"iTwin Administrators\",\n                \"description\": \"This is a group of administrators for the iTwin\",\n                \"contextId\": \"a9c999c9-5516-4ea0-adc3-28238c02b18e\",\n                \"users\": [],\n                \"imsGroups\": [\"IMS Admins\"]\n            }\n        ]\n    }",
      mdxType: "CodeBlock"
    }))],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-query-for-groups-using-the-itwin-id"
  }, "5. Query for Groups using the iTwin Id"), (0,react_.mdx)("p", null, (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwin Id"), " can be used to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/access-control/operations/get-iTwin-groups/"
  }, "retrieve a list of iTwin groups"), "."), (0,react_.mdx)("p", null, "The API will return a list of groups for a given iTwin.")), (0,react_.mdx)(create_and_query_itwin_groups_guide_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(create_and_query_itwin_groups_guide_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(create_and_query_itwin_groups_guide_ResourceTile, {
    title: "Create and Query iTwins Guide",
    href: "/tutorials/create-and-query-itwins-guide/",
    description: "Tutorial for creating and querying iTwins.",
    isExternal: false,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(create_and_query_itwin_groups_guide_ResourceTile, {
    title: "Manage Group Members on iTwins Guide",
    href: "/tutorials/manage-group-members-on-itwins-guide",
    description: "Tutorial for managing group members on your iTwins.",
    isExternal: false,
    mdxType: "ResourceTile"
  }))));
}
;
create_and_query_itwin_groups_guide_MDXContent.isMDXComponent = true;
var create_and_query_itwin_groups_guide_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-the-itwins-documentation-page",
      level: 3,
      title: "Grab a user token from the iTwins documentation page",
      children: []
    }]
  }, {
    id: "3-create-itwin-group",
    level: 2,
    title: "3. Create iTwin Group",
    children: []
  }, {
    id: "4-update-itwins-groups-using-the-itwin-id-and-group-id",
    level: 2,
    title: "4. Update iTwins Groups Using the iTwin Id and Group Id",
    children: []
  }, {
    id: "5-query-for-groups-using-the-itwin-id",
    level: 2,
    title: "5. Query for Groups using the iTwin Id",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var create_and_query_itwin_groups_guide_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/create-and-query-itwin-roles-guide.mdx


var create_and_query_itwin_roles_guide_excluded = ["components"];
var create_and_query_itwin_roles_guide_jsx = (external_react_default()).createElement;


var create_and_query_itwin_roles_guide_readingTime = {
  "text": "7 min read",
  "minutes": 6.155,
  "time": 369300,
  "words": 1231
};
/* @jsxRuntime classic */
/* @jsx mdx */

var create_and_query_itwin_roles_guide_metadata = {
  title: 'Create and Query iTwin Roles',
  tile: {
    name: 'Create and Query iTwin Roles',
    description: 'This tutorial will guide you through the process of creating and querying roles on an iTwin',
    href: '/tutorials/create-and-query-itwin-roles-guide',
    durationInMinutes: 15,
    relatedApiIds: ['accesscontrol'],
    showInFirstSteps: false
  }
};
var create_and_query_itwin_roles_guide_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var create_and_query_itwin_roles_guide_Introduction = create_and_query_itwin_roles_guide_makeShortcode("Introduction");
var create_and_query_itwin_roles_guide_Alert = create_and_query_itwin_roles_guide_makeShortcode("Alert");
var create_and_query_itwin_roles_guide_TutorialSection = create_and_query_itwin_roles_guide_makeShortcode("TutorialSection");
var create_and_query_itwin_roles_guide_LinkButton = create_and_query_itwin_roles_guide_makeShortcode("LinkButton");
var create_and_query_itwin_roles_guide_GoogleChromeIcon = create_and_query_itwin_roles_guide_makeShortcode("GoogleChromeIcon");
var create_and_query_itwin_roles_guide_VSCodeIcon = create_and_query_itwin_roles_guide_makeShortcode("VSCodeIcon");
var create_and_query_itwin_roles_guide_PostmanIcon = create_and_query_itwin_roles_guide_makeShortcode("PostmanIcon");
var create_and_query_itwin_roles_guide_CreateSampleAppButton = create_and_query_itwin_roles_guide_makeShortcode("CreateSampleAppButton");
var create_and_query_itwin_roles_guide_Title = create_and_query_itwin_roles_guide_makeShortcode("Title");
var create_and_query_itwin_roles_guide_CodeBlock = create_and_query_itwin_roles_guide_makeShortcode("CodeBlock");
var create_and_query_itwin_roles_guide_ContinueLearningSection = create_and_query_itwin_roles_guide_makeShortcode("ContinueLearningSection");
var create_and_query_itwin_roles_guide_TileList = create_and_query_itwin_roles_guide_makeShortcode("TileList");
var create_and_query_itwin_roles_guide_ResourceTile = create_and_query_itwin_roles_guide_makeShortcode("ResourceTile");
var create_and_query_itwin_roles_guide_layoutProps = {
  metadata: create_and_query_itwin_roles_guide_metadata
};
var create_and_query_itwin_roles_guide_MDXLayout = "wrapper";
function create_and_query_itwin_roles_guide_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, create_and_query_itwin_roles_guide_excluded);
  return (0,react_.mdx)(create_and_query_itwin_roles_guide_MDXLayout, (0,esm_extends/* default */.Z)({}, create_and_query_itwin_roles_guide_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(create_and_query_itwin_roles_guide_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "15",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)(create_and_query_itwin_roles_guide_Alert, {
    mdxType: "Alert"
  }, "This tutorial is for the", ' ', (0,react_.mdx)("a", {
    href: "/apis/access-control-v2/overview/"
  }, "Access Control API V2"), ". To control the API version,", ' ', (0,react_.mdx)("a", {
    href: "/apis/overview/lifecycle/#api-versions"
  }, "see the API versions documentation")), (0,react_.mdx)("p", null, "This tutorial will take you through the process of creating and retrieving roles for a given iTwin. Roles enable you to organize permissions and are assigned to one or more members. While not required, roles usually reflect the functional job duties within an organization and may be determined by various factors such as tasks or business operations."), (0,react_.mdx)("p", null, "You can create roles on the Account iTwin to manage access across iTwins or create a roles for an individual iTwin. Roles created on an individual iTwin are available only on that iTwin. For more information for managing access using the Account iTwin, see ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/access-control/#managingaccessusingtheaccountitwin"
  }, "Managing access using the Account iTwin")), (0,react_.mdx)("p", null, "By the end of this walk-through, you will be able to utilize the API endpoints in order to create roles, add & assign permissions to the role, and retrieve the list of iTwin roles.")), (0,react_.mdx)(create_and_query_itwin_roles_guide_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_itwin_roles_guide_LinkButton, {
      href: "https://www.google.com/chrome/",
      target: "_blank",
      title: "Google Chrome",
      icon: (0,react_.mdx)(create_and_query_itwin_roles_guide_GoogleChromeIcon, {
        mdxType: "GoogleChromeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(create_and_query_itwin_roles_guide_LinkButton, {
      href: "https://code.visualstudio.com/",
      target: "_blank",
      title: "Visual Studio Code",
      icon: (0,react_.mdx)(create_and_query_itwin_roles_guide_VSCodeIcon, {
        mdxType: "VSCodeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(create_and_query_itwin_roles_guide_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(create_and_query_itwin_roles_guide_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A tool, such as ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Postman"), " that can be used to execute HTTP calls. These calls can also be made using the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Try it out"), " button in the API documentation."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "If a user is affiliated with an Organization, the user must be an Organization Administrator to create an iTwin. An Organization Administrator\nmust have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0"
  }, "Licensing, Cloud, and Web Services"), " wiki page."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Permissions to assign to a role. To see the list of available permissions, ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/access-control/operations/get-all-permissions/"
  }, "see get all permissions.")))), (0,react_.mdx)(create_and_query_itwin_roles_guide_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_itwin_roles_guide_CreateSampleAppButton, {
      tooltip: "Register a basic SPA App for this tutorial",
      clientName: "Create and Query iTwins tutorial",
      scopes: ["itwins:modify", "itwins:read"],
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorizesinglepageapplicationsspaanddesktopmobileapplicationsnative"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iTwins API"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwins:modify"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwins:read"), " scopes enabled."))), (0,react_.mdx)(create_and_query_itwin_roles_guide_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "Before you can make a request to the APIs, a user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application."), (0,react_.mdx)(create_and_query_itwin_roles_guide_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Here you can use Client ID generated from previous registration step."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-the-itwins-documentation-page"
  }, "Grab a user token from the iTwins documentation page"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/access-control/operations/get-iTwin-roles/"
  }, "here")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Try it out"), " button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Under the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " section, select ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "authorizationCode"), " from the dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After the sign in popup closes, the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " header with token value should be visible beneath the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "HTTP request"), " dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Copy & paste the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " value for this tutorial.")), (0,react_.mdx)(create_and_query_itwin_roles_guide_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(create_and_query_itwin_roles_guide_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_itwin_roles_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_query_itwin_roles_guide_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/accesscontrol/itwins/{id}/roles HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_roles_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_query_itwin_roles_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_roles_guide_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(create_and_query_itwin_roles_guide_CodeBlock, {
      language: "json",
      code: "{\n    \"displayName\":\"iTwin Administrator\",\n    \"description\":\"A description of iTwin Administrator\"\n  }",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_roles_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_and_query_itwin_roles_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\ncontent-length: 203\ncontent-type: application/json\ndate: Wed, 30 Jun 2021 17:26:10 GMT\nrequest-context: appId=cid-v2:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 74e263d7-ded7-45a5-8347-ca1f98ffab86\nx-itwinplatform-media-type: bentley.itwin-platform.v2\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_roles_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_query_itwin_roles_guide_CodeBlock, {
      language: "json",
      code: "{\n    \"role\":{\n      \"id\":\"14b391cf-ce9e-43d3-8fee-c49e57c2680d\",\n      \"displayName\":\"iTwin Administrator\",\n      \"description\":\"A description of iTwin Administrator\",\n      \"permissions\":[]\n    }\n  }",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-create-itwin-role"
  }, "3. Create iTwin Role"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/access-control/operations/create-iTwin-role/"
  }, "Create iTwin role"), " endpoint is used to create iTwin roles. After a role is created, permissions can be assigned."), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwin id"), " from an existing iTwin (see ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/create-and-query-itwins-guide/"
  }, "create and query iTwins guide"), ") is required to create a role. A ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "display name"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "description"), " are required in the POST body."), (0,react_.mdx)("p", null, "The POST call will return a new role instance. The returned ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "role id"), " along with the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwin id"), " will be used to add permissions in the next step.")), (0,react_.mdx)(create_and_query_itwin_roles_guide_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_itwin_roles_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_query_itwin_roles_guide_CodeBlock, {
      language: "http",
      code: "PATCH https://api.bentley.com/accesscontrol/itwins/{id}/roles/{roleId} HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_roles_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_query_itwin_roles_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_roles_guide_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(create_and_query_itwin_roles_guide_CodeBlock, {
      language: "json",
      code: "{\n        \"displayName\": \"A new Role display name\",\n        \"description\": \"A new Role description\",\n        \"permissions\":[\n          \"administration_invite_member\",\n          \"administration_manage_roles\",\n          \"administration_remove_member\"\n      ]\n  }",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_roles_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_and_query_itwin_roles_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\ncontent-length: 324\ncontent-type: application/json\ndate: Wed, 30 Jun 2021 18:17:39 GMT\nrequest-context: appId=cid-v2:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: f16d2765-4a9c-40a4-995e-bd7c6b8b8d4a\nx-itwinplatform-media-type: bentley.itwin-platform.v2\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_roles_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_query_itwin_roles_guide_CodeBlock, {
      language: "json",
      code: "{\n    \"role\":{\n      \"id\":\"10a2d277-ea41-4e81-b309-f7a9aea09d51\",\n      \"displayName\":\"iTwin Administrator\",\n      \"description\":\"A description of iTwin Administrator\",\n      \"permissions\":[\n        \"administration_invite_member\",\n        \"administration_manage_roles\",\n        \"administration_remove_member\"\n      ]\n    }\n  }",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-update-itwins-role-using-the-itwin-id-and-role-id"
  }, "4. Update iTwins Role Using the iTwin Id and Role Id"), (0,react_.mdx)("p", null, "To assign ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "permissions"), ", the Role needs to be ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/access-control/operations/update-iTwin-role/"
  }, "updated"), ". ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwin id"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "role id"), " are required. The POST body should contain ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "list of permissions"), "."), (0,react_.mdx)("p", null, "To see the list of available permissions, ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/access-control/operations/get-all-permissions/"
  }, "see get all permissions.")), (0,react_.mdx)("p", null, "The response will contain the role details along with the list of permissions assigned.")), (0,react_.mdx)(create_and_query_itwin_roles_guide_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_itwin_roles_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_query_itwin_roles_guide_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/accesscontrol/itwins/{id}/roles HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_roles_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_query_itwin_roles_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_roles_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_and_query_itwin_roles_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\ncontent-type: application/json\ndate: Mon, 29 Aug 2022 19:24:14 GMT\nrequest-context: appId=cid-v2:7a353d36-9a8b-423e-965e-9d7f51324584\nvary: Accept-Encoding\nx-correlation-id: 260678e5-0244-413d-bc60-f6dac19fd450\nx-itwinplatform-media-type: bentley.itwin-platform.v2\nx-itwinplatform-region: East US\nx-rate-limit-limit: 1s\nx-rate-limit-remaining: 49\nx-rate-limit-reset: 2022-08-29T19:24:15.3864257Z",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwin_roles_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_query_itwin_roles_guide_CodeBlock, {
      language: "json",
      code: "{\n        \"roles\": [{\n            \"id\": \"5ba9eab1-9597-4f20-b360-4d79b9af511d\",\n            \"displayName\": \"iTwin Administrator\",\n            \"description\": \"The iTwin Administration Role\",\n            \"permissions\": [],\n            \"assignedDateTime\": \"0001-01-01T00:00:00\"\n        }, {\n            \"id\": \"fe117fcd-7cf0-4f95-829f-b4cc065dc6ed\",\n            \"displayName\": \"iTwin Administrator 3\",\n            \"description\": \"The iTwin Administration Role 3\",\n            \"permissions\": [],\n            \"assignedDateTime\": \"0001-01-01T00:00:00\"\n        }]\n    }",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-query-for-roles-using-the-itwin-id"
  }, "5. Query for Roles using the iTwin Id"), (0,react_.mdx)("p", null, (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwin Id"), " can be used to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/access-control/operations/get-iTwin-roles/"
  }, "retrieve a list of iTwin roles"), "."), (0,react_.mdx)("p", null, "The api will return a list of roles for a given iTwin.")), (0,react_.mdx)(create_and_query_itwin_roles_guide_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(create_and_query_itwin_roles_guide_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(create_and_query_itwin_roles_guide_ResourceTile, {
    title: "Create and Query iTwins Guide",
    href: "/tutorials/create-and-query-itwins-guide/",
    description: "Tutorial for creating and querying iTwins.",
    isExternal: false,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(create_and_query_itwin_roles_guide_ResourceTile, {
    title: "Manage User Members on iTwins Guide",
    href: "/tutorials/manage-user-members-on-itwins-guide",
    description: "Tutorial for managing user members on your iTwins.",
    isExternal: false,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(create_and_query_itwin_roles_guide_ResourceTile, {
    title: "Manage Group Members on iTwins Guide",
    href: "/tutorials/manage-group-members-on-itwins-guide",
    description: "Tutorial for managing group members on your iTwins.",
    isExternal: false,
    mdxType: "ResourceTile"
  }))));
}
;
create_and_query_itwin_roles_guide_MDXContent.isMDXComponent = true;
var create_and_query_itwin_roles_guide_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-the-itwins-documentation-page",
      level: 3,
      title: "Grab a user token from the iTwins documentation page",
      children: []
    }]
  }, {
    id: "3-create-itwin-role",
    level: 2,
    title: "3. Create iTwin Role",
    children: []
  }, {
    id: "4-update-itwins-role-using-the-itwin-id-and-role-id",
    level: 2,
    title: "4. Update iTwins Role Using the iTwin Id and Role Id",
    children: []
  }, {
    id: "5-query-for-roles-using-the-itwin-id",
    level: 2,
    title: "5. Query for Roles using the iTwin Id",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var create_and_query_itwin_roles_guide_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/create-and-query-itwins-guide.mdx


var create_and_query_itwins_guide_excluded = ["components"];
var create_and_query_itwins_guide_jsx = (external_react_default()).createElement;


var create_and_query_itwins_guide_readingTime = {
  "text": "8 min read",
  "minutes": 7.55,
  "time": 453000,
  "words": 1510
};
/* @jsxRuntime classic */
/* @jsx mdx */

var create_and_query_itwins_guide_metadata = {
  title: 'Create & Query iTwins',
  tile: {
    name: 'Create & Query iTwins',
    description: 'This tutorial will guide you through the process of creating and querying iTwins',
    href: '/tutorials/create-and-query-itwins-guide',
    durationInMinutes: 20,
    relatedApiIds: ['itwins'],
    showInFirstSteps: false
  }
};
var create_and_query_itwins_guide_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var create_and_query_itwins_guide_Introduction = create_and_query_itwins_guide_makeShortcode("Introduction");
var create_and_query_itwins_guide_TutorialSection = create_and_query_itwins_guide_makeShortcode("TutorialSection");
var create_and_query_itwins_guide_LinkButton = create_and_query_itwins_guide_makeShortcode("LinkButton");
var create_and_query_itwins_guide_GoogleChromeIcon = create_and_query_itwins_guide_makeShortcode("GoogleChromeIcon");
var create_and_query_itwins_guide_VSCodeIcon = create_and_query_itwins_guide_makeShortcode("VSCodeIcon");
var create_and_query_itwins_guide_PostmanIcon = create_and_query_itwins_guide_makeShortcode("PostmanIcon");
var create_and_query_itwins_guide_CreateSampleAppButton = create_and_query_itwins_guide_makeShortcode("CreateSampleAppButton");
var create_and_query_itwins_guide_Alert = create_and_query_itwins_guide_makeShortcode("Alert");
var create_and_query_itwins_guide_Title = create_and_query_itwins_guide_makeShortcode("Title");
var create_and_query_itwins_guide_CodeBlock = create_and_query_itwins_guide_makeShortcode("CodeBlock");
var create_and_query_itwins_guide_ContinueLearningSection = create_and_query_itwins_guide_makeShortcode("ContinueLearningSection");
var create_and_query_itwins_guide_TileList = create_and_query_itwins_guide_makeShortcode("TileList");
var create_and_query_itwins_guide_ResourceTile = create_and_query_itwins_guide_makeShortcode("ResourceTile");
var create_and_query_itwins_guide_layoutProps = {
  metadata: create_and_query_itwins_guide_metadata
};
var create_and_query_itwins_guide_MDXLayout = "wrapper";
function create_and_query_itwins_guide_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, create_and_query_itwins_guide_excluded);
  return (0,react_.mdx)(create_and_query_itwins_guide_MDXLayout, (0,esm_extends/* default */.Z)({}, create_and_query_itwins_guide_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(create_and_query_itwins_guide_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "20",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial will take you through the process of creating and querying iTwins."), (0,react_.mdx)("p", null, "By the end of this walk-through, you will be able to utilize the API endpoints to create or query iTwins.")), (0,react_.mdx)(create_and_query_itwins_guide_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_itwins_guide_LinkButton, {
      href: "https://www.google.com/chrome/",
      target: "_blank",
      title: "Google Chrome",
      icon: (0,react_.mdx)(create_and_query_itwins_guide_GoogleChromeIcon, {
        mdxType: "GoogleChromeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(create_and_query_itwins_guide_LinkButton, {
      href: "https://code.visualstudio.com/",
      target: "_blank",
      title: "Visual Studio Code",
      icon: (0,react_.mdx)(create_and_query_itwins_guide_VSCodeIcon, {
        mdxType: "VSCodeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(create_and_query_itwins_guide_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(create_and_query_itwins_guide_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A tool, such as ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Postman"), " that can be used to execute HTTP calls. These calls can also be made using the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Try it out"), " button in the API documentation."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "If a user is affiliated with an Organization, the user must be an Organization Administrator to create an iTwin. An Organization Administrator\nmust have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0"
  }, "Licensing, Cloud, and Web Services"), " wiki page."))), (0,react_.mdx)(create_and_query_itwins_guide_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_itwins_guide_CreateSampleAppButton, {
      tooltip: "Register a basic SPA App for this tutorial",
      clientName: "Create and Query iTwins tutorial",
      scopes: ["iTwins:modify", "iTwins:read"],
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iTwins API"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwins:modify"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwins:read"), " scopes enabled."))), (0,react_.mdx)(create_and_query_itwins_guide_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "Before you can make a request to the APIs, a user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application."), (0,react_.mdx)(create_and_query_itwins_guide_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Here you can use Client ID generated from previous registration step."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-the-itwins-documentation-page"
  }, "Grab a user token from the iTwins documentation page"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/itwins/operations/get-my-itwins/"
  }, "here")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Try it out"), " button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Under the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " section, select ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "authorizationCode"), " from the dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After the sign in popup closes, the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " header with token value should be visible beneath the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "HTTP request"), " dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Copy & paste the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " value for this tutorial.")), (0,react_.mdx)(create_and_query_itwins_guide_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(create_and_query_itwins_guide_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_itwins_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_query_itwins_guide_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/itwins/ HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwins_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_query_itwins_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwins_guide_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(create_and_query_itwins_guide_CodeBlock, {
      language: "json",
      code: "{\n    \"class\": \"Endeavor\",\n    \"subClass\": \"Project\",\n    \"type\": \"Construction Project\",\n    \"number\": \"iTwin #\",\n    \"displayName\": \"my iTwin 2\",\n    \"dataCenterLocation\": \"East US\",\n    \"status\": \"Active\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwins_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_and_query_itwins_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\ncontent-length: 937\ncontent-type: application/json\ndate: Thu, 24 Jun 2021 14:44:18 GMT\nrequest-context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 5262b13f-394e-49b8-95ea-a5361d2513a3\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwins_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_query_itwins_guide_CodeBlock, {
      language: "json",
      code: "\n    {\n      \"iTwin\": {\n          \"id\": \"eb8ffd43-725c-4f9a-9cbd-3b38b4efe168\",\n          \"class\": \"Endeavor\",\n          \"subClass\": \"Project\",\n          \"type\": \"Construction Project\",\n          \"number\": \"ifdsafasdfa\",\n          \"displayName\": \"fasfdasdaf\",\n          \"dataCenterLocation\": \"East US\",\n          \"status\": \"Active\",\n          \"createdDateTime\": \"2022-06-09T17:26:11.13\",\n          \"createdBy\": \"56c58c0c-28a9-4cd2-b50b-102e33b657f2\"\n      }\n    }\n    ",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-create-a-new-itwin"
  }, "3. Create a new iTwin"), (0,react_.mdx)("p", null, "The iTwins API is used to create and manage iTwins. A POST call to the iTwins endpoint will create a new iTwin."), (0,react_.mdx)("p", null, "At minimum, ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "class"), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "subClass"), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), ", and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "number"), " are required for creating a new iTwin. The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "number"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), " properties must be unique. If you get a Conflict error then you will need to replace them with unique values. See the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/itwins/operations/create-itwin/"
  }, "iTwins API documentation"), " for descriptions of the different properties, including default values."), (0,react_.mdx)("p", null, "The POST call will return a new iTwin instance. The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " can be used to query for the iTwin. The iTwin Id is also used in many other iTwin APIs. You may want to save this Id to use in other tutorials.")), (0,react_.mdx)(create_and_query_itwins_guide_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_itwins_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_query_itwins_guide_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/itwins/083004cb-9cc1-4d1b-bc2a-d6329288200e HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwins_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_query_itwins_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwins_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_and_query_itwins_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\ncontent-length: 936\ncontent-type: application/json\ndate: Thu, 24 Jun 2021 18:10:04 GMT\nrequest-context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: fed95960-ea7c-43b5-a9af-66ab5353d073\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwins_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_query_itwins_guide_CodeBlock, {
      language: "json",
      code: "{\n    \"iTwin\": {\n        \"id\": \"da5be678-7404-4885-a622-eebf0ab29390\",\n        \"class\": \"Endeavor\",\n        \"subClass\": \"Project\",\n        \"type\": null,\n        \"number\": \"Test35353535\",\n        \"displayName\": \"Test\",\n        \"dataCenterLocation\": \"East US\",\n        \"status\": \"Active\",\n        \"createdDateTime\": \"2015-11-05T19:10:42.9712696\",\n        \"createdBy\": null\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-query-for-an-itwin-using-the-itwin-id"
  }, "4. Query for an iTwin Using the iTwin Id"), (0,react_.mdx)("p", null, "The iTwin id can be used to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/itwins/operations/get-itwin/"
  }, "query for a specific iTwin"), "."), (0,react_.mdx)("p", null, "The iTwin will only be returned if you are an Organization Administrator or if you have been added as a member of the iTwin with any role. Only a single iTwin will be returned.")), (0,react_.mdx)(create_and_query_itwins_guide_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_itwins_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_query_itwins_guide_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/itwins/?number=PWCSDemoTest1 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwins_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_query_itwins_guide_CodeBlock, {
      language: "http",
      code: "Prefer: return=representation\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwins_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_and_query_itwins_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\ncache-control: must-revalidate, no-cache, private\ncontent-encoding: gzip\ncontent-type: application/json\ndate: Thu, 24 Jun 2021 18:20:43 GMT\nrequest-context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: dd4d68c9-614d-4d67-8e51-7147c18513f8\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwins_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_query_itwins_guide_CodeBlock, {
      language: "json",
      code: "{\n    \"iTwins\": [{\n        \"id\": \"daf96c16-fb0a-4f94-90c5-667742cf35be\",\n        \"class\": \"Endeavor\",\n        \"subClass\": \"Project\",\n        \"type\": null,\n        \"number\": \"PWCSDemoTest1\",\n        \"displayName\": \"PWCSDemoTest1\",\n        \"dataCenterLocation\": \"East US\",\n        \"status\": \"Active\",\n        \"createdDateTime\": \"2016-01-27T11:44:06.2602325\",\n        \"createdBy\": null\n    }],\n    \"_links\": {\n        \"self\": {\n            \"href\": \" https://api.bentley.com/itwins/?$skip=0&$top=100&subClass=Project&number=PWCSDemoTest1\"\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-query-for-itwins-using-number"
  }, "5. Query for iTwins Using Number"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "number"), " query parameter can be used to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/itwins/operations/my-itwins/"
  }, "find an iTwin"), ". Because this is a query, the response will be a list of iTwins that will usually contain one element. The number is unique for iTwins created in your organization. However, it is possible that you are a member of an iTwin in another organization that has the same number."), (0,react_.mdx)("p", null, "The api will only return iTwins that you are able to access. If you expect it to return a specific iTwin and it does not then you may not have access to that iTwin.")), (0,react_.mdx)(create_and_query_itwins_guide_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_itwins_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_query_itwins_guide_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/itwins/?$search=Tutorial HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwins_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_query_itwins_guide_CodeBlock, {
      language: "http",
      code: "Prefer: return=minimal\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwins_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_and_query_itwins_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\ncache-control: must-revalidate, no-cache, private\ncontent-encoding: gzip\ncontent-type: application/json\ndate: Thu, 24 Jun 2021 18:40:47 GMT\nrequest-context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 86bc760f-d0c4-4292-b72d-97a078ce1c7a\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_itwins_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_query_itwins_guide_CodeBlock, {
      language: "json",
      code: "{\n    \"iTwins\": [{\n        \"id\": \"083004cb-9cc1-4d1b-bc2a-d6329288200e\",\n        \"class\": \"Endeavor\",\n        \"subClass\": \"Project\",\n        \"type\": null,\n        \"number\": \"Tutorial Project 123\",\n        \"displayName\": \"Tutorial Sample Project\",\n        \"dataCenterLocation\": \"East US\",\n        \"status\": \"Active\",\n        \"createdDateTime\": \"2021-06-24T14:44:19.33\",\n        \"createdBy\": \"d27f4f7a-cf24-41fa-8044-c17eaaaccfb5\"\n    }, {\n        \"id\": \"0ed7a661-4b7f-44ce-b6c3-f0064bb14c70\",\n        \"class\": \"Endeavor\",\n        \"subClass\": \"Project\",\n        \"type\": null,\n        \"number\": \"Project A\",\n        \"displayName\": \"A Tutorial Project\",\n        \"dataCenterLocation\": \"East US\",\n        \"status\": \"Active\",\n        \"createdDateTime\": \"2021-06-24T18:48:34.127\",\n        \"createdBy\": \"d27f4f7a-cf24-41fa-8044-c17eaaaccfb5\"\n    }, {\n        \"id\": \"bc29f384-bd93-48c9-ae6c-08cb36b40fb0\",\n        \"class\": \"Endeavor\",\n        \"subClass\": \"Project\",\n        \"type\": null,\n        \"number\": \"tutorial A\",\n        \"displayName\": \"A Sample Project\",\n        \"dataCenterLocation\": \"East US\",\n        \"status\": \"Active\",\n        \"createdDateTime\": \"2021-06-24T18:49:50.287\",\n        \"createdBy\": \"d27f4f7a-cf24-41fa-8044-c17eaaaccfb5\"\n    }],\n    \"_links\": {\n        \"self\": {\n            \"href\": \" https://api.bentley.com/itwins/?$skip=0&$top=100&subClass=Project&$search=Tutorial\"\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-query-for-itwin-using-the-number-or-name-wildcard"
  }, "6. Query for iTwin Using the Number or Name (wildcard)"), (0,react_.mdx)("p", null, "The $search query parameter can be used to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/itwins/operations/my-itwins/"
  }, "find an iTwin"), " using a query string that will search using the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "number"), " or ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), ". This example will find all iTwins with \u201CTutorial\u201D in the number or displayName. The query is case sensitive and you should not add wildcard characters to the query string. This example is the SQL equivalent of number like \u201C%Tutorial%\u201D OR displayName like '%Tutorial%\u2019."), (0,react_.mdx)("p", null, "Because this is a query, the response will be a list that could contain many iTwins. Notice that this example is using the prefer header to indicate that only the minimal representation of the iTwins should be returned. This should be used whenever possible to improve performance and reduce the size of the response payload."), (0,react_.mdx)("p", null, "The api will only return iTwins that you are able to access. If you expect it to return a specific set of iTwins and it does not, you may not have access to those iTwins.")), (0,react_.mdx)(create_and_query_itwins_guide_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(create_and_query_itwins_guide_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(create_and_query_itwins_guide_ResourceTile, {
    title: "iTwin Sample App",
    href: "https://github.com/itwin/itwin-api-sample-app",
    description: "Sample application that uses the iTwins API to create, update and query for iTwins.",
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(create_and_query_itwins_guide_ResourceTile, {
    title: "Manage User Members on iTwins Guide",
    href: "/tutorials/manage-user-members-on-itwins-guide",
    description: "Tutorial for managing user members on your iTwins.",
    isExternal: false,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(create_and_query_itwins_guide_ResourceTile, {
    title: "Manage Group Members on iTwins Guide",
    href: "/tutorials/manage-group-members-on-itwins-guide",
    description: "Tutorial for managing group members on your iTwins.",
    isExternal: false,
    mdxType: "ResourceTile"
  }))));
}
;
create_and_query_itwins_guide_MDXContent.isMDXComponent = true;
var create_and_query_itwins_guide_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-the-itwins-documentation-page",
      level: 3,
      title: "Grab a user token from the iTwins documentation page",
      children: []
    }]
  }, {
    id: "3-create-a-new-itwin",
    level: 2,
    title: "3. Create a new iTwin",
    children: []
  }, {
    id: "4-query-for-an-itwin-using-the-itwin-id",
    level: 2,
    title: "4. Query for an iTwin Using the iTwin Id",
    children: []
  }, {
    id: "5-query-for-itwins-using-number",
    level: 2,
    title: "5. Query for iTwins Using Number",
    children: []
  }, {
    id: "6-query-for-itwin-using-the-number-or-name-wildcard",
    level: 2,
    title: "6. Query for iTwin Using the Number or Name (wildcard)",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var create_and_query_itwins_guide_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/create-and-query-projects-guide.mdx


var create_and_query_projects_guide_excluded = ["components"];
var create_and_query_projects_guide_jsx = (external_react_default()).createElement;


var create_and_query_projects_guide_readingTime = {
  "text": "8 min read",
  "minutes": 7.535,
  "time": 452100,
  "words": 1507
};
/* @jsxRuntime classic */
/* @jsx mdx */

var create_and_query_projects_guide_metadata = {
  title: 'Create & Query Projects',
  tile: {
    name: 'Create & Query Projects',
    description: 'This tutorial will guide you through the process of creating and querying projects',
    href: '/tutorials/create-and-query-projects-guide',
    durationInMinutes: 20,
    relatedApiIds: ['projects'],
    showInFirstSteps: false,
    firstStepsSequenceNumber: 3
  }
};
var create_and_query_projects_guide_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var create_and_query_projects_guide_Introduction = create_and_query_projects_guide_makeShortcode("Introduction");
var create_and_query_projects_guide_TutorialSection = create_and_query_projects_guide_makeShortcode("TutorialSection");
var create_and_query_projects_guide_LinkButton = create_and_query_projects_guide_makeShortcode("LinkButton");
var create_and_query_projects_guide_GoogleChromeIcon = create_and_query_projects_guide_makeShortcode("GoogleChromeIcon");
var create_and_query_projects_guide_VSCodeIcon = create_and_query_projects_guide_makeShortcode("VSCodeIcon");
var create_and_query_projects_guide_PostmanIcon = create_and_query_projects_guide_makeShortcode("PostmanIcon");
var create_and_query_projects_guide_CreateSampleAppButton = create_and_query_projects_guide_makeShortcode("CreateSampleAppButton");
var create_and_query_projects_guide_Alert = create_and_query_projects_guide_makeShortcode("Alert");
var create_and_query_projects_guide_Title = create_and_query_projects_guide_makeShortcode("Title");
var create_and_query_projects_guide_CodeBlock = create_and_query_projects_guide_makeShortcode("CodeBlock");
var create_and_query_projects_guide_ContinueLearningSection = create_and_query_projects_guide_makeShortcode("ContinueLearningSection");
var create_and_query_projects_guide_TileList = create_and_query_projects_guide_makeShortcode("TileList");
var create_and_query_projects_guide_Tile = create_and_query_projects_guide_makeShortcode("Tile");
var create_and_query_projects_guide_ResourceTile = create_and_query_projects_guide_makeShortcode("ResourceTile");
var create_and_query_projects_guide_layoutProps = {
  metadata: create_and_query_projects_guide_metadata
};
var create_and_query_projects_guide_MDXLayout = "wrapper";
function create_and_query_projects_guide_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, create_and_query_projects_guide_excluded);
  return (0,react_.mdx)(create_and_query_projects_guide_MDXLayout, (0,esm_extends/* default */.Z)({}, create_and_query_projects_guide_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(create_and_query_projects_guide_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "20",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial will take you through the process of creating and querying for an iTwin Project."), (0,react_.mdx)("p", null, "By the end of this walk-through, you will be able to utilize the API endpoints in order to create or query projects.")), (0,react_.mdx)(create_and_query_projects_guide_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_projects_guide_LinkButton, {
      href: "https://www.google.com/chrome/",
      target: "_blank",
      title: "Google Chrome",
      icon: (0,react_.mdx)(create_and_query_projects_guide_GoogleChromeIcon, {
        mdxType: "GoogleChromeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(create_and_query_projects_guide_LinkButton, {
      href: "https://code.visualstudio.com/",
      target: "_blank",
      title: "Visual Studio Code",
      icon: (0,react_.mdx)(create_and_query_projects_guide_VSCodeIcon, {
        mdxType: "VSCodeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(create_and_query_projects_guide_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(create_and_query_projects_guide_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A tool such as ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Postman"), " that can be used to execute http calls. These calls can also be made using the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Try it out"), " button in the API documentation."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "If a user is affiliated with an Organization, then the user must be an Organization Administrator in order to create a project. An Organization Administrator\nmust have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0"
  }, "Licensing, Cloud, and Web Services"), " wiki page."))), (0,react_.mdx)(create_and_query_projects_guide_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_projects_guide_CreateSampleAppButton, {
      tooltip: "Register a basic SPA App for this tutorial",
      clientName: "Create and Query Projects tutorial",
      scopes: ["projects:modify", "projects:read"],
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Projects API"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "projects:modify projects:read"), " scopes enabled."))), (0,react_.mdx)(create_and_query_projects_guide_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "Before you can make a request to the APIs, a user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)(create_and_query_projects_guide_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Here you can use Client ID generated from previous registration step."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-api-reference-try-it-section"
  }, "Grab a user token from Api reference \u201CTry it\u201D Section"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/projects/operations/get-project-team-members/"
  }, "here")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Try it"), " button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Under the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " section, select ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "authorizationCode"), " from the dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After the sign in popup closes, the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " header with token value should be visible beneath the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "HTTP request"), " dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Copy & paste the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " value for this tutorial.")), (0,react_.mdx)(create_and_query_projects_guide_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(create_and_query_projects_guide_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_projects_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_query_projects_guide_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/projects/ HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_projects_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_query_projects_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_projects_guide_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(create_and_query_projects_guide_CodeBlock, {
      language: "json",
      code: "{\n  \"displayName\":\"Tutorial Sample Project\",\n  \"projectNumber\":\"Tutorial Project 123\",\n  \"geographicLocation\":\"Exton, PA, USA\",\n  \"latitude\":\"40.032970\",\n  \"longitude\":\"-75.631538\",\n  \"timeZone\":\"Eastern Standard Time\",\n  \"billingCountry\":\"US\",\n  \"allowExternalTeamMembers\":true\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_projects_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_and_query_projects_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\ncontent-length: 937\ncontent-type: application/json\ndate: Thu, 24 Jun 2021 14:44:18 GMT\nrequest-context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 5262b13f-394e-49b8-95ea-a5361d2513a3\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_projects_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_query_projects_guide_CodeBlock, {
      language: "json",
      code: "{\n  \"Project\":{\n    \"id\":\"083004cb-9cc1-4d1b-bc2a-d6329288200e\",\n    \"displayName\":\"Tutorial Sample Project\",\n    \"projectNumber\":\"Tutorial Project 123\",\n    \"registrationDateTime\":\"2021-06-24T14:44:19.3300000\",\n    \"registeredBy\":\"d27f4f7a-cf24-41fa-8044-c17eaaaccfb5\",\n    \"geographicLocation\":\"Exton, PA, USA\",\n    \"latitude\":\"40.032970\",\n    \"longitude\":\"-75.631538\",\n    \"timeZone\":\"Eastern Standard Time\",\n    \"dataCenterLocation\":\"East US\",\n    \"billingCountry\":\"US\",\n    \"status\":\"active\",\n    \"allowExternalTeamMembers\":true,\n    \"_links\":{\n      \"storage\":{\n        \"href\":\"https://api.bentley.com/storage/folders/ywQwCMGcG028KtYykoggDssEMAjBnBtNvCrWMpKIIA4\"\n      },\n      \"forms\":{\n        \"href\":\"https://api.bentley.com/forms?projectId=083004cb-9cc1-4d1b-bc2a-d6329288200e\"\n      },\n      \"issues\":{\n        \"href\":\"https://api.bentley.com/issues?projectId=083004cb-9cc1-4d1b-bc2a-d6329288200e\"\n      },\n      \"imodels\":{\n        \"href\":\"https://api.bentley.com/imodels?projectId=083004cb-9cc1-4d1b-bc2a-d6329288200e\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-create-a-new-itwin-project"
  }, "3. Create a new iTwin Project"), (0,react_.mdx)("p", null, "The Projects API is used to create and manage projects. A POST call to the projects endpoint will create a new project."), (0,react_.mdx)("p", null, "Only ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "projectNumber"), " are required for creating a new project. They must be unique so if you get a Conflict error then you will need to replace them with unique values. See the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/projects/operations/create-project/"
  }, "Projects API documentation"), " for descriptions of the different properties, including default values. For this example, we will set allowExternalTeamMembers to true. This will allow us to add any user to the project, even users that are not part of our organization."), (0,react_.mdx)("p", null, "The POST call will return a new project instance. The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " can be used to query for the project. The project Id is also used in many other iTwin APIs. You may want to save this Id to use in other tutorials.")), (0,react_.mdx)(create_and_query_projects_guide_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_projects_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_query_projects_guide_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/projects/083004cb-9cc1-4d1b-bc2a-d6329288200e HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_projects_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_query_projects_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_projects_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_and_query_projects_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\ncontent-length: 936\ncontent-type: application/json\ndate: Thu, 24 Jun 2021 18:10:04 GMT\nrequest-context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: fed95960-ea7c-43b5-a9af-66ab5353d073\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_projects_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_query_projects_guide_CodeBlock, {
      language: "json",
      code: "{\n  \"Project\":{\n    \"id\":\"083004cb-9cc1-4d1b-bc2a-d6329288200e\",\n    \"displayName\":\"Tutorial Sample Project\",\n    \"projectNumber\":\"Tutorial Project 123\",\n    \"registrationDateTime\":\"2021-06-24T14:44:19.3300000\",\n    \"registeredBy\":\"d27f4f7a-cf24-41fa-8044-c17eaaaccfb5\",\n    \"geographicLocation\":\"Exton, PA, USA\",\n    \"latitude\":\"40.032970\",\n    \"longitude\":\"-75.631538\",\n    \"timeZone\":\"Eastern Standard Time\",\n    \"dataCenterLocation\":\"East US\",\n    \"billingCountry\":\"US\",\n    \"status\":\"active\",\n    \"allowExternalTeamMembers\":true,\n    \"_links\":{\n      \"storage\":{\n        \"href\":\"https://api.bentley.com/storage/folders/ywQwCMGcG028KtYykoggDssEMAjBnBtNvCrWMpKIIA4\"\n      },\n      \"forms\":{\n        \"href\":\"https://api.bentley.com/forms?projectId=083004cb-9cc1-4d1b-bc2a-d6329288200e\"\n      },\n      \"issues\":{\n        \"href\":\"https://api.bentley.com/issues?projectId=083004cb-9cc1-4d1b-bc2a-d6329288200e\"\n      },\n      \"imodels\":{\n        \"href\":\"https://api.bentley.com/imodels?projectId=083004cb-9cc1-4d1b-bc2a-d6329288200e\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-query-for-an-itwin-project-using-the-project-id"
  }, "4. Query for an iTwin Project Using the Project Id"), (0,react_.mdx)("p", null, "The project id can be used to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/projects/operations/get-project/"
  }, "query for a specific project"), "."), (0,react_.mdx)("p", null, "The project will only be returned if you are an Organization Administrator or if you have been added as a member of the project with any role. Only a single project will be returned.")), (0,react_.mdx)(create_and_query_projects_guide_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_projects_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_query_projects_guide_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/projects/?projectNumber=Tutorial%20Project%20123 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_projects_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_query_projects_guide_CodeBlock, {
      language: "http",
      code: "Prefer: return=representation\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_projects_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_and_query_projects_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK \ncache-control: must-revalidate, no-cache, private\ncontent-encoding: gzip\ncontent-type: application/json\ndate: Thu, 24 Jun 2021 18:20:43 GMT\nrequest-context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: dd4d68c9-614d-4d67-8e51-7147c18513f8\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_projects_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_query_projects_guide_CodeBlock, {
      language: "json",
      code: "{\n  \"Projects\":[\n    {\n      \"id\":\"083004cb-9cc1-4d1b-bc2a-d6329288200e\",\n      \"displayName\":\"Tutorial Sample Project\",\n      \"projectNumber\":\"Tutorial Project 123\",\n      \"registrationDateTime\":\"2021-06-24T14:44:19.3300000\",\n      \"registeredBy\":\"d27f4f7a-cf24-41fa-8044-c17eaaaccfb5\",\n      \"geographicLocation\":\"Exton, PA, USA\",\n      \"latitude\":\"40.032970\",\n      \"longitude\":\"-75.631538\",\n      \"timeZone\":\"Eastern Standard Time\",\n      \"dataCenterLocation\":\"East US\",\n      \"billingCountry\":\"US\",\n      \"status\":\"active\",\n      \"allowExternalTeamMembers\":true,\n      \"_links\":{\n        \"storage\":{\n          \"href\":\"https://api.bentley.com/storage/folders/ywQwCMGcG028KtYykoggDssEMAjBnBtNvCrWMpKIIA4\"\n        },\n        \"forms\":{\n          \"href\":\"https://api.bentley.com/forms?projectId=083004cb-9cc1-4d1b-bc2a-d6329288200e\"\n        },\n        \"issues\":{\n          \"href\":\"https://api.bentley.com/issues?projectId=083004cb-9cc1-4d1b-bc2a-d6329288200e\"\n        },\n        \"imodels\":{\n          \"href\":\"https://api.bentley.com/imodels?projectId=083004cb-9cc1-4d1b-bc2a-d6329288200e\"\n        }\n      }\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://api.bentley.com/projects/?$skip=0&$top=100\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-query-for-an-itwin-projects-using-the-project-number"
  }, "5. Query for an iTwin Projects Using the Project Number"), (0,react_.mdx)("p", null, "The projectNumber query parameter can be used to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/projects/operations/my-projects/"
  }, "find a project"), " using the projectNumber. Because this is a query, the response will be a list of projects that will usually contain one element. The projectNumber is unique for projects created in your organization. However, it is possible that you are a member of a project in another organization that has the same projectNumber."), (0,react_.mdx)("p", null, "The api will only return projects that you are able to access. If you expect it to return a specific project and it does not then you may not have access to that project.")), (0,react_.mdx)(create_and_query_projects_guide_TutorialSection, {
    actions: [(0,react_.mdx)(create_and_query_projects_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_and_query_projects_guide_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/projects/?$search=Tutorial HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_projects_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_and_query_projects_guide_CodeBlock, {
      language: "http",
      code: "Prefer: return=minimal\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_projects_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_and_query_projects_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK \ncache-control: must-revalidate, no-cache, private\ncontent-encoding: gzip\ncontent-type: application/json\ndate: Thu, 24 Jun 2021 18:40:47 GMT\nrequest-context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 86bc760f-d0c4-4292-b72d-97a078ce1c7a\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_and_query_projects_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_and_query_projects_guide_CodeBlock, {
      language: "json",
      code: "{\n  \"Projects\":[\n    {\n      \"id\":\"083004cb-9cc1-4d1b-bc2a-d6329288200e\",\n      \"displayName\":\"Tutorial Sample Project\",\n      \"projectNumber\":\"Tutorial Project 123\"\n    },\n    {\n      \"id\":\"0ed7a661-4b7f-44ce-b6c3-f0064bb14c70\",\n      \"displayName\":\"A Tutorial Project\",\n      \"projectNumber\":\"Project A\"\n    },\n    {\n      \"id\":\"bc29f384-bd93-48c9-ae6c-08cb36b40fb0\",\n      \"displayName\":\"A Sample Project\",\n      \"projectNumber\":\"tutorial A\"\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://api.bentley.com/projects/?$skip=0&$top=100\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-query-for-an-itwin-projects-using-the-project-number-or-name-wildcard"
  }, "6. Query for an iTwin Projects Using the Project Number or Name (wildcard)"), (0,react_.mdx)("p", null, "The $search query parameter can be used to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/projects/operations/my-projects/"
  }, "find a project"), " using a query string that will search using the projectNumber or displayName. This example will find all projects with \u201CTutorial\u201D in the projectNumber or displayName. The query is case sensitive and you should not add wildcard characters to the query string. This example is the SQL equivalent of projectNumber like \u201C%Tutorial%\u201D OR displayName like '%Tutorial%\u2019."), (0,react_.mdx)("p", null, "Because this is a query, the response will be a list that could contain many projects. Notice that this example is using the prefer header to indicate that only the minimal representation of the projects should be returned. This should be used whenever possible to improve performance and reduce the size of the response payload."), (0,react_.mdx)("p", null, "The api will only return projects that you are able to access. If you expect it to return a specific project and it does not then you may not have access to that project.")), (0,react_.mdx)(create_and_query_projects_guide_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)(create_and_query_projects_guide_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(create_and_query_projects_guide_Tile, {
    name: "Manage Project Team Members Guide",
    description: "Guide on Creating/retrieving team members as well as adding roles/permissions.",
    href: "/tutorials/manage-project-team-members-guide/",
    mdxType: "Tile"
  })), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(create_and_query_projects_guide_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(create_and_query_projects_guide_ResourceTile, {
    title: "iTwin Project Sample App",
    href: "https://github.com/iTwin/iTwin-project-sample-app",
    description: "Sample application that uses the Projects API to create, update and query for projects.",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
create_and_query_projects_guide_MDXContent.isMDXComponent = true;
var create_and_query_projects_guide_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-api-reference-try-it-section",
      level: 3,
      title: "Grab a user token from Api reference “Try it” Section",
      children: []
    }]
  }, {
    id: "3-create-a-new-itwin-project",
    level: 2,
    title: "3. Create a new iTwin Project",
    children: []
  }, {
    id: "4-query-for-an-itwin-project-using-the-project-id",
    level: 2,
    title: "4. Query for an iTwin Project Using the Project Id",
    children: []
  }, {
    id: "5-query-for-an-itwin-projects-using-the-project-number",
    level: 2,
    title: "5. Query for an iTwin Projects Using the Project Number",
    children: []
  }, {
    id: "6-query-for-an-itwin-projects-using-the-project-number-or-name-wildcard",
    level: 2,
    title: "6. Query for an iTwin Projects Using the Project Number or Name (wildcard)",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var create_and_query_projects_guide_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/create-application-with-reports-config-widget.mdx


var create_application_with_reports_config_widget_excluded = ["components"];
var create_application_with_reports_config_widget_jsx = (external_react_default()).createElement;


var create_application_with_reports_config_widget_readingTime = {
  "text": "3 min read",
  "minutes": 2.34,
  "time": 140400,
  "words": 468
};
/* @jsxRuntime classic */
/* @jsx mdx */

var create_application_with_reports_config_widget_metadata = {
  title: 'Create application with Reports Config Widget',
  tile: {
    name: 'Create application with Reports Config Widget',
    description: 'This tutorial will guide you through the process of creating an application with the Reports Config Widget.',
    href: '/tutorials/create-application-with-reports-config-widget',
    durationInMinutes: 10,
    relatedApiIds: ['insights', 'insights/reporting'],
    showInFirstSteps: false
  }
};
var create_application_with_reports_config_widget_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var create_application_with_reports_config_widget_Introduction = create_application_with_reports_config_widget_makeShortcode("Introduction");
var create_application_with_reports_config_widget_TutorialSection = create_application_with_reports_config_widget_makeShortcode("TutorialSection");
var create_application_with_reports_config_widget_ActionLinkButton = create_application_with_reports_config_widget_makeShortcode("ActionLinkButton");
var create_application_with_reports_config_widget_CodeBlock = create_application_with_reports_config_widget_makeShortcode("CodeBlock");
var create_application_with_reports_config_widget_ContinueLearningSection = create_application_with_reports_config_widget_makeShortcode("ContinueLearningSection");
var create_application_with_reports_config_widget_TileList = create_application_with_reports_config_widget_makeShortcode("TileList");
var create_application_with_reports_config_widget_ResourceTile = create_application_with_reports_config_widget_makeShortcode("ResourceTile");
var create_application_with_reports_config_widget_layoutProps = {
  metadata: create_application_with_reports_config_widget_metadata
};
var create_application_with_reports_config_widget_MDXLayout = "wrapper";
function create_application_with_reports_config_widget_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, create_application_with_reports_config_widget_excluded);
  return (0,react_.mdx)(create_application_with_reports_config_widget_MDXLayout, (0,esm_extends/* default */.Z)({}, create_application_with_reports_config_widget_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(create_application_with_reports_config_widget_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "10",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.npmjs.com/package/@itwin/reports-config-widget-react"
  }, "Reports Config widget"), " is a UI that simplifies the creation, modification, and extraction of Reports within the Reporting Platform.\nThis tutorial will guide you through some basic steps and provide references to set up a viewer application for Reports Config Widget."), (0,react_.mdx)("p", null, "By the end of this walk-through, you will be able to have an iTwin viewer with quick access to all your reports.")), (0,react_.mdx)(create_application_with_reports_config_widget_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(create_application_with_reports_config_widget_ActionLinkButton, {
      href: "/tutorials/web-application-quick-start",
      target: "_blank",
      title: "iTwin Web Viewer Quick Start Instructions",
      buttonText: "Go",
      mdxType: "ActionLinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisite"
  }, "Prerequisite"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Your own local source for the iTwin Web Viewer. Please refer to the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/web-application-quick-start"
  }, "quick start instructions"), "."))), (0,react_.mdx)(create_application_with_reports_config_widget_TutorialSection, {
    actions: [(0,react_.mdx)(create_application_with_reports_config_widget_CodeBlock, {
      language: "plaintext",
      code: "insights:read insights:modify projects:read",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "permissions-and-scopes"
  }, "Permissions and Scopes"), (0,react_.mdx)("p", null, "The SPA client used by your iTwin viewer must have these additional scopes:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "insights:read")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "insights:modify")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "projects:read"))), (0,react_.mdx)("p", null, "Do not forget to put these values within the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " environment variable."), (0,react_.mdx)("p", null, "In addition, users must have the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "imodels_read"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "imodels_write"), " ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/insights/operations/create-mapping/#authorization"
  }, "permissions"), " assigned at either the Project or iModel level. Further instruction on how to create roles and assign permissions can be found in the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/projects/tutorials/"
  }, "iTwin Platform Projects API documentation"), ".")), (0,react_.mdx)(create_application_with_reports_config_widget_TutorialSection, {
    actions: [(0,react_.mdx)(create_application_with_reports_config_widget_CodeBlock, {
      language: "jsx",
      code: "useEffect(() => {\n  ReportsConfigWidget.initialize(IModelApp.localization);\n})\n \n<Viewer\n  iTwinId={iTwinId}\n  iModelId={iModelId}\n  authClient={authClient}\n  viewCreatorOptions={viewCreatorOptions}\n  enablePerformanceMonitors={true}\n  uiProviders={[new ReportsConfigProvider()]}\n/>\n",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "adding-the-reports-config-widget"
  }, "Adding the Reports Config Widget"), (0,react_.mdx)("p", null, "The first step required by the widget is to initialize it before making use of the provider. This will initialize the widget\u2019s localization."), (0,react_.mdx)("p", null, "Next, you must add the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ReportsConfigProvider"), " to the list of ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "uiProviders"), " within the viewer component.\nMore details on adding ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "uiProviders"), " can be shown in this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/itwin-viewer-hello-world/#2-your-first-ui-widget"
  }, "tutorial"), "."), (0,react_.mdx)("p", null, "Congratulations, you should now have the Reports Config widget within your iTwin Viewer application.")), (0,react_.mdx)(create_application_with_reports_config_widget_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(create_application_with_reports_config_widget_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(create_application_with_reports_config_widget_ResourceTile, {
    title: "Creating an Insights Report using iModel Data",
    href: "/tutorials/creating-an-insights-report-using-imodel-data/",
    description: "A guide on how to create the grouping and mapping required by your reports.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(create_application_with_reports_config_widget_ResourceTile, {
    title: "Reporting API Documentation",
    href: "/apis/insights/",
    description: "This is the official documentation of Reporting API.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(create_application_with_reports_config_widget_ResourceTile, {
    title: "Create a test iModel from a Bentley provided sample",
    href: "/tutorials/create-test-imodel-sample",
    description: "The quickest way to get access to a cloud hosted iModel is by creating an iModel seeded with Bentley provided sample data.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(create_application_with_reports_config_widget_ResourceTile, {
    title: "Sample House Model",
    href: "/tutorials/create-test-imodel-sample/#house-sample",
    description: "Bentley provided sample of a House for test iModel creation.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(create_application_with_reports_config_widget_ResourceTile, {
    title: "UI Provider",
    href: "https://www.itwinjs.org/reference/ui-abstract/uiitemsprovider/uiitemsprovider/",
    description: "Describes interface of objects that want to provide UI component to the running IModelApp.",
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(create_application_with_reports_config_widget_ResourceTile, {
    title: "IModelApp",
    href: "https://www.itwinjs.org/reference/imodeljs-frontend/imodelapp/imodelapp/",
    description: "Global singleton that connects the user interface with the iTwin.js services.",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
create_application_with_reports_config_widget_MDXContent.isMDXComponent = true;
var create_application_with_reports_config_widget_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisite",
    level: 2,
    title: "Prerequisite",
    children: []
  }, {
    id: "permissions-and-scopes",
    level: 2,
    title: "Permissions and Scopes",
    children: []
  }, {
    id: "adding-the-reports-config-widget",
    level: 2,
    title: "Adding the Reports Config Widget",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var create_application_with_reports_config_widget_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/create-empty-imodel.mdx


var create_empty_imodel_excluded = ["components"];
var create_empty_imodel_jsx = (external_react_default()).createElement;


var create_empty_imodel_readingTime = {
  "text": "5 min read",
  "minutes": 4.805,
  "time": 288300,
  "words": 961
};
/* @jsxRuntime classic */
/* @jsx mdx */

var create_empty_imodel_metadata = {
  title: 'Create an empty iModel',
  tile: {
    name: 'Create an empty iModel',
    description: 'Walk-through how to create an empty iModel which later can be used for synchronization.',
    href: '/tutorials/create-empty-imodel/',
    durationInMinutes: 5,
    relatedApiIds: ['imodels']
  }
};
var create_empty_imodel_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var create_empty_imodel_Introduction = create_empty_imodel_makeShortcode("Introduction");
var create_empty_imodel_TutorialSection = create_empty_imodel_makeShortcode("TutorialSection");
var create_empty_imodel_CreateSampleAppButton = create_empty_imodel_makeShortcode("CreateSampleAppButton");
var create_empty_imodel_Alert = create_empty_imodel_makeShortcode("Alert");
var create_empty_imodel_Title = create_empty_imodel_makeShortcode("Title");
var create_empty_imodel_CodeBlock = create_empty_imodel_makeShortcode("CodeBlock");
var create_empty_imodel_ContinueLearningSection = create_empty_imodel_makeShortcode("ContinueLearningSection");
var create_empty_imodel_TileList = create_empty_imodel_makeShortcode("TileList");
var create_empty_imodel_Tile = create_empty_imodel_makeShortcode("Tile");
var create_empty_imodel_ResourceTile = create_empty_imodel_makeShortcode("ResourceTile");
var create_empty_imodel_layoutProps = {
  metadata: create_empty_imodel_metadata
};
var create_empty_imodel_MDXLayout = "wrapper";
function create_empty_imodel_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, create_empty_imodel_excluded);
  return (0,react_.mdx)(create_empty_imodel_MDXLayout, (0,esm_extends/* default */.Z)({}, create_empty_imodel_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(create_empty_imodel_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "5",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This quick start is intended to help you understand what an iModel is and how to leverage iTwin Platform iModels API for managing it."), (0,react_.mdx)("p", null, "By the end of this walk-through, you will be able to create an empty iModel using iModels API which later on can be used as a destination iModel for your synchronization workflow.")), (0,react_.mdx)(create_empty_imodel_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Project created and configured. Instructions on how to create a project can be found ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-and-query-projects-guide"
  }, "here"), "."))), (0,react_.mdx)(create_empty_imodel_TutorialSection, {
    actions: [(0,react_.mdx)(create_empty_imodel_CreateSampleAppButton, {
      scopes: ['realitydata:read', 'imodels:read', 'imodels:modify', 'library:read', 'storage:read', 'storage:modify'],
      clientName: "Create empty iModel tutorial",
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iModels"), ", ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Library"), ", ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "RealityData"), " and ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Storage"), " APIs and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "realitydata:read imodels:read imodels:modify library:read storage:read storage:modify"), " scopes enabled."))), (0,react_.mdx)(create_empty_imodel_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "To make request to API user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application."), (0,react_.mdx)(create_empty_imodel_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Here you can use Client ID generated from previous registration step."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-api-reference-try-it-section"
  }, "Grab a user token from Api reference \u201CTry it\u201D Section"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go to ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/synchronization/operations/create-storage-connection/"
  }, "Create Storage Connection")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click \u201CTry it\u201D button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "On Authorization section select \u201CAuthorizationCode\u201D."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After popup closes Authorization header with your user token value should be visible."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Save user token value for this tutorial.")), (0,react_.mdx)(create_empty_imodel_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(create_empty_imodel_TutorialSection, {
    actions: [(0,react_.mdx)(create_empty_imodel_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_empty_imodel_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/imodels HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_empty_imodel_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_empty_imodel_CodeBlock, {
      language: "http",
      code: "Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_empty_imodel_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(create_empty_imodel_CodeBlock, {
      language: "json",
      code: "{\n  \"projectId\":\"PROJECT_ID\",\n  \"name\":\"Sun City Renewable-energy Plant\",\n  \"description\":\"Overall model of solar farms in Sun City\",\n  \"extent\":{\n    \"southWest\":{\n      \"latitude\":46.13267702834806,\n      \"longitude\":7.672120009938448\n    },\n    \"northEast\":{\n      \"latitude\":46.302763954781234,\n      \"longitude\":7.835541640797823\n    }\n  }\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_empty_imodel_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_empty_imodel_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json\nLocation: https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_empty_imodel_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_empty_imodel_CodeBlock, {
      language: "json",
      code: "{\n  \"iModel\":{\n    \"id\":\"5e19bee0-3aea-4355-a9f0-c6df9989ee7d\",\n    \"displayName\":\"Sun City Renewable-energy Plant\",\n    \"name\":\"Sun City Renewable-energy Plant\",\n    \"description\":\"Overall model of wind and solar farms in Sun City\",\n    \"initialized\":true,\n    \"createdDateTime\":\"2020-10-20T10:51:33.1700000Z\",\n    \"projectId\":\"PROJECT_ID\",\n    \"extent\":{\n      \"southWest\":{\n        \"latitude\":46.13267702834806,\n        \"longitude\":7.672120009938448\n      },\n      \"northEast\":{\n        \"latitude\":46.302763954781234,\n        \"longitude\":7.835541640797823\n      }\n    },\n    \"_links\":{\n      \"creator\":{\n        \"href\":\"https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/42101fba-847a-4f4e-85a8-a4bed89065e4\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-create-an-empty-imodel"
  }, "3. Create an empty iModel"), (0,react_.mdx)("p", null, "An iModel is a specialized information container for exchanging data associated with the lifecycle of infrastructure assets.\niModels were created to facilitate the sharing and distribution of information regardless of the source and format of the information."), (0,react_.mdx)("p", null, "iTwin Platform iModels API is based on iModelHub cloud service which enables alignment, accountability and accessibility of infrastructure digital twins.\nIt is the control center for iModels and is responsible for coordinating concurrent access to iModels as well as changes made to them."), (0,react_.mdx)("p", null, "An empty iModel is created by sending a HTTP POST message to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/imodels/"
  }, "https://api.bentley.com/imodels/"), " endpoint with the payload describing the iModel to be created."), (0,react_.mdx)("p", null, "There are two required properties for the create iModel payload."), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "name"), " - iModel name is required which uniquely identifies the iModel within the Project. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "projectId"), " - provides Project identifier that created iModel will belong to. Project identifier is required property. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "description"), " - free form text field so you could give more information about the iModel. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "extent"), " - iModels usually are placed at some location on the Earth.\nThis property allows to specify the maximum rectangular area on the Earth which encloses the iModel.\nThe maximum extent is used to help keep your iModel clean.\nWhen new elements are imported, those outside the extent will be flagged for further processing.\nThis extent will also help to zoom to the area of interest in web viewers."), (0,react_.mdx)(create_empty_imodel_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note: please replace dynamic parameters (JWT_TOKEN and PROJECT_ID) with relevant values from previous steps."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/imodels/operations/create-imodel/"
  }, "Create iModel documentation"), " page, \u201CTry it\u201D section."), (0,react_.mdx)("p", null, "Since an empty iModel does not contain any graphical elements or any data it cannot be opened yet for viewing.\nIn order to bring data to the created iModel you may setup synchronization connection which will transform engineering data from native design formats to iModel.\nOnce the synchronization has been setup and executed, viewing session can be started.")), (0,react_.mdx)(create_empty_imodel_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)(create_empty_imodel_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(create_empty_imodel_Tile, {
    name: "Synchronize a file from iTwin Storage",
    description: "Walk-through how to synchronize a file from iTwin Storage to an iModel using Synchronization API.",
    href: "/tutorials/synchronization-storage-tutorial",
    mdxType: "Tile"
  })), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(create_empty_imodel_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(create_empty_imodel_ResourceTile, {
    title: "Data Management API documentation",
    href: "/api-groups/data-management/",
    description: "An overview and detailed Data Management API documentation.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(create_empty_imodel_ResourceTile, {
    title: "Overview of iModel",
    href: "https://www.itwinjs.org/learning/imodels/#imodel-overview",
    description: "An overview of iModel data structure.",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
create_empty_imodel_MDXContent.isMDXComponent = true;
var create_empty_imodel_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-api-reference-try-it-section",
      level: 3,
      title: "Grab a user token from Api reference “Try it” Section",
      children: []
    }]
  }, {
    id: "3-create-an-empty-imodel",
    level: 2,
    title: "3. Create an empty iModel",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var create_empty_imodel_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/create-multi-property-validation-rule.mdx


var create_multi_property_validation_rule_excluded = ["components"];
var create_multi_property_validation_rule_jsx = (external_react_default()).createElement;


var create_multi_property_validation_rule_readingTime = {
  "text": "8 min read",
  "minutes": 7.56,
  "time": 453600,
  "words": 1512
};
/* @jsxRuntime classic */
/* @jsx mdx */

var create_multi_property_validation_rule_metadata = {
  title: 'Create Multi-Property Validation Rule',
  tile: {
    name: 'Create Multi-Property Validation Rule',
    description: 'Walk-through to create a multi-property validation rule.',
    href: '/tutorials/create-multi-property-validation-rule/',
    thumbnail: '/images/property-validation-thumbnail.png',
    durationInMinutes: 20,
    relatedApiIds: ['validation/propertyValue']
  }
};
var create_multi_property_validation_rule_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var create_multi_property_validation_rule_Introduction = create_multi_property_validation_rule_makeShortcode("Introduction");
var create_multi_property_validation_rule_TutorialSection = create_multi_property_validation_rule_makeShortcode("TutorialSection");
var create_multi_property_validation_rule_Title = create_multi_property_validation_rule_makeShortcode("Title");
var create_multi_property_validation_rule_CodeBlock = create_multi_property_validation_rule_makeShortcode("CodeBlock");
var create_multi_property_validation_rule_ContinueLearningSection = create_multi_property_validation_rule_makeShortcode("ContinueLearningSection");
var create_multi_property_validation_rule_TileList = create_multi_property_validation_rule_makeShortcode("TileList");
var create_multi_property_validation_rule_ResourceTile = create_multi_property_validation_rule_makeShortcode("ResourceTile");
var create_multi_property_validation_rule_layoutProps = {
  metadata: create_multi_property_validation_rule_metadata
};
var create_multi_property_validation_rule_MDXLayout = "wrapper";
function create_multi_property_validation_rule_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, create_multi_property_validation_rule_excluded);
  return (0,react_.mdx)(create_multi_property_validation_rule_MDXLayout, (0,esm_extends/* default */.Z)({}, create_multi_property_validation_rule_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(create_multi_property_validation_rule_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "20",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "Multi-property validation rules allow you to apply the same validation function to all elements with a property name containing a specified filter string. In this tutorial, you will learn how to:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Get a list of all property validation rule templates."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Get a list of all properties in an iModel that contain the specified filter string."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Create a multi-property validation rule."))), (0,react_.mdx)(create_multi_property_validation_rule_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/web-application-quick-start/#3-create-an-imodel"
  }, "Access to an iModel"), " and the associated projectId and imodelId for that iModel, along with the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/imodels/operations/get-imodel-named-version-details/"
  }, "named version ID"), " for the version you are testing against"))), (0,react_.mdx)(create_multi_property_validation_rule_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-request-an-authorization-token-using-one-of-the-methods-below"
  }, "1. Request an authorization token using one of the methods below."), (0,react_.mdx)("h3", {
    "id": "implement-the-authorization-code-flow-in-the-application"
  }, "Implement the Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Use the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "OAuth2 Authorization"), " article to implement an Authorization code workflow in your application. Include the scopes \u201Cvalidation:read\u201D and 'validation:modify\u2019."), (0,react_.mdx)("h3", {
    "id": "retrieve-a-user-token-using-the-api-reference-try-it-out-button"
  }, "Retrieve a user token using the API Reference \u201CTry it out\u201D button."), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Open ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/validation/operations/get-validation-propertyvalue-rule-templates/"
  }, "Get property value validation rule templates")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Try it out"), " button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "In the Authorization section, select ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "AuthorizationCode"), "."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Copy the Authorization token in the Header section for use in this tutorial. It will replace the JWT_TOKEN dynamic parameter in the following steps."))), (0,react_.mdx)(create_multi_property_validation_rule_TutorialSection, {
    actions: [(0,react_.mdx)(create_multi_property_validation_rule_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_multi_property_validation_rule_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/validation/propertyValue/ruleTemplates?projectId=00000000-0000-0000-0000-000000000000 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_multi_property_validation_rule_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_multi_property_validation_rule_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_multi_property_validation_rule_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_multi_property_validation_rule_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_multi_property_validation_rule_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_multi_property_validation_rule_CodeBlock, {
      language: "json",
      code: "{\n  \"ruleTemplates\": [{\n    \"id\": \"1cKcvg7Ky0e66uT-2u8vpW9vzfUgkKBIp6XGd_WdXPM\",\n    \"displayName\": \"MultiPropertyValidation\",\n    \"description\": \"Runs a given template on multiple properties in iModel Schema\",\n    \"prompt\": \"Runs a given template on multiple properties in iModel Schema\",\n    \"templateExpression\": {\n      \"templateId\": \"a5896553-e248-4619-b7c8-5bcb4878e51c\",\n      \"functionParameters\": {\n        \"propertyName\": \"LastMod\"\n      },\n      \"schemas\": [{\n        \"name\": \"Architecture_rvt_ThreeD_3D\",\n        \"label\": null,\n        \"entities\": [{\n          \"name\": \"Cameras\",\n          \"label\": null,\n          \"properties\": [{\n            \"name\": \"Eye__x0020__Elevation_PG_VIEW_CAMERA_Length\",\n            \"label\": \"Eye Elevation\"\n          }, {\n            \"name\": \"Far__x0020__Clip__x0020__Offset_PG_VIEW_EXTENTS_Length\",\n            \"label\": \"Far Clip Offset\"\n          }, {\n            \"name\": \"Target__x0020__Elevation_PG_VIEW_CAMERA_Length\",\n            \"label\": \"Target Elevation\"\n          }]\n        }]\n      }]\n    }\n  }],\n  \"_links\": {\n    \"next\": null\n  }\n}\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-property-validation-rule-templates"
  }, "2. Get Property Validation Rule Templates"), (0,react_.mdx)("p", null, "A property validation rule is used as a basis for verifying the value of a property. A rule can check if the value of a property is defined, within a range of values, matches a pattern, etc."), (0,react_.mdx)("p", null, "We have provided a variety of property validation rule templates to get you started. An ", (0,react_.mdx)("code", null, "HTTP GET ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/validation/propertyValue/ruleTemplates?projectId%5B&continuationToken%5D%5B&$top%5D"
  }, "https://api.bentley.com/validation/propertyValue/ruleTemplates?projectId[&continuationToken][&$top]")), " request returns all valid property validation rule templates for the given project ID. Choose the template that is best suited for your goals based on the description."), (0,react_.mdx)("p", null, "For this tutorial we are using the MultiPropertyValidation rule template shown on the right in the response body.")), (0,react_.mdx)(create_multi_property_validation_rule_TutorialSection, {
    actions: [(0,react_.mdx)(create_multi_property_validation_rule_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_multi_property_validation_rule_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/validation/propertyValue/properties/imodels/00000000-0000-0000-0000-000000000000?projectId=00000000-0000-0000-0000-000000000000&filter=LENGTH HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_multi_property_validation_rule_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_multi_property_validation_rule_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_multi_property_validation_rule_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_multi_property_validation_rule_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_multi_property_validation_rule_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_multi_property_validation_rule_CodeBlock, {
      language: "json",
      code: "{\n  \"data\": {\n    \"searchProperty\": {\n      \"schemas\": [\n        {\n          \"name\": \"Architecture_rvt_ThreeD_3D\",\n          \"label\": null,\n          \"entities\": [\n            {\n              \"name\": \"Cameras\",\n              \"label\": null,\n              \"properties\": [\n                {\n                  \"name\": \"Eye__x0020__Elevation_PG_VIEW_CAMERA_Length\",\n                  \"label\": \"Eye Elevation\"\n                },\n                {\n                  \"name\": \"Far__x0020__Clip__x0020__Offset_PG_VIEW_EXTENTS_Length\",\n                  \"label\": \"Far Clip Offset\"\n                },\n                {\n                  \"name\": \"Target__x0020__Elevation_PG_VIEW_CAMERA_Length\",\n                  \"label\": \"Target Elevation\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-get-filtered-validation-properties"
  }, "3. Get Filtered Validation Properties"), (0,react_.mdx)("p", null, "Before creating a multi-property validation rule, a filtered list of properties may be retrieved for the desired iModel. The hierarchical response contains a list of all schemas in the iModel. Within each schema is a list of all entities and within those are lists of properties."), (0,react_.mdx)("p", null, "Provide the iModel ID, project ID and filter string in the request."), (0,react_.mdx)("p", null, "Review the schemas array in the response and then pass it into the request body in Step 4.")), (0,react_.mdx)(create_multi_property_validation_rule_TutorialSection, {
    actions: [(0,react_.mdx)(create_multi_property_validation_rule_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_multi_property_validation_rule_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/validation/propertyValue/rules HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_multi_property_validation_rule_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_multi_property_validation_rule_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_multi_property_validation_rule_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(create_multi_property_validation_rule_CodeBlock, {
      language: "json",
      code: "{\n  \"displayName\":\"TestRule1\",\n  \"description\":\"test rule\",\n  \"templateId\": \"0000000000000000000000000000000000000000000\",\n  \"severity\": \"high\",\n  \"ecSchema\": \"*\",\n  \"ecClass\": \"*\",\n  \"whereClause\": \"\",\n  \"dataType\": \"property\",\n  \"functionParameters\": {\n    \"templateId\": \"0000000000000000000000000000000000000000000\",\n    \"functionParameters\": {\n      \"propertyName\": \"Len\"\n    },\n    \"schemas\": [\n      {\n        \"name\": \"Architecture_rvt_ThreeD_3D\",\n        \"label\": null,\n        \"entities\": [\n          {\n            \"name\": \"Cameras\",\n            \"label\": null,\n            \"properties\": [\n              {\n                \"name\": \"Eye__x0020__Elevation_PG_VIEW_CAMERA_Length\",\n                \"label\": \"Eye Elevation\"\n              },\n              {\n                \"name\": \"Far__x0020__Clip__x0020__Offset_PG_VIEW_EXTENTS_Length\",\n                \"label\": \"Far Clip Offset\"\n              },\n              {\n                \"name\": \"Target__x0020__Elevation_PG_VIEW_CAMERA_Length\",\n                \"label\": \"Target Elevation\"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_multi_property_validation_rule_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_multi_property_validation_rule_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_multi_property_validation_rule_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_multi_property_validation_rule_CodeBlock, {
      language: "json",
      code: "{\n  \"rule\": {\n    \"id\": \"ZuO3OCC8sUuVcgeXz1Ih_aW46T-rqU1DrOAlAo6t8xc\",\n    \"displayName\": \"MultiPropPctAvailRule\",\n    \"description\": \"Multi-property percent available test rule\",\n    \"templateId\": \"0000000000000000000000000000000000000000000\",\n    \"severity\": \"high\",\n    \"ecSchema\": \"*\",\n    \"ecClass\": \"*\",\n    \"whereClause\": null,\n    \"functionParameters\": {\n      \"templateId\": \"0000000000000000000000000000000000000000000\",\n      \"functionParameters\": {\n        \"propertyName\": \"Len\"\n      },\n      \"schemas\": [\n        {\n          \"name\": \"Architecture_rvt_ThreeD_3D\",\n          \"label\": null,\n          \"entities\": [\n            {\n              \"name\": \"Cameras\",\n              \"label\": null,\n              \"properties\": [\n                {\n                  \"name\": \"Eye__x0020__Elevation_PG_VIEW_CAMERA_Length\",\n                  \"label\": \"Eye Elevation\"\n                },\n                {\n                  \"name\": \"Far__x0020__Clip__x0020__Offset_PG_VIEW_EXTENTS_Length\",\n                  \"label\": \"Far Clip Offset\"\n                },\n                {\n                  \"name\": \"Target__x0020__Elevation_PG_VIEW_CAMERA_Length\",\n                  \"label\": \"Target Elevation\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    \"dataType\": \"property\",\n    \"_links\": {\n      \"self\": {\n        \"href\": \"https://dev-api.bentley.com/validation/propertyValue/rules/00000000000000000000000000-0000000000000000\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-creating-a-multi-property-validation-rule"
  }, "4. Creating a Multi-Property Validation Rule"), (0,react_.mdx)("p", null, "To create a multi-property validation rule, provide a rule name, description, template ID, severity, data type and, optionally, a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "whereClause"), ".\nIn the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "functionParameters"), " object, set the nested template ID, parameters and schemas as described below. They will be used during processing to apply the rule for each of the properties listed."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "templateId"), ": The template ID of the MultiPropertyValidation rule template."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "ecSchema"), ": Should be set to \u201C*\u201D  since it will be set based on the schemas parameter below."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "ecClass"), ": Should be set to \u201C*\u201D since it will be set based on the schemas parameter below."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "whereClause"), ": (Optional) The syntax is: ", "[propertyName][comparison operator]", " ", "[value]", ", ie USER_LABEL = 'Door\u2019, for multiple properties connectors such as AND/OR can be used as well."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "severity"), ": The rule severity can be one of four values: 'veryHigh\u2019, 'high\u2019, 'medium\u2019, 'low\u2019."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "dataType"), ": Should be set to 'property\u2019."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "functionParameters/templateId"), ": This nested template ID determines which additional parameters are required below."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "functionParameters/functionParameters"), ": These are the function parameters listed in the templateExpression object of the rule template (specified by the template ID)."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "functionParameters/schemas"), ": The list of schemas, entities, and properties retrieved in Step 3 are used to set this parameter.")), (0,react_.mdx)("p", null, "If your rule creation is successful, it will return the rule metadata and a new rule ID. This ID will be used to associate the rule with a test."), (0,react_.mdx)("p", null, "On the right, you can see an example of creating a multi-property validation rule which calculates the percentage of elements that have their selected property value set.")), (0,react_.mdx)(create_multi_property_validation_rule_TutorialSection, {
    actions: [(0,react_.mdx)(create_multi_property_validation_rule_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_multi_property_validation_rule_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/validation/propertyValue/results/000000000000000-000000000000000000000000000000000-00000-00000000 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_multi_property_validation_rule_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_multi_property_validation_rule_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_multi_property_validation_rule_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_multi_property_validation_rule_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_multi_property_validation_rule_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_multi_property_validation_rule_CodeBlock, {
      language: "json",
      code: "{\n  \"result\":[\n    {\n      \"elementId\": \"0x16fc\",\n      \"elementLabel\": \"Percent Available (Architecture_rvt_ThreeD_3D:Roofs:Type__x0020__Comments_PG_IDENTITY_DATA_Text_TYPE)\",\n      \"ruleIndex\": 0,\n      \"badValue\": \"0\"\n    },\n    {\n      \"elementId\": \"0x16fc\",\n      \"elementLabel\": \"Percent Available (Architecture_rvt_ThreeD_3D:Roofs:FamilyType)\",\n      \"ruleIndex\": 0,\n      \"badValue\": \"100\"\n    },\n    {\n      \"elementId\": \"N/A\",\n      \"elementLabel\": \"No property found\",\n      \"ruleIndex\": 0,\n      \"badValue\": \"TypeDefinition is not a valid property.\"\n    },\n    {\n      \"elementId\": \"0x1fd7\",\n      \"elementLabel\": \"Percent Available (Architecture_rvt_ThreeD_3D:Specialty__x0020__Equipment:Door__x0020__Opening_INVALID_Length_TYPE)\",\n      \"ruleIndex\": 0,\n      \"badValue\": \"20\"\n    },\n    {\n      \"elementId\": \"0x1fd7\",\n      \"elementLabel\": \"Percent Available (Architecture_rvt_ThreeD_3D:Specialty__x0020__Equipment:OmniClass__x0020__Number_PG_IDENTITY_DATA_Text_TYPE)\",\n      \"ruleIndex\": 0,\n      \"badValue\": \"10\"\n    },\n    {\n      \"elementId\": \"0x1fd7\",\n      \"elementLabel\": \"Percent Available (Architecture_rvt_ThreeD_3D:Specialty__x0020__Equipment:Width_INVALID_Length_TYPE)\",\n      \"ruleIndex\": 0,\n      \"badValue\": \"20\"\n    },\n    {\n      \"elementId\": \"0x1fd7\",\n      \"elementLabel\": \"Percent Available (Architecture_rvt_ThreeD_3D:Specialty__x0020__Equipment:Depth_INVALID_Length_TYPE)\",\n      \"ruleIndex\": 0,\n      \"badValue\": \"20\"\n    },\n    {\n      \"elementId\": \"0x1fd7\",\n      \"elementLabel\": \"Percent Available (Architecture_rvt_ThreeD_3D:Specialty__x0020__Equipment:Manufacturer_PG_IDENTITY_DATA_Text_TYPE)\",\n      \"ruleIndex\": 0,\n      \"badValue\": \"40\"\n    },\n    {\n      \"elementId\": \"0x1fd7\",\n      \"elementLabel\": \"Percent Available (Architecture_rvt_ThreeD_3D:Specialty__x0020__Equipment:Type__x0020__Comments_PG_IDENTITY_DATA_Text_TYPE)\",\n      \"ruleIndex\": 0,\n      \"badValue\": \"40\"\n    },\n    {\n      \"elementId\": \"0x1fd7\",\n      \"elementLabel\": \"Percent Available (Architecture_rvt_ThreeD_3D:Specialty__x0020__Equipment:Type__x0020__Mark_PG_IDENTITY_DATA_Text_TYPE)\",\n      \"ruleIndex\": 0,\n      \"badValue\": \"0\"\n    },\n    {\n      \"elementId\": \"0x1fd7\",\n      \"elementLabel\": \"Percent Available (Architecture_rvt_ThreeD_3D:Specialty__x0020__Equipment:OmniClass__x0020__Title_PG_IDENTITY_DATA_Text_TYPE)\",\n      \"ruleIndex\": 0,\n      \"badValue\": \"40\"\n    },\n    {\n      \"elementId\": \"0x1fd7\",\n      \"elementLabel\": \"Percent Available (Architecture_rvt_ThreeD_3D:Specialty__x0020__Equipment:Assembly__x0020__Code_PG_IDENTITY_DATA_Text_TYPE)\",\n      \"ruleIndex\": 0,\n      \"badValue\": \"70\"\n    }\n  ],\n  \"ruleList\":[\n    {\n      \"id\":\"0000000000000000000000000000000000000000000\",\n      \"displayName\": \"MultiPropPctAvailRule\"\n     }\n  ]\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-getting-multi-property-validation-test-results"
  }, "5. Getting Multi-Property Validation Test Results"), (0,react_.mdx)("p", null, "After creating a test with the multi-property validation rule, it was run to produce the (shortened) list of results on the right."), (0,react_.mdx)("p", null, "The property validation results are formatted with a \u201Cresult\u201D array that reports the calculated percentage of elements with available property values. It also includes a \u201CruleList\u201D array that lists all of the rules associated with the test run."), (0,react_.mdx)("p", null, "Within each object in the \u201Cresult\u201D array:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "elementId"), ": the first element id of the set containing the reported property "), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "elementLabel"), ": the schema:class:property being reported"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "ruleIndex"), ": the index of the rule within \u201CruleList\u201D that this property validation was based on"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "badValue"), ": in this case, instead of containing the \u201Cbad\u201D value of a property validation failure, this field simply contains the percentage of elements that have a value available for each matching property.")), (0,react_.mdx)("p", null, "Within each object in the \u201CruleList\u201D array:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "id"), ": the rule ID"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "displayName"), ": the rule name")), (0,react_.mdx)("h2", {
    "id": "6-conclusion"
  }, "6. Conclusion"), (0,react_.mdx)("p", null, "You are now able to successfully create a multi-property validation rule allowing you to easily validate all elements that have a property name containing a specified filtering string.")), (0,react_.mdx)(create_multi_property_validation_rule_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(create_multi_property_validation_rule_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(create_multi_property_validation_rule_ResourceTile, {
    title: "Validation API documentation",
    href: "/api-groups/validation/",
    description: "An overview and detailed version of Validation API documentation, including both Clash Detection and Property Validation.",
    mdxType: "ResourceTile"
  }))));
}
;
create_multi_property_validation_rule_MDXContent.isMDXComponent = true;
var create_multi_property_validation_rule_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-request-an-authorization-token-using-one-of-the-methods-below",
    level: 2,
    title: "1. Request an authorization token using one of the methods below.",
    children: [{
      id: "implement-the-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement the Authorization Code Flow in the application",
      children: []
    }, {
      id: "retrieve-a-user-token-using-the-api-reference-try-it-out-button",
      level: 3,
      title: "Retrieve a user token using the API Reference “Try it out” button.",
      children: []
    }]
  }, {
    id: "2-get-property-validation-rule-templates",
    level: 2,
    title: "2. Get Property Validation Rule Templates",
    children: []
  }, {
    id: "3-get-filtered-validation-properties",
    level: 2,
    title: "3. Get Filtered Validation Properties",
    children: []
  }, {
    id: "4-creating-a-multi-property-validation-rule",
    level: 2,
    title: "4. Creating a Multi-Property Validation Rule",
    children: []
  }, {
    id: "5-getting-multi-property-validation-test-results",
    level: 2,
    title: "5. Getting Multi-Property Validation Test Results",
    children: []
  }, {
    id: "6-conclusion",
    level: 2,
    title: "6. Conclusion",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var create_multi_property_validation_rule_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/create-named-version.mdx


var create_named_version_excluded = ["components"];
var create_named_version_jsx = (external_react_default()).createElement;


var create_named_version_readingTime = {
  "text": "7 min read",
  "minutes": 6.01,
  "time": 360600,
  "words": 1202
};
/* @jsxRuntime classic */
/* @jsx mdx */

var create_named_version_metadata = {
  title: 'Create iModel Named Version',
  tile: {
    name: 'Create iModel Named Version',
    description: 'Walk-through how to create a new Named Version within existing iModel.',
    href: '/tutorials/create-named-version/',
    durationInMinutes: 10,
    relatedApiIds: ['imodels']
  }
};
var create_named_version_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var create_named_version_Introduction = create_named_version_makeShortcode("Introduction");
var create_named_version_TutorialSection = create_named_version_makeShortcode("TutorialSection");
var create_named_version_CreateSampleAppButton = create_named_version_makeShortcode("CreateSampleAppButton");
var create_named_version_Alert = create_named_version_makeShortcode("Alert");
var create_named_version_Title = create_named_version_makeShortcode("Title");
var create_named_version_CodeBlock = create_named_version_makeShortcode("CodeBlock");
var create_named_version_ContinueLearningSection = create_named_version_makeShortcode("ContinueLearningSection");
var create_named_version_TileList = create_named_version_makeShortcode("TileList");
var create_named_version_Tile = create_named_version_makeShortcode("Tile");
var create_named_version_ResourceTile = create_named_version_makeShortcode("ResourceTile");
var create_named_version_layoutProps = {
  metadata: create_named_version_metadata
};
var create_named_version_MDXLayout = "wrapper";
function create_named_version_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, create_named_version_excluded);
  return (0,react_.mdx)(create_named_version_MDXLayout, (0,esm_extends/* default */.Z)({}, create_named_version_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(create_named_version_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "10",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This quick start is intended to guide you through the steps to create a new iModel Named Version."), (0,react_.mdx)("p", null, "By the end of this walk-through, you will be able to create a new Named Version within selected iModel using iModels API which later on can be opened with the viewer.")), (0,react_.mdx)(create_named_version_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "An empty iModel created.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Instructions to create an empty iModel can be found ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-empty-imodel"
  }, "here")))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Synchronization of design files to the iModel configured and synchronized.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Instructions to synchronize a file can be found ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/synchronization-storage-tutorial"
  }, "here")))))), (0,react_.mdx)(create_named_version_TutorialSection, {
    actions: [(0,react_.mdx)(create_named_version_CreateSampleAppButton, {
      scopes: ['realitydata:read', 'imodels:read', 'imodels:modify', 'library:read', 'storage:read', 'storage:modify'],
      clientName: "Create iModel Named Version tutorial",
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iModels"), ", ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Library"), ", ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "RealityData"), " and ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Storage"), " APIs and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "realitydata:read imodels:read imodels:modify library:read storage:read storage:modify"), " scopes enabled."))), (0,react_.mdx)(create_named_version_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "To make request to API user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application."), (0,react_.mdx)(create_named_version_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Here you can use Client ID generated from previous registration step."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-api-reference-try-it-section"
  }, "Grab a user token from Api reference \u201CTry it\u201D Section"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go to ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/imodels/operations/get-project-imodels/"
  }, "Get Project iModels - iModels")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click \u201CTry it\u201D button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "On Authorization section select \u201CAuthorizationCode\u201D."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After popup closes Authorization header with your user token value should be visible."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Save user token value for this tutorial.")), (0,react_.mdx)(create_named_version_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(create_named_version_TutorialSection, {
    actions: [(0,react_.mdx)(create_named_version_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_named_version_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/imodels/?projectId=PROJECT_ID HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_named_version_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_named_version_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nPrefer: return=representation\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_named_version_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_named_version_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json\nEtag: \"P7yWLBoFpMcFbE25CKMLNCqoZ4Q=\"",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_named_version_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_named_version_CodeBlock, {
      language: "json",
      code: "{\n  \"iModels\":[\n    {\n      \"id\":\"5e19bee0-3aea-4355-a9f0-c6df9989ee7d\",\n      \"displayName\":\"Sun City Renewable-energy Plant\",\n      \"name\":\"Sun City Renewable-energy Plant\",\n      \"description\":\"Overall model of wind and solar farms in Sun City\",\n      \"initialized\":true,\n      \"createdDateTime\":\"2020-10-20T10:51:33.1700000Z\",\n      \"projectId\":\"PROJECT_ID\",\n      \"_links\":{\n        \"creator\":{\n          \"href\":\"https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/42101fba-847a-4f4e-85a8-a4bed89065e4\"\n        },\n        \"changesets\":{\n          \"href\":\"https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets\"\n        }\n      }\n    },\n    {\n      \"id\":\"e5692781-32b8-473d-8752-908468f46926\",\n      \"displayName\":\"Power Town Processing Plant\",\n      \"name\":\"Power Town Processing Plant\",\n      \"description\":\"Overall model of processing plant in Power town\",\n      \"initialized\":true,\n      \"createdDateTime\":\"2020-10-20T10:51:33.1700000Z\",\n      \"projectId\":\"PROJECT_ID\",\n      \"_links\":{\n        \"creator\":{\n          \"href\":\"https://api.bentley.com/imodels/e5692781-32b8-473d-8752-908468f46926/users/42101fba-847a-4f4e-85a8-a4bed89065e4\"\n        },\n        \"changesets\":{\n          \"href\":\"https://api.bentley.com/imodels/e5692781-32b8-473d-8752-908468f46926/changesets\"\n        }\n      }\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://api.bentley.com/imodels?projectId=PROJECT_ID&$skip=0&$top=100\"\n    },\n    \"prev\":{\n      \"href\":\"https://api.bentley.com/imodels?projectId=PROJECT_ID&$skip=0&$top=100\"\n    },\n    \"next\":{\n      \"href\":\"https://api.bentley.com/imodels?projectId=PROJECT_ID&$skip=100&$top=100\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-get-a-list-of-imodels-in-the-project"
  }, "3. Get a list of iModels in the Project"), (0,react_.mdx)("p", null, "First of all we need to select an iModel where we want to create a Named Version."), (0,react_.mdx)("p", null, "To retrieve a list of iModels in the project send a HTTP GET request to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/imodels/?projectId=PROJECT_ID"
  }, "https://api.bentley.com/imodels/?projectId=PROJECT_ID"), " and provide projectId query parameter."), (0,react_.mdx)(create_named_version_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note: please replace dynamic parameters (JWT_TOKEN and PROJECT_ID) with relevant values from previous steps."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/imodels/operations/get-project-imodels/"
  }, "Get project iModels documentation"), " page, \u201CTry it\u201D section."), (0,react_.mdx)("p", null, "Response from the server has a list of iModels in the specified project.\nOnce you find an iModel for which you want to create a Named Version you can use the changesets link to retrieve all Changesets of an iModel.")), (0,react_.mdx)(create_named_version_TutorialSection, {
    actions: [(0,react_.mdx)(create_named_version_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_named_version_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/imodels/e5692781-32b8-473d-8752-908468f46926/changesets HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_named_version_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_named_version_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nPrefer: return=representation\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_named_version_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_named_version_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json\nEtag: \"20EzIoC8ZD/iWVKQt4AnPlr/Otg=\"",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_named_version_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_named_version_CodeBlock, {
      language: "json",
      code: "{\n  \"changesets\":[\n    {\n      \"id\":\"a1ecbdc8c4f6173004f9f881914a57c5511a362b\",\n      \"displayName\":\"1\",\n      \"description\":\"Changeset 0\",\n      \"index\":1,\n      \"parentId\":\"\",\n      \"pushDateTime\":\"2020-10-21T06:34:45.007Z\",\n      \"application\":{\n        \"name\":\"iTwin Synchronizer\"\n      },\n      \"_links\":{\n        \"creator\":{\n          \"href\":\"https://api.bentley.com/imodels/e5692781-32b8-473d-8752-908468f46926/users/ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f\"\n        },\n        \"namedVersion\":{\n          \"href\":\"https://api.bentley.com/imodels/e5692781-32b8-473d-8752-908468f46926/namedversions/a9f63fc0-ecab-440b-ba59-1a617e15f543\"\n        }\n      }\n    },\n    {\n      \"id\":\"7caef8ab5afcd99c9e618fb37978c3a03d0409c7\",\n      \"displayName\":\"2\",\n      \"description\":\"Changeset 1\",\n      \"index\":2,\n      \"parentId\":\"a1ecbdc8c4f6173004f9f881914a57c5511a362b\",\n      \"pushDateTime\":\"2020-10-21T06:34:48.123Z\",\n      \"application\":{\n        \"name\":\"iTwin Synchronizer\"\n      },\n      \"_links\":{\n        \"creator\":{\n          \"href\":\"https://api.bentley.com/imodels/e5692781-32b8-473d-8752-908468f46926/users/ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f\"\n        },\n        \"namedVersion\":null\n      }\n    },\n    {\n      \"id\":\"a587345859410ce5c2811c7c558d4578938efa00\",\n      \"displayName\":\"3\",\n      \"description\":\"Changeset 2\",\n      \"index\":3,\n      \"parentId\":\"7caef8ab5afcd99c9e618fb37978c3a03d0409c7\",\n      \"pushDateTime\":\"2020-10-21T06:34:51.13Z\",\n      \"application\":{\n        \"name\":\"Synchro Modeler\"\n      },\n      \"_links\":{\n        \"creator\":{\n          \"href\":\"https://api.bentley.com/imodels/e5692781-32b8-473d-8752-908468f46926/users/27e3ecc7-ae44-4c9d-b0b5-2f65ec146f1d\"\n        },\n        \"namedVersion\":null\n      }\n    },\n    {\n      \"id\":\"13a61888798b687d41f7c748d7414b428766281f\",\n      \"displayName\":\"4\",\n      \"description\":\"Changeset 3\",\n      \"index\":4,\n      \"parentId\":\"a587345859410ce5c2811c7c558d4578938efa00\",\n      \"pushDateTime\":\"2020-10-21T06:34:54.13Z\",\n      \"application\":{\n        \"name\":\"Synchro Modeler\"\n      },\n      \"_links\":{\n        \"creator\":{\n          \"href\":\"https://api.bentley.com/imodels/e5692781-32b8-473d-8752-908468f46926/users/27e3ecc7-ae44-4c9d-b0b5-2f65ec146f1d\"\n        },\n        \"namedVersion\":null\n      }\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://api.bentley.com/imodels/e5692781-32b8-473d-8752-908468f46926/changesets?$skip=100&$top=100\"\n    },\n    \"prev\":{\n      \"href\":\"https://api.bentley.com/imodels/e5692781-32b8-473d-8752-908468f46926/changesets?$skip=0&$top=100\"\n    },\n    \"next\":{\n      \"href\":\"https://api.bentley.com/imodels/e5692781-32b8-473d-8752-908468f46926/changesets?$skip=200&$top=100\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-get-a-list-of-changesets-in-the-imodel"
  }, "4. Get a list of Changesets in the iModel"), (0,react_.mdx)("p", null, "By sending a HTTP GET message to changesets link retrieved from previous step (", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/imodels/e5692781-32b8-473d-8752-908468f46926/changesets"
  }, "https://api.bentley.com/imodels/e5692781\u201332b8\u2013473d-8752\u2013908468f46926/changesets"), ") we can retrieve a list of Changesets in the iModel."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/imodels/operations/get-imodel-changesets/"
  }, "Get iModel Changesets documentation"), " page, \u201CTry it\u201D section."), (0,react_.mdx)("p", null, "Response contains a list of Changesets.\nIf the Changeset has a Named Version the response contains a link to it otherwise the link is null. You can see that our example has a Named Version created only for the first Changeset.")), (0,react_.mdx)(create_named_version_TutorialSection, {
    actions: [(0,react_.mdx)(create_named_version_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(create_named_version_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/imodels/e5692781-32b8-473d-8752-908468f46926/namedversions HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_named_version_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(create_named_version_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_named_version_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(create_named_version_CodeBlock, {
      language: "json",
      code: "{\n  \"name\": \"Wind farm design\",\n  \"description\": \"Finalized wind farm design in Power Town\",\n  \"changesetId\": \"13a61888798b687d41f7c748d7414b428766281f\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_named_version_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(create_named_version_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json\nLocation: https://api.bentley.com/imodels/e5692781-32b8-473d-8752-908468f46926/namedversions/8a7d2fef-9613-47ff-b7e4-9081d51b1716",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(create_named_version_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(create_named_version_CodeBlock, {
      language: "json",
      code: "{\n  \"namedVersion\":{\n    \"id\":\"3020441b-e179-4334-a59a-4fb8deb93df1\",\n    \"displayName\":\"Wind farm design\",\n    \"name\":\"Wind farm design\",\n    \"description\":\"Finalized wind farm design in Power Town\",\n    \"createdDateTime\":\"2020-10-21T06:42:57.6700000Z\",\n    \"state\":\"visible\",\n    \"_links\":{\n      \"creator\":{\n        \"href\":\"https://api.bentley.com/imodels/e5692781-32b8-473d-8752-908468f46926/users/ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f\"\n      },\n      \"changeset\":{\n        \"href\":\"https://api.bentley.com/imodels/e5692781-32b8-473d-8752-908468f46926/changesets/13a61888798b687d41f7c748d7414b428766281f\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-create-a-named-version"
  }, "5. Create a Named Version"), (0,react_.mdx)("p", null, "Lets say we want to create a new Named Version on the latest Changeset.\nTo do that we need to send a HTTP POST message to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/imodels/e5692781-32b8-473d-8752-908468f46926/namedversions"
  }, "https://api.bentley.com/imodels/e5692781\u201332b8\u2013473d-8752\u2013908468f46926/namedversions"), " endpoint with the payload describing the Named Version to be created."), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "name"), " - Named Version name is required which uniquely identifies the Named Version within iModel. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "description"), " - free form text field so you could give more information about the Named Version.", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "changesetId"), " - provides Changeset identifier the Named Version will be created for. If not provided a baseline iModel Named Version will be created.", (0,react_.mdx)("br", null)), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/imodels/operations/create-imodel-named-version/"
  }, "Create iModel Named Version documentation"), " page, \u201CTry it\u201D section."), (0,react_.mdx)("p", null, "Once the Named Version is created you can start viewing session.")), (0,react_.mdx)(create_named_version_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)(create_named_version_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(create_named_version_Tile, {
    name: "React to iModel events",
    description: "Guide on how to use the Webhooks REST API to subscribe to iModel events.",
    href: "/tutorials/react-to-events-using-webhooks",
    mdxType: "Tile"
  })), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(create_named_version_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(create_named_version_ResourceTile, {
    title: "Data Management API documentation",
    href: "/api-groups/data-management/",
    description: "An overview and detailed Data Management API documentation.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(create_named_version_ResourceTile, {
    title: "Overview of iModel",
    href: "https://www.itwinjs.org/learning/imodels/#imodel-overview",
    description: "An overview of iModel data structure.",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
create_named_version_MDXContent.isMDXComponent = true;
var create_named_version_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-api-reference-try-it-section",
      level: 3,
      title: "Grab a user token from Api reference “Try it” Section",
      children: []
    }]
  }, {
    id: "3-get-a-list-of-imodels-in-the-project",
    level: 2,
    title: "3. Get a list of iModels in the Project",
    children: []
  }, {
    id: "4-get-a-list-of-changesets-in-the-imodel",
    level: 2,
    title: "4. Get a list of Changesets in the iModel",
    children: []
  }, {
    id: "5-create-a-named-version",
    level: 2,
    title: "5. Create a Named Version",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var create_named_version_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/create-test-imodel-sample.mdx


var create_test_imodel_sample_excluded = ["components"];
var create_test_imodel_sample_jsx = (external_react_default()).createElement;


var create_test_imodel_sample_readingTime = {
  "text": "2 min read",
  "minutes": 1.53,
  "time": 91800,
  "words": 306
};
/* @jsxRuntime classic */
/* @jsx mdx */

var create_test_imodel_sample_metadata = {
  title: 'Create a test iModel from a Bentley provided sample',
  tile: {
    name: 'Create a test iModel from a Bentley provided sample',
    description: 'The quickest way to get access to a cloud hosted iModel is by creating an iModel seeded with Bentley provided sample data.',
    thumbnail: '/images/stadium.png',
    href: '/tutorials/create-test-imodel-sample/',
    durationInMinutes: 10,
    relatedApiIds: []
  }
};
var create_test_imodel_sample_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var create_test_imodel_sample_Introduction = create_test_imodel_sample_makeShortcode("Introduction");
var create_test_imodel_sample_TutorialSection = create_test_imodel_sample_makeShortcode("TutorialSection");
var create_test_imodel_sample_layoutProps = {
  metadata: create_test_imodel_sample_metadata
};
var create_test_imodel_sample_MDXLayout = "wrapper";
function create_test_imodel_sample_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, create_test_imodel_sample_excluded);
  return (0,react_.mdx)(create_test_imodel_sample_MDXLayout, (0,esm_extends/* default */.Z)({}, create_test_imodel_sample_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(create_test_imodel_sample_Introduction, {
    mdxType: "Introduction"
  }), (0,react_.mdx)(create_test_imodel_sample_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "create-a-test-itwin-and-an-imodel-from-a-bentley-provided-sample"
  }, "Create a Test iTwin and an iModel from a Bentley provided sample"), (0,react_.mdx)("p", null, "The quickest way to get access to a cloud hosted iModel is by creating a Test iTwin and an iModel seeded with Bentley provided sample data."), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go to ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://developer.bentley.com"
  }, "https://developer.bentley.com")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Sign In"), " button and sign-in using your Bentley account credentials", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "If you have not already registered, click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Register now"), " and complete the registration process."))), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click on your user icon and navigate to the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/my-itwins"
  }, (0,react_.mdx)("strong", {
    parentName: "a"
  }, "My iTwins")), " page"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "+ New"), " button"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Give your Test iTwin a name"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click Save"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "iModels in the newly created test iTwin will be listed (it will not have any iModels)"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "+ New"), " button to create a new iModel"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Give your test iModel a name"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Select ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Create iModel from Bentley Sample")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Choose one of templates"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Save"), " button and wait until your iModel is created"))), (0,react_.mdx)(create_test_imodel_sample_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "metrostation-sample"
  }, "Metrostation Sample"), (0,react_.mdx)("p", null, "A metrostation located in Philadelphia. Contains platform, rails, and subway cars."), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/metrostation.png",
    "alt": "stadium"
  }))), (0,react_.mdx)(create_test_imodel_sample_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "stadium"
  }, "Stadium"), (0,react_.mdx)("p", null, "Soccer stadium in Singapore. Features landscape details and a metro station. This is the largest sample iModel."), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/stadium.png",
    "alt": "stadium"
  }))), (0,react_.mdx)(create_test_imodel_sample_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "retail-building-sample"
  }, "Retail Building Sample"), (0,react_.mdx)("p", null, "Cafe and apartments."), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/retail-building-sample.png",
    "alt": "retail-building-sample"
  }))), (0,react_.mdx)(create_test_imodel_sample_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "bay-town-process-plant"
  }, "Bay Town Process Plant"), (0,react_.mdx)("p", null, "Simple processing plant. This is the smallest sample iModel."), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/bay-town-process-plant.png",
    "alt": "bay-town-process-plant"
  }))), (0,react_.mdx)(create_test_imodel_sample_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "house-sample"
  }, "House Sample"), (0,react_.mdx)("p", null, "Features several 2D drawings and sheets."), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/house-sample.png",
    "alt": "house-sample"
  }))));
}
;
create_test_imodel_sample_MDXContent.isMDXComponent = true;
var create_test_imodel_sample_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "create-a-test-itwin-and-an-imodel-from-a-bentley-provided-sample",
    level: 2,
    title: "Create a Test iTwin and an iModel from a Bentley provided sample",
    children: [{
      id: "metrostation-sample",
      level: 3,
      title: "Metrostation Sample",
      children: []
    }, {
      id: "stadium",
      level: 3,
      title: "Stadium",
      children: []
    }, {
      id: "retail-building-sample",
      level: 3,
      title: "Retail Building Sample",
      children: []
    }, {
      id: "bay-town-process-plant",
      level: 3,
      title: "Bay Town Process Plant",
      children: []
    }, {
      id: "house-sample",
      level: 3,
      title: "House Sample",
      children: []
    }]
  }];
};
var create_test_imodel_sample_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/creating-a-carbon-report-using-imodel-data.mdx


var creating_a_carbon_report_using_imodel_data_excluded = ["components"];
var creating_a_carbon_report_using_imodel_data_jsx = (external_react_default()).createElement;


var creating_a_carbon_report_using_imodel_data_readingTime = {
  "text": "6 min read",
  "minutes": 5.22,
  "time": 313200,
  "words": 1044
};
/* @jsxRuntime classic */
/* @jsx mdx */

var creating_a_carbon_report_using_imodel_data_metadata = {
  title: 'Creating a Carbon Report using iModel Data',
  tile: {
    name: 'Creating a Carbon Report using iModel Data',
    description: 'This tutorial will teach you how to create a carbon report using iModel data with One Click LCA service.',
    thumbnail: '',
    href: '/tutorials/creating-a-carbon-report-using-imodel-data',
    durationInMinutes: 30,
    relatedApiIds: ['insights', 'insights/carbon-calculation']
  }
};
var creating_a_carbon_report_using_imodel_data_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var creating_a_carbon_report_using_imodel_data_Introduction = creating_a_carbon_report_using_imodel_data_makeShortcode("Introduction");
var creating_a_carbon_report_using_imodel_data_TutorialSection = creating_a_carbon_report_using_imodel_data_makeShortcode("TutorialSection");
var creating_a_carbon_report_using_imodel_data_LinkButton = creating_a_carbon_report_using_imodel_data_makeShortcode("LinkButton");
var creating_a_carbon_report_using_imodel_data_NodeJsIcon = creating_a_carbon_report_using_imodel_data_makeShortcode("NodeJsIcon");
var creating_a_carbon_report_using_imodel_data_GitIcon = creating_a_carbon_report_using_imodel_data_makeShortcode("GitIcon");
var creating_a_carbon_report_using_imodel_data_GoogleChromeIcon = creating_a_carbon_report_using_imodel_data_makeShortcode("GoogleChromeIcon");
var creating_a_carbon_report_using_imodel_data_VSCodeIcon = creating_a_carbon_report_using_imodel_data_makeShortcode("VSCodeIcon");
var creating_a_carbon_report_using_imodel_data_PostmanIcon = creating_a_carbon_report_using_imodel_data_makeShortcode("PostmanIcon");
var creating_a_carbon_report_using_imodel_data_Title = creating_a_carbon_report_using_imodel_data_makeShortcode("Title");
var creating_a_carbon_report_using_imodel_data_CodeBlock = creating_a_carbon_report_using_imodel_data_makeShortcode("CodeBlock");
var creating_a_carbon_report_using_imodel_data_ContinueLearningSection = creating_a_carbon_report_using_imodel_data_makeShortcode("ContinueLearningSection");
var creating_a_carbon_report_using_imodel_data_TileList = creating_a_carbon_report_using_imodel_data_makeShortcode("TileList");
var creating_a_carbon_report_using_imodel_data_ResourceTile = creating_a_carbon_report_using_imodel_data_makeShortcode("ResourceTile");
var creating_a_carbon_report_using_imodel_data_layoutProps = {
  metadata: creating_a_carbon_report_using_imodel_data_metadata
};
var creating_a_carbon_report_using_imodel_data_MDXLayout = "wrapper";
function creating_a_carbon_report_using_imodel_data_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, creating_a_carbon_report_using_imodel_data_excluded);
  return (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_MDXLayout, (0,esm_extends/* default */.Z)({}, creating_a_carbon_report_using_imodel_data_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "30",
    summaryImageSrc: "",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.oneclicklca.com"
  }, "One Click LCA"), " is a third-party construction Life Cycle Assessment (LCA)\nand Environmental Product Declaration (EPD) software company. Bentley\u2019s iTwin platform integration with\nOne Click LCA allows you to export Quantity Takeoff Reports created using the iTwin Reporting platform\nto One Click LCA for convenient Life Cycle Analysis for both infrastructure projects\nand buildings. The iTwin Platform enables the incorporation of engineering data created\nby various design tools. A summary of the design data is exported through this integration,\nallowing you to gain insights into the environmental impacts of your infrastructure project.\nThis integration also allows you to work with the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.oneclicklca.com/support/faq-and-guidance/documentation/compliancy-and-certifications/"
  }, "third-party certifications and standards"), "."), (0,react_.mdx)("p", null, "This tutorial will cover all the fundamental steps to create a carbon calculation summary\nbased on an insights report.")), (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-set-up-your-permissions"
  }, "1. Set up your permissions"), (0,react_.mdx)("p", null, "Use of the Carbon Calculation APIs requires some iModel/Project level permissions.\nFor these permissions, you must be an Organization Administrator for the organization\nthat owns a given project or have ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "administration_manage_roles"), " permission assigned at\nthe Project level. If you do not have admin access to the Project or iModel you would\nlike to use, contact a Project Administrator. As a Project Administrator,\nyou can use APIs described in the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/manage-project-team-members-guide/"
  }, "Manage Project Team Members"), "\ntutorial to create a role and update it with ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "\"permissions\": [\"REPORTINGVIEW\", \"REPORTINGEDIT\", \"CARBONCALCULATE\", \"imodels_read\", \"imodels_write\"]"), ".\nOnce this is done and the role is assigned to you, use any iModel inside your\nproject to finish this tutorial.")), (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(creating_a_carbon_report_using_imodel_data_LinkButton, {
      href: "https://nodejs.org",
      target: "_blank",
      title: "Node.js",
      icon: (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_NodeJsIcon, {
        mdxType: "NodeJsIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_LinkButton, {
      href: "https://git-scm.com/downloads",
      target: "_blank",
      title: "Git",
      icon: (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_GitIcon, {
        mdxType: "GitIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "11-required-materials"
  }, "1.1 Required materials"), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpsnodejsorg-target_blanknodejs-v12-must-be-greater-than-1210xa"
  }, (0,react_.mdx)("a", {
    href: "https://nodejs.org",
    target: "_blank"
  }, "Node.js v12 (must be greater than 12.10.x)")), (0,react_.mdx)("p", null, "This tool provides the backend JavaScript runtime necessary for your computer to read and\nrender code appropriately. It also allows you to run NPM command line (required for every\niTwin project)."), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpsgit-scmcomdownloads-target_blankgita"
  }, (0,react_.mdx)("a", {
    href: "https://git-scm.com/downloads",
    target: "_blank"
  }, "Git")), (0,react_.mdx)("p", null, "This is the source code control system for the iTwin repositories.")), (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(creating_a_carbon_report_using_imodel_data_LinkButton, {
      href: "https://www.google.com/chrome/",
      target: "_blank",
      title: "Google Chrome",
      icon: (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_GoogleChromeIcon, {
        mdxType: "GoogleChromeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_LinkButton, {
      href: "https://code.visualstudio.com/",
      target: "_blank",
      title: "Visual Studio Code",
      icon: (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_VSCodeIcon, {
        mdxType: "VSCodeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "12-suggested-materials"
  }, "1.2 Suggested materials"), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpswwwgooglecomchrome-target_blankgoogle-chromea"
  }, (0,react_.mdx)("a", {
    href: "https://www.google.com/chrome/",
    target: "_blank"
  }, "Google Chrome")), (0,react_.mdx)("p", null, "This software helps you to develop and debug front-end JavaScript problems."), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpscodevisualstudiocom-target_blankvisual-studio-codea"
  }, (0,react_.mdx)("a", {
    href: "https://code.visualstudio.com/",
    target: "_blank"
  }, "Visual Studio Code")), (0,react_.mdx)("p", null, "This is our recommended editor and debugger tool for developing iTwin.js applications.\nIt is free, open source and includes a GUI for working with GIT."), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpswwwpostmancomdownloads-target_blankpostmana"
  }, (0,react_.mdx)("a", {
    href: "https://www.postman.com/downloads/",
    target: "_blank"
  }, "Postman")), (0,react_.mdx)("p", null, "If you want to test the REST API calls directly, you can use\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.postman.com/downloads/"
  }, "Postman"), " or any other application capable of sending\nHTTP requests. If you do it this way, you will require an authorization token for the HTTP\nrequests to work."), (0,react_.mdx)("p", null, "To learn more about how authentication and authorization works in an iTwin powered\napplication, check out the full\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "documentation"), " on how to obtain\na valid token.")), (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "13-step-by-step-guide-to-create-a-report-through-the-reporting-apis"
  }, "1.3. Step-by-Step Guide to Create a Report through the Reporting APIs"), (0,react_.mdx)("p", null, "First you will need a report. For guidance on creating a report, see\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://developer.bentley.com/tutorials/creating-an-insights-report-using-imodel-data/"
  }, "Creating an Insights Report using iModel Data"), ".\nThe report and associated mapping should contain all the elements and required properties of One Click LCA\u2019s Life Cycle Analysis."), (0,react_.mdx)("p", null, "Take note of the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "reportId"), ". This will be used later as ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "reportId"), ".")), (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "14-create-one-click-lca-user-account"
  }, "1.4 Create One Click LCA user account"), (0,react_.mdx)("p", null, "An account with One Click LCA is required to use this integration.\nUser accounts are created at ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://oneclicklcaapp.com/app/register"
  }, "One Click LCA"), ".\nFor guidance on One Click LCA, please contact One Click LCA support: ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "mailto:support@oneclicklca.com"
  }, "support@oneclicklca.com"), ".")), (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_TutorialSection, {
    actions: [(0,react_.mdx)(creating_a_carbon_report_using_imodel_data_Title, {
      mdxType: "Title"
    }, "Example HTTP Request to request one click LCA token"), (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_CodeBlock, {
      language: "http",
      code: "POST /app/api/login HTTP/1.1\nContent-Type: application/json\n{\n\"username\": \"username\",\n\"password\": \"password\"\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-one-click-lca-access-token"
  }, "2. Get One Click LCA access token"), (0,react_.mdx)("p", null, "In order to use One Click LCA APIs for carbon calculation, you need an access token.\nA user token is acquired by sending a POST request to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://oneclicklcaapp.com/app/api/login"), " with request body:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-json",
    "data-language": "json",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "<span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"username\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"password\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"password\"</span>\n<span class=\"token punctuation\">}</span>\n"
    }
  })), (0,react_.mdx)("p", null, "Take note of the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "access_token"), " in the response which will be used as ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "token"), " later."), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, "Creating a bearer token requires having a valid user account and a license for One Click LCA."))), (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_TutorialSection, {
    actions: [(0,react_.mdx)(creating_a_carbon_report_using_imodel_data_Title, {
      mdxType: "Title"
    }, "Example HTTP Request to create a carbon calculation job"), (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/insights/carbon-calculation/oneclicklca/jobs HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nAccept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\n{\n    \"reportId\": \"reportId\",\n    \"token\": \"token\"\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-create-a-carbon-calculation-job"
  }, "3. Create a carbon calculation job"), (0,react_.mdx)("p", null, "Next, trigger a carbon calculation job to export your report to One Click LCA with the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "token"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "reportId"), " we have created."), (0,react_.mdx)("p", null, "Alternatively, use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Try It"), " button on the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://developer.bentley.com/apis/carbon-calculation/operations/create-oneclicklca-job/"
  }, "Create One Click LCA Job"), " page to execute the request directly."), (0,react_.mdx)("p", null, "Save ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "jobId"), " in the response for progress monitoring.")), (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_TutorialSection, {
    actions: [(0,react_.mdx)(creating_a_carbon_report_using_imodel_data_Title, {
      mdxType: "Title"
    }, "Example HTTP Request to create a carbon calculation job"), (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/insights/carbon-calculation/oneclicklca/jobs/{jobId} HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nAccept: application/vnd.bentley.itwin-platform.v1+json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-monitor-carbon-calculation-job-progress"
  }, "4. Monitor carbon calculation job progress"), (0,react_.mdx)("p", null, "The job might take some time. We provide an endpoint to track the progress of carbon calculation process linked with ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "jobId"), ". The response status might be one of the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Queued"), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Running"), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Succeeded"), " or ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Failed"), "."), (0,react_.mdx)("p", null, "Alternatively, use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Try It"), " button on the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://developer.bentley.com/apis/carbon-calculation/operations/get-oneclicklca-job-status/"
  }, "Get One Click LCA Job Status"), " page to execute the request directly."), (0,react_.mdx)("p", null, "Once the export is complete, save the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "job -> _links -> oneclicklca -> href"), " link to view the result.")), (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-use-our-ui-interface"
  }, "5. Use our UI interface"), (0,react_.mdx)("p", null, "We have a public NPM package ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.npmjs.com/package/@itwin/one-click-lca-react"
  }, "One Click LCA React"), ". Follow the steps in the README file, you will get the same result.")), (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "conclusion"
  }, "Conclusion"), (0,react_.mdx)("p", null, "Congratulations on completing this tutorial and running your first carbon calculation report using the APIs.\nNow you can create your own customized groups, group properties and map them to your own customized report and calculate carbon emission based on it.")), (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(creating_a_carbon_report_using_imodel_data_ResourceTile, {
    title: "Carbon Calculation API Documentation",
    href: "/apis/carbon-calculation/",
    description: "This is the official documentation of Carbon Calculation API.",
    mdxType: "ResourceTile"
  }))));
}
;
creating_a_carbon_report_using_imodel_data_MDXContent.isMDXComponent = true;
var creating_a_carbon_report_using_imodel_data_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "1-set-up-your-permissions",
    level: 2,
    title: "1. Set up your permissions",
    children: [{
      id: "11-required-materials",
      level: 3,
      title: "1.1 Required materials",
      children: []
    }, {
      id: "12-suggested-materials",
      level: 3,
      title: "1.2 Suggested materials",
      children: []
    }, {
      id: "13-step-by-step-guide-to-create-a-report-through-the-reporting-apis",
      level: 3,
      title: "1.3. Step-by-Step Guide to Create a Report through the Reporting APIs",
      children: []
    }, {
      id: "14-create-one-click-lca-user-account",
      level: 3,
      title: "1.4 Create One Click LCA user account",
      children: []
    }]
  }, {
    id: "2-get-one-click-lca-access-token",
    level: 2,
    title: "2. Get One Click LCA access token",
    children: []
  }, {
    id: "3-create-a-carbon-calculation-job",
    level: 2,
    title: "3. Create a carbon calculation job",
    children: []
  }, {
    id: "4-monitor-carbon-calculation-job-progress",
    level: 2,
    title: "4. Monitor carbon calculation job progress",
    children: []
  }, {
    id: "5-use-our-ui-interface",
    level: 2,
    title: "5. Use our UI interface",
    children: []
  }, {
    id: "conclusion",
    level: 2,
    title: "Conclusion",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var creating_a_carbon_report_using_imodel_data_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/creating-an-insights-report-using-imodel-data.mdx


var creating_an_insights_report_using_imodel_data_excluded = ["components"];
var creating_an_insights_report_using_imodel_data_jsx = (external_react_default()).createElement;


var creating_an_insights_report_using_imodel_data_readingTime = {
  "text": "16 min read",
  "minutes": 15.26,
  "time": 915600,
  "words": 3052
};
/* @jsxRuntime classic */
/* @jsx mdx */

var creating_an_insights_report_using_imodel_data_metadata = {
  title: 'Creating an Insights Report using iModel Data',
  tile: {
    name: 'Creating an Insights Report using iModel Data',
    description: 'This tutorial will teach you how to create an Insights Report using iModel data.',
    thumbnail: '',
    href: '/tutorials/creating-an-insights-report-using-imodel-data',
    durationInMinutes: 45,
    relatedApiIds: ['insights', 'insights/reporting']
  }
};
var creating_an_insights_report_using_imodel_data_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var creating_an_insights_report_using_imodel_data_Introduction = creating_an_insights_report_using_imodel_data_makeShortcode("Introduction");
var creating_an_insights_report_using_imodel_data_TutorialSection = creating_an_insights_report_using_imodel_data_makeShortcode("TutorialSection");
var creating_an_insights_report_using_imodel_data_CreateSampleAppButton = creating_an_insights_report_using_imodel_data_makeShortcode("CreateSampleAppButton");
var creating_an_insights_report_using_imodel_data_LinkButton = creating_an_insights_report_using_imodel_data_makeShortcode("LinkButton");
var creating_an_insights_report_using_imodel_data_NodeJsIcon = creating_an_insights_report_using_imodel_data_makeShortcode("NodeJsIcon");
var creating_an_insights_report_using_imodel_data_GitIcon = creating_an_insights_report_using_imodel_data_makeShortcode("GitIcon");
var creating_an_insights_report_using_imodel_data_Title = creating_an_insights_report_using_imodel_data_makeShortcode("Title");
var creating_an_insights_report_using_imodel_data_CodeBlock = creating_an_insights_report_using_imodel_data_makeShortcode("CodeBlock");
var creating_an_insights_report_using_imodel_data_GoogleChromeIcon = creating_an_insights_report_using_imodel_data_makeShortcode("GoogleChromeIcon");
var creating_an_insights_report_using_imodel_data_VSCodeIcon = creating_an_insights_report_using_imodel_data_makeShortcode("VSCodeIcon");
var creating_an_insights_report_using_imodel_data_PostmanIcon = creating_an_insights_report_using_imodel_data_makeShortcode("PostmanIcon");
var creating_an_insights_report_using_imodel_data_Alert = creating_an_insights_report_using_imodel_data_makeShortcode("Alert");
var creating_an_insights_report_using_imodel_data_ContinueLearningSection = creating_an_insights_report_using_imodel_data_makeShortcode("ContinueLearningSection");
var creating_an_insights_report_using_imodel_data_TileList = creating_an_insights_report_using_imodel_data_makeShortcode("TileList");
var creating_an_insights_report_using_imodel_data_ResourceTile = creating_an_insights_report_using_imodel_data_makeShortcode("ResourceTile");
var creating_an_insights_report_using_imodel_data_layoutProps = {
  metadata: creating_an_insights_report_using_imodel_data_metadata
};
var creating_an_insights_report_using_imodel_data_MDXLayout = "wrapper";
function creating_an_insights_report_using_imodel_data_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, creating_an_insights_report_using_imodel_data_excluded);
  return (0,react_.mdx)(creating_an_insights_report_using_imodel_data_MDXLayout, (0,esm_extends/* default */.Z)({}, creating_an_insights_report_using_imodel_data_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "45",
    summaryImageSrc: "",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "The Reporting API is a tool for aggregating digital twin data from multiple sources\ninto one unified format and place. With the Reporting API, consuming your data through\nbusiness intelligence applications such as Power BI or your own custom-built\napplication is dramatically simplified."), (0,react_.mdx)("p", null, "This tutorial will cover all the fundamental steps to a typical workflow of creating\nan Insights Report using iModel data. We will first go through a step by step guide\non how to use the Reporting APIs to configure and generate a simple Report. We will also\nbriefly cover a small sample NodeJS application that goes through the same steps to help\nyou get started writing an application of your own to build Reports on your own iModels.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    actions: [(0,react_.mdx)(creating_an_insights_report_using_imodel_data_CreateSampleAppButton, {
      scopes: ['insights:read', 'insights:modify'],
      clientName: "Creating an insights report using imodel data tutorial",
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-set-up-your-environment"
  }, "1. Set up your environment"), (0,react_.mdx)("p", null, "This tutorial expects that you have access to a registered application and have access to a project as owner/administrator or know someone who has owner/admin privileges. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), ". Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ". Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Visualization"), " and ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Insights"), " APIs and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "insights:read insights:modify"), " scopes enabled.")), (0,react_.mdx)("p", null, "Use of the Reporting APIs requires some iModel/Project level Permissions.\nFor these Permissions, you must be an Organization Administrator for the Organization\nthat owns a given Project or have ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "administration_manage_roles"), " Permission assigned at\nthe Project level. If you do not have admin access to the Project or iModel you would\nlike to use, contact somebody who is a Project Administrator. As a Project Administrator,\nyou can use APIs described in the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/manage-project-team-members-guide/"
  }, "Manage Project Team Members"), "\ntutorial to create a Role and update it with ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "\"permissions\": [\"REPORTINGVIEW\", \"REPORTINGEDIT\", \"imodels_read\", \"imodels_write\"]"), ".\nOnce this is done and the Role is assigned to you, you can use any iModel inside your\nProject to finish this tutorial.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(creating_an_insights_report_using_imodel_data_LinkButton, {
      href: "https://nodejs.org",
      target: "_blank",
      title: "Node.js",
      icon: (0,react_.mdx)(creating_an_insights_report_using_imodel_data_NodeJsIcon, {
        mdxType: "NodeJsIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_LinkButton, {
      href: "https://git-scm.com/downloads",
      target: "_blank",
      title: "Git",
      icon: (0,react_.mdx)(creating_an_insights_report_using_imodel_data_GitIcon, {
        mdxType: "GitIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_Title, {
      mdxType: "Title"
    }, "Clone our TypeScript Sample"), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_CodeBlock, {
      language: "bash",
      code: "git clone https://github.com/iTwin/insights-api-sample-console-app",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "11-required-materials"
  }, "1.1 Required materials"), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpsnodejsorg-target_blanknodejs-v12-must-be-greater-than-1210xa"
  }, (0,react_.mdx)("a", {
    href: "https://nodejs.org",
    target: "_blank"
  }, "Node.js v12 (must be greater than 12.10.x)")), (0,react_.mdx)("p", null, "This tool provides the backend JavaScript runtime necessary for your computer to read and\nrender code appropriately. It also allows you to run NPM command line (required for every\niTwin project)."), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpsgit-scmcomdownloads-target_blankgita"
  }, (0,react_.mdx)("a", {
    href: "https://git-scm.com/downloads",
    target: "_blank"
  }, "Git")), (0,react_.mdx)("p", null, "This is the source code control system for the iTwin repositories."), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpsgithubcomitwinchanged-elements-tutorial-target_blanktutorial-repositorya"
  }, (0,react_.mdx)("a", {
    href: "https://github.com/iTwin/changed-elements-tutorial",
    target: "_blank"
  }, "Tutorial Repository")), (0,react_.mdx)("p", null, "This is the github repository containing the prebuilt sample that you will use in this\ntutorial.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(creating_an_insights_report_using_imodel_data_LinkButton, {
      href: "https://www.google.com/chrome/",
      target: "_blank",
      title: "Google Chrome",
      icon: (0,react_.mdx)(creating_an_insights_report_using_imodel_data_GoogleChromeIcon, {
        mdxType: "GoogleChromeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_LinkButton, {
      href: "https://code.visualstudio.com/",
      target: "_blank",
      title: "Visual Studio Code",
      icon: (0,react_.mdx)(creating_an_insights_report_using_imodel_data_VSCodeIcon, {
        mdxType: "VSCodeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(creating_an_insights_report_using_imodel_data_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "12-suggested-materials"
  }, "1.2 Suggested materials"), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpswwwgooglecomchrome-target_blankgoogle-chromea"
  }, (0,react_.mdx)("a", {
    href: "https://www.google.com/chrome/",
    target: "_blank"
  }, "Google Chrome")), (0,react_.mdx)("p", null, "This software can help you to develop and debug frontend JavaScript problems."), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpscodevisualstudiocom-target_blankvisual-studio-codea"
  }, (0,react_.mdx)("a", {
    href: "https://code.visualstudio.com/",
    target: "_blank"
  }, "Visual Studio Code")), (0,react_.mdx)("p", null, "This is our recommended editor and debugger tool for developing iTwin.js applications.\nIt is free, open source and includes a GUI for working with GIT."), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpswwwpostmancomdownloads-target_blankpostmana"
  }, (0,react_.mdx)("a", {
    href: "https://www.postman.com/downloads/",
    target: "_blank"
  }, "Postman")), (0,react_.mdx)("p", null, "If you want to test the REST API calls directly, you can use\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.postman.com/downloads/"
  }, "Postman"), " or any other application capable of sending\nHTTP requests. If you do it this way, you will require an authorization token for the HTTP\nrequests to work."), (0,react_.mdx)("p", null, "To learn more about how authentication and authorization works in an iTwin powered\napplication, check out the full\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "documentation"), " on how to obtain\na valid token.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-step-by-step-guide-to-create-a-report-through-the-reporting-apis"
  }, "2. Step-by-Step Guide to Create a Report through the Reporting APIs"), (0,react_.mdx)("p", null, "Before diving into the code to create an Insights Report based on iModel data, let\u2019s take\nsome time to understand the workflow and the API calls that are involved."), (0,react_.mdx)("h3", {
    "id": "workflow-for-imodel-reports"
  }, "Workflow for iModel Reports"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Create a new Report."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Create an empty iModel Mapping."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Assign the Mapping created to the new Report (create a report mapping)."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Create one or more Groups under that Mapping."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Create one or more GroupProperties for each Group."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Extract your data from the iModel."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Ensure your Extraction has completed."))), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "21-create-a-report"
  }, "2.1 Create a Report"), (0,react_.mdx)("p", null, "In this section, we will introduce what a report is and how to create a report using our API.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "211-what-is-a-report"
  }, "2.1.1 What is a Report?"), (0,react_.mdx)("p", null, "A Report represents a collection of data. The way the Reporting API views a Report is as a\ncollection of Mappings. With the Reporting API, you will assign one or more Mappings to a\nReport to be consumed by some application such as Power BI as a single data source.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(creating_an_insights_report_using_imodel_data_Title, {
      mdxType: "Title"
    }, "Example HTTP Request to Create Report"), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/insights/reporting/reports/ HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json\n{\n    \"displayName\": \"myReport\",\n    \"description\": \"myReportDescription\",\n    \"projectId\": \"myProjectId\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_Title, {
      mdxType: "Title"
    }, "Example result from the Create Report Operation"), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_CodeBlock, {
      language: "json",
      code: "{\n  \"report\":{\n    \"id\":\"myReportId\",\n    \"displayName\":\"myReport\",\n    \"description\":\"myReportDescription\",\n    \"deleted\":false,\n    \"_links\":{\n      \"project\":{\n        \"href\":\"https://api.bentley.com/projects/myProjectId\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "212-how-do-i-create-a-report-using-the-reporting-api"
  }, "2.1.2 How do I create a Report using the Reporting API?"), (0,react_.mdx)("p", null, "First of all, you need a Bearer Token to run all the APIs in this tutorial. In order to do\nso, go to our ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/insights/operations/create-report/"
  }, "documentation"), ",\nclick on ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Try it out"), " button. Under ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Authorization"), ", select ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "authorizationCode"), " of second\ndropdown button and wait for the token to be generated."), (0,react_.mdx)("p", null, "For this API request, you need to specify your report name, description and projectId in the\nrequest body. See the sample for details."), (0,react_.mdx)("p", null, "You can also execute the request directly at the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/insights/operations/create-report/"
  }, "Create Report API documentation"), "\npage using the \u201CTry It\u201D button."), (0,react_.mdx)("p", null, "Take note of the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " in the response. This will be used later as ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "reportId"), ".")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "22-create-a-mapping"
  }, "2.2 Create a Mapping"), (0,react_.mdx)("p", null, "In this section, we will introduce what a mapping is and how to create a mapping using our API.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "221-what-is-a-mapping"
  }, "2.2.1 What is a Mapping?"), (0,react_.mdx)("p", null, "The Reporting story begins with Mapping. Mapping is a configuration process where all desired\ndata sources are identified. These Mappings also will help describe what data is desired\nfrom each data source and how to structure it for Insights. The Mapping process will be unique\nfor each type of data source. For example, a Mapping for data from an iModel may not look the\nsame as a Mapping for data from Validation, but ultimately all that data needs to arrive at\none place and that is what Mapping orchestrates for you.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(creating_an_insights_report_using_imodel_data_Title, {
      mdxType: "Title"
    }, "Example HTTP Request to Create Mapping"), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/insights/reporting/datasources/iModels/myIModelId/mappings HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json\n{\n  \"displayName\":\"myMappingName\",\n  \"description\":\"myMappingDescription\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_Title, {
      mdxType: "Title"
    }, "Example result from the Create Report Operation"), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_CodeBlock, {
      language: "json",
      code: "{\n  \"mapping\":{\n    id\":\"myMappingId\",\n    \"displayName\":\"myMappingName\",\n    \"description\":\"myMappingDescription\",\n    \"extractionEnabled\": true,\n    \"createdOn\": \"2021-09-03T10:48:45+00:00\",\n    \"createdBy\": \"hanson.deck@cohesivecompanies.com\",\n    \"modifiedOn\": \"2021-09-03T10:48:45+00:00\",\n    \"modifiedBy\": \"hanson.deck@cohesivecompanies.com\",\n    \"_links\":{\n      \"imodel\":{\n        \"href\":\"https://api.bentley.com/imodels/myIModelId\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "222-how-do-i-create-a-mapping-using-the-reporting-api"
  }, "2.2.2 How do I create a Mapping using the Reporting API?"), (0,react_.mdx)("p", null, "Creating a Mapping is simple. All you need to provide is a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), " and a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "description"), ".\nSee the sample for details."), (0,react_.mdx)("p", null, "You can also execute the request directly at the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/insights/operations/create-mapping/"
  }, "Create Mapping API documentation"), "\npage using the \u201CTry It\u201D button."), (0,react_.mdx)("p", null, "Take note of the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " in the response. This will be used later as ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "mappingId"), ".")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "23-link-your-mapping-to-your-report"
  }, "2.3 Link your Mapping to your Report"), (0,react_.mdx)("p", null, "In this section, we will introduce what a report mapping is and how to create a report mapping\nusing our API.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "231-what-is-a-report-mapping"
  }, "2.3.1 What is a Report Mapping?"), (0,react_.mdx)("p", null, "Report Mappings are used to assign a Mapping to a Report. This relationship is many-to-many.\nOne report can have many mappings, and one mapping can be assigned to many reports. When generating\nthe Report data, our API will find all the Mappings assigned to this Report and collect data from\neach data source defined by the Mappings.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(creating_an_insights_report_using_imodel_data_Title, {
      mdxType: "Title"
    }, "Example HTTP Request to Create Report Mapping"), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/insights/reporting/reports/myReportId/datasources/iModelMappings HTTP/1.1\n    Authorization: Bearer JWT_TOKEN\nContent-Type: application/json\n{\n  \"mappingId\": \"myMappingId\",\n  \"imodelId\": \"myIModelId\"\n}\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_Title, {
      mdxType: "Title"
    }, "Example result from the Create Report Mapping Operation"), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_CodeBlock, {
      language: "json",
      code: "{\n  \"mapping\":{\n    \"reportId\": \"myReportId\",\n    \"mappingId\": \"myMappingId\",\n    \"imodelId\": \"myIModelId\",\n    \"_links\": {\n      \"report\": {\n        \"href\": \"https://api.bentley.com/insights/reporting/reports/myReportId\"\n      },\n      \"mapping\": {\n        \"href\": \"https://api.bentley.com/insights/reporting/datasources/iModels/myIModelId/mappings/myMappingId\" \n      },\n      \"imodel\": {\n        \"href\": \"https://api.bentley.com/imodels/myIModelId\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "232-how-do-i-create-a-report-mapping-using-the-reporting-api"
  }, "2.3.2 How do I create a Report Mapping using the Reporting API?"), (0,react_.mdx)("p", null, "See the sample for details."), (0,react_.mdx)("p", null, "You can also execute the request directly at the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/insights/operations/create-report-mapping/"
  }, "Create Report Mapping API documentation"), "\npage using the \u201CTry It\u201D button.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "24-create-a-group"
  }, "2.4 Create a Group"), (0,react_.mdx)("p", null, "In this section, we will introduce what a group is and how to create a group using our API.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "241-what-is-a-group"
  }, "2.4.1 What is a Group?"), (0,react_.mdx)("p", null, "A Group is a collection of data defined by a given query or other constraints. In this tutorial,\nyou can consider a Group as a collection of iModel elements.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(creating_an_insights_report_using_imodel_data_Title, {
      mdxType: "Title"
    }, "Example HTTP Request to Create Group"), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/insights/reporting/datasources/iModels/myIModelId/mappings/myMappingId/groups HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json\n{\n  \"displayName\":\"myGroupName\",\n  \"description\":\"myGroupDescription\",\n  \"query\": \"SELECT * FROM BisCore.PhysicalElement\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_Title, {
      mdxType: "Title"
    }, "Example result from the Create Group Operation"), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_CodeBlock, {
      language: "json",
      code: "{\n  \"group\":{\n    \"id\": \"myGroupId\",\n    \"displayName\":\"myGroupName\",\n    \"description\":\"myGroupDescription\", \n    \"query\": \"SELECT * FROM BisCore.PhysicalElement\",\n    \"_links\": {\n      \"imodel\": {\n        \"href\": \"https://api.bentley.com/imodels/myIModelId\"\n      },\n      \"mapping\": {\n        \"href\": \"https://api.bentley.com/insights/reporting/datasources/iModels/myIModelId/mappings/myMappingId\"\n      }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "242-how-do-i-create-a-group-using-the-reporting-api"
  }, "2.4.2 How do I create a Group using the Reporting API?"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "query"), " needs to be a valid ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/learning/ecsql/"
  }, "ECSQL"), " query that will\nbe executed against the target iModel to build this group. If you are unfamiliar with ECSQL, a\ngreat starter query to get you through this tutorial is ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "SELECT * FROM bis.physicalelement"), ". You\ncan use the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://imodelconsole.bentley.com"
  }, "iModel Console"), " to explore your iModel in detail\nusing ECSQL."), (0,react_.mdx)("p", null, "You can also execute the request directly at the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/insights/operations/create-group/"
  }, "Create Group API documentation"), "\npage using the \u201CTry It\u201D button."), (0,react_.mdx)("p", null, "Take note of the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " in the response. This will be used later as ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "groupId"), ".")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "25-create-a-groupproperty"
  }, "2.5 Create a GroupProperty"), (0,react_.mdx)("p", null, "In this section, we will introduce what a GroupProperty is and how to create a GroupProperty\nusing our API.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "251-what-is-a-groupproperty"
  }, "2.5.1 What is a GroupProperty?"), (0,react_.mdx)("p", null, "A GroupProperty is a property to be extracted from the iModel elements and how it should be\nidentified in your Report.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(creating_an_insights_report_using_imodel_data_Title, {
      mdxType: "Title"
    }, "Example HTTP Request to Create GroupProperties"), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/insights/reporting/datasources/iModels/myIModelId/mappings/myMappingId/groups/myGroupId/properties HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json\n{\n  \"displayName\": \"Code\",\n  \"dataType\": \"String\",\n  \"quantityType\": \"Undefined\",\n  \"ecProperties\": [\n    {\n      \"ecSchemaName\": \"Generic\",\n      \"ecClassName\": \"PhysicalObject\",\n      \"ecPropertyName\": \"Category.CodeValue\",\n      \"ecPropertyType\": \"String\"\n    }\n  ]\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_Title, {
      mdxType: "Title"
    }, "Example result from the Create GroupProperty Operation"), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_CodeBlock, {
      language: "json",
      code: "{\n  \"property\":{\n    \"id\": \"myPropertyId\",\n    \"displayName\": \"Code\",\n    \"dataType\": \"String\",\n    \"quantityType\": \"Undefined\",\n    \"ecProperties\": [\n      {\n        \"ecSchemaName\": \"Generic\",\n        \"ecClassName\": \"PhysicalObject\",\n        \"ecPropertyName\": \"Category.CodeValue\",\n        \"ecPropertyType\": \"String\"\n      }\n    ],\n    \"_links\": {\n      \"imodel\": {\n        \"href\": \"https://api.bentley.com/imodels/myIModelId\"\n      },\n      \"mapping\": {\n        \"href\": \"https://api.bentley.com/insights/reporting/datasources/imodels/myIModelId/mappings/myMappingId\"\n      },\n      \"group\": {\n        \"href\": \"https://api.bentley.com/insights/reporting/datasources/imodels/myIModelId/mappings/myMappingId/groups/myGroupId\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "252-how-do-i-create-a-groupproperty-using-the-reporting-api"
  }, "2.5.2 How do I create a GroupProperty using the Reporting API?"), (0,react_.mdx)("p", null, "You need to define one or multiple properties you want to extract from the each row of data\nreturned by the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "query"), " defined in your Group - each row is an element in the iModel. There\nare some restrictions on the property parameters:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "dataType options: ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "\"Boolean\""), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "\"Number\""), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "\"String\"")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "quantityType options: ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "\"Undefined\""), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "\"Area\""), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "\"Distance\""), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "\"Force\""), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "\"Mass\""), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "\"Monetary\""), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "\"Time\""), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "\"Volume\"")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "ecPropertyType is a dataType"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "ECProperties are specific to each iModel so check on the iModel before defining them.")), (0,react_.mdx)("p", null, "Again a great resource to help you understand this configuration and what properties to select\nis the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://imodelconsole.bentley.com"
  }, "iModel Console"), ". Navigate to your target iModel and\nenter the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "query"), " you defined earlier when creating a Group. This will provide you with the\ninformation you need to fill the fields like ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ecSchemaName"), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ecClassName"), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ecPropertyName"), ",\netc. If you aren\u2019t able to find any meaningful properties to map for your iModel elements,\n", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Yaw"), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Pitch"), ", and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Roll"), " are always a safe bet when it comes to 3D geometric elements."), (0,react_.mdx)("p", null, "You can also execute the request directly at the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/insights/operations/create-groupproperty/"
  }, "Create GroupProperty API documentation"), "\npage using the \u201CTry It\u201D button.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "26-run-a-data-extraction"
  }, "2.6 Run a Data Extraction"), (0,react_.mdx)("p", null, "In this section, we will introduce what a data extraction is and how to create a data extraction and check extraction status using our API.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "261-what-is-a-data-extraction"
  }, "2.6.1 What is a data Extraction?"), (0,react_.mdx)("p", null, "More often than not, some preprocessing will be required before the data defined in a Mapping\nis actually available to be consumed as a Report. Endpoints are provided in the Reporting API\nto trigger the data Extraction process. Depending on the data source this may be a one-time\naction, required for data syncs, or not required at all. See data source specific\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/insights/overview"
  }, "documentation"), " to find out more."), (0,react_.mdx)("p", null, "For iModels as a data source, data Extraction is a background process that runs the queries\ndefined by each Group in each Mapping to extract iModel elements and the specified properties.\nEach data Extraction will run all the Mappings linked to all Reports associated with an iModel.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(creating_an_insights_report_using_imodel_data_Title, {
      mdxType: "Title"
    }, "Example HTTP Request to run a data extraction"), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/insights/reporting/datasources/iModels/myIModelId/extraction/run HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_Title, {
      mdxType: "Title"
    }, "Example result from the run data extraction Operation"), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_CodeBlock, {
      language: "json",
      code: "{\n  \"run\":{\n    \"id\": \"myExtractionJobId\",\n    \"_links\": {\n      \"status\": {\n        \"href\": \"https://api.bentley.com/insights/reporting/datasources/extraction/status/myRunId\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "262-how-do-i-run-a-data-extraction-using-the-reporting-api"
  }, "2.6.2 How do I run a data Extraction using the Reporting API?"), (0,react_.mdx)("p", null, "See the sample for more details."), (0,react_.mdx)("p", null, "You can also execute the request directly at the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/insights/operations/run-extraction/"
  }, "Run Extraction API documentation"), "\npage using the \u201CTry It\u201D button.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(creating_an_insights_report_using_imodel_data_Title, {
      mdxType: "Title"
    }, "Example HTTP Request to get extraction status"), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/insights/reporting/datasources/iModels/myIModelId/extraction/status/myExtractionJobId HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_Title, {
      mdxType: "Title"
    }, "Example result from the get extraction status Operation"), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_CodeBlock, {
      language: "json",
      code: "{\n  \"status\":{\n    \"state\": \"Succeeded\",\n      \"reason\": \"Completed\",\n      \"containsIssues\": true,\n      \"_links\": {\n        \"logs\": {\n          \"href\": \"https://api.bentley.com/insights/reporting/datasources/extraction/status/myRunId/logs\"\n        }\n      }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "263-how-do-i-check-the-status-of-an-extraction-using-the-reporting-api"
  }, "2.6.3 How do I check the status of an Extraction using the Reporting API?"), (0,react_.mdx)("p", null, "Run this GET request with ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "run.id"), " from response of the last step. See the sample for more\ndetails."), (0,react_.mdx)("p", null, "You can also execute the request directly at the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/insights/operations/get-extraction-status/"
  }, "Get Extraction Status API documentation"), "\npage using the \u201CTry It\u201D button."), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "The returned state could be Pending, Running, Succeeded, or Failed.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-a-sample-typescript-console-application"
  }, "3. A Sample TypeScript Console Application"), (0,react_.mdx)("p", null, "Please download the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/insights-api-sample-console-app"
  }, "sample app"), ". We\nwill be walking you through how to configure the application to programmatically configure and\nprepare a Report.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "31-project-structure"
  }, "3.1 Project Structure"), (0,react_.mdx)("p", null, "The full project structure of this app is explained below:"), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("table", {
    parentName: "blockquote"
  }, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, "Name"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, "Description"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, ".vscode:"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Contains VS Code specific settings")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, ".github:"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Contains Github related files")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "lib:"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Contains the distributable (or output) from your TypeScript build. This is the code you ship")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "src:"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Contains source code that will be compiled to the dist dir")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, (0,react_.mdx)("strong", {
    parentName: "td"
  }, "src/Main.ts"), ":"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Main entry point for executing API requests to create report based on iModel data")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "package.json:"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "File that contains npm dependencies as well as build scripts")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "tsconfig.json:"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Config settings for compiling server code written in TypeScript")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "config.json:"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Config settings for authentication and iModel data extraction related configurations")))))), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(creating_an_insights_report_using_imodel_data_Title, {
      mdxType: "Title"
    }, "Sample Config File"), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_CodeBlock, {
      language: "json",
      code: "{\n  \"projectId\":\"myProjectId\",\n  \"iModelId\":\"myIModelId\",\n  \"reportName\":\"SampleReport\",\n  \"mappingName\":\"SampleMapping\",\n  \"groupName\":\"SampleGroup\",\n  \"groupCreateQuery\": \"SELECT * FROM BisCore.PhysicalElement\",\n  \"groupProperty\": {\n    \"displayName\":\"SampleGroupProperty\",\n    \"dataType\": \"String\",\n    \"quantityType\": \"Undefined\",\n    \"ecProperties\": [{\n      \"ecSchemaName\": \"Generic\",\n      \"ecClassName\": \"PhysicalObject\",\n      \"ecPropertyName\": \"Category.CodeValue\",\n      \"ecPropertyType\": \"String\"\n      }]\n  },\n  \"authorization\": {\n    \"clientId\": \"\",\n    \"issuerUrl\": \"https://ims.bentley.com\",\n    \"redirectUri\": \"http://localhost:3000/signin-callback\",\n    \"scope\": \"insights:read insights:modify\"\n  },\n  \"timeoutMS\": 600000\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "32-configuration"
  }, "3.2 Configuration"), (0,react_.mdx)("h4", {
    "id": "how-to-setup-configjson"
  }, "How to setup ", (0,react_.mdx)("inlineCode", {
    parentName: "h4"
  }, "config.json"), "."), (0,react_.mdx)("p", null, "The entire sample application can be controlled using the configuration file located at\n", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "src/config.json"), ". What is provided is a sample configuration file and you will have to replace\nmost values with your parameters for your own setup. Most of the key concepts have been\nexplained in the earlier step-by-step breakdown of the workflow."), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("table", {
    parentName: "blockquote"
  }, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, "Name"), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, "Description"))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "clientId:"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "You should have obtained this from the ", (0,react_.mdx)("a", {
    parentName: "td",
    "href": "#1-set-up-your-environment"
  }, "preparation step"), ".")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "scope:"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Must have ", (0,react_.mdx)("inlineCode", {
    parentName: "td"
  }, "insights:read"), " & ", (0,react_.mdx)("inlineCode", {
    parentName: "td"
  }, "insights:modify"), " scopes for Reporting platform APIs.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "timeoutMS:"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "This is a safeguard parameter to prevent the sample app from running indefinitely if an error occurs during Extraction.")))))), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "33-run-the-app"
  }, "3.3 Run the app"), (0,react_.mdx)("p", null, "Open a terminal/console window and navigate to the folder containing the\n", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "insights-api-sample-console-app"), " project."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-sh",
    "data-language": "sh",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "cd insights-api-sample-console-app\n"
    }
  })), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("p", {
    parentName: "li"
  }, "Install dependencies"), (0,react_.mdx)("pre", {
    parentName: "li"
  }, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-sh",
    "data-language": "sh",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "npm install\n"
    }
  }))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("p", {
    parentName: "li"
  }, "Build and run the project"), (0,react_.mdx)("pre", {
    parentName: "li"
  }, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-sh",
    "data-language": "sh",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "npm run build\nnpm run start\n"
    }
  }))))), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "conclusion"
  }, "Conclusion"), (0,react_.mdx)("p", null, "Congratulations on completing this tutorial, at this point you should have been able to run\nthe typical report creation and data extraction workflow using the Reporting API! Now you can\ntake the Reporting API and create your own customized Groups and GroupProperties and map\nthem to your own customized Reports. You can run Extractions based on the Groups and Mappings\nyou defined and generate Reports which can be consumed through other application such as Power\nBI.")), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(creating_an_insights_report_using_imodel_data_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(creating_an_insights_report_using_imodel_data_ResourceTile, {
    title: "Reporting API Documentation",
    href: "/apis/insights/",
    description: "This is the official documentation of Reporting API.",
    mdxType: "ResourceTile"
  }))));
}
;
creating_an_insights_report_using_imodel_data_MDXContent.isMDXComponent = true;
var creating_an_insights_report_using_imodel_data_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "1-set-up-your-environment",
    level: 2,
    title: "1. Set up your environment",
    children: [{
      id: "11-required-materials",
      level: 3,
      title: "1.1 Required materials",
      children: []
    }, {
      id: "12-suggested-materials",
      level: 3,
      title: "1.2 Suggested materials",
      children: []
    }]
  }, {
    id: "2-step-by-step-guide-to-create-a-report-through-the-reporting-apis",
    level: 2,
    title: "2. Step-by-Step Guide to Create a Report through the Reporting APIs",
    children: [{
      id: "workflow-for-imodel-reports",
      level: 3,
      title: "Workflow for iModel Reports",
      children: []
    }, {
      id: "21-create-a-report",
      level: 3,
      title: "2.1 Create a Report",
      children: []
    }, {
      id: "22-create-a-mapping",
      level: 3,
      title: "2.2 Create a Mapping",
      children: []
    }, {
      id: "23-link-your-mapping-to-your-report",
      level: 3,
      title: "2.3 Link your Mapping to your Report",
      children: []
    }, {
      id: "24-create-a-group",
      level: 3,
      title: "2.4 Create a Group",
      children: []
    }, {
      id: "25-create-a-groupproperty",
      level: 3,
      title: "2.5 Create a GroupProperty",
      children: []
    }, {
      id: "26-run-a-data-extraction",
      level: 3,
      title: "2.6 Run a Data Extraction",
      children: []
    }]
  }, {
    id: "3-a-sample-typescript-console-application",
    level: 2,
    title: "3. A Sample TypeScript Console Application",
    children: [{
      id: "31-project-structure",
      level: 3,
      title: "3.1 Project Structure",
      children: []
    }, {
      id: "32-configuration",
      level: 3,
      title: "3.2 Configuration",
      children: []
    }, {
      id: "33-run-the-app",
      level: 3,
      title: "3.3 Run the app",
      children: []
    }]
  }, {
    id: "conclusion",
    level: 2,
    title: "Conclusion",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var creating_an_insights_report_using_imodel_data_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/creating-your-first-issue.mdx


var creating_your_first_issue_excluded = ["components"];
var creating_your_first_issue_jsx = (external_react_default()).createElement;


var creating_your_first_issue_readingTime = {
  "text": "9 min read",
  "minutes": 8.35,
  "time": 501000,
  "words": 1670
};
/* @jsxRuntime classic */
/* @jsx mdx */

var creating_your_first_issue_metadata = {
  title: 'Creating Your First Issue',
  tile: {
    name: 'Creating Your First Issue',
    description: 'Learn the basics of the Issues REST API by creating, viewing, and modifying an issue.',
    thumbnail: null,
    href: '/tutorials/creating-your-first-issue',
    durationInMinutes: 15,
    relatedApiIds: ['issues']
  }
};
var creating_your_first_issue_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var creating_your_first_issue_Introduction = creating_your_first_issue_makeShortcode("Introduction");
var creating_your_first_issue_TutorialSection = creating_your_first_issue_makeShortcode("TutorialSection");
var creating_your_first_issue_Title = creating_your_first_issue_makeShortcode("Title");
var creating_your_first_issue_ActionLinkButton = creating_your_first_issue_makeShortcode("ActionLinkButton");
var creating_your_first_issue_CodeBlock = creating_your_first_issue_makeShortcode("CodeBlock");
var creating_your_first_issue_Alert = creating_your_first_issue_makeShortcode("Alert");
var creating_your_first_issue_ContinueLearningSection = creating_your_first_issue_makeShortcode("ContinueLearningSection");
var creating_your_first_issue_TileList = creating_your_first_issue_makeShortcode("TileList");
var creating_your_first_issue_Tile = creating_your_first_issue_makeShortcode("Tile");
var creating_your_first_issue_layoutProps = {
  metadata: creating_your_first_issue_metadata
};
var creating_your_first_issue_MDXLayout = "wrapper";
function creating_your_first_issue_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, creating_your_first_issue_excluded);
  return (0,react_.mdx)(creating_your_first_issue_MDXLayout, (0,esm_extends/* default */.Z)({}, creating_your_first_issue_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(creating_your_first_issue_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "15",
    summaryImageSrc: null,
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "Issues generally represent items of work that come up during a project and often need a particular person/group\u2019s attention by a certain due date. The Issues API lets you create, view, and edit these issues in your project."), (0,react_.mdx)("p", null, "In this tutorial, you will use the Issues REST API to create, modify, and view an issue. No programming experience is necessary, though familiarity with JSON and HTTP will help. This lesson is meant to begin getting you familiar with the Issues API\u2019s capabilities before you begin writing application code."), (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "If you haven\u2019t already, please complete the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "../web-application-quick-start"
  }, "Web Application Quick Start"), " tutorial before continuing. This will give you an iModel and a project under which you can create issues. Also, make sure you add the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Project Delivery"), " API association when ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/my-apps/"
  }, "registering the application"), " on the developer site, or, if you\u2019ve already registered the application, edit it to enable the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "issues:read"), " and ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "issues:modify"), " scopes under Issues.")), (0,react_.mdx)(creating_your_first_issue_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-creating-an-issue"
  }, "1. Creating an Issue")), (0,react_.mdx)(creating_your_first_issue_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(creating_your_first_issue_Title, {
      mdxType: "Title"
    }, (0,react_.mdx)(creating_your_first_issue_ActionLinkButton, {
      href: "/apis/issues-v1/operations/get-project-form-definitions/",
      target: "_blank",
      title: "Try the Get Project Form Definitions endpoint",
      buttonText: "Go",
      mdxType: "ActionLinkButton"
    })), (0,react_.mdx)(creating_your_first_issue_Title, {
      mdxType: "Title"
    }, "Sample request"), (0,react_.mdx)(creating_your_first_issue_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/issues/formDefinitions?projectId=<yourId> HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(creating_your_first_issue_Title, {
      mdxType: "Title"
    }, "Sample response"), (0,react_.mdx)(creating_your_first_issue_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"formDefinitions\":[\n    {\n      \"id\":\"e5Ue5Ue5U02hNz19awLcRpwxKq9kmcZEqw123456789\",\n      \"displayName\":\"Issue\",\n      \"type\":\"Field Data\"\n    },\n    {\n      \"id\":\"e5Ue5Ue5U02hNz19awLcRnQIKZ9n-5VNql123456789\",\n      \"displayName\":\"Clash Review\",\n      \"type\":\"Clash\"\n    },\n    {\n      \"id\":\"e5Ue5Ue5U02hNz19awLcRnQIKZ9n-8765l123456789\",\n      \"displayName\":\"Data Quality Review\",\n      \"type\":\"Data Quality\"\n    }\n  ]\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "11-choosing-a-form-definition"
  }, "1.1. Choosing a Form Definition"), (0,react_.mdx)("p", null, "In order to create an issue, you must associate it with a ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "form definition"), ". A form definition simply adds metadata to the issue, including how it should displayed in certain Bentley applications. However, for third-party applications, often the only property that matters is the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "type"), ", as this will determine which type of issue is created."), (0,react_.mdx)("p", null, "To see all available form definitions in your project, make a request to the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/issues-v1/operations/get-project-form-definitions/"
  }, "Get Project Form Definitions"), " endpoint as shown under ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Sample request"), ", replacing ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "<", "yourId", ">"), " with the ID of the project you created in a previous step."), (0,react_.mdx)(creating_your_first_issue_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "You can try making a request to this endpoint, like any endpoint in the Issues REST API, by clicking the blue Try It Out button on its", (0,react_.mdx)("a", {
    href: "/apis/issues-v1/operations/get-project-form-definitions/"
  }, (0,react_.mdx)("strong", null, "documentation page")), "."), (0,react_.mdx)("p", null, "This will return a list of form definitions similar to the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Sample response"), "."), (0,react_.mdx)("p", null, "Choose any one of these form definitions returned from your request and note its ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " for the next step.")), (0,react_.mdx)(creating_your_first_issue_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(creating_your_first_issue_Title, {
      mdxType: "Title"
    }, (0,react_.mdx)(creating_your_first_issue_ActionLinkButton, {
      href: "/apis/issues-v1/operations/create-issue/",
      target: "_blank",
      title: "Try the Create Issue endpoint",
      buttonText: "Go",
      mdxType: "ActionLinkButton"
    })), (0,react_.mdx)(creating_your_first_issue_Title, {
      mdxType: "Title"
    }, "Sample method, URL, and headers"), (0,react_.mdx)(creating_your_first_issue_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/issues HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(creating_your_first_issue_Title, {
      mdxType: "Title"
    }, "Sample body (Copy and use this! Fill in your form ID.)"), (0,react_.mdx)(creating_your_first_issue_CodeBlock, {
      language: "json",
      code: "{\n  \"formId\":\"<your form id>\",\n  \"subject\":\"Unspecified material\",\n  \"description\":\"The plans do not specify what material this support beam will be made out of.\",\n  \"dueDate\":\"2021-07-30T00:00:00Z\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(creating_your_first_issue_Title, {
      mdxType: "Title"
    }, "Sample response"), (0,react_.mdx)(creating_your_first_issue_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\nContent-Type: application/json\n\n{\n  \"issue\":{\n    \"id\":\"xospFt7H20-9uSSLOwfBeBs-UbbpqxhKgAL4wWWajpw\",\n    \"subject\":\"Unspecified material\",\n    \"description\":\"The plans do not specify what material this support beam will be made out of.\",\n    \"dueDate\":\"2021-07-30T00:00:00Z\",\n    \"createdBy\":\"Andrew Menzies\",\n    \"createdDateTime\":\"2021-06-11T18:17:45.4807786Z\",\n    \"lastModifiedBy\":\"Andrew Menzies\",\n    \"lastModifiedDateTime\":\"2021-06-11T18:17:45.4807786Z\",\n    \"number\":\"FID-00002\",\n    \"status\":\"Draft\",\n    \"assignee\":{\n      \"id\":\"9e39de83-2457-466d-9de3-8d8a186b4189\",\n      \"displayName\":\"Andrew Menzies\"\n    },\n    \"assignees\":[],\n    \"displayName\":\"FID-00002\",\n    \"type\":\"Field Data\",\n    \"state\":\"Open\"\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "12-posting-the-issue-data"
  }, "1.2. Posting the Issue Data"), (0,react_.mdx)("p", null, "You can create an issue by making a POST request to the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/issues-v1/operations/create-issue/"
  }, "Create issue"), " endpoint."), (0,react_.mdx)("h4", {
    "id": "url"
  }, "URL"), (0,react_.mdx)("p", null, "The URL for creating an issue is always the same: ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/issues")), (0,react_.mdx)("h4", {
    "id": "body"
  }, "Body"), (0,react_.mdx)("p", null, "A new issue typically includes a few simple textual properties and, optionally, some metadata properties linking it to an iModel and, potentially, a specific element in that iModel. We\u2019ll go over those metadata properties (anything denoted as ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "\u201COrigin info\u201D"), " on the documentation page) in another tutorial."), (0,react_.mdx)("p", null, "The only property absolutely required for a new issue request is:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "formId:"), " The ID of one of the form definitions in your project, as retrieved from the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Get Project Form Definitions"), " endpoint.")), (0,react_.mdx)("p", null, "Other properties that are typically included are:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "subject:"), " A short descriptive title of the issue, usually less than a sentence."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "description:"), " A longer, more detailed explanation of the issue. Can be multiple sentences and can span multiple lines."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "assignee"), " or ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "assignees"), ": A person, or list of people, respectively, who should review the issue and take action. These must be members of the current project. If neither property is set, ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "assignee"), " will default to whoever created the issue, i.e. you."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "dueDate:"), " Date by which the assignee(s) should take action on the issue, if applicable. Apps might warn users when an issue is near due or overdue, for instance.")), (0,react_.mdx)("p", null, "Generally, an app that creates issues would collect these properties from the user, such as by providing a text box for ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "subject"), ", a text area for ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "description"), ", a dropdown list of project members for ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "assignee"), ", and so forth."), (0,react_.mdx)(creating_your_first_issue_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Setting ", (0,react_.mdx)("strong", null, "assignee"), " or ", (0,react_.mdx)("strong", null, "assignees"), " requires both a user's display name and ID. These can be obtained using the", (0,react_.mdx)("a", {
    href: "/apis/projects/operations/get-project-team-members/"
  }, (0,react_.mdx)("strong", null, "Get Project Team Members")), " endpoint of the Projects API."), (0,react_.mdx)("p", null, "Copy the sample body from the pane on the right and visit the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/issues-v1/operations/create-issue/"
  }, "documentation page"), " to create your first issue. After you click ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Try It"), ", paste the body into the text area, overwriting any JSON already there. Be sure to replace ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "<", "your form id", ">"), " with the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " you obtained in Step 1.1."), (0,react_.mdx)("h4", {
    "id": "response"
  }, "Response"), (0,react_.mdx)("p", null, "If you\u2019ve made the request correctly, you should receive a response similar to the sample. Note that several properties are automatically filled in by the server, even though you didn\u2019t specify them: ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "type"), " is equal to the type of the form definition you chose, and properties such as ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "createdBy"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "createdDateTime"), " were automatically set to show who created the issue and when. You will need to use the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " property\u2019s value to make further requests regarding that issue.")), (0,react_.mdx)(creating_your_first_issue_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-viewing-your-issues"
  }, "2. Viewing Your Issues")), (0,react_.mdx)(creating_your_first_issue_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(creating_your_first_issue_Title, {
      mdxType: "Title"
    }, (0,react_.mdx)(creating_your_first_issue_ActionLinkButton, {
      href: "/apis/issues-v1/operations/get-project-issues/",
      target: "_blank",
      title: "Try the Get Project Issues endpoint",
      buttonText: "Go",
      mdxType: "ActionLinkButton"
    })), (0,react_.mdx)(creating_your_first_issue_Title, {
      mdxType: "Title"
    }, "Sample Request"), (0,react_.mdx)(creating_your_first_issue_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/issues?projectId=<your-project-ID> HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(creating_your_first_issue_Title, {
      mdxType: "Title"
    }, "Sample Response"), (0,react_.mdx)(creating_your_first_issue_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"issues\":[\n    {\n      \"id\":\"xospFt7H20-9uSSLOwfBeBs-UbbpqxhKgAL4wWWajpw\",\n      \"displayName\":\"FID-00002\",\n      \"state\":\"Open\",\n      \"type\":\"Field Data\",\n      \"subject\":\"Unspecified material\"\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://api.bentley.com/issues?projectId=16298bc6-c7de-4fdb-bdb9-248b3b07c178&$top=1\"\n    },\n    \"next\":{\n      \"href\":\"https://api.bentley.com/issues?projectId=16298bc6-c7de-4fdb-bdb9-248b3b07c178&continuationToken=eyJ0b3AiOjEsInNraXBUb2tlbiI6IntcInRva2VuXCI6XCIrUklEOn5xMEp4QUxUU1ROYmMzZzhBQUFBQURnPT0jUlQ6MSNUUkM6MSNSVEQ6UXRrNDlqVXpNaTdWUElHNElWQUNCVE14TXpJdU1UY3VNakpWTWprN01qZzdOVFl2TlRreE9EZzVOMXNBI0lTVjoyI0lFTzo2NTU1MSNRQ0Y6NyNGUEM6QWdnL0FBQUFBRGdBQUQ4QUFBQUFPQUFBUHdBQUFBQTRBQUFFQU5FZVFCQT1cIixcInJhbmdlXCI6e1wibWluXCI6XCIwNUMxRTlDRDY3MzM5OFwiLFwibWF4XCI6XCIwNUMxRUQ3NTAzOERBQ1wifX0ifQ\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "21-viewing-all-issues-in-project"
  }, "2.1. Viewing All Issues in Project"), (0,react_.mdx)("p", null, "Make a request to the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/issues-v1/operations/get-project-issues/"
  }, "Get Project Issues"), " endpoint to get a summary of all the issues in the project. You must specify the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "projectId"), " in a query parameter, and you can optionally filter by ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "type"), " as an additional query parameter."), (0,react_.mdx)(creating_your_first_issue_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note: If there are too many issues to be returned in one response, you can request the next \"page\" of results by making a GET request to the exact URL in", ' ', (0,react_.mdx)("code", null, "next.href"), ". (", (0,react_.mdx)("code", null, "next.href"), " will not normally appear if there is just one issue to return, but was included in the sample response for illustrative purposes.)")), (0,react_.mdx)(creating_your_first_issue_TutorialSection, {
    subSection: "true",
    actions: [(0,react_.mdx)(creating_your_first_issue_Title, {
      mdxType: "Title"
    }, (0,react_.mdx)(creating_your_first_issue_ActionLinkButton, {
      href: "/apis/issues-v1/operations/get-issue-details/",
      target: "_blank",
      title: "Try the Get Issue Details endpoint",
      buttonText: "Go",
      mdxType: "ActionLinkButton"
    })), (0,react_.mdx)(creating_your_first_issue_Title, {
      mdxType: "Title"
    }, "Sample Request"), (0,react_.mdx)(creating_your_first_issue_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/issues/<your-issue-ID> HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(creating_your_first_issue_Title, {
      mdxType: "Title"
    }, "Sample Response"), (0,react_.mdx)(creating_your_first_issue_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"issue\":{\n    \"id\":\"xospFt7H20-9uSSLOwfBeBs-UbbpqxhKgAL4wWWajpw\",\n    \"subject\":\"Unspecified material\",\n    \"description\":\"The plans do not specify what material this support beam will be made out of.\",\n    \"dueDate\":\"2021-07-30T00:00:00Z\",\n    \"createdBy\":\"Andrew Menzies\",\n    \"createdDateTime\":\"2021-06-11T18:17:45.4807786Z\",\n    \"lastModifiedBy\":\"Andrew Menzies\",\n    \"lastModifiedDateTime\":\"2021-06-11T18:17:45.4807786Z\",\n    \"number\":\"FID-00002\",\n    \"status\":\"Open\",\n    \"assignee\":{\n      \"id\":\"9e39de83-2457-466d-9de3-8d8a186b4189\",\n      \"displayName\":\"Andrew Menzies\"\n    },\n    \"assignees\":[\n      \n    ],\n    \"displayName\":\"FID-00002\",\n    \"type\":\"Field Data\",\n    \"state\":\"Open\",\n    \"formId\":\"ZaZaZaYbYav2qwer_-wqer-___wqerqwetaqtewq123\"\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "22-viewing-a-single-issues-details"
  }, "2.2 Viewing a Single Issue\u2019s Details"), (0,react_.mdx)("p", null, "To retrieve all properties of an issue, call the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/issues-v1/operations/get-issue-details/"
  }, "Get issue details"), " endpoint."), (0,react_.mdx)("p", null, "The URL for this request is ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/issues/%3Cid"
  }, "https://api.bentley.com/issues/", "<", "id"), ">", " where ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "<", "id", ">"), " equals the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " property of the issue you want to look up (in this case, the one you created in Step 1.2).")), (0,react_.mdx)(creating_your_first_issue_TutorialSection, {
    actions: [(0,react_.mdx)(creating_your_first_issue_Title, {
      mdxType: "Title"
    }, (0,react_.mdx)(creating_your_first_issue_ActionLinkButton, {
      href: "/apis/issues-v1/operations/modify-issue/",
      target: "_blank",
      title: "Try the Update Issue endpoint",
      buttonText: "Go",
      mdxType: "ActionLinkButton"
    })), (0,react_.mdx)(creating_your_first_issue_Title, {
      mdxType: "Title"
    }, "Sample method, URL, and headers"), (0,react_.mdx)(creating_your_first_issue_CodeBlock, {
      language: "http",
      code: "PATCH https://api.bentley.com/issues/<your-issue-ID> HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(creating_your_first_issue_Title, {
      mdxType: "Title"
    }, "Sample body (Copy and use this!)"), (0,react_.mdx)(creating_your_first_issue_CodeBlock, {
      language: "json",
      code: "{\n  \"description\":\"Version 1.2 of the plans does not specify what material this support beam will be made out of.\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(creating_your_first_issue_Title, {
      mdxType: "Title"
    }, "Sample response"), (0,react_.mdx)(creating_your_first_issue_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"issue\":{\n    \"id\":\"xospFt7H20-9uSSLOwfBeBs-UbbpqxhKgAL4wWWajpw\",\n    \"description\":\"Version 1.2 of the plans does not specify what material this support beam will be made out of.\",\n    \"createdBy\":\"Andrew Menzies\",\n    \"createdDateTime\":\"2021-06-11T18:17:45.4807786Z\",\n    \"lastModifiedBy\":\"Andrew Menzies\",\n    \"lastModifiedDateTime\":\"2021-06-14T17:11:27.3959581Z\",\n    \"status\":\"Open\",\n    \"assignee\":{\n      \"displayName\":\"Andrew Menzies\",\n      \"id\":\"9e39de83-2457-466d-9de3-8d8a186b4189\"\n    },\n    \"number\":\"FID-00002\",\n    \"displayName\":\"FID-00002\",\n    \"subject\":\"Unspecified material\",\n    \"type\":\"Field Data\",\n    \"dueDate\":\"2021-07-30T00:00:00Z\",\n    \"state\":\"Open\"\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-modifying-an-issue"
  }, "3. Modifying an Issue"), (0,react_.mdx)("p", null, "Once you\u2019ve created an issue, you can call the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/issues-v1/operations/modify-issue/"
  }, "Update issue"), " endpoint to modify its properties. Updating an issue can be done simply by making a PATCH request to the same URL where you retrieved its details (ending in the issue\u2019s ID). Provide a JSON object body containing only the properties you want changed; anything not included will keep its saved values. (Note: Including a property with a value of ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "null"), " on the will set that property on the saved issue to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "null"), "; it is not the same as omitting the property from the request entirely.)"), (0,react_.mdx)("p", null, "For example, if you wanted to make the description slightly more detailed, you could make a request using the body shown to the right. Be sure to set the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " URL parameter to the ID of your newly created issue."), (0,react_.mdx)(creating_your_first_issue_Alert, {
    type: "warning",
    mdxType: "Alert"
  }, "Be aware that some properties returned in the", ' ', (0,react_.mdx)("strong", null, "Get issue details"), " request are read-only. The documentation for ", (0,react_.mdx)("strong", null, "Update issue"), " lists only the properties you are allowed to edit."), (0,react_.mdx)("h4", {
    "id": "url-format"
  }, "URL format"), (0,react_.mdx)("p", null, (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/issues/<ID-of-issue-to-change>"))), (0,react_.mdx)(creating_your_first_issue_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)(creating_your_first_issue_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(creating_your_first_issue_Tile, {
    name: "Adding Attachments and Comments to Your Issue",
    description: "Upload images and documents, and post comments, to make your issue more detailed.",
    href: "../adding-attachments-and-comments-to-your-issue",
    mdxType: "Tile"
  }), (0,react_.mdx)(creating_your_first_issue_Tile, {
    name: "Stepping Through an Issue Workflow",
    description: "Learn how an issue's status can be set to track its progress.",
    href: "../stepping-through-an-issue-workflow",
    mdxType: "Tile"
  }), (0,react_.mdx)(creating_your_first_issue_Tile, {
    name: "Model Issues Interactive Sample",
    description: "See the Issues API in action in an iTwin Viewer app.",
    href: "https://www.itwinjs.org/sandboxes/iTwinPlatform/Issues",
    mdxType: "Tile"
  }))));
}
;
creating_your_first_issue_MDXContent.isMDXComponent = true;
var creating_your_first_issue_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-creating-an-issue",
    level: 2,
    title: "1. Creating an Issue",
    children: [{
      id: "11-choosing-a-form-definition",
      level: 3,
      title: "1.1. Choosing a Form Definition",
      children: []
    }, {
      id: "12-posting-the-issue-data",
      level: 3,
      title: "1.2. Posting the Issue Data",
      children: []
    }]
  }, {
    id: "2-viewing-your-issues",
    level: 2,
    title: "2. Viewing Your Issues",
    children: [{
      id: "21-viewing-all-issues-in-project",
      level: 3,
      title: "2.1. Viewing All Issues in Project",
      children: []
    }, {
      id: "22-viewing-a-single-issues-details",
      level: 3,
      title: "2.2 Viewing a Single Issue’s Details",
      children: []
    }]
  }, {
    id: "3-modifying-an-issue",
    level: 2,
    title: "3. Modifying an Issue",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }];
};
var creating_your_first_issue_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/export-data-from-imodel.mdx


var export_data_from_imodel_excluded = ["components"];
var export_data_from_imodel_jsx = (external_react_default()).createElement;


var export_data_from_imodel_readingTime = {
  "text": "8 min read",
  "minutes": 7.355,
  "time": 441300,
  "words": 1471
};
/* @jsxRuntime classic */
/* @jsx mdx */

var export_data_from_imodel_metadata = {
  title: 'Export data from an iModel',
  tile: {
    name: 'Export data from an iModel',
    description: 'This tutorial guides you through exporting data from an iModel to other formats, such as IFC or LandXM using the Export API.',
    href: '/tutorials/export-data-from-imodel/',
    durationInMinutes: 30,
    relatedApiIds: ['export', 'imodels']
  }
};
var export_data_from_imodel_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var export_data_from_imodel_Introduction = export_data_from_imodel_makeShortcode("Introduction");
var export_data_from_imodel_TutorialSection = export_data_from_imodel_makeShortcode("TutorialSection");
var export_data_from_imodel_CreateSampleAppButton = export_data_from_imodel_makeShortcode("CreateSampleAppButton");
var export_data_from_imodel_Alert = export_data_from_imodel_makeShortcode("Alert");
var export_data_from_imodel_CodeBlock = export_data_from_imodel_makeShortcode("CodeBlock");
var export_data_from_imodel_Title = export_data_from_imodel_makeShortcode("Title");
var export_data_from_imodel_ContinueLearningSection = export_data_from_imodel_makeShortcode("ContinueLearningSection");
var export_data_from_imodel_TileList = export_data_from_imodel_makeShortcode("TileList");
var export_data_from_imodel_Tile = export_data_from_imodel_makeShortcode("Tile");
var export_data_from_imodel_ResourceTile = export_data_from_imodel_makeShortcode("ResourceTile");
var export_data_from_imodel_layoutProps = {
  metadata: export_data_from_imodel_metadata
};
var export_data_from_imodel_MDXLayout = "wrapper";
function export_data_from_imodel_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, export_data_from_imodel_excluded);
  return (0,react_.mdx)(export_data_from_imodel_MDXLayout, (0,esm_extends/* default */.Z)({}, export_data_from_imodel_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(export_data_from_imodel_Introduction, {
    skillLevel: "Intermediate",
    durationInMinutes: "30",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This quick start is intended to help you export data from an iModel to different formats like ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.buildingsmart.org/standards/bsi-standards/industry-foundation-classes/"
  }, "IFC"), " or ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "http://www.landxml.org/"
  }, "LandXML"), " and store it in the iTwin Storage. Export API works in project and iModel context.\nIn this walk-through, you will be able to start an export.")), (0,react_.mdx)(export_data_from_imodel_TutorialSection, {
    actions: [(0,react_.mdx)(export_data_from_imodel_CreateSampleAppButton, {
      scopes: ['export:modify', 'export:read'],
      clientName: "Export data from an iModel tutorial",
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. Use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Export API"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "export:modify export:read"), " scopes enabled."))), (0,react_.mdx)(export_data_from_imodel_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "To make requests to the API, a user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application."), (0,react_.mdx)(export_data_from_imodel_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Here you need to use Client ID generated from previous registration step."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-api-reference-try-it-out-section"
  }, "Grab a user token from Api reference \u201CTry it out\u201D Section"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go to ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/export/operations/startExport/"
  }, "Create Configuration")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click \u201CTry it out\u201D button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "On Authorization section select \u201CAuthorizationCode\u201D."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After popup closes Authorization header with your user token value should be visible."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Save user token value for this tutorial.")), (0,react_.mdx)(export_data_from_imodel_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(export_data_from_imodel_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-create-a-connection"
  }, "3. Create a Connection"), (0,react_.mdx)("p", null, "The export process uses connections that link to iModels. For example, you can create multiple connections to an iModel and execute them on-demand multiple times to export changes. So let\u2019s make such a connection in this step.")), (0,react_.mdx)(export_data_from_imodel_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(export_data_from_imodel_CodeBlock, {
      language: "http",
      code: "POST\xA0https://api.bentley.com/export/connections HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request"
  }, "Request"), (0,react_.mdx)("p", null, "To create a connection, send a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "POST"), " request to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "export/connections"), " endpoint."), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Authorization\xA0header with a valid Bearer token is required."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "IMODEL_ID of the iModel we want to export."))), (0,react_.mdx)(export_data_from_imodel_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(export_data_from_imodel_CodeBlock, {
      language: "json",
      code: "{\n    \"displayName\": \"Connection1\",\n    \"iModelId\": \"IMODEL_ID\",\n    \"authenticationType\": \"User\"\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-body"
  }, "Request Body"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "displayName"), " - a user-friendly name for the connection"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "iModelId"), " - The ID of the iModel containing the connection"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "[Optional]", " ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "authenticationType"), " - one of ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "User"), " or ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Service"), ". The authentication type defaults to ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "User"), " and uses a refresh token to get an access token for long exports. For now Export only supports ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "User"), " authenticationType."))), (0,react_.mdx)(export_data_from_imodel_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(export_data_from_imodel_CodeBlock, {
      language: "json",
      code: "{\n    \"connection\": {\n        \"id\": \"CONNECTION_ID\",\n        \"displayName\": \"connection1\",\n        \"iModelId\": \"IMODEL_ID\",\n        \"projectId\": \"PROJECT_ID\",\n        \"authenticationType\": \"User\",\n        \"_links\": {\n            \"iModel\": {\n                \"href\": \"https://api.bentley.com/imodels/IMODEL_ID\"\n            },\n            \"project\": {\n                \"href\": \"https://api.bentley.com/projects/PROJECT_ID\"\n            },\n            \"lastRun\": null\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response"
  }, "Response"), (0,react_.mdx)("p", null, "The request response contains created connection properties values. Id is needed in next step")), (0,react_.mdx)(export_data_from_imodel_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-store-refresh-token-for-user"
  }, "4. Store refresh token for user"), (0,react_.mdx)("p", null, "The export process usually takes time and is performed in the background. For that, we need to store the user\u2019s refresh token. To get the authorization information, use the Get Authorization Information API. This API will return the current status and a redirect URL where user has to be redirected on the browser if the token has to be renewed.")), (0,react_.mdx)(export_data_from_imodel_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(export_data_from_imodel_Title, {
      mdxType: "Title"
    }, "Get Authorization Information Request Syntax and Headers"), (0,react_.mdx)(export_data_from_imodel_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/export/authorizationInformation?redirectUrl=REDIRECT_URL HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-1"
  }, "Request"), (0,react_.mdx)("p", null, "In order to do that, send a GET ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/export/authorizationInformation?redirectUrl=REDIRECT_URL"
  }, "https://api.bentley.com/export/authorizationInformation?redirectUrl=REDIRECT_URL"), " request."), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Authorization\xA0header with valid Bearer token is required."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "REDIRECT_URL is a url of where a user should be redirected after successful token renewal."))), (0,react_.mdx)(export_data_from_imodel_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(export_data_from_imodel_Title, {
      mdxType: "Title"
    }, "Get Authorization Information Response Body"), (0,react_.mdx)(export_data_from_imodel_CodeBlock, {
      language: "json",
      code: "{\n    \"authorizationInformation\": {\n        \"isUserAuthorized\": true,\n        \"_links\": {\n            \"authorizationUrl\": {\n                \"href\": null\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response-if-user-has-a-valid-refresh-token"
  }, "Response if user has a valid refresh token"), (0,react_.mdx)("p", null, "\u201CisUserAuthorized\u201D with value \u201Ctrue\u201D means, user has a valid refresh token and can run long running export.")), (0,react_.mdx)(export_data_from_imodel_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(export_data_from_imodel_Title, {
      mdxType: "Title"
    }, "Get Authorization Information Response Body"), (0,react_.mdx)(export_data_from_imodel_CodeBlock, {
      language: "json",
      code: "{\n    \"authorizationInformation\": {\n        \"isUserAuthorized\": false,\n        \"_links\": {\n            \"authorizationUrl\": {\n                \"href\": \"https://connect-itwinbridgeportal.bentley.com/authenticate?redirect_url=REDIRECT_URL\"\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response-if-user-does-not-have-a-valid-refresh-token"
  }, "Response if user does not have a valid refresh token"), (0,react_.mdx)("p", null, "\u201CisUserAuthorized\u201D with value \u201Cfalse\u201D means, user does not have valid refresh token and cannot run long running export. To refresh token user has to be redirected to authorizationUrl from response.")), (0,react_.mdx)(export_data_from_imodel_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-run-a-connection"
  }, "5. Run a Connection"), (0,react_.mdx)("p", null, "A run defines a single connection export process. Send a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "run start"), " request to initialize the export process."), (0,react_.mdx)("p", null, (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "exportType"), " is a required property. Valid values are ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "IFC"), " or ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "LandXML"), ". Additionally, the following optional parameters are also available:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("p", {
    parentName: "li"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "inputOptions"), " -"), (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "changesetId"), " - Changeset Id of the iModel."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "mappingFileId"), " - User-defined mapping file Id."))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("p", {
    parentName: "li"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "outputOptions"), " -"), (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "folderId"), " - Folder Id to store the output file."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "saveLogs"), " - Set to save the logs of export."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "replaceOlderFile"), " - Set to replace the older file for same imodel."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "location"), " - Location type one of \u201CUSER_BLOBS_TORAGE\u201D or 'STORAGE\u2019. Defaults to STORAGE (STORAGE API)."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "outputSasUrl"), " - Output file SAS url if the location is 'USER_BLOBS_TORAGE\u2019."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "logsSasUrl"), " - Logs file SAS url if the location is \u201CUSER_BLOBS_TORAGE\u201D ans saveLogs is set."))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("p", {
    parentName: "li"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ifcVersion"), " - Ifc Version if the export type is \u201CIFC\u201D (One of 'IFC4.3\u2019, 'IFC2x3\u2019, 'IFC2x3 CV 2.0\u2019, 'IFC4 RV 1.2\u2019).")))), (0,react_.mdx)(export_data_from_imodel_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(export_data_from_imodel_CodeBlock, {
      language: "http",
      code: "POST\xA0https://api.bentley.com/export/connections/CONNECTION_ID/run HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(export_data_from_imodel_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(export_data_from_imodel_CodeBlock, {
      language: "json",
      code: "{\n  \"exportType\": \"ExportType\",\n  \"ifcVersion\": \"IfcVersion\",\n  \"projectId\": \"ProjectId\",\n  \"inputOptions\": {\n        \"mappingFileId\": \"MappingFileId\",\n        \"changesetId\": \"ChangesetId\"\n    },\n  \"outputOptions\": {\n        \"location\": \"Location\",\n        \"outputSasUrl\": \"OutputSasUrl\",\n        \"logsSasUrl\": \"LogsSasUrl\",\n        \"folderId\": \"FolderId\",\n        \"replaceOlderFile\": true,\n        \"saveLogs\": true\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-2"
  }, "Request"), (0,react_.mdx)("p", null, "Send a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "POST"), " request to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "export/connections/{connectionId}/runs"), "\xA0endpoint with valid connectionId to run a connection."), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Authorization\xA0header with valid Bearer token is required."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "CONNECTION_ID which should be started for processing. Use the value from previous step response."))), (0,react_.mdx)(export_data_from_imodel_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(export_data_from_imodel_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 202 Accepted",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response-1"
  }, "Response"), (0,react_.mdx)("p", null, "On successful request, operation returns http status code 202/accepted - the request is accepted for processing and will be executed in the background.\nIf there is already an active run in progress for this connection, new run is being added to the queue.")), (0,react_.mdx)(export_data_from_imodel_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-get-runs-statuses"
  }, "6. Get runs statuses"), (0,react_.mdx)("p", null, "A run contains export process status. To get runs history and statuses get request has to be made.")), (0,react_.mdx)(export_data_from_imodel_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(export_data_from_imodel_CodeBlock, {
      language: "http",
      code: "POST\xA0https://api.bentley.com/export/connections/CONNECTION_ID/runs HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-3"
  }, "Request"), (0,react_.mdx)("p", null, "Getting Run status requires sending a GET request to the export/connections/{connectionId}/runs\xA0endpoint with valid connectionId."), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Authorization\xA0header with valid Bearer token is required."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "CONNECTION_ID which runs we want to get."))), (0,react_.mdx)(export_data_from_imodel_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(export_data_from_imodel_CodeBlock, {
      language: "json",
      code: "{\n  \"runs\":[\n    {\n      \"id\":\"41062244-3e62-42a3-8232-9f2b4d31be16\",\n      \"state\":\"Completed\",\n      \"result\":\"Success\"\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://api.bentley.com/export/connections/CONNECTION_ID/runs?$skip=0&$top=100\"\n    },\n    \"prev\":{\n      \"href\":\"https://api.bentley.com/export/connections/CONNECTION_ID/runs?$skip=0&$top=100\"\n    },\n    \"next\":{\n      \"href\":\"https://api.bentley.com/export/connections/CONNECTION_ID/runs?$skip=100&$top=100\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h5", {
    "id": "response-2"
  }, "Response"), (0,react_.mdx)("p", null, "At the end of export, the run state should be ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Completed"), ", and result ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Success"), ".")), (0,react_.mdx)(export_data_from_imodel_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "7-conclusion"
  }, "7. Conclusion"), (0,react_.mdx)("p", null, "In this tutorial we have gone through a iModel export process:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Create a connection"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Run the connection"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Get run status.")), (0,react_.mdx)("p", null, "After successful run, output file could be found in the location provided (Storage API by default).")), (0,react_.mdx)(export_data_from_imodel_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)(export_data_from_imodel_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(export_data_from_imodel_Tile, {
    name: "Synchronize an iModel using Synchronization API",
    description: "You will learn how to use the synchronization REST API to synchronize data to iModel.",
    href: "/tutorials/synchronization-storage-tutorial/",
    mdxType: "Tile"
  }), (0,react_.mdx)(export_data_from_imodel_Tile, {
    name: "Filter an iModel using Transformation API",
    description: "You will learn how to use the transformation REST API to filter iModel data.",
    href: "/tutorials/filter-by-view-definition-transformation/",
    mdxType: "Tile"
  }), (0,react_.mdx)(export_data_from_imodel_Tile, {
    name: "Get started with Storage API",
    description: "You will learn the main workflows and operations of the storage REST API.",
    href: "/tutorials/storage-quick-start/",
    mdxType: "Tile"
  })), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(export_data_from_imodel_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(export_data_from_imodel_ResourceTile, {
    title: "Export API documentation",
    href: "/apis/export/overview",
    description: "An overview and detailed Export API documentation.",
    mdxType: "ResourceTile"
  }))));
}
;
export_data_from_imodel_MDXContent.isMDXComponent = true;
var export_data_from_imodel_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-api-reference-try-it-out-section",
      level: 3,
      title: "Grab a user token from Api reference “Try it out” Section",
      children: []
    }]
  }, {
    id: "3-create-a-connection",
    level: 2,
    title: "3. Create a Connection",
    children: []
  }, {
    id: "4-store-refresh-token-for-user",
    level: 2,
    title: "4. Store refresh token for user",
    children: []
  }, {
    id: "5-run-a-connection",
    level: 2,
    title: "5. Run a Connection",
    children: []
  }, {
    id: "6-get-runs-statuses",
    level: 2,
    title: "6. Get runs statuses",
    children: []
  }, {
    id: "7-conclusion",
    level: 2,
    title: "7. Conclusion",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var export_data_from_imodel_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/filter-by-view-definition-transformation.mdx


var filter_by_view_definition_transformation_excluded = ["components"];
var filter_by_view_definition_transformation_jsx = (external_react_default()).createElement;


var filter_by_view_definition_transformation_readingTime = {
  "text": "9 min read",
  "minutes": 8.415,
  "time": 504900,
  "words": 1683
};
/* @jsxRuntime classic */
/* @jsx mdx */

var filter_by_view_definition_transformation_metadata = {
  title: 'Transforming an iModel - Filtering data by a view definition',
  tile: {
    name: 'Transforming an iModel - Filtering data by a view definition',
    description: 'This tutorial will demonstrate how to filter an iModel by a view definition using iModel Transformations API.',
    thumbnail: '/images/stadium-filtered.png',
    href: '/tutorials/filter-by-view-definition-transformation/',
    durationInMinutes: 20,
    relatedApiIds: ['transformations']
  }
};
var filter_by_view_definition_transformation_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var filter_by_view_definition_transformation_Introduction = filter_by_view_definition_transformation_makeShortcode("Introduction");
var filter_by_view_definition_transformation_TutorialSection = filter_by_view_definition_transformation_makeShortcode("TutorialSection");
var filter_by_view_definition_transformation_LinkButton = filter_by_view_definition_transformation_makeShortcode("LinkButton");
var filter_by_view_definition_transformation_VSCodeIcon = filter_by_view_definition_transformation_makeShortcode("VSCodeIcon");
var filter_by_view_definition_transformation_PostmanIcon = filter_by_view_definition_transformation_makeShortcode("PostmanIcon");
var filter_by_view_definition_transformation_CreateSampleAppButton = filter_by_view_definition_transformation_makeShortcode("CreateSampleAppButton");
var filter_by_view_definition_transformation_Alert = filter_by_view_definition_transformation_makeShortcode("Alert");
var filter_by_view_definition_transformation_Title = filter_by_view_definition_transformation_makeShortcode("Title");
var filter_by_view_definition_transformation_CodeBlock = filter_by_view_definition_transformation_makeShortcode("CodeBlock");
var filter_by_view_definition_transformation_ContinueLearningSection = filter_by_view_definition_transformation_makeShortcode("ContinueLearningSection");
var filter_by_view_definition_transformation_TileList = filter_by_view_definition_transformation_makeShortcode("TileList");
var filter_by_view_definition_transformation_Tile = filter_by_view_definition_transformation_makeShortcode("Tile");
var filter_by_view_definition_transformation_ResourceTile = filter_by_view_definition_transformation_makeShortcode("ResourceTile");
var filter_by_view_definition_transformation_layoutProps = {
  metadata: filter_by_view_definition_transformation_metadata
};
var filter_by_view_definition_transformation_MDXLayout = "wrapper";
function filter_by_view_definition_transformation_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, filter_by_view_definition_transformation_excluded);
  return (0,react_.mdx)(filter_by_view_definition_transformation_MDXLayout, (0,esm_extends/* default */.Z)({}, filter_by_view_definition_transformation_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(filter_by_view_definition_transformation_Introduction, {
    skillLevel: "Intermediate",
    durationInMinutes: "20",
    summaryImageSrc: "/unreal-docs-site/static/images/stadium.png",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This quick start is intended to help you create your first iModel Transformation.\nIn this walk-through, you will configure and run a transformation, wait for it to complete and view the result.")), (0,react_.mdx)(filter_by_view_definition_transformation_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(filter_by_view_definition_transformation_LinkButton, {
      href: "https://code.visualstudio.com/",
      target: "_blank",
      title: "Visual Studio Code",
      icon: (0,react_.mdx)(filter_by_view_definition_transformation_VSCodeIcon, {
        mdxType: "VSCodeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(filter_by_view_definition_transformation_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(filter_by_view_definition_transformation_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A tool such as ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Postman"), " that can be used to execute http calls. These calls can also be made using the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Try it out"), " button in the API documentation or any other http request tool."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A created connected project. You can create a project by following instructions at ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-and-query-projects-guide/"
  }, "Create a new iTwin Project"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A source iModel with some data for the transformation. You can create an iModel from Bentley Sample by following instructions at ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/web-application-quick-start/"
  }, "Create an iModel"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "An empty target iModel for the transformation. You can create an empty iModel by following instructions at ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/web-application-quick-start/"
  }, "Create an iModel"), "."))), (0,react_.mdx)(filter_by_view_definition_transformation_TutorialSection, {
    actions: [(0,react_.mdx)(filter_by_view_definition_transformation_CreateSampleAppButton, {
      scopes: ['transformations:modify', 'transformations:read'],
      clientName: "Filter iModel by view definition",
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Transformations API"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "transformations:modify transformations:read"), " scopes enabled."))), (0,react_.mdx)(filter_by_view_definition_transformation_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "To make requests to the API, a user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application."), (0,react_.mdx)(filter_by_view_definition_transformation_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Here you can use Client ID generated from previous registration step."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-api-reference-try-it-out-section"
  }, "Grab a user token from Api reference \u201CTry it out\u201D Section"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go to ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/transformations/operations/filterbyviewdefinition/"
  }, "Create Configuration")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click \u201CTry it out\u201D button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "On Authorization section select \u201CAuthorizationCode\u201D."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After popup closes Authorization header with your user token value should be visible."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Save user token value for this tutorial.")), (0,react_.mdx)(filter_by_view_definition_transformation_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(filter_by_view_definition_transformation_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-decide-on-what-data-to-keep-inside-an-imodel"
  }, "3. Decide on what data to keep inside an iModel."), (0,react_.mdx)("p", null, "Open iModel and take note of data that has to be kept inside an iModel."), (0,react_.mdx)("p", null, "Easiest way to query for iModel data is by using an iModel Console web application. Open your source iModel by replacing values in this link:\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://imodelconsole.bentley.com/?projectid=%7ByourSourceProjectId%7D&imodelid=%7ByourSourceIModelId%7D"
  }, "https://imodelconsole.bentley.com/?projectid={yourSourceProjectId}&imodelid={yourSourceIModelId}")), (0,react_.mdx)("h3", {
    "id": "31-a-view-definition"
  }, "3.1 A View definition"), (0,react_.mdx)("p", null, "A View renders geometry from one or more Models of an iModel in a web browser. iTwin.js applications can embed and interact with Views anywhere on a web page.\nA View is saved in an iModel as an element of the ViewDefinition class. ViewDefinitions hold all the information necessary to show the same content across sessions."), (0,react_.mdx)("p", null, "A view contains a ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/imodeljs-backend/viewdefinitions/modelselector/"
  }, "model selector"), " and a ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/imodeljs-backend/viewdefinitions/categoryselector/"
  }, "category selector"), "\nwhich holds a list of Ids of models and categories that should be displayed in a view. Views are used to hide information in a browser, but the iModel itself holds the full data.\nFilter by view definition transformation relies on the data from model selector and category selector within the view and accepts arrays of Ids to filter on."), (0,react_.mdx)("h3", {
    "id": "32-query-for-physical-modelspartitions"
  }, "3.2 Query for Physical Models/Partitions"), (0,react_.mdx)("p", null, "Run ECSQL query:\n", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "SELECT ECInstanceId, CodeValue, UserLabel from bis.PhysicalPartition"), "\nTo learn more about ECSQL follow ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/learning/ecsql"
  }, "this"), " link."), (0,react_.mdx)("p", null, "This ECSQL query returns a list of physical partitions inside an iModel. To learn more about iModel internals, follow ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/bis/guide/data-organization/information-hierarchy/#example-information-hierarchy"
  }, "this"), " link."), (0,react_.mdx)("p", null, "Save all ECInstanceId values and remove those that you would like to filter out."), (0,react_.mdx)(filter_by_view_definition_transformation_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note: If parent model element is omitted from the list, all child elements will get filtered out automatically."), (0,react_.mdx)("h3", {
    "id": "33-query-for-spatial-categories"
  }, "3.3 Query for Spatial categories"), (0,react_.mdx)("p", null, "Run ECSQL query:\n", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "SELECT ECInstanceId, CodeValue, UserLabel from bis.Spatialcategory")), (0,react_.mdx)("p", null, "This ECSQL query returns a list of spatial categories inside an iModel. Save all ECInstanceId values and remove those that you would like to filter out."), (0,react_.mdx)(filter_by_view_definition_transformation_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note: If parent category element is omitted from the list, all child elements will get filtered out automatically.")), (0,react_.mdx)(filter_by_view_definition_transformation_TutorialSection, {
    actions: [(0,react_.mdx)(filter_by_view_definition_transformation_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(filter_by_view_definition_transformation_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/transformations/configurations/filterbyviewdefinition HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(filter_by_view_definition_transformation_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(filter_by_view_definition_transformation_CodeBlock, {
      language: "http",
      code: "Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(filter_by_view_definition_transformation_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(filter_by_view_definition_transformation_CodeBlock, {
      language: "json",
      code: "{\n  \"transformName\":\"Filter stadium by a view definition\",\n  \"sourceProjectId\":\"SourceProjectId\",\n  \"sourceIModelId\":\"SourceIModelId\",\n  \"targetProjectId\":\"TargetProjectId\",\n  \"targetIModelId\":\"TargetIModelId\",\n  \"comment\":\"Example comment\",\n  \"transformParameters\":{\n    \"models\":[\n      \"specify\",\n      \"all ECInstanceIds\",\n      \"of PhysicalPartitions\",\n      \"that you want to keep\"\n    ],\n    \"categories\":[\n      \"specify\",\n      \"all spatial categories\",\n      \"that you want to keep\"\n    ]\n  }\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(filter_by_view_definition_transformation_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(filter_by_view_definition_transformation_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(filter_by_view_definition_transformation_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(filter_by_view_definition_transformation_CodeBlock, {
      language: "json",
      code: "{\n  \"configuration\":{\n    \"id\":\"5e19bee0-3aea-4355-a9f0-c6df9989ee7d\",\n    \"transformName\":\"Filter stadium by a view definition\",\n    \"comment\":\"Example comment\",\n    \"createdDateTime\":\"2021-08-02T14:51:33.6133333Z\",\n    \"createdBy\":\"00000000-0000-0000-0000-000000000000\",\n    \"modifiedDateTime\":\"2021-08-02T14:52:33.6133333Z\",\n    \"lastModifiedBy\":\"00000000-0000-0000-0000-000000000000\",\n    \"transformParameters\":{\n      \"models\":[\n        \"specify\",\n        \"all ECInstanceIds\",\n        \"of PhysicalPartitions\",\n        \"that you want to keep\"\n      ],\n      \"categories\":[\n        \"specify\",\n        \"all spatial categories\",\n        \"that you want to keep\"\n      ]\n    },\n    \"_links\":{\n      \"sourceIModel\":{\n        \"href\":\"https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000\"\n      },\n      \"targetIModel\":{\n        \"href\":\"https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000\"\n      },\n      \"sourceProject\":{\n        \"href\":\"https://api.bentley.com/projects/00000000-0000-0000-0000-000000000000\"\n      },\n      \"targetProject\":{\n        \"href\":\"https://api.bentley.com/projects/00000000-0000-0000-0000-000000000000\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-create-a-configuration"
  }, "4. Create a configuration"), (0,react_.mdx)("p", null, "A transformation configuration is needed to create an association between source and target iModels with some additional metadata to successfully carry out the transformation.\nCreating a configuration does not start the transformation process itself."), (0,react_.mdx)("p", null, "A configuration is created by sending a request to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/transformations/configurations/filterbyviewdefinition"
  }, "https://api.bentley.com/transformations/configurations/filterbyviewdefinition"), " endpoint with the payload describing the source and target iModel association."), (0,react_.mdx)("p", null, "These are the required properties for the endpoint:"), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "transformName"), " - free form text field so you could name your configuration ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "sourceProjectId"), " - source projectId", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "sourceIModelId"), " - iModelId of an iModal that is going to be used as a source of the transformation ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "targetProjectId"), " - target projectId", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "targetIModelId"), " - iModelId of an iModal that is going to be used as a target of the transformation. Initial transformation should always run on an empty target iModel ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "comment"), " - a comment of the transformation.\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "transformData.models"), " - an array of ECInstanceIds that specify model elements that should be kept inside an iModel after transformation.\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "transformData.categories"), " - an array of ECInstanceIds that specify category elements that should be kept inside an iModel after transformation."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/transformations/operations/filterbyviewdefinition/"
  }, "FilterByViewDefinition"), " page, \u201CTry it out\u201D section."), (0,react_.mdx)("p", null, "After executing the request, save returned Id from the response.")), (0,react_.mdx)(filter_by_view_definition_transformation_TutorialSection, {
    actions: [(0,react_.mdx)(filter_by_view_definition_transformation_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(filter_by_view_definition_transformation_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/transformations HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(filter_by_view_definition_transformation_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(filter_by_view_definition_transformation_CodeBlock, {
      language: "http",
      code: "Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(filter_by_view_definition_transformation_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(filter_by_view_definition_transformation_CodeBlock, {
      language: "json",
      code: "{\n  \"configurationId\":\"your saved configurationId from step number 3.\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(filter_by_view_definition_transformation_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(filter_by_view_definition_transformation_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(filter_by_view_definition_transformation_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(filter_by_view_definition_transformation_CodeBlock, {
      language: "json",
      code: "{\n  \"transformation\": {\n    \"id\":\"5e19bee0-3aea-4355-a9f0-c6df9989ee7d\",\n    \"status\":\"Created\",\n    \"errorMessage\":\"\",\n    \"processedElementCount\":0,\n    \"totalElementCount\":0,\n    \"_links\":{\n      \"configuration\":{\n        \"href\":\"https://api.bentley.com/transformations/configurations/00000000-0000-0000-0000-000000000000\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-create-a-transformation"
  }, "5. Create a transformation"), (0,react_.mdx)("p", null, "A transformation is created by sending a request to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/transformations"
  }, "https://api.bentley.com/transformations"), " endpoint with the payload indicating which configuration should be used.\nThe request is submitting a transformation job based on the configuration Id value that was provided."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/transformations/operations/create-transformation/"
  }, "Create transformation"), " page, \u201CTry it out\u201D section."), (0,react_.mdx)("p", null, "Response indicates the current status of the transformation. After submitting a transformation the status is \u201CCreated\u201D which means that the transformation is enqueued and waiting to start.\nPossible status messages:"), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Created"), " - transformation is created and waiting to be started. The transformation should start automatically, no additional actions are needed.\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Started"), " - transformation is started and waiting to finish.\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Succeeded"), " - transformation succeeded. You can open target iModel and inspect the results.\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Failed"), " - transformation failed. Check the errorMessage node for more information on what happened."), (0,react_.mdx)("p", null, "Transformation response objects additionally stores ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "processedElementCount"), " and ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "totalElementCount"), " to allow rendering progress bars and indicate progress to the end users."), (0,react_.mdx)("p", null, "After executing the request, save returned transformation Id from the response.")), (0,react_.mdx)(filter_by_view_definition_transformation_TutorialSection, {
    actions: [(0,react_.mdx)(filter_by_view_definition_transformation_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(filter_by_view_definition_transformation_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/transformations/{savedTransformationId} HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(filter_by_view_definition_transformation_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(filter_by_view_definition_transformation_CodeBlock, {
      language: "http",
      code: "Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(filter_by_view_definition_transformation_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(filter_by_view_definition_transformation_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(filter_by_view_definition_transformation_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(filter_by_view_definition_transformation_CodeBlock, {
      language: "json",
      code: "{\n  \"transformation\": {\n    \"id\":\"5e19bee0-3aea-4355-a9f0-c6df9989ee7d\",\n    \"status\":\"Started\",\n    \"errorMessage\":\"\",\n    \"processedElementCount\":0,\n    \"totalElementCount\":120000,\n    \"startedDateTime\":\"0000-00-00T00:00:00.0000000Z\",\n    \"finishedDateTime\":\"0000-00-00T00:00:00.0000000Z\",\n    \"sourceChangeSetId\":\"0\",\n    \"_links\":{\n      \"configuration\":{\n        \"href\":\"https://api.bentley.com/transformations/configurations/00000000-0000-0000-0000-000000000000\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-waiting-for-transformation-to-finish"
  }, "6. Waiting for transformation to finish"), (0,react_.mdx)("p", null, "Send a GET request to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/transformations/%7ByourTransformationId%7D"
  }, "https://api.bentley.com/transformations/{yourTransformationId}"), " endpoint to get an updated transformation status.\nYou can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/transformations/operations/get-transformation/"
  }, "Get transformation"), " page, \u201CTry it out\u201D section."), (0,react_.mdx)("p", null, "Query for the transformation multiple times until the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "status"), " changes from ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Created"), " to ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Started"), " and eventually to ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Succeeded"), "."), (0,react_.mdx)("p", null, "Go to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/my-itwins/"
  }, "My iTwins"), " section and view the target iModel."), (0,react_.mdx)("h2", {
    "id": "7-conclusion"
  }, "7. Conclusion"), (0,react_.mdx)("p", null, "We\u2019ve successfully created a configuration, ran a transformation that filtered iModel data, waited for the transformation to completed and inspected the results.")), (0,react_.mdx)(filter_by_view_definition_transformation_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)(filter_by_view_definition_transformation_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(filter_by_view_definition_transformation_Tile, {
    name: "React to iModel events using Webhooks API",
    description: "You will learn how to use the Webhooks REST API to create and manage your webhooks.",
    href: "/tutorials/react-to-events-using-webhooks/",
    mdxType: "Tile"
  }), (0,react_.mdx)(filter_by_view_definition_transformation_Tile, {
    name: "Changed Elements API Tutorial",
    description: "The Changed Elements API is a REST API that allows the consumer to inspect what elements have changed in an iModel between two versions of the iModel.",
    href: "/tutorials/changed-elements-api/",
    mdxType: "Tile"
  })), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(filter_by_view_definition_transformation_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(filter_by_view_definition_transformation_ResourceTile, {
    title: "API documentation",
    href: "/apis/transformations/overview/",
    description: "iModel Transformations API documentation.",
    mdxType: "ResourceTile"
  }))));
}
;
filter_by_view_definition_transformation_MDXContent.isMDXComponent = true;
var filter_by_view_definition_transformation_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-api-reference-try-it-out-section",
      level: 3,
      title: "Grab a user token from Api reference “Try it out” Section",
      children: []
    }]
  }, {
    id: "3-decide-on-what-data-to-keep-inside-an-imodel",
    level: 2,
    title: "3. Decide on what data to keep inside an iModel.",
    children: [{
      id: "31-a-view-definition",
      level: 3,
      title: "3.1 A View definition",
      children: []
    }, {
      id: "32-query-for-physical-modelspartitions",
      level: 3,
      title: "3.2 Query for Physical Models/Partitions",
      children: []
    }, {
      id: "33-query-for-spatial-categories",
      level: 3,
      title: "3.3 Query for Spatial categories",
      children: []
    }]
  }, {
    id: "4-create-a-configuration",
    level: 2,
    title: "4. Create a configuration",
    children: []
  }, {
    id: "5-create-a-transformation",
    level: 2,
    title: "5. Create a transformation",
    children: []
  }, {
    id: "6-waiting-for-transformation-to-finish",
    level: 2,
    title: "6. Waiting for transformation to finish",
    children: []
  }, {
    id: "7-conclusion",
    level: 2,
    title: "7. Conclusion",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var filter_by_view_definition_transformation_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/import-users-to-project.mdx


var import_users_to_project_excluded = ["components"];
var import_users_to_project_jsx = (external_react_default()).createElement;


var import_users_to_project_readingTime = {
  "text": "3 min read",
  "minutes": 2.28,
  "time": 136800,
  "words": 456
};
/* @jsxRuntime classic */
/* @jsx mdx */

var import_users_to_project_metadata = {
  title: 'Import Users into Project',
  tile: {
    name: 'Import Users into Project',
    description: 'This tutorial will demonstrate how to add users to a Project from a CSV file.',
    href: '/tutorials/import-users-to-project/',
    durationInMinutes: 5,
    relatedApiIds: ['projects']
  }
};
var import_users_to_project_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var import_users_to_project_Introduction = import_users_to_project_makeShortcode("Introduction");
var import_users_to_project_TutorialSection = import_users_to_project_makeShortcode("TutorialSection");
var import_users_to_project_Alert = import_users_to_project_makeShortcode("Alert");
var import_users_to_project_Title = import_users_to_project_makeShortcode("Title");
var import_users_to_project_CodeBlock = import_users_to_project_makeShortcode("CodeBlock");
var import_users_to_project_ContinueLearningSection = import_users_to_project_makeShortcode("ContinueLearningSection");
var import_users_to_project_TileList = import_users_to_project_makeShortcode("TileList");
var import_users_to_project_ResourceTile = import_users_to_project_makeShortcode("ResourceTile");
var import_users_to_project_layoutProps = {
  metadata: import_users_to_project_metadata
};
var import_users_to_project_MDXLayout = "wrapper";
function import_users_to_project_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, import_users_to_project_excluded);
  return (0,react_.mdx)(import_users_to_project_MDXLayout, (0,esm_extends/* default */.Z)({}, import_users_to_project_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(import_users_to_project_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "5",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial will demonstrate how to add users to a Project from a CSV file. This tutorial is accompanied by a sample powershell script located ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/platform-api-samples/tree/main/Administration/Project-Import-Users"
  }, "here"), ". Authorization is provided as a separate ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/platform-api-samples/blob/main/Authorization/New-OidcAuthCodePkceLogin.ps1"
  }, "script"), ".")), (0,react_.mdx)(import_users_to_project_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://docs.microsoft.com/en-us/powershell/scripting/overview?view=powershell-7.1"
  }, "PowerShell"), " (Recommended 7.0+ version) installed."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Access to, or create a new, project to use this sample.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Process of creating a new project is covered in ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-and-query-projects-guide/"
  }, "this tutorial")))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Your own ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Desktop/Mobile"), " application/client registered on iTwin Platform.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Steps to follow for registering an application can be found ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/register-and-modify-application/"
  }, "here"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Make sure that your application/client is associated with ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Projects API"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "projects:read"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "projects:modify"), " scopes enabled."))))), (0,react_.mdx)(import_users_to_project_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-request-access-token-for-use-in-authorization-header"
  }, "1. Request access token for use in Authorization header"), (0,react_.mdx)("p", null, "Authorization is required for all iTwin Platform API endpoints. See the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/platform-api-samples/tree/main/Authorization"
  }, "Authorization README"), " for more information.\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/platform-api-samples/blob/main/Administration/Project-Import-Users/Import-ProjectUsers.ps1"
  }, "This tutorial powershell sample"), " already includes code that obtains an authorization token."), (0,react_.mdx)(import_users_to_project_Alert, {
    mdxType: "Alert"
  }, "These samples require an Authorization Code + PKCE client. Registration of a", ' ', (0,react_.mdx)("strong", null, "Desktop/Mobile"), " application/client will give you an Authorization Code + PKCE client.")), (0,react_.mdx)(import_users_to_project_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-read-users-from-csv"
  }, "2. Read users from CSV"), (0,react_.mdx)("p", null, "Reading users from a CSV is dependent upon your particular development framework and is outside the scope of this tutorial."), (0,react_.mdx)("p", null, "Users CSV file must be in following format:"), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-CSV",
    "data-language": "CSV",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "Email: Roles\nuser1@example.com: &lt;comma-separated list of project roles&gt;\nuser2@example.com: &lt;comma-separated list of project roles&gt;\n"
    }
  }))), (0,react_.mdx)(import_users_to_project_TutorialSection, {
    actions: [(0,react_.mdx)(import_users_to_project_Title, {
      mdxType: "Title"
    }, "Example HTTP request"), (0,react_.mdx)(import_users_to_project_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/projects/validation/38b7e366-bc20-4bb1-9572-0797cf5221f/members HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-add-each-user-to-the-project"
  }, "3. Add each user to the Project"), (0,react_.mdx)("p", null, "Adding a team member to a project requires POSTing the request to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/projects/{id}/members"), " endpoint."), (0,react_.mdx)("h4", {
    "id": "request-headers"
  }, "Request headers"), (0,react_.mdx)("p", null, "Two headers are required. An authorization header is needed."), (0,react_.mdx)("pre", null, (0,react_.mdx)("code", {
    parentName: "pre",
    "className": "language-HTTP",
    "data-language": "HTTP",
    "data-highlighted-line-numbers": "",
    "dangerouslySetInnerHTML": {
      "__html": "Authorization: Bearer JWT_TOKEN\nContent-Type: application/json\n"
    }
  }))), (0,react_.mdx)(import_users_to_project_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(import_users_to_project_Title, {
      mdxType: "Title"
    }, "Example request body"), (0,react_.mdx)(import_users_to_project_CodeBlock, {
      language: "json",
      code: "{\n  \"email\":\"john.doe@my-org.com\",\n  \"roleNames\":[\n    \"Project Role 1\",\n    \"Project Role 2\"\n  ]\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-body"
  }, "Request body"), (0,react_.mdx)("p", null, "The request body is specified as JSON and requires the email and roleNames properties. The API works with one user at a time, thus one ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "email"), ". Multiple roles may be requested via the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "roleNames"), " array.")), (0,react_.mdx)(import_users_to_project_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(import_users_to_project_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(import_users_to_project_ResourceTile, {
    title: "Administration API group",
    href: "/api-groups/administration/",
    description: "Manage the users, projects, and organizations that interact with your iTwin.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(import_users_to_project_ResourceTile, {
    title: "Projects API documentation",
    href: "/apis/projects/",
    description: "An overview and detailed Projects API documentation.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(import_users_to_project_ResourceTile, {
    title: "iTwin Platform API samples",
    href: "https://github.com/iTwin/platform-api-samples",
    description: "PowerShell samples demonstrating API endpoints.",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
import_users_to_project_MDXContent.isMDXComponent = true;
var import_users_to_project_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-request-access-token-for-use-in-authorization-header",
    level: 2,
    title: "1. Request access token for use in Authorization header",
    children: []
  }, {
    id: "2-read-users-from-csv",
    level: 2,
    title: "2. Read users from CSV",
    children: []
  }, {
    id: "3-add-each-user-to-the-project",
    level: 2,
    title: "3. Add each user to the Project",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var import_users_to_project_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/itwin-unreal-controlling-your-imodel.mdx


var itwin_unreal_controlling_your_imodel_excluded = ["components"];
var itwin_unreal_controlling_your_imodel_jsx = (external_react_default()).createElement;


var itwin_unreal_controlling_your_imodel_readingTime = {
  "text": "13 min read",
  "minutes": 12.91,
  "time": 774600,
  "words": 2582
};
/* @jsxRuntime classic */
/* @jsx mdx */

var itwin_unreal_controlling_your_imodel_metadata = {
  title: 'Controlling your iModel in Unreal',
  tile: {
    name: 'Controlling your iModel in Unreal',
    description: 'Build a UI to control the animations in your iModel',
    thumbnail: '/images/unreal-ui-featured-thumb.png',
    href: '/tutorials/itwin-unreal-controlling-your-imodel',
    durationInMinutes: 60,
    relatedApiIds: ['itwin-unreal'],
    showInFirstSteps: false
  }
};
var itwin_unreal_controlling_your_imodel_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var itwin_unreal_controlling_your_imodel_Introduction = itwin_unreal_controlling_your_imodel_makeShortcode("Introduction");
var itwin_unreal_controlling_your_imodel_TutorialSection = itwin_unreal_controlling_your_imodel_makeShortcode("TutorialSection");
var TitledImage = itwin_unreal_controlling_your_imodel_makeShortcode("TitledImage");
var itwin_unreal_controlling_your_imodel_Alert = itwin_unreal_controlling_your_imodel_makeShortcode("Alert");
var LinkingImage = itwin_unreal_controlling_your_imodel_makeShortcode("LinkingImage");
var itwin_unreal_controlling_your_imodel_WebMLoop = itwin_unreal_controlling_your_imodel_makeShortcode("WebMLoop");
var itwin_unreal_controlling_your_imodel_ContinueLearningSection = itwin_unreal_controlling_your_imodel_makeShortcode("ContinueLearningSection");
var itwin_unreal_controlling_your_imodel_TileList = itwin_unreal_controlling_your_imodel_makeShortcode("TileList");
var itwin_unreal_controlling_your_imodel_ResourceTile = itwin_unreal_controlling_your_imodel_makeShortcode("ResourceTile");
var itwin_unreal_controlling_your_imodel_layoutProps = {
  metadata: itwin_unreal_controlling_your_imodel_metadata
};
var itwin_unreal_controlling_your_imodel_MDXLayout = "wrapper";
function itwin_unreal_controlling_your_imodel_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, itwin_unreal_controlling_your_imodel_excluded);
  return (0,react_.mdx)(itwin_unreal_controlling_your_imodel_MDXLayout, (0,esm_extends/* default */.Z)({}, itwin_unreal_controlling_your_imodel_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(itwin_unreal_controlling_your_imodel_Introduction, {
    skillLevel: "Advanced",
    durationInMinutes: "30",
    summaryImageSrc: "/unreal-docs-site/static/images/unreal-ui-featured.png",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial looks at the various blueprint functions in the iTwin Unreal Datasmith Plugin you can use to manipulate your iModel in Unreal\nand builds a simple user interface with a scrubber for users to interact with your schedule animation in real-time.\nIt also focuses on synchronizing the level sequence (used by actors with transform animations) with the ScheduledActor\u2019s animations,\nwhich is necessary when you exported using the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "combine meshes"), " option.")), (0,react_.mdx)(itwin_unreal_controlling_your_imodel_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Installed ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://www.unrealengine.com/download"
  }, "Unreal Engine 4.26.1"), " or later"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "In your project already imported Datasmith content that was made with the iTwin Exporter for Datasmith from an iTwin that contains a schedule script. You may\nfollow one of the tutorials below for help exporting your own data.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/itwin-unreal-export-combined-meshes/"
  }, "Exporting iModel to Unreal Datasmith as a combined mesh")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/itwin-unreal-dataprep"
  }, "Processing iModel metadata in Unreal Visual Dataprep")))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "An existing Unreal Engine project with the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/itwin-unreal-export-combined-meshes/#3-install-the-itwin-unreal-datasmith-plugin-in-your-unreal-project"
  }, "iTwin Unreal Datasmith Plugin"), " installed.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Depending on your Unreal Engine version, this may require Visual Studio to be installed. The prerequisites section of ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/itwin-unreal-export-combined-meshes/#prerequisites"
  }, "Exporting iModel to Unreal Datasmith as a combined mesh"), "\nhas instructions for recompiling the plugin."))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A reasonable knowledge of blueprint scripting in Unreal Engine"))), (0,react_.mdx)(itwin_unreal_controlling_your_imodel_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-preparing-actors-in-your-scene"
  }, "1. Preparing actors in your scene"), (0,react_.mdx)("p", null, "In the level editor where you see your imported data, you need to add some tags to specific actors so later code can find them easily.\nFrom the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "World Outliner"), " at the top right of the editor, select the datasmith scene actor that was created when you imported your Datasmith content. Then in the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Details"), " panel,\nsearch for or scroll down to the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Actor > Tags"), " section and press the plus button to add a new tag, give it a value of \u201CExampleDatasmithScene1\u201D."), (0,react_.mdx)("p", null, "If you selected the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "combine meshes"), " option while exporting, you will have an actor named ScheduleActor as a child of your datasmith scene actor,\nSelect it and give it a new tag with a value of \u201CExampleScheduleActor1\u201D. It is not necessary to have done a combined-mesh export,\nhowever this tutorial will assume you have and write the code to synchronize the exported level sequence with the ScheduleActor\ndriving animations in the combined mesh."), (0,react_.mdx)(TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-ui-actor-tags.png",
    alt: "setting actor tags in the details panel",
    className: "sample-img-l",
    mdxType: "TitledImage"
  }), (0,react_.mdx)("p", null, "If you have not done so already, in the Content Browser, in the folder where you chose to import your datasmith content, go into the animations subfolder\nand drag-and-drop the ScheduleAnimation asset into the level to add the actor to the scene."), (0,react_.mdx)(TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-export-anim-drag-drop.png",
    alt: "drag-and-drop-level-sequence",
    mdxType: "TitledImage"
  }), (0,react_.mdx)("p", null, "Make sure the new level sequence actor is selected, and in the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Details Panel"), ", give it an\nactor tag with a value of \u201CScheduleLevelSequence1\u201D. Still in the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Details Panel"), ", find the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Playback"), " settings section, check ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Auto Play"), " and\nset the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Loop"), " option to ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Loop Indefinitely"), "."), (0,react_.mdx)(TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-ui-set-autoplay.png",
    alt: "set auto play",
    className: "sample-img-l",
    mdxType: "TitledImage"
  }), (0,react_.mdx)("p", null, "Using actor tags is one of several ways to make it easy to access actors in the level at runtime in our code. Now that you have them setup,\nyou can use them in the code of the classes that will comprise your user interface.")), (0,react_.mdx)(itwin_unreal_controlling_your_imodel_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-setting-up-our-interface-classes"
  }, "2. Setting up our interface classes"), (0,react_.mdx)("p", null, "In Unreal Engine, ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "HUD"), " (Heads Up Display) classes are used to draw the 2-dimensional interface overlaying the rendered scene.\nThe HUD is controlled by the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "PlayerController"), " it is attached to, and both are provisioned by the engine\u2019s active ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GameMode"), ".\nIn this tutorial a basic gamemode setup will be created so when you run your project, the interface will have a scrubber timeline, some\ndisplayed information about the scene, and inputs to control the schedule animation playback."), (0,react_.mdx)("p", null, "Start by pressing the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Add/Import"), " button in the Content Browser, and under ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "User Interface"), " pick ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Widget Blueprint"), " to create a new\n", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Widget Blueprint"), ". Name it ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ExampleTimelineWidget"), "."), (0,react_.mdx)(itwin_unreal_controlling_your_imodel_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "The names used in this tutorial are arbitrary. You can use any name as long as you connect the classes correctly."), (0,react_.mdx)(TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-ui-createwidgetblueprint.png",
    alt: "create a widget blueprint by using the add/import button in the Content Browser",
    className: "sample-img-m",
    mdxType: "TitledImage"
  }), (0,react_.mdx)("p", null, "Next, create a new ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GameModeBase"), " blueprint by pressing the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Add/Import"), " button in the Content Browser again,\nthis time choosing ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Blueprint Class"), " at the top, under create ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Create Basic Asset"), ". In the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Pick Parent Class"), " dialog, use the search menu to\nfind the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GameModeBase"), " class. Some, but not all, classes may also be selected from the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Common Classes"), " list at the top of the dialog.\nName your new ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GameModeBase"), " subclass ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ExampleGameModeBase"), ". In the same way create a new ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "PlayerController"), " blueprint, ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ExamplePlayerController"), ",\nand a new ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "HUD"), " blueprint, ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ExampleHUD"), ", as well. Double-click the newly created ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ExampleHUD"), " asset in the content editor to open the blueprint editor."), (0,react_.mdx)("p", null, "In your HUD\u2019s blueprint event graph, add a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Create Widget"), " node to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Begin Play"), " event and call the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Add to Viewport"), " function on the created widget reference.\nSet the class parameter of the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Create Widget"), " node to the blueprint widget class you created, ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ExampleTimelineWidget"), ".\nThe resulting node graph for the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Begin Play"), " event should look as follows."), (0,react_.mdx)(LinkingImage, {
    src: "/unreal-docs-site/static/images/unreal-ui-hud-beginplay.png",
    alt: "screenshot of blueprint code for ExampleHUD class",
    href: "https://blueprintue.com/blueprint/k0_44j0-/",
    tooltip: "Click to interact or copy nodes at blueprintue.com",
    className: "sample-img-xl",
    mdxType: "LinkingImage"
  }), (0,react_.mdx)("p", null, "Go back to the Content Browser in the main level editor window and open the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ExamplePlayerController"), " class. In the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Begin Play"), " event,\nadd a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Get All Actors Of Class with Tag"), " node and get all Scheduled Actors with the tag you added earlier, \u201CExampleScheduleActor1\u201D. Get the\nelement at index 0 (the first) element of the array, since we know we have one such actor in the scene, and set it as the value for a new\nvariable, ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Scene"), ". You can drag the output pin of the array indexing ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Get"), " node, and release in the graph space to open the context menu\nand at the top select ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Promote to variable"), " to do this quickly."), (0,react_.mdx)("p", null, "Then add a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Get HUD"), " node and a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Cast to ExampleHUD"), " node after the intialization of ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Scene"), ". Store the ExampleHUD instance in a new variable, ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "PlayerHUD"), "."), (0,react_.mdx)(LinkingImage, {
    src: "/unreal-docs-site/static/images/unreal-ui-playercontroller-beginplay.png",
    alt: "screenshot of player controller's beginplay",
    href: "https://blueprintue.com/blueprint/02yoz_1_/",
    tooltip: "Click to interact or copy nodes at blueprintue.com",
    className: "blueprint-img",
    mdxType: "LinkingImage"
  }), (0,react_.mdx)("p", null, "Create a new boolean variable ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "IsMouseCaptured"), ", and right-click in the event graph, search in the context menu for \u201Cspacebar\u201D to add the\nspace bar input event. Then add the following blueprint code to use spacebar to toggle between controlling our spectator pawn or the mouse."), (0,react_.mdx)(itwin_unreal_controlling_your_imodel_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "See the", ' ', (0,react_.mdx)("a", {
    href: "https://docs.unrealengine.com/InteractiveExperiences/Input/"
  }, "Unreal Engine input management documentation"), ' ', "for better ways of managing input. Using a direct keyboard event is done for simplicity and there are more robust ways of reacting to input."), (0,react_.mdx)(LinkingImage, {
    src: "/unreal-docs-site/static/images/unreal-ui-playercontroller-onspacebar.png",
    alt: "screenshot of player controller's spacebar event implementation",
    href: "https://blueprintue.com/blueprint/wdbxp-au/",
    tooltip: "Click to interact or copy nodes at blueprintue.com",
    className: "blueprint-img",
    mdxType: "LinkingImage"
  }), (0,react_.mdx)("p", null, "Finally, set your world to use these new blueprint classes, so that when the level is played, your widget is\nin the viewport. Click the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Settings"), " icon in the top bar, and click ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "World Settings"), " in its dropdown. In the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "World Settings"), " panel,\nfind the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Game Mode"), " section. There, see the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "GameMode Override"), " dropdown value to your newly created ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ExampleGameModeBase"), ".\nThen expand the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Selected GameMode"), " options by clicking the arrow to the left of the label, and set the HUD and PlayerController classes to the ones you created."), (0,react_.mdx)(TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-ui-gamemode-override.png",
    alt: "screenshot of gamemode override settings",
    mdxType: "TitledImage"
  }), (0,react_.mdx)(itwin_unreal_controlling_your_imodel_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "In addition to a game mode override for local testing, you may also want to set the default GameMode in the project settings'", ' ', (0,react_.mdx)("strong", null, "Maps & Modes"), " section."), (0,react_.mdx)("p", null, "Now that HUD and widget spawn when play begins, you need to add some controls to your widget to be able to see it, and then you will be able to hook up those controls\nto your iTwin\u2019s animation.")), (0,react_.mdx)(itwin_unreal_controlling_your_imodel_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-laying-out-the-hud"
  }, "3. Laying out the HUD"), (0,react_.mdx)("p", null, "In the Content Browser, double-click the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ExampleTimelineWidget"), " asset you created to open the widget editor. From the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Palette"), " on the left,\ndrag and drop a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Slider"), " control into the widget designer viewport. Make sure it is selected, and use the scale handles to scale it across the bottom\nedge of the viewport to use as our scrubber. Additionally, place a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Text"), " control at each the left and right end of the slider, and one more above the middle\nof the slider. You will show your iTwin\u2019s schedule start, end, and current time of the animation in these text controls, updating the current time every tick."), (0,react_.mdx)(itwin_unreal_controlling_your_imodel_WebMLoop, {
    src: "/unreal-docs-site/static/images/unreal-ui-widget-building.webm",
    mdxType: "WebMLoop"
  }), (0,react_.mdx)("p", null, "In the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Hierarchy"), " panel on the left of the editor, rename your newly placed controls respectively to, Scrubber, StartTime, EndTime, and CurrentTime,\nand in the top-right corner of the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Details"), " panel make sure the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Is Variable"), " checkbox is checked so you can reference your controls in the event graph."), (0,react_.mdx)(TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-ui-isvariable.png",
    alt: "the location of the Is Variable checkbox in the interface",
    className: "sample-img-xl",
    mdxType: "TitledImage"
  }), (0,react_.mdx)("p", null, "To start scripting your placed controls, switch to the blueprint graph by pressing the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Graph"), " button in the top right of the window in the blueprint widget editor.\nOn the widget\u2019s ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Construct"), " event, first store both the \u201CExampleScheduleActor1\u201D, and the \u201CScheduleLevelSequence1\u201D tagged actors stored to variables in your script.\nThen call the StartTime text control\u2019s ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Set Text"), " function and set it to the formatted date text of the ScheduledActor\u2019s ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "AnimationStartTime"), ". Do the same\nfor EndTime but with the ScheduledActor\u2019s ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "AnimationEndTime"), "."), (0,react_.mdx)(itwin_unreal_controlling_your_imodel_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "If you did not perform an export with the ", (0,react_.mdx)("em", null, "combine meshes"), " option, the ScheduledActor's static blueprint function", ' ', (0,react_.mdx)("a", {
    href: "/unreal/integration/blueprint-api-reference/#AScheduledActor::GetSeparatedExportSceneData"
  }, (0,react_.mdx)("code", null, "GetSeparatedExportSceneData")), ' ', "can be called with your Datasmith Scene Actor to receive the", ' ', (0,react_.mdx)("code", null, "ScheduleStartDateTime"), ", ", (0,react_.mdx)("code", null, "ScheduleEndDateTime"), ", and", ' ', (0,react_.mdx)("code", null, "ScheduleTicksPerSecond"), "."), (0,react_.mdx)("p", null, "Then add a custom event to the event graph by right-clicking in the graph and search\nfor ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Add Custom Event"), " in the context menu. Name this event \"Set Correct Level\nSequence End\", and invoke the event after the variables are initialized in the Construct\nevent that you have been building up."), (0,react_.mdx)(LinkingImage, {
    src: "/unreal-docs-site/static/images/unreal-ui-timelinewidget-beginplay.png",
    alt: "screenshot of timeline widget's construct event",
    href: "https://blueprintue.com/blueprint/1fqeenu4/",
    tooltip: "Click to interact or copy nodes at blueprintue.com",
    className: "blueprint-img",
    mdxType: "LinkingImage"
  }), (0,react_.mdx)("p", null, "Before you implement that custom event, in the tick event update the CurrentText control with the current time of the ScheduleActor. If you did not combine meshes during export,\nyou can instead use the static plugin blueprint function ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/unreal/integration/blueprint-api-reference/#AScheduledActor::GetScheduleDateTimeFromActiveSequence"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "a"
  }, "GetScheduleDateTimeFromActiveSequence")), "\nto get the current date given the level sequence actor. Then, after having set the text, calculate the proportion of the animation played and update Scrubber\u2019s value to match, so that it moves along\nwith the animation every tick."), (0,react_.mdx)(LinkingImage, {
    src: "/unreal-docs-site/static/images/unreal-ui-timelinewidget-tick.png",
    alt: "screenshot of timeline widget's tick event",
    href: "https://blueprintue.com/blueprint/m5zhmaz-/",
    tooltip: "Click to interact or copy nodes at blueprintue.com",
    className: "blueprint-img",
    mdxType: "LinkingImage"
  }), (0,react_.mdx)("p", null, "Now you should implement the custom event, ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "SetCorrectLevelSequenceEnd"), ". This step is necessary to synchronize the exported level sequence with the ScheduledActor,\nbecause the DatasmithSDK does not currently have a way to set the end frame of a level sequence. When an export is created with the combine meshes option, only\ntransform data is put in the level sequence, therefore the true end frame which is typically a non-transform frame (i.e. visibility, color, etc, frame) is lost.\nTo compensate for this, you can calculate the end frame manually from the metadata, and set the correct end time at startup. You could also set the end of the level sequence\nasset itself, but a one-time computation at startup is not expensive and does not need to be recalculated in the event of a re-export of your Datasmith content."), (0,react_.mdx)("p", null, "To calculate it, divide the schedule date range using the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "AnimationTicksPerSecondScale"), " variable to find how many 24FPS frames occur during the equivalent game time, which\ncan then be used to set the level sequence end frame from. In this example int64 is used in order to have the same resolution as DateTime which is internally a single int64.\nAdditionally, some constants from Unreal\u2019s native ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ETimespan"), " enumeration are reproduced to calculate the amount of ticks from the amount of seconds using only available blueprint nodes."), (0,react_.mdx)(LinkingImage, {
    src: "/unreal-docs-site/static/images/unreal-ui-setcorrectlevelsequenceend.png",
    alt: "screenshot of player timeline widget's custom event 'set correct level sequence end'",
    href: "https://blueprintue.com/blueprint/aug9_doq/",
    tooltip: "Click to interact or copy nodes at blueprintue.com",
    className: "blueprint-img",
    mdxType: "LinkingImage"
  }), (0,react_.mdx)("p", null, "Now, when you hit the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Play"), " button to watch the scene unfold, your animations should play and loop, with the scrubber moving and the date text updating throughout. You should\nalso be able to press the spacebar to get control of the mouse in order to move the scrubber. Moving the scrubber however, won\u2019t do anything. That is your next step.")), (0,react_.mdx)(itwin_unreal_controlling_your_imodel_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-scripting-the-scrubber"
  }, "4. Scripting the scrubber"), (0,react_.mdx)("p", null, "Go back to the widget designer by hitting the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Designer"), " button at the top-right of the widget blueprint graph. Select your scrubber control in the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Hierarchy"), " tab,\nand in the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Details"), " tab scroll all the way to the bottom to the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Events"), " section. Click the green plus ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "On Mouse Capture Begin"), ", ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "On Mouse Capture End"), ",\nand ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "On Value Changed"), " buttons to add those events. Each time you press one of the buttons, you will be taken to where the event was added in the graph, go back to the\ndesigner each time until all three events have been added."), (0,react_.mdx)(TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-ui-widget-add-callbacks.png",
    alt: "the green plus buttons that let you add callbacks for scrubber controls to the event graph",
    className: "sample-img-xl",
    mdxType: "TitledImage"
  }), (0,react_.mdx)("p", null, "On mouse capture, pause the animation, so that the scene does not keep playing while a user is trying to scrub through it. In the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "On Mouse Capture Begin"), " event,\nset the ScheduleActor\u2019s ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "AnimationIsPlaying"), " variable to false, and call the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Pause"), " function on the level sequence. In the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "On Mouse Capture End"), " event, do the opposite,\nsetting ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "AnimationIsPlaying"), " to true, and calling the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Play"), " function on the level sequence."), (0,react_.mdx)(LinkingImage, {
    src: "/unreal-docs-site/static/images/unreal-ui-timelinewidget-onmouse.png",
    alt: "the implementation of On Mouse Capture events for the ExampleTimelineWidget for playback control",
    href: "https://blueprintue.com/blueprint/vt_82mpw/",
    tooltip: "Click to interact or copy nodes at blueprintue.com",
    className: "sample-img-xl",
    mdxType: "LinkingImage"
  }), (0,react_.mdx)("p", null, "Finally, you must implement the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "On Value Changed"), " event by converting the scrubber value from between 0 and 1 to the appropriate date in the schedule for setting the\nScheduleActor\u2019s ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "AnimationTime"), ", and you must calculate the proportional time in the level sequence and call its ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "SetPlaybackPosition"), " function. The necessary math for\ntransforming from the value between 0 and 1 to the level sequence seconds and schedule date time can be seen in the following blueprint code."), (0,react_.mdx)(LinkingImage, {
    src: "/unreal-docs-site/static/images/unreal-ui-timelinewidget-onvaluechanged.png",
    alt: "the implementation of On Value Changed for the ExampleTimelineWidget",
    href: "https://blueprintue.com/blueprint/brwbb3iz/",
    tooltip: "Click to interact or copy nodes at blueprintue.com",
    className: "blueprint-img",
    mdxType: "LinkingImage"
  })), (0,react_.mdx)(itwin_unreal_controlling_your_imodel_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "conclusion"
  }, "Conclusion"), (0,react_.mdx)("p", null, "With your scene scrubber now working, you should be able to start extending the code with your own inputs and controls,\nsuch as using custom interface control styles, or new inputs like pause buttons, etc. For a full list of available blueprint\nfunctions in the iTwin Unreal Datasmith Plugin, see the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/unreal/integration/blueprint-api-reference/"
  }, "Blueprint API reference"), "."), (0,react_.mdx)("p", null, "If you have an idea for something that could improve your workflow and belongs in the plugin, visit ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://itwinplatform.ideas.aha.io/?category=7010781758179112615"
  }, "our ideas portal"), ".")), (0,react_.mdx)(itwin_unreal_controlling_your_imodel_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(itwin_unreal_controlling_your_imodel_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(itwin_unreal_controlling_your_imodel_ResourceTile, {
    title: "iTwin Exporter for Datasmith documentation",
    href: "/unreal/integration/documentation/",
    description: "Extended functionality and workflow descriptions in iTwin Exporter for Datasmith",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(itwin_unreal_controlling_your_imodel_ResourceTile, {
    title: "The iTwin Unreal Datasmith Plugin Blueprint api reference",
    href: "/unreal/integration/blueprint-api-reference/",
    description: "Follow this tutorial to get iModel data into the Datasmith format as a combined mesh",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(itwin_unreal_controlling_your_imodel_ResourceTile, {
    title: "Unreal example HUD",
    href: "https://docs.unrealengine.com/Resources/ContentExamples/Blueprints_HUD/1_1/",
    description: "See the official example HUD in Unreal to learn some HUD design techniques and best practices",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
itwin_unreal_controlling_your_imodel_MDXContent.isMDXComponent = true;
var itwin_unreal_controlling_your_imodel_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-preparing-actors-in-your-scene",
    level: 2,
    title: "1. Preparing actors in your scene",
    children: []
  }, {
    id: "2-setting-up-our-interface-classes",
    level: 2,
    title: "2. Setting up our interface classes",
    children: []
  }, {
    id: "3-laying-out-the-hud",
    level: 2,
    title: "3. Laying out the HUD",
    children: []
  }, {
    id: "4-scripting-the-scrubber",
    level: 2,
    title: "4. Scripting the scrubber",
    children: []
  }, {
    id: "conclusion",
    level: 2,
    title: "Conclusion",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var itwin_unreal_controlling_your_imodel_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/itwin-unreal-dataprep.mdx


var itwin_unreal_dataprep_excluded = ["components"];
var itwin_unreal_dataprep_jsx = (external_react_default()).createElement;


var itwin_unreal_dataprep_readingTime = {
  "text": "5 min read",
  "minutes": 4.905,
  "time": 294300,
  "words": 981
};
/* @jsxRuntime classic */
/* @jsx mdx */

var itwin_unreal_dataprep_metadata = {
  title: 'Processing iModel metadata in Unreal Visual Dataprep',
  tile: {
    name: 'Processing iModel metadata in Unreal Visual Dataprep',
    description: 'Create Unreal Dataprep scripts that use your iTwin data',
    thumbnail: '/images/unreal-export-dataprep-cover-thumb.jpg',
    href: '/tutorials/itwin-unreal-dataprep',
    durationInMinutes: 10,
    relatedApiIds: ['itwin-unreal'],
    showInFirstSteps: false
  }
};
var itwin_unreal_dataprep_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var itwin_unreal_dataprep_Introduction = itwin_unreal_dataprep_makeShortcode("Introduction");
var itwin_unreal_dataprep_TutorialSection = itwin_unreal_dataprep_makeShortcode("TutorialSection");
var itwin_unreal_dataprep_WebMLoop = itwin_unreal_dataprep_makeShortcode("WebMLoop");
var itwin_unreal_dataprep_TitledImage = itwin_unreal_dataprep_makeShortcode("TitledImage");
var itwin_unreal_dataprep_Alert = itwin_unreal_dataprep_makeShortcode("Alert");
var itwin_unreal_dataprep_ContinueLearningSection = itwin_unreal_dataprep_makeShortcode("ContinueLearningSection");
var itwin_unreal_dataprep_TileList = itwin_unreal_dataprep_makeShortcode("TileList");
var itwin_unreal_dataprep_ResourceTile = itwin_unreal_dataprep_makeShortcode("ResourceTile");
var itwin_unreal_dataprep_layoutProps = {
  metadata: itwin_unreal_dataprep_metadata
};
var itwin_unreal_dataprep_MDXLayout = "wrapper";
function itwin_unreal_dataprep_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, itwin_unreal_dataprep_excluded);
  return (0,react_.mdx)(itwin_unreal_dataprep_MDXLayout, (0,esm_extends/* default */.Z)({}, itwin_unreal_dataprep_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(itwin_unreal_dataprep_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "10",
    summaryImageSrc: "/unreal-docs-site/static/images/unreal-export-dataprep-cover.png",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial guides you through the basics of using Visual Dataprep with iTwin metadata exported using the iTwin Exporter for Datasmith.")), (0,react_.mdx)(itwin_unreal_dataprep_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://www.unrealengine.com/download"
  }, "Unreal Engine 4.26.1"), " and the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://developer.bentley.com/unreal/"
  }, "iTwin Exporter for Datasmith"), " installed.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "The full list of prerequisites can be found in the prerequisites section of ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/itwin-unreal-export-combined-meshes/#prerequisites"
  }, "Exporting iModel to Unreal Datasmith as a combined mesh"), "."))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "An existing Datasmith export made with the iTwin Exporter for Datasmith. If you need one, you may complete one of the following tutorials:", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/itwin-unreal-export-combined-meshes/"
  }, "Exporting iModel to Unreal Datasmith as a combined mesh")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/itwin-unreal-export-filtering/"
  }, "Exporting an iModel to Unreal with filters")))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "An existing Unreal Engine project with the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/itwin-unreal-export-combined-meshes/#3-install-the-itwin-unreal-datasmith-plugin-in-your-unreal-project"
  }, "iTwin Unreal Datasmith Plugin"), " installed.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Depending on your Unreal Engine version, this may require Visual Studio to be installed. The prerequisites section of ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/itwin-unreal-export-combined-meshes/#prerequisites"
  }, "Exporting iModel to Unreal Datasmith as a combined mesh"), "\nhas instructions for recompiling the plugin."))))), (0,react_.mdx)(itwin_unreal_dataprep_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-import-your-datasmith-content-into-a-new-dataprep-recipe"
  }, "1. Import your Datasmith content into a new Dataprep recipe"), (0,react_.mdx)("p", null, "Create a new Dataprep recipe. Right-click within the content browser. Under ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Create Advanced Asset"), ", select\nthe ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Dataprep"), " asset category, then the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Dataprep Asset"), " type."), (0,react_.mdx)(itwin_unreal_dataprep_WebMLoop, {
    src: "/unreal-docs-site/static/images/unreal-export-create-dataprep-asset.webm",
    mdxType: "WebMLoop"
  }), (0,react_.mdx)("p", null, "Double-click the new asset in the content browser to open it in the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Dataprep Recipe Editor"), ".\nAt the top right in the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Inputs"), " section, press the plus button, then browse for the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, ".udatasmith"), " file created during your export.\nThis adds your Datasmith content to the Recipe editor."), (0,react_.mdx)(itwin_unreal_dataprep_WebMLoop, {
    src: "/unreal-docs-site/static/images/unreal-export-dataprep-add-import-provider.webm",
    mdxType: "WebMLoop"
  }), (0,react_.mdx)("p", null, "When the import is complete, select any actor in the viewport.\nIn the Property Pane on the right side, scroll down to ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Asset User Data > Datasmith User Data"), " to inspect fields that are available to match\non, as well as compare those values on different objects."), (0,react_.mdx)(itwin_unreal_dataprep_TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-export-dataprep-metadata-view.png",
    alt: "inspect metadata properties in the dataprep editor",
    mdxType: "TitledImage"
  }), (0,react_.mdx)("p", null, "It may be helpful to read the text in read-only entries using the tooltips. To do so, hover over them, or even\nright-click to be able to copy the text. For clarity, the above image has a few sample labels annotated."), (0,react_.mdx)("p", null, "Alternatively, inspect your element properties in the iTwin Exporter for Datasmith in the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Properties"), " tab.\nBe aware that names here will not be the same as names in the metadata in Unreal.\nTo avoid name collisions and because Datasmith has specific rules for metadata entry names, we have added prefixes to the names in Unreal.\nBecause of this, it is recommended to find the entry name in Unreal once you have the metadata you intend to match on."), (0,react_.mdx)(itwin_unreal_dataprep_TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-export-app-property-tab.png",
    alt: "inspect metadata properties in the itwin exporter for Datasmith app",
    className: "sample-img-xl",
    mdxType: "TitledImage"
  })), (0,react_.mdx)(itwin_unreal_dataprep_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-substitute-a-material"
  }, "2. Substitute a material"), (0,react_.mdx)("p", null, "Dateprep recipes allow you to programmatically modify your scene.\nFor example, quickly substituting pieces of an imported scene, such as the materials used or placed actors.\nFor demonstration purposes, let\u2019s substitute a default material with one of Unreal\u2019s high-quality starter content materials."), (0,react_.mdx)("p", null, "Search through your iTwin\u2019s imported metadata for something you want to match on.\nIn our iTwin we found the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "objectStructualUsage_StructuralMaterial"), " metadata property, and see that it has a value of ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Timber"), " for our inspected\nactor, which we will filter on to make sure all \u201CTimber\u201D items use a high-quality wood material.\nAdd a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Metadata Value"), " filter and set the match type to ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Exact Match"), ". Then, add a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Set Material"), " operator and choose from any material in your\nproject."), (0,react_.mdx)(itwin_unreal_dataprep_WebMLoop, {
    src: "/unreal-docs-site/static/images/unreal-export-dataprep-set-mat.webm",
    mdxType: "WebMLoop"
  }), (0,react_.mdx)(itwin_unreal_dataprep_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Your metadata will not necessarily match the properties we use here. The metadata in your iTwin is entirely dependent on the source files synchronized to it. If you expect to see specific metadata in your iTwin but do not see it in the viewer's ", (0,react_.mdx)("strong", null, "Properties"), " tab, please ask why at the iTwin.js", ' ', (0,react_.mdx)("a", {
    href: "https://github.com/iTwin/itwinjs-core/discussions/"
  }, "Github Discussions"), ' ', "page."), (0,react_.mdx)("p", null, "When you are satisifed with your changes to the Dataprep recipe, press the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Execute"), " button to run the operator graph and\nmake your material substitution visible in the viewport."), (0,react_.mdx)(itwin_unreal_dataprep_TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-export-dataprep-exec-button.png",
    alt: "The execute button in the dataprep editor",
    mdxType: "TitledImage"
  })), (0,react_.mdx)(itwin_unreal_dataprep_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-substituting-materials-with-a-table"
  }, "3. Substituting materials with a table"), (0,react_.mdx)("p", null, "For managing substitution of many materials, it may be useful to use Dataprep\u2019s ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Substitute Material By Table"), " operator.\nAdd the operator and in its parameters click the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Material Data Table"), " parameter\u2019s asset selection.\nUnder the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Create New Asset"), " section at the top, click ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Data Table"), ".\nIn the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Pick Row Structure"), " dialog, pick ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "MaterialSubstitutionDataTable"), " and choose the folder to create the new asset in.\nDouble-click the asset\u2019s thumbnail in the operator parameters to quickly open your new table in the data table editor.\nClick the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Add Row"), " button to add a material substitution which consists of a search string, search match type, and the target material.\nUnreal also supports loading table rows from CSV and JSON data from the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Details Pane"), " in the data table editor."), (0,react_.mdx)(itwin_unreal_dataprep_WebMLoop, {
    src: "/unreal-docs-site/static/images/unreal-export-mat-sub-table.webm",
    controls: "",
    mdxType: "WebMLoop"
  }), (0,react_.mdx)("p", null, "This concludes our demonstration of using iTwin metadata in Dataprep.\nDataprep has many more operators for common processes like simplifying, decimating, and merging geometry, or populating surfaces with high-quality assets\nsuch as animated foliage assets. You can also create your own Dataprep operators with Unreal\u2019s Blueprints.\nThe full Dataprep documentation from Unreal can be found ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://docs.unrealengine.com/WorkingWithContent/Importing/Dataprep/"
  }, "here"), ".")), (0,react_.mdx)(itwin_unreal_dataprep_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(itwin_unreal_dataprep_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(itwin_unreal_dataprep_ResourceTile, {
    title: "iTwin Exporter for Datasmith documentation",
    href: "/unreal/integration/documentation/",
    description: "Extended functionality and workflow descriptions in iTwin Exporter for Datasmith",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(itwin_unreal_dataprep_ResourceTile, {
    title: "Exporting iModel to Unreal Datasmith as a combined mesh",
    href: "/tutorials/itwin-unreal-export-combined-meshes/",
    description: "Follow this tutorial to get iModel data into the Datasmith format as a combined mesh.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(itwin_unreal_dataprep_ResourceTile, {
    title: "Using Unreal Visual Dataprep",
    href: "https://docs.unrealengine.com/WorkingWithContent/Importing/Dataprep/",
    description: "Unreal's documentation on Visual Dataprep",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
itwin_unreal_dataprep_MDXContent.isMDXComponent = true;
var itwin_unreal_dataprep_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-import-your-datasmith-content-into-a-new-dataprep-recipe",
    level: 2,
    title: "1. Import your Datasmith content into a new Dataprep recipe",
    children: []
  }, {
    id: "2-substitute-a-material",
    level: 2,
    title: "2. Substitute a material",
    children: []
  }, {
    id: "3-substituting-materials-with-a-table",
    level: 2,
    title: "3. Substituting materials with a table",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var itwin_unreal_dataprep_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/itwin-unreal-export-combined-meshes.mdx


var itwin_unreal_export_combined_meshes_excluded = ["components"];
var itwin_unreal_export_combined_meshes_jsx = (external_react_default()).createElement;


var itwin_unreal_export_combined_meshes_readingTime = {
  "text": "8 min read",
  "minutes": 7.865,
  "time": 471900,
  "words": 1573
};
/* @jsxRuntime classic */
/* @jsx mdx */

var itwin_unreal_export_combined_meshes_metadata = {
  title: 'Exporting an iModel to Unreal Datasmith as a combined mesh',
  tile: {
    name: 'Exporting an iModel to Unreal Datasmith as a combined mesh',
    description: 'Follow this tutorial to get iModel data into the Datasmith format as a combined mesh.',
    thumbnail: '/images/unreal-export-app-fullscreen.png',
    href: '/tutorials/itwin-unreal-export-combined-meshes',
    durationInMinutes: 20,
    relatedApiIds: ['itwin-unreal'],
    showInFirstSteps: false
  }
};
var itwin_unreal_export_combined_meshes_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var itwin_unreal_export_combined_meshes_Introduction = itwin_unreal_export_combined_meshes_makeShortcode("Introduction");
var itwin_unreal_export_combined_meshes_TutorialSection = itwin_unreal_export_combined_meshes_makeShortcode("TutorialSection");
var itwin_unreal_export_combined_meshes_TitledImage = itwin_unreal_export_combined_meshes_makeShortcode("TitledImage");
var itwin_unreal_export_combined_meshes_ContinueLearningSection = itwin_unreal_export_combined_meshes_makeShortcode("ContinueLearningSection");
var itwin_unreal_export_combined_meshes_TileList = itwin_unreal_export_combined_meshes_makeShortcode("TileList");
var itwin_unreal_export_combined_meshes_ResourceTile = itwin_unreal_export_combined_meshes_makeShortcode("ResourceTile");
var itwin_unreal_export_combined_meshes_layoutProps = {
  metadata: itwin_unreal_export_combined_meshes_metadata
};
var itwin_unreal_export_combined_meshes_MDXLayout = "wrapper";
function itwin_unreal_export_combined_meshes_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, itwin_unreal_export_combined_meshes_excluded);
  return (0,react_.mdx)(itwin_unreal_export_combined_meshes_MDXLayout, (0,esm_extends/* default */.Z)({}, itwin_unreal_export_combined_meshes_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(itwin_unreal_export_combined_meshes_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "20",
    summaryImageSrc: "/unreal-docs-site/static/images/unreal-export-app-fullscreen-wide.png",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial will guide you through exporting your iTwin into the Datasmith format, and then importing that file directly\ninto Unreal Engine.")), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://www.unrealengine.com/download"
  }, "Unreal Engine 4.26.1"), " or later installed.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "It is recommended to install Unreal before the iTwin Exporter for Datasmith app because\nthe app requires some components that Unreal will install for you. If you want to install\nthe exporter first anyway, the application will direct you to manually install the\ncomponents that Unreal would install."))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "the iTwin Exporter for Datasmith application installed.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "The installer can be downloaded by clicking \u201CDownload now\u201D ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://developer.bentley.com/unreal/"
  }, "here"), ", and then running the installer will complete the installation."))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://visualstudio.microsoft.com/downloads"
  }, "Visual Studio"), " installed, and the \u201CGame Development with C++\u201D and \u201C.NET desktop development\u201D workloads installed.\nYou must also have the additional ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Microsoft.NETCore.App"), ", version 3.1.0 component installed, and your Visual Studio build tools must be up to date.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "If Visual Studio\u2019s build tools are not up to date, the plugin may fail to compile on later Unreal Engine versions. Be sure to open the Visual Studio installer and update."))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "an Unreal project set up, you can follow Epic\u2019s\n", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://docs.unrealengine.com/Basics/Projects/Browser/"
  }, "Creating a New Project"), " guide if you don\u2019t have one.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "We recommend using the ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Architecture, Engineering ", "&", " Construction"), " template so the required Datasmith importer plugin is enabled.\nIf you choose not to do this, you will need to enable that plugin yourself in your project\u2019s settings.")))), (0,react_.mdx)("p", null, "Make sure you install both ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "C++ Game Development"), " and ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, ".NET desktop development"), " workloads for Visual Studio, and have recently updated Visual Studio."), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-export-vs-workloads.png",
    alt: "visual studio required workloads",
    mdxType: "TitledImage"
  })), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-select-your-imodel"
  }, "1. Select your iModel"), (0,react_.mdx)("p", null, "The iTwin Exporter for Datasmith opens to the sign in page. Hit the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Sign In button"), " to be prompted to log in through your\ndefault browser. This will bring you to the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iModel Select Screen"), " of your most recent project."), (0,react_.mdx)("p", null, "To access other projects, select the project dropdown in the header and choose one of the recent projects or click\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "See all my projects"), " to open the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Project Select Screen"), "."), (0,react_.mdx)("p", null, "Upon entering either of the select screens, the search box in the top-right is focused, so you can immediately type to filter\nby name and find your iModel or project if you have several."), (0,react_.mdx)("p", null, "To see not only your most recent project\u2019s models, click the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "See all your projects"), " option in the project dropdown"), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-export-see-all-projects.png",
    alt: "see all projects button placement",
    mdxType: "TitledImage"
  })), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-export-your-imodel-as-a-combined-mesh"
  }, "2. Export your iModel as a combined-mesh"), (0,react_.mdx)("p", null, "Once you\u2019ve selected your project and found your iModel, you can perform an export immediately by clicking the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Export Button"), "."), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-export-imodel-tile-quick-export.png",
    alt: "quick 'export' button on the tile",
    mdxType: "TitledImage"
  }), (0,react_.mdx)("p", null, "This will bring up the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Advanced Export Dialog"), ", from which you can toggle on the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Combine All Meshes Toggle"), ", and then\npress the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Confirm Export Button"), " at the bottom of the dialog."), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-export-advanced-dialog-combined.png",
    alt: "the advanced export dialog as it appears after using the quick export button",
    mdxType: "TitledImage"
  })), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "Simply press the button and use your system\u2019s save file dialog to choose under what name and where to save the resulting datasmith\ncontent. Then wait for the export to complete, which is signified by a green success message appearing."), (0,react_.mdx)("p", null, "You may also click on your iModel card\u2019s image or its ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "View Button"), "\nto enter the viewer, and can run a combined-mesh export with the left-most button in the top-left horizontal toolbar."), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/unreal-export-in-viewer-combined-export-button.png",
    "alt": "in-viewer button"
  }))), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "21-export-result"
  }, "2.1. Export Result"), (0,react_.mdx)("p", null, "Once the export has completed,\nyou should have a file as you named it, like ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "myIModelName.udatasmith"), " and an ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "_Assets"), " folder with the same name as a prefix, for example ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "myIModelName_Assets"), ",\nin your chosen export location. You should be able to find them in your file browser."), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/unreal-export-result-files-windows.png",
    "alt": "Resulting Datasmith Files"
  }))), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-install-the-itwin-unreal-datasmith-plugin-in-your-unreal-project"
  }, "3. Install the iTwin Unreal Datasmith Plugin in your Unreal project"), (0,react_.mdx)("p", null, "Now we can navigate back to the select screen and use the plugin installer button to install the iTwin Unreal Datasmith Plugin to our Unreal project.\nHit the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Home Button"), " in the top left, or use the project dropdown and press the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "See all my projects"), " option to navigate back to the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Project Select Screen"), "."), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-export-nav-home.png",
    alt: "navigate home button placement",
    mdxType: "TitledImage"
  })), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "From the select screen, you can press the blue ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Install Plugin Button"), " at the bottom of the application, and in the file dialog find the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, ".uproject"), " file belonging\nto your Unreal project you created. Just choose that ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, ".uproject"), " file and the plugin will be installed to that project."), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-export-install-plugin-button.png",
    alt: "install plugin button placement",
    mdxType: "TitledImage"
  }), (0,react_.mdx)("p", null, "Make sure to close and reopen the Unreal project if it is open. Upon opening the project for the first time since the installation,\nit may prompt to rebuild the plugin. This is normal, and you should just allow it and wait for it to finish.\nIt may also say that it was designed for a different engine version, but you can ignore this and tell it to continue building,\nthe plugin has been tested in Unreal Engine versions 4.26.0 through 5.0.1 as of writing.\nIf the rebuild fails, make sure you\u2019ve met all of the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "#prerequisites"
  }, "Prerequisites"), "."), (0,react_.mdx)("img", {
    alt: "rebuild prompt",
    src: "/unreal-docs-site/static/images/unreal-export-rebuild-prompt.png",
    class: "sample-img-m"
  })), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-import-your-imodel"
  }, "4. Import your iModel"), (0,react_.mdx)("p", null, "In the Unreal Engine editor, use the Datasmith import button to open a file system dialog and select your ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, ".udatasmith"), " file\nto import it into the scene."), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-export-editor-import-button.png",
    alt: "unreal editor's datasmith import button placement",
    mdxType: "TitledImage"
  }), (0,react_.mdx)("p", null, "Choose a folder to place the content imported from Datasmith into in your content browser, then change any other import settings you need,\nsuch as disabling lightmap UV generation if you will only be using dynamic lights to light your scene in Unreal.\nThen just wait for the import process to finish.")), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "41-enable-transformation-animations-if-your-scene-is-animated"
  }, "4.1. Enable transformation animations if your scene is animated"), (0,react_.mdx)("p", null, "If your scene has a schedule script or other animations, a Level Sequence\nasset will have been created to control the objects with transform animations. Due to limitations in the Datasmith API, you must manually add\nthe level sequence to the scene. Consult Unreal Engine\u2019s ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://docs.unrealengine.com/AnimatingObjects/Sequencer/Overview/"
  }, "Sequencer Overview"), "\nfor more information on level sequences."), (0,react_.mdx)("p", null, "Open the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Animations"), " subfolder in the folder where you chose to import. The folder will only exist if you have transformation animations. You can drag and drop\nthe animation asset into the viewport to add it to the scene."), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-export-anim-drag-drop.png",
    alt: "drag-and-drop-level-sequence",
    mdxType: "TitledImage"
  })), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "Then, in the properties of the newly spawned Level Sequence Actor, toggle the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Auto Play"), " checkbox so that it is checked, which matches the default auto play\nset for the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/unreal/integration/blueprint-api-reference#AScheduledActor"
  }, "ScheduledActor"), " in your combined-mesh scene that controls the non-transformation animations."), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/unreal-export-set-autoplay.png",
    "alt": "auto play"
  }))), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-use-a-realistic-material"
  }, "5. Use a realistic material"), (0,react_.mdx)("p", null, "Unreal\u2019s starter content comes with a few high-fidelity materials that we can use to test realistic materials on our iModel.\nFor a simple start to applying materials, open ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "StarterContent/Materials"), " in the content browser and drag and drop materials\nonto your static meshes."), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-export-start-materials.png",
    alt: "starter content materials from unreal engine",
    mdxType: "TitledImage"
  })), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "We dragged and dropped some glass, concrete, metal, grass, wood, and cobblestone into our scene to see some high-fidelity materials."), (0,react_.mdx)("p", null, "Our sample scene would particularly have benefited from filtering out the tree and grass models and replacing them with more realistic or\nanimated ones, but that is something to explore in your Unreal project."), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/unreal-export-high-quality-materials.png",
    "alt": "scene after drag and drop"
  }))), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "51-opt-in-to-visibility-animation"
  }, "5.1. Opt-in to visibility animation"), (0,react_.mdx)("p", null, "Materials must opt-in to visibility animation if using the combined-mesh export. You can edit materials attached to your\nmesh by double clicking the material in the material slots of your static mesh actor\u2019s properties."), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-export-material-slots.png",
    alt: "material slots of combined mesh",
    mdxType: "TitledImage"
  })), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "Then select the material result node, if it is not already automatically selected as you open the editor, and set your\nmaterial\u2019s blend mode in the details panel to \u201Cmasked\u201D, unless it is already \u201Ctranslucent\u201D in which case leave it as is.\nFor more information on material blend modes in Unreal, see the documentation article\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://docs.unrealengine.com/RenderingAndGraphics/Materials/MaterialProperties/BlendModes/"
  }, "Material Blend Modes"), "."), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-export-set-material-blend-mode.png",
    alt: "material editor blend mode dropdown",
    mdxType: "TitledImage"
  }), (0,react_.mdx)("p", null, "Finally, right click in open space to the left of the result node and use the search to place a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "MaterialFunctionCall"), " node. In the details\npanel, you can select a Material Function to use for this node, use ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "MF_SynchroVisibilityAnimate"), " which comes with the plugin.\nDrag the output pin of the function to the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Opacity Mask"), " result pin (or ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Opacity"), " if the material was translucent)."), (0,react_.mdx)("p", null, "Now save and apply your material in the top left of the material editor, and your material will animate correctly with the visibility of the scene.")), (0,react_.mdx)(itwin_unreal_export_combined_meshes_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(itwin_unreal_export_combined_meshes_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(itwin_unreal_export_combined_meshes_ResourceTile, {
    title: "iTwin Exporter for Datasmith documentation",
    href: "/unreal/integration/documentation/",
    description: "Extended functionality and workflow descriptions in iTwin Exporter for Datasmith",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(itwin_unreal_export_combined_meshes_ResourceTile, {
    title: "Importing Datasmith content into Unreal",
    href: "https://docs.unrealengine.com/WorkingWithContent/Importing/Datasmith/HowTo/ImportingContent/",
    description: "Unreal's documentation on importing datasmith content",
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(itwin_unreal_export_combined_meshes_ResourceTile, {
    title: "Processing iModel metadata in Unreal's Visual Dataprep",
    href: "/tutorials/itwin-unreal-dataprep/",
    description: "Create Unreal Dataprep scripts that use your iTwin data",
    mdxType: "ResourceTile"
  }))));
}
;
itwin_unreal_export_combined_meshes_MDXContent.isMDXComponent = true;
var itwin_unreal_export_combined_meshes_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-select-your-imodel",
    level: 2,
    title: "1. Select your iModel",
    children: []
  }, {
    id: "2-export-your-imodel-as-a-combined-mesh",
    level: 2,
    title: "2. Export your iModel as a combined-mesh",
    children: [{
      id: "21-export-result",
      level: 3,
      title: "2.1. Export Result",
      children: []
    }]
  }, {
    id: "3-install-the-itwin-unreal-datasmith-plugin-in-your-unreal-project",
    level: 2,
    title: "3. Install the iTwin Unreal Datasmith Plugin in your Unreal project",
    children: []
  }, {
    id: "4-import-your-imodel",
    level: 2,
    title: "4. Import your iModel",
    children: [{
      id: "41-enable-transformation-animations-if-your-scene-is-animated",
      level: 3,
      title: "4.1. Enable transformation animations if your scene is animated",
      children: []
    }]
  }, {
    id: "5-use-a-realistic-material",
    level: 2,
    title: "5. Use a realistic material",
    children: [{
      id: "51-opt-in-to-visibility-animation",
      level: 3,
      title: "5.1. Opt-in to visibility animation",
      children: []
    }]
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var itwin_unreal_export_combined_meshes_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/itwin-unreal-export-filtering.mdx


var itwin_unreal_export_filtering_excluded = ["components"];
var itwin_unreal_export_filtering_jsx = (external_react_default()).createElement;


var itwin_unreal_export_filtering_readingTime = {
  "text": "4 min read",
  "minutes": 3.14,
  "time": 188400,
  "words": 628
};
/* @jsxRuntime classic */
/* @jsx mdx */

var itwin_unreal_export_filtering_metadata = {
  title: 'Exporting an iModel to Unreal with filters',
  tile: {
    name: 'Exporting an iModel to Unreal with filters',
    description: 'Control which parts of an iModel are exported while exporting it to Unreal',
    thumbnail: '/images/unreal-export-filtering-tutorial-featured-thumb.png',
    href: '/tutorials/itwin-unreal-export-filtering',
    durationInMinutes: 5,
    relatedApiIds: ['itwin-unreal'],
    showInFirstSteps: false
  }
};
var itwin_unreal_export_filtering_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var itwin_unreal_export_filtering_Introduction = itwin_unreal_export_filtering_makeShortcode("Introduction");
var itwin_unreal_export_filtering_TutorialSection = itwin_unreal_export_filtering_makeShortcode("TutorialSection");
var itwin_unreal_export_filtering_TitledImage = itwin_unreal_export_filtering_makeShortcode("TitledImage");
var itwin_unreal_export_filtering_WebMLoop = itwin_unreal_export_filtering_makeShortcode("WebMLoop");
var itwin_unreal_export_filtering_ContinueLearningSection = itwin_unreal_export_filtering_makeShortcode("ContinueLearningSection");
var itwin_unreal_export_filtering_TileList = itwin_unreal_export_filtering_makeShortcode("TileList");
var itwin_unreal_export_filtering_ResourceTile = itwin_unreal_export_filtering_makeShortcode("ResourceTile");
var itwin_unreal_export_filtering_layoutProps = {
  metadata: itwin_unreal_export_filtering_metadata
};
var itwin_unreal_export_filtering_MDXLayout = "wrapper";
function itwin_unreal_export_filtering_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, itwin_unreal_export_filtering_excluded);
  return (0,react_.mdx)(itwin_unreal_export_filtering_MDXLayout, (0,esm_extends/* default */.Z)({}, itwin_unreal_export_filtering_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(itwin_unreal_export_filtering_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "5",
    summaryImageSrc: "/unreal-docs-site/static/images/unreal-export-filtering-tutorial-featured-wide.png",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial guides you through filtering your iTwin\u2019s content while exporting it to the Datasmith format for use in Unreal."), (0,react_.mdx)("p", null, "If you encounter problems while using this tutorial, we recommend first completing the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/itwin-unreal-export-combined-meshes/"
  }, "combined-mesh export tutorial"), " which\nis more thorough.")), (0,react_.mdx)(itwin_unreal_export_filtering_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://www.unrealengine.com/download"
  }, "Unreal Engine 4.26.1"), " or later installed.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "We recommend installing Unreal before the iTwin Exporter for Datasmith app.\nUnreal installs components needed by both applications. If you would like to install the iTwin Exporter for Datasmith first,\nyou must install the necessary components manually. Upon startup the application detects if the components are missing and\nprovides you with links to navigate to their installers."))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "the iTwin Exporter for Datasmith application installed.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "To download the installer, please visit the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://developer.bentley.com/unreal/"
  }, "iTwin for Unreal"), " page and click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Download Now"), "."))))), (0,react_.mdx)(itwin_unreal_export_filtering_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-view-your-imodel"
  }, "1. View your iModel"), (0,react_.mdx)("p", null, "Open the iTwin Exporter for Datasmith, sign in, and select your project and iModel. Click the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "View"), " to open the iModel\nand to use the interactive filtering tools."), (0,react_.mdx)(itwin_unreal_export_filtering_TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-export-model-view-button.png",
    alt: "See all projects button placement",
    className: "sample-img-default",
    mdxType: "TitledImage"
  })), (0,react_.mdx)(itwin_unreal_export_filtering_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-hide-in-the-tree-view"
  }, "2. Hide in the Tree View"), (0,react_.mdx)("p", null, "On the right side of the viewport, use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Tree View"), " widget to toggle the visibility of portions of your iModel.\nHide models and elements via the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Model Tree"), ", the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Categories"), ", or ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Spatial Containment"), ". Below,\nwe hide one model with all of its contained elements."), (0,react_.mdx)(itwin_unreal_export_filtering_WebMLoop, {
    src: "/unreal-docs-site/static/images/unreal-export-tree-view-hide.webm",
    mdxType: "WebMLoop"
  })), (0,react_.mdx)(itwin_unreal_export_filtering_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-hide-by-viewport-selection"
  }, "3. Hide by viewport selection"), (0,react_.mdx)("p", null, "You may also visually select and hide models and elements. With the default selection tool active,\nleft-click elements to select them, hold control to add to your selection.\nThen use the visibility tools in the top left side to hide your selection among other operations."), (0,react_.mdx)(itwin_unreal_export_filtering_WebMLoop, {
    src: "/unreal-docs-site/static/images/unreal-export-viewport-hide.webm",
    mdxType: "WebMLoop"
  }), (0,react_.mdx)("p", null, "Make sure to change your selection scope in the bottom-right of the viewport\nif you want to select individual elements, the default is to select top-level assemblies.")), (0,react_.mdx)(itwin_unreal_export_filtering_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-use-a-saved-view"
  }, "4. Use a saved view"), (0,react_.mdx)("p", null, "You can save the viewport visibility state as a ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Saved View"), " using the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Saved View"), " widget. A ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Saved View"), " enables you to load it again\nfor future exports, or load it as a baseline for visibility changes before exporting."), (0,react_.mdx)(itwin_unreal_export_filtering_TitledImage, {
    src: "/unreal-docs-site/static/images/unreal-export-create-saved-view.png",
    alt: "Create a saved view",
    className: "sample-img-xl",
    mdxType: "TitledImage"
  })), (0,react_.mdx)(itwin_unreal_export_filtering_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-export-the-current-view"
  }, "5. Export the current view"), (0,react_.mdx)("p", null, "Press the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Advanced Export"), " tool button to open the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Advanced Export"), " dialog. Select ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "View"), " in the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Filter By"), "\ndropdown. The default ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "View Name"), " is the current view. To filter the export using a different view, use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "View Name"), " dropdown to select it.\nThe ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "View Name"), " dropdown lists any ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-backend/viewdefinitions/viewdefinition/"
  }, "View Definitions"), "\nor saved views associated with your iModel."), (0,react_.mdx)(itwin_unreal_export_filtering_WebMLoop, {
    src: "/unreal-docs-site/static/images/unreal-export-filtering-export.webm",
    mdxType: "WebMLoop"
  }), (0,react_.mdx)("h2", {
    "id": "6-additional-filtering-options"
  }, "6. Additional filtering options"), (0,react_.mdx)("p", null, "Hover over options in the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Advanced Export"), " dialog for explanatory tooltips for every option.\nAdvanced users may filter by ", (0,react_.mdx)("em", {
    parentName: "p"
  }, (0,react_.mdx)("a", {
    parentName: "em",
    "href": "https://www.itwinjs.org/learning/ecsql/"
  }, "ECSQL"), " Query"), " for programmatic control of iModel contents considered for\nexport.")), (0,react_.mdx)(itwin_unreal_export_filtering_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(itwin_unreal_export_filtering_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(itwin_unreal_export_filtering_ResourceTile, {
    title: "iTwin Exporter for Datasmith documentation",
    href: "/unreal/integration/documentation/",
    description: "Extended functionality and workflow descriptions in iTwin Exporter for Datasmith",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(itwin_unreal_export_filtering_ResourceTile, {
    title: "Exporting iModel to Unreal Datasmith as a combined mesh",
    href: "/tutorials/itwin-unreal-export-combined-meshes/",
    description: "Follow this tutorial to get iModel data into the Datasmith format as a combined mesh.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(itwin_unreal_export_filtering_ResourceTile, {
    title: "Processing iModel metadata in Unreal's Visual Dataprep",
    href: "/tutorials/itwin-unreal-dataprep/",
    description: "Create Unreal Dataprep scripts that use your iTwin data",
    mdxType: "ResourceTile"
  }))));
}
;
itwin_unreal_export_filtering_MDXContent.isMDXComponent = true;
var itwin_unreal_export_filtering_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-view-your-imodel",
    level: 2,
    title: "1. View your iModel",
    children: []
  }, {
    id: "2-hide-in-the-tree-view",
    level: 2,
    title: "2. Hide in the Tree View",
    children: []
  }, {
    id: "3-hide-by-viewport-selection",
    level: 2,
    title: "3. Hide by viewport selection",
    children: []
  }, {
    id: "4-use-a-saved-view",
    level: 2,
    title: "4. Use a saved view",
    children: []
  }, {
    id: "5-export-the-current-view",
    level: 2,
    title: "5. Export the current view",
    children: []
  }, {
    id: "6-additional-filtering-options",
    level: 2,
    title: "6. Additional filtering options",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var itwin_unreal_export_filtering_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/itwin-viewer-hello-world.mdx


var itwin_viewer_hello_world_excluded = ["components"];
var itwin_viewer_hello_world_jsx = (external_react_default()).createElement;


var itwin_viewer_hello_world_readingTime = {
  "text": "10 min read",
  "minutes": 9.005,
  "time": 540300,
  "words": 1801
};
/* @jsxRuntime classic */
/* @jsx mdx */

var itwin_viewer_hello_world_metadata = {
  title: 'Customizing the iTwin Viewer - "The Basics"',
  tile: {
    name: 'Customizing the iTwin Viewer - "The Basics"',
    description: 'This tutorial will take you through the first steps of customizing your iTwin Web Viewer. First you will learn how to add a new user interface component. Later you will customize that component to change the background color of your viewer.',
    thumbnail: '/images/itwin-viewer-hello-world-sample-small.png',
    href: '/tutorials/itwin-viewer-hello-world',
    durationInMinutes: 45,
    relatedApiIds: ['visualization'],
    showInFirstSteps: true,
    firstStepsSequenceNumber: 2
  }
};
var itwin_viewer_hello_world_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var itwin_viewer_hello_world_Introduction = itwin_viewer_hello_world_makeShortcode("Introduction");
var itwin_viewer_hello_world_TutorialSection = itwin_viewer_hello_world_makeShortcode("TutorialSection");
var itwin_viewer_hello_world_Title = itwin_viewer_hello_world_makeShortcode("Title");
var itwin_viewer_hello_world_CodeBlock = itwin_viewer_hello_world_makeShortcode("CodeBlock");
var itwin_viewer_hello_world_ContinueLearningSection = itwin_viewer_hello_world_makeShortcode("ContinueLearningSection");
var itwin_viewer_hello_world_TileList = itwin_viewer_hello_world_makeShortcode("TileList");
var itwin_viewer_hello_world_Tile = itwin_viewer_hello_world_makeShortcode("Tile");
var itwin_viewer_hello_world_ResourceTile = itwin_viewer_hello_world_makeShortcode("ResourceTile");
var itwin_viewer_hello_world_layoutProps = {
  metadata: itwin_viewer_hello_world_metadata
};
var itwin_viewer_hello_world_MDXLayout = "wrapper";
function itwin_viewer_hello_world_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, itwin_viewer_hello_world_excluded);
  return (0,react_.mdx)(itwin_viewer_hello_world_MDXLayout, (0,esm_extends/* default */.Z)({}, itwin_viewer_hello_world_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(itwin_viewer_hello_world_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "30",
    summaryImageSrc: "/unreal-docs-site/static/images/itwin-viewer-hello-world-sample.gif",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial will take you through the first steps of customizing your ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iTwin Web Viewer"), ". First you will learn ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "how to add a new user interface component"), ". Later you will ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "customize that component"), " to change the background color of your viewer.")), (0,react_.mdx)(itwin_viewer_hello_world_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Your own local source for the iTwin Web Viewer based on the template @itwin/web-viewer", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Instructions for that can be found ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/web-application-quick-start"
  }, "here")))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Configured your local source to open the \u201CHouse Model\u201D sample iModel.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Instructions to use this sample iModel can be found ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-test-imodel-sample"
  }, "here"), "."))))), (0,react_.mdx)(itwin_viewer_hello_world_TutorialSection, {
    actions: [(0,react_.mdx)(itwin_viewer_hello_world_Title, {
      mdxType: "Title"
    }, "Return statement of App.tsx where the Viewer component is configured"), (0,react_.mdx)(itwin_viewer_hello_world_CodeBlock, {
      language: "jsx",
      code: "return (\n    <div className=\"viewer-container\">\n      {!accessToken && (\n        <FillCentered>\n          <div className=\"signin-content\">\n            <ProgressLinear indeterminate={true} labels={[\"Signing in...\"]} />\n          </div>\n        </FillCentered>\n      )}\n      <Viewer\n        iTwinId={iTwinId}\n        iModelId={iModelId}\n        authClient={authClient}\n        viewCreatorOptions={viewCreatorOptions}\n        enablePerformanceMonitors={true} // see description in the README (https://www.npmjs.com/package/@itwin/web-viewer-react)\n      />\n    </div>\n  );",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-add-new-itwin-web-viewer-interface-component"
  }, "1. Add new iTwin Web Viewer interface component"), (0,react_.mdx)("p", null, "The iTwin Web Viewer viewer template generates several files. To start with, let\u2019s take a look at the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "App.tsx"), " file. This is where you should start in customizing your iTwin Viewer."), (0,react_.mdx)("p", null, "To start with ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "App.tsx"), " contains a single react functional component fittingly called ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "App"), ". The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "App"), " component is responsible for:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Authenticating the user"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Rendering the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Viewer"), " component")), (0,react_.mdx)("p", null, "At the bottom of ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "App.tsx"), " you can see the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "return"), " statement where the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Viewer"), " component is configured. Let\u2019s focus on that for now.")), (0,react_.mdx)(itwin_viewer_hello_world_TutorialSection, {
    hasTitle: false,
    actions: [(0,react_.mdx)(itwin_viewer_hello_world_Title, {
      mdxType: "Title"
    }, "Viewer component with \"Hello World\" span"), (0,react_.mdx)(itwin_viewer_hello_world_CodeBlock, {
      language: "jsx",
      code: "<div style={{ height: '100%' }}>\n  <span>\"Hello World\"</span>\n    <Viewer\n      iTwinId={iTwinId}\n      iModelId={iModelId}\n      authClient={authClient}\n      viewCreatorOptions={viewCreatorOptions}\n      enablePerformanceMonitors={true} // see description in the README (https://www.npmjs.com/package/@itwin/web-viewer-react)\n    />\n</div>",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "App"), " is just a react component. Like any react component, it returns JSX to tell react how to create HTML for the browser to render. Let\u2019s start off by adding some custom code to our JSX. We can render a \u201CHello World\u201D ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "span"), " above the viewer by simply creating the element above the component. Note that this needs to be surrounded in a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "div"), " per the single parent rule for react.")), (0,react_.mdx)(itwin_viewer_hello_world_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "11-result"
  }, "1.1 Result"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/hello_world_above.png",
    "alt": "HelloWorldAbove"
  }))), (0,react_.mdx)(itwin_viewer_hello_world_TutorialSection, {
    actions: [(0,react_.mdx)(itwin_viewer_hello_world_Title, {
      mdxType: "Title"
    }, "Passing uiProviders prop to Viewer component"), (0,react_.mdx)(itwin_viewer_hello_world_CodeBlock, {
      language: "jsx",
      code: "<Viewer\n      iTwinId={iTwinId}\n      iModelId={iModelId}\n      authClient={authClient}\n      viewCreatorOptions={viewCreatorOptions}\n      enablePerformanceMonitors={true} // see description in the README (https://www.npmjs.com/package/@itwin/web-viewer-react)\n      uiProviders={[new MyFirstUiProvider()]}\n    />",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-your-first-ui-widget"
  }, "2. Your first UI Widget"), (0,react_.mdx)("p", null, "So far, we haven\u2019t done anything to change the way the viewer works. We\u2019ve only just added a new ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "span"), " element ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "above"), " the viewer. To add our \u201CHello World\u201D ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "span"), " into the viewer, we need to pass the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "uiProviders"), " prop to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Viewer"), " component."), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "uiProviders"), " prop is typed to require an array of objects that implements the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/ui-abstract/uiitemsprovider/uiitemsprovider/"
  }, "UIItemsProvider"), " interface. Passing in the array will allow us to extend the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Viewer"), " with custom UI components. To do that, we need to define our ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "MyFirstUiProvider"), " class so that it implements the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "UiItemsProvider"), " interface. Our new provider will tell the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Viewer"), " to include our \u201CHello world\u201D ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "span"), " within the view.")), (0,react_.mdx)(itwin_viewer_hello_world_TutorialSection, {
    hasTitle: false,
    actions: [(0,react_.mdx)(itwin_viewer_hello_world_Title, {
      mdxType: "Title"
    }, "\"MyFirstUiProvider.tsx\" file content"), (0,react_.mdx)(itwin_viewer_hello_world_CodeBlock, {
      language: "typescript",
      code: "import {\n    StagePanelLocation,\n    StagePanelSection,\n    StageUsage,\n    UiItemsProvider,\n    Widget,\n} from '@itwin/appui-react';\n\nexport class MyFirstUiProvider implements UiItemsProvider {\n  public readonly id = 'MyFirstProviderId';\n\n  public provideWidgets(\n      _stageId: string,\n      stageUsage: string,\n      location: StagePanelLocation,\n      section?: StagePanelSection\n    ): ReadonlyArray<Widget> {\n      const widgets: Widget[] = [];\n      if (\n        stageUsage === StageUsage.General &&\n        location === StagePanelLocation.Right &&\n        section === StagePanelSection.Start\n      ) {\n        const helloWidget: Widget = {\n          id: 'HelloWidget',\n          label: 'Hello',\n          content: <span>\"Hello World\"</span>\n        };\n        widgets.push(helloWidget);\n    }\n    return widgets;\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "Create a new file called ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "MyFirstUiProvider.tsx"), " with contents shown in a code snippet."), (0,react_.mdx)("p", null, "Let\u2019s review that code. We\u2019ve defined our new ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "MyFirstUiProvider"), " class. In the new class we\u2019ve defined ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "public readonly id"), " which is required to distinguish between different providers. Then notice that we\u2019ve defined just one function called ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "provideWidgets"), ". This function will be called several times as the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Viewer"), " is building up the user interface. We will return an empty array except for when the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "location"), " is equal to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "StagePanelLocation.Right"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "section"), " is equal to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "StagePanelSection.Start"), ". In that case, we will return a single widget that will supply our \u201CHello World\u201D ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "span"), "."), (0,react_.mdx)("p", null, "Our ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "helloWidget"), " consists of three attributes:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "id"), " - used to uniquely identify the widget"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "label"), " - description label for our widget"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "getWidgetContent()"), " - returns our custom UI component"))), (0,react_.mdx)(itwin_viewer_hello_world_TutorialSection, {
    hasTitle: false,
    actions: [(0,react_.mdx)(itwin_viewer_hello_world_Title, {
      mdxType: "Title"
    }, "MyFirstUiProvider import"), (0,react_.mdx)(itwin_viewer_hello_world_CodeBlock, {
      language: "typescript",
      code: "import { MyFirstUiProvider } from \"./MyFirstUiProvider\";",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "At this point we need to import ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "MyFirstUiProvider"), " at the top of file ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "App.tsx"), ".")), (0,react_.mdx)(itwin_viewer_hello_world_TutorialSection, {
    hasTitle: false,
    actions: [(0,react_.mdx)(itwin_viewer_hello_world_Title, {
      mdxType: "Title"
    }, "Return statement in App.tsx should look like this:"), (0,react_.mdx)(itwin_viewer_hello_world_CodeBlock, {
      language: "typescript",
      code: "return (\n    <div className=\"viewer-container\">\n      {!accessToken && (\n        <FillCentered>\n          <div className=\"signin-content\">\n            <ProgressLinear indeterminate={true} labels={[\"Signing in...\"]} />\n          </div>\n        </FillCentered>\n      )}\n      <Viewer\n        iTwinId={iTwinId}\n        iModelId={iModelId}\n        authClient={authClient}\n        viewCreatorOptions={viewCreatorOptions}\n        enablePerformanceMonitors={true} // see description in the README (https://www.npmjs.com/package/@itwin/web-viewer-react)\n        uiProviders={[new MyFirstUiProvider()]}\n      />\n    </div>\n  );",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "Finally, let\u2019s clean up the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "span"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "div"), " that we added directly into the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "App"), " component earlier.")), (0,react_.mdx)(itwin_viewer_hello_world_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "21-result"
  }, "2.1 Result"), (0,react_.mdx)("p", null, "Now we have our \u201CHello World\u201D ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "span"), " displaying in a panel within the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Viewer"), " component. It should look like this:"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/hello_world_widget.png",
    "alt": "HelloWorldWidget"
  }))), (0,react_.mdx)(itwin_viewer_hello_world_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-beyond-hello-world"
  }, "3. Beyond Hello World"), (0,react_.mdx)("p", null, "Saying hello to the world can be fun but we need to get past that. For this next step we\u2019ll swap out our trivial ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "helloWidget"), " with something a little more interactive: a ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://itwin.github.io/iTwinUI-react/?path=/docs/input-toggleswitch--basic"
  }, "ToggleSwitch"), ". Eventually this toggle will control the background color, so we\u2019ll name our new widget ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "backgroundColorWidget"), ". Instead of returning a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "span"), " we\u2019ll return a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ToggleSwitch"), ".")), (0,react_.mdx)(itwin_viewer_hello_world_TutorialSection, {
    hasTitle: false,
    actions: [(0,react_.mdx)(itwin_viewer_hello_world_Title, {
      mdxType: "Title"
    }, "ToggleSwitch import"), (0,react_.mdx)(itwin_viewer_hello_world_CodeBlock, {
      language: "typescript",
      code: "import { ToggleSwitch } from '@itwin/itwinui-react';",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "Start by navigating back to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "MyFirstUiProvider.tsx"), " and adding an import for ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ToggleSwitch"), " at the top of the file.")), (0,react_.mdx)(itwin_viewer_hello_world_TutorialSection, {
    hasTitle: false,
    actions: [(0,react_.mdx)(itwin_viewer_hello_world_Title, {
      mdxType: "Title"
    }, "Switch out the helloWidget with the new backgroundColorWidget"), (0,react_.mdx)(itwin_viewer_hello_world_CodeBlock, {
      language: "typescript",
      code: "if (\n  stageUsage === StageUsage.General &&\n  location === StagePanelLocation.Right &&\n  section === StagePanelSection.Start\n) {\n  const backgroundColorWidget: Widget = {\n      id: 'BackgroundColorWidget',\n      label: 'Background Color Toggle',\n      content: <ToggleSwitch />\n  };\n  widgets.push(backgroundColorWidget);\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "Next switch out the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "helloWidget"), " with the new ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "backgroundColorWidget"), ".")), (0,react_.mdx)(itwin_viewer_hello_world_TutorialSection, {
    hasTitle: false,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "Notice the only significant difference is that ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "getWidgetContent"), " is now returning a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ToggleSwitch"), ". It doesn\u2019t do anything interesting yet, but it should look like this:"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/background_color_toggle.png",
    "alt": "Background Color Toggle"
  }))), (0,react_.mdx)(itwin_viewer_hello_world_TutorialSection, {
    actions: [(0,react_.mdx)(itwin_viewer_hello_world_Title, {
      mdxType: "Title"
    }, "Passing the onChange prop to the ToggleSwitch component"), (0,react_.mdx)(itwin_viewer_hello_world_CodeBlock, {
      language: "typescript",
      code: "return (\n  <ToggleSwitch\n    onChange={(e) => {\n      if (MyFirstUiProvider.toggledOnce === false) {\n        MyFirstUiProvider.originalColor =\n          IModelApp.viewManager.selectedView!.displayStyle.backgroundColor.tbgr;\n        MyFirstUiProvider.toggledOnce = true;\n      }\n\n      const color = e.target.checked\n        ? ColorDef.computeTbgrFromString(\"skyblue\")\n        : MyFirstUiProvider.originalColor;\n\n      IModelApp.viewManager.selectedView!.overrideDisplayStyle({\n        backgroundColor: color,\n      });\n    }}\n  />\n);",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-changing-the-background-color"
  }, "4. Changing the background color"), (0,react_.mdx)("p", null, "For this last step, let\u2019s put our new toggle to work. We want the toggle to control the background color in the view of our house iModel. When the toggle is on, we\u2019ll override the background color to \u201Cskyblue\u201D. When the toggle is off, we\u2019ll change the background color back to its original color."), (0,react_.mdx)("p", null, "To do this, we need to pass the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "onChange"), " prop to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ToggleSwitch"), " component.")), (0,react_.mdx)(itwin_viewer_hello_world_TutorialSection, {
    hasTitle: false,
    actions: [(0,react_.mdx)(itwin_viewer_hello_world_Title, {
      mdxType: "Title"
    }, "Adding toggledOnce and originalColor variables to MyFirstUiProvider class"), (0,react_.mdx)(itwin_viewer_hello_world_CodeBlock, {
      language: "typescript",
      code: "export class MyFirstUiProvider implements UiItemsProvider {\n  public readonly id = 'HelloWorldProvider';\n  public static toggledOnce: boolean = false;\n  public static originalColor: number;",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "Since we\u2019re using two new static variables here, we need to add this to to our ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "MyFirstUiProvider"), " class at the beginning of our definition.")), (0,react_.mdx)(itwin_viewer_hello_world_TutorialSection, {
    hasTitle: false,
    actions: [(0,react_.mdx)(itwin_viewer_hello_world_Title, {
      mdxType: "Title"
    }, "Completed MyFirstUiProvider.tsx file"), (0,react_.mdx)(itwin_viewer_hello_world_CodeBlock, {
      language: "typescript",
      code: "import { ColorDef } from '@itwin/core-common';\nimport { IModelApp } from '@itwin/core-frontend';\nimport {\n  StagePanelLocation,\n  StagePanelSection,\n  StageUsage,\n  UiItemsProvider,\n  Widget,\n} from '@itwin/appui-react';\nimport { ToggleSwitch } from \"@itwin/itwinui-react\";\n\nexport class MyFirstUiProvider implements UiItemsProvider {\n  public readonly id = 'HelloWorldProvider';\n  public static toggledOnce: boolean = false;\n  public static originalColor: number;\n\n  public provideWidgets(\n    _stageId: string,\n    stageUsage: string,\n    location: StagePanelLocation,\n    section?: StagePanelSection\n  ): ReadonlyArray<Widget> {\n    const widgets: Widget[] = [];\n    if (\n      stageUsage === StageUsage.General &&\n      location === StagePanelLocation.Right &&\n      section === StagePanelSection.Start\n    ) {\n      const backgroundColorWidget: Widget = {\n        id: 'BackgroundColorWidget',\n        label: 'Background Color Toggle',\n        content: <ToggleSwitch\n          onChange={(e) => {\n            if (MyFirstUiProvider.toggledOnce === false) {\n              MyFirstUiProvider.originalColor =\n                IModelApp.viewManager.selectedView!.displayStyle.backgroundColor.tbgr;\n              MyFirstUiProvider.toggledOnce = true;\n            }\n            const color = e.target.checked\n              ? ColorDef.computeTbgrFromString(\"skyblue\")\n              : MyFirstUiProvider.originalColor;\n\n            IModelApp.viewManager.selectedView!.overrideDisplayStyle({\n              backgroundColor: color,\n            });\n          }}\n        /> \n      };\n      widgets.push(backgroundColorWidget);\n    }\n    return widgets;\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "The first condition checks for only the first trigger of the toggle using boolean ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "toggledOnce"), ". If true, we need to store the original color in static variable ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "MyFirstUiProvider.originalColor"), ". We are using the global singleton ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/imodeljs-frontend/imodelapp/imodelapp/"
  }, "IModelApp"), " to get to the viewManager that can provide the current ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "backgroundColor"), ". We also need to flip variable ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "MyFirstUiProvider.toggledOnce"), " to true to make sure we only store the original color once."), (0,react_.mdx)("p", null, "Notice we\u2019re using the function ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/imodeljs-frontend/views/viewport/overridedisplaystyle/"
  }, "overrideDisplayStyle()"), " on the currently selected view. To get the view, we use the same global singleton ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/imodeljs-frontend/imodelapp/imodelapp/"
  }, "IModelApp"), " to get to the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/imodeljs-frontend/views/viewmanager/"
  }, "viewManager"), "."), (0,react_.mdx)("p", null, "Our completed ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "MyFirstUiProvider.tsx"), " file should look similar to the one shown in a code snippet.")), (0,react_.mdx)(itwin_viewer_hello_world_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "51-result"
  }, "5.1 Result"), (0,react_.mdx)("p", null, "Result when the toggle is on:"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/background_toggled_blue.png",
    "alt": "Background blue"
  })), (0,react_.mdx)("p", null, "Result when the toggle is off:"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/original_background_color.png",
    "alt": "Background original"
  }))), (0,react_.mdx)(itwin_viewer_hello_world_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)(itwin_viewer_hello_world_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(itwin_viewer_hello_world_Tile, {
    name: "Adding showcase widgets to your iTwin Viewer",
    thumbnail: "/unreal-docs-site/static/images/view_attributes_ported_results.png",
    description: "This tutorial will take widgets from the sample showcase and add them into your iTwin Viewer using the `uiProviders` prop.",
    href: "/tutorials/adding-showcase-widgets-to-your-itwin-viewer/",
    mdxType: "Tile"
  }), (0,react_.mdx)(itwin_viewer_hello_world_Tile, {
    name: "Start building a Viewer App",
    thumbnail: "/unreal-docs-site/static/images/retail-tutorial-sample-small.png",
    description: "This quick start is intended to help you get started with using iTwin Platform visualization components. By the end of this walk-through, you will be able to build and run a web application for viewing an infrastructure digital twin (iTwin).",
    href: "/tutorials/web-application-quick-start/",
    mdxType: "Tile"
  }), (0,react_.mdx)(itwin_viewer_hello_world_Tile, {
    name: "Adding view decorations to your iTwin Viewer",
    thumbnail: "/unreal-docs-site/static/images/adding-decorators-and-markers.png",
    description: "This tutorial guides you through customizing your iTwin Viewer application by displaying application-specific graphics, called View Decorations.",
    href: "/tutorials/adding-decorators-and-markers/",
    mdxType: "Tile"
  })), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(itwin_viewer_hello_world_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(itwin_viewer_hello_world_ResourceTile, {
    title: "Create a test iModel from a Bentley provided sample",
    href: "/tutorials/create-test-imodel-sample",
    description: "The quickest way to get access to a cloud hosted iModel is by creating an iModel seeded with Bentley provided sample data.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(itwin_viewer_hello_world_ResourceTile, {
    title: "Sample House Model",
    href: "/tutorials/create-test-imodel-sample/#house-sample",
    description: "Bentley provided sample of a House for test iModel creation.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(itwin_viewer_hello_world_ResourceTile, {
    title: "UI Provider",
    href: "https://www.itwinjs.org/reference/ui-abstract/uiitemsprovider/uiitemsprovider/",
    description: "Describes interface of objects that want to provide UI component to the running IModelApp.",
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(itwin_viewer_hello_world_ResourceTile, {
    title: "IModelApp",
    href: "https://www.itwinjs.org/reference/imodeljs-frontend/imodelapp/imodelapp/",
    description: "Global singleton that connects the user interface with the iTwin.js services.",
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(itwin_viewer_hello_world_ResourceTile, {
    title: "Visit the iTwin Code Sandbox",
    href: "https://www.itwinjs.org/sandboxes/",
    description: "The iTwin Code Sandbox provides many samples demonstrating options for customizing the iTwin viewer.",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
itwin_viewer_hello_world_MDXContent.isMDXComponent = true;
var itwin_viewer_hello_world_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-add-new-itwin-web-viewer-interface-component",
    level: 2,
    title: "1. Add new iTwin Web Viewer interface component",
    children: []
  }, {
    id: "2-your-first-ui-widget",
    level: 2,
    title: "2. Your first UI Widget",
    children: []
  }, {
    id: "3-beyond-hello-world",
    level: 2,
    title: "3. Beyond Hello World",
    children: []
  }, {
    id: "4-changing-the-background-color",
    level: 2,
    title: "4. Changing the background color",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var itwin_viewer_hello_world_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/manage-group-members-on-itwins-guide.mdx


var manage_group_members_on_itwins_guide_excluded = ["components"];
var manage_group_members_on_itwins_guide_jsx = (external_react_default()).createElement;


var manage_group_members_on_itwins_guide_readingTime = {
  "text": "6 min read",
  "minutes": 5.465,
  "time": 327900,
  "words": 1093
};
/* @jsxRuntime classic */
/* @jsx mdx */

var manage_group_members_on_itwins_guide_metadata = {
  title: 'Manage Group Members on iTwins',
  tile: {
    name: 'Manage Group Members on iTwins',
    description: 'This tutorial will guide you through the process of managing iTwin group members',
    href: '/tutorials/manage-group-members-on-itwins-guide',
    durationInMinutes: 15,
    relatedApiIds: ['accesscontrol'],
    showInFirstSteps: false
  }
};
var manage_group_members_on_itwins_guide_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var manage_group_members_on_itwins_guide_Introduction = manage_group_members_on_itwins_guide_makeShortcode("Introduction");
var manage_group_members_on_itwins_guide_Alert = manage_group_members_on_itwins_guide_makeShortcode("Alert");
var manage_group_members_on_itwins_guide_TutorialSection = manage_group_members_on_itwins_guide_makeShortcode("TutorialSection");
var manage_group_members_on_itwins_guide_LinkButton = manage_group_members_on_itwins_guide_makeShortcode("LinkButton");
var manage_group_members_on_itwins_guide_GoogleChromeIcon = manage_group_members_on_itwins_guide_makeShortcode("GoogleChromeIcon");
var manage_group_members_on_itwins_guide_VSCodeIcon = manage_group_members_on_itwins_guide_makeShortcode("VSCodeIcon");
var manage_group_members_on_itwins_guide_PostmanIcon = manage_group_members_on_itwins_guide_makeShortcode("PostmanIcon");
var manage_group_members_on_itwins_guide_CreateSampleAppButton = manage_group_members_on_itwins_guide_makeShortcode("CreateSampleAppButton");
var manage_group_members_on_itwins_guide_Title = manage_group_members_on_itwins_guide_makeShortcode("Title");
var manage_group_members_on_itwins_guide_CodeBlock = manage_group_members_on_itwins_guide_makeShortcode("CodeBlock");
var manage_group_members_on_itwins_guide_ContinueLearningSection = manage_group_members_on_itwins_guide_makeShortcode("ContinueLearningSection");
var manage_group_members_on_itwins_guide_TileList = manage_group_members_on_itwins_guide_makeShortcode("TileList");
var manage_group_members_on_itwins_guide_ResourceTile = manage_group_members_on_itwins_guide_makeShortcode("ResourceTile");
var manage_group_members_on_itwins_guide_layoutProps = {
  metadata: manage_group_members_on_itwins_guide_metadata
};
var manage_group_members_on_itwins_guide_MDXLayout = "wrapper";
function manage_group_members_on_itwins_guide_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, manage_group_members_on_itwins_guide_excluded);
  return (0,react_.mdx)(manage_group_members_on_itwins_guide_MDXLayout, (0,esm_extends/* default */.Z)({}, manage_group_members_on_itwins_guide_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(manage_group_members_on_itwins_guide_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "15",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)(manage_group_members_on_itwins_guide_Alert, {
    mdxType: "Alert"
  }, "This tutorial is for the", ' ', (0,react_.mdx)("a", {
    href: "/apis/access-control-v2/overview/"
  }, "Access Control API V2"), ". To control the API version,", ' ', (0,react_.mdx)("a", {
    href: "/apis/overview/lifecycle/#api-versions"
  }, "see the API versions documentation")), (0,react_.mdx)("p", null, "This tutorial will take you through the process of adding and retrieving group members for a given iTwin. Members are groups which have been assigned a role, in turn giving them a set of permissions. See ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/access-control-v2/overview/#accesscontrolgroups"
  }, "iTwin Groups"), " for more information on managing groups of users. Members can be assigned more than one role and the same role can be assigned to more than one member."), (0,react_.mdx)("p", null, "By the end of this walk-through, you will be able to utilize the API endpoints in order to invite groups to an iTwin, and retrieve the list of iTwin group members.")), (0,react_.mdx)(manage_group_members_on_itwins_guide_TutorialSection, {
    actions: [(0,react_.mdx)(manage_group_members_on_itwins_guide_LinkButton, {
      href: "https://www.google.com/chrome/",
      target: "_blank",
      title: "Google Chrome",
      icon: (0,react_.mdx)(manage_group_members_on_itwins_guide_GoogleChromeIcon, {
        mdxType: "GoogleChromeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(manage_group_members_on_itwins_guide_LinkButton, {
      href: "https://code.visualstudio.com/",
      target: "_blank",
      title: "Visual Studio Code",
      icon: (0,react_.mdx)(manage_group_members_on_itwins_guide_VSCodeIcon, {
        mdxType: "VSCodeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(manage_group_members_on_itwins_guide_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(manage_group_members_on_itwins_guide_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A tool, such as ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Postman"), " that can be used to execute HTTP calls. These calls can also be made using the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Try it out"), " button in the API documentation."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "If a user is affiliated with an Organization, the user must be an Organization Administrator to create an iTwin. An Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0"
  }, "Licensing, Cloud, and Web Services"), " wiki page."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "An iTwin role. For more information on creating an iTwin role, see ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-and-query-itwin-roles-guide/"
  }, "create and query iTwins roles guide"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "An iTwin group. For more information on creating an iTwin group, see ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-and-query-itwin-groups-guide/"
  }, "create and query iTwins groups guide"), "."))), (0,react_.mdx)(manage_group_members_on_itwins_guide_TutorialSection, {
    actions: [(0,react_.mdx)(manage_group_members_on_itwins_guide_CreateSampleAppButton, {
      tooltip: "Register a basic SPA App for this tutorial",
      clientName: "Create and Query iTwins tutorial",
      scopes: ["itwins:modify", "itwins:read"],
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorizesinglepageapplicationsspaanddesktopmobileapplicationsnative"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iTwins API"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwins:modify"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwins:read"), " scopes enabled."))), (0,react_.mdx)(manage_group_members_on_itwins_guide_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "Before you can make a request to the APIs, a user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application."), (0,react_.mdx)(manage_group_members_on_itwins_guide_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Here you can use Client ID generated from previous registration step."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-the-itwins-documentation-page"
  }, "Grab a user token from the iTwins documentation page"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/access-control/operations/get-iTwin-roles/"
  }, "here")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Try it out"), " button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Under the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " section, select ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "authorizationCode"), " from the dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After the sign in popup closes, the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " header with token value should be visible beneath the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "HTTP request"), " dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Copy & paste the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " value for this tutorial.")), (0,react_.mdx)(manage_group_members_on_itwins_guide_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(manage_group_members_on_itwins_guide_TutorialSection, {
    actions: [(0,react_.mdx)(manage_group_members_on_itwins_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(manage_group_members_on_itwins_guide_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/accesscontrol/itwins/{id}/members/groups HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_group_members_on_itwins_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(manage_group_members_on_itwins_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_group_members_on_itwins_guide_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(manage_group_members_on_itwins_guide_CodeBlock, {
      language: "json",
      code: "{\n    \"members\": [\n        {\n            \"groupId\": \"149d0860-39e9-4ae9-9b05-0b5dcedd2d4b\",\n            \"roleId\": \"85d7734e-d884-4009-bbbe-18bd1e809351\"\n        }\n    ]\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_group_members_on_itwins_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(manage_group_members_on_itwins_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\ncache-control: must-revalidate, no-cache, private\ncontent-encoding: gzip\ncontent-type: application/json\ndate: Wed, 30 Jun 2021 19:30:40 GMT\nmas-request-id: 744155a0-f492-44a9-b78d-3a8c516f53ee\nmas-server: Bentley-WSG/4.0.12,Bentley-WebAPI/2.9\npragma: no-cache\nrequest-context: appId=cid-v2:7a353d36-9a8b-423e-965e-9d7f51324584\nvary: Accept-Encoding\nx-correlation-id: d1999ea1-62bd-4e84-8e5d-1a8aac040de4\nx-itwinplatform-media-type: bentley.itwin-platform.v2\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_group_members_on_itwins_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(manage_group_members_on_itwins_guide_CodeBlock, {
      language: "json",
      code: "{\n    \"members\": [\n        {\n            \"id\": \"149d0860-39e9-4ae9-9b05-0b5dcedd2d4b\",\n            \"groupName\": \"iTwin Administrators\",\n            \"groupDescription\": \"This is a group of Administrators for an iTwin\",\n            \"roles\": [{\n                \"id\": \"0af949d5-af90-4eed-84e0-d4d860f723d0\",\n                \"displayName\": \"iTwin Administrator\",\n                \"assignedDateTime\": \"2022-08-29T18:05:19.537846\"\n            }]\n        }\n    ]\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-add-itwin-group-member"
  }, "3. Add iTwin Group Member"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/access-control/operations/add-iTwin-group-members/"
  }, "Add iTwin group member"), " endpoint is used to add group members to a given iTwin."), (0,react_.mdx)("p", null, (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwin id"), " is a required parameter. The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "role id"), " from an existing Role (see ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/create-and-query-itwin-roles-guide/"
  }, "create and query iTwins roles guide"), ") is required to create a add an user member to an iTwin. ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "group id"), " and the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "role id"), " are required in the POST body."), (0,react_.mdx)("p", null, "The POST call will return the added group member(s).")), (0,react_.mdx)(manage_group_members_on_itwins_guide_TutorialSection, {
    actions: [(0,react_.mdx)(manage_group_members_on_itwins_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(manage_group_members_on_itwins_guide_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/accesscontrol/itwins/{id}/members/groups HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_group_members_on_itwins_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(manage_group_members_on_itwins_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_group_members_on_itwins_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(manage_group_members_on_itwins_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\ncontent-length: 480\ncontent-type: application/json\ndate: Wed, 30 Jun 2021 19:46:24 GMT\nrequest-context: appId=cid-v2:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 7a199ff9-317f-4d4f-ba82-70ba25f31d32\nx-itwinplatform-media-type: bentley.itwin-platform.v2\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_group_members_on_itwins_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(manage_group_members_on_itwins_guide_CodeBlock, {
      language: "json",
      code: "{\n    \"members\": [{\n            \"id\": \"149d0860-39e9-4ae9-9b05-0b5dcedd2d4b\",\n            \"groupName\": \"iTwin Administrators\",\n            \"groupDescription\": \"This is a group of Administrators for an iTwin\",\n            \"roles\": [{\n                \"id\": \"0af949d5-af90-4eed-84e0-d4d860f723d0\",\n                \"displayName\": \"iTwin Administrator\",\n                \"assignedDateTime\": \"2022-08-29T18:05:19.537846\"\n            }]\n        }, {\n            \"id\": \"149d0860-39e9-4ae9-9b05-0b5dcedd2d4b\",\n            \"groupName\": \"iTwin Engineers\",\n            \"groupDescription\": \"This is a group of engineers\",\n            \"roles\": [{\n                \"id\": \"0af949d5-af90-4eed-84e0-d4d860f723d0\",\n                \"displayName\": \"iTwin Editing\",\n                \"assignedDateTime\": \"2022-08-29T18:05:19.537846\"\n            }]\n        }],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://api.bentley.com/accesscontrol/efa557b7-ecd7-4a60-9589-2acce11f6cc9/members/groups?$top=100&$skip=0\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-query-for-group-members-using-the-itwin-id"
  }, "4. Query for Group Members using the iTwin Id"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Id"), " query parameter can be used to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/access-control/operations/get-iTwin-group-members/"
  }, "retrieve a list of group members"), " using the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwin Id"), "."), (0,react_.mdx)("p", null, "The api will return a list of group members for the given iTwin.")), (0,react_.mdx)(manage_group_members_on_itwins_guide_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(manage_group_members_on_itwins_guide_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(manage_group_members_on_itwins_guide_ResourceTile, {
    title: "Create and Query iTwins Guide",
    href: "/tutorials/create-and-query-itwins-guide/",
    description: "Tutorial for creating and querying iTwins.",
    isExternal: false,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(manage_group_members_on_itwins_guide_ResourceTile, {
    title: "Create and Query iTwins Groups Guide",
    href: "/tutorials/create-and-query-itwin-groups-guide/",
    description: "Tutorial for creating and querying iTwin groups.",
    isExternal: false,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(manage_group_members_on_itwins_guide_ResourceTile, {
    title: "Create and Query iTwins Roles Guide",
    href: "/tutorials/create-and-query-itwin-roles-guide/",
    description: "Tutorial for creating and querying iTwin roles.",
    isExternal: false,
    mdxType: "ResourceTile"
  }))));
}
;
manage_group_members_on_itwins_guide_MDXContent.isMDXComponent = true;
var manage_group_members_on_itwins_guide_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-the-itwins-documentation-page",
      level: 3,
      title: "Grab a user token from the iTwins documentation page",
      children: []
    }]
  }, {
    id: "3-add-itwin-group-member",
    level: 2,
    title: "3. Add iTwin Group Member",
    children: []
  }, {
    id: "4-query-for-group-members-using-the-itwin-id",
    level: 2,
    title: "4. Query for Group Members using the iTwin Id",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var manage_group_members_on_itwins_guide_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/manage-itwin-owners-guide.mdx


var manage_itwin_owners_guide_excluded = ["components"];
var manage_itwin_owners_guide_jsx = (external_react_default()).createElement;


var manage_itwin_owners_guide_readingTime = {
  "text": "6 min read",
  "minutes": 5.285,
  "time": 317100,
  "words": 1057
};
/* @jsxRuntime classic */
/* @jsx mdx */

var manage_itwin_owners_guide_metadata = {
  title: 'Manage iTwin Owners',
  tile: {
    name: 'Manage iTwin Owners',
    description: 'This tutorial will guide you through the process of adding and removing owners on an iTwin',
    href: '/tutorials/manage-itwin-owners-guide',
    durationInMinutes: 10,
    relatedApiIds: ['accesscontrol'],
    showInFirstSteps: false
  }
};
var manage_itwin_owners_guide_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var manage_itwin_owners_guide_Introduction = manage_itwin_owners_guide_makeShortcode("Introduction");
var manage_itwin_owners_guide_Alert = manage_itwin_owners_guide_makeShortcode("Alert");
var manage_itwin_owners_guide_TutorialSection = manage_itwin_owners_guide_makeShortcode("TutorialSection");
var manage_itwin_owners_guide_LinkButton = manage_itwin_owners_guide_makeShortcode("LinkButton");
var manage_itwin_owners_guide_GoogleChromeIcon = manage_itwin_owners_guide_makeShortcode("GoogleChromeIcon");
var manage_itwin_owners_guide_VSCodeIcon = manage_itwin_owners_guide_makeShortcode("VSCodeIcon");
var manage_itwin_owners_guide_PostmanIcon = manage_itwin_owners_guide_makeShortcode("PostmanIcon");
var manage_itwin_owners_guide_CreateSampleAppButton = manage_itwin_owners_guide_makeShortcode("CreateSampleAppButton");
var manage_itwin_owners_guide_Title = manage_itwin_owners_guide_makeShortcode("Title");
var manage_itwin_owners_guide_CodeBlock = manage_itwin_owners_guide_makeShortcode("CodeBlock");
var manage_itwin_owners_guide_ContinueLearningSection = manage_itwin_owners_guide_makeShortcode("ContinueLearningSection");
var manage_itwin_owners_guide_TileList = manage_itwin_owners_guide_makeShortcode("TileList");
var manage_itwin_owners_guide_ResourceTile = manage_itwin_owners_guide_makeShortcode("ResourceTile");
var manage_itwin_owners_guide_layoutProps = {
  metadata: manage_itwin_owners_guide_metadata
};
var manage_itwin_owners_guide_MDXLayout = "wrapper";
function manage_itwin_owners_guide_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, manage_itwin_owners_guide_excluded);
  return (0,react_.mdx)(manage_itwin_owners_guide_MDXLayout, (0,esm_extends/* default */.Z)({}, manage_itwin_owners_guide_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(manage_itwin_owners_guide_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "10",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)(manage_itwin_owners_guide_Alert, {
    mdxType: "Alert"
  }, "This tutorial is for the", ' ', (0,react_.mdx)("a", {
    href: "/apis/access-control-v2/overview/"
  }, "Access Control API V2"), ". To control the API version,", ' ', (0,react_.mdx)("a", {
    href: "/apis/overview/lifecycle/#api-versions"
  }, "see the API versions documentation")), (0,react_.mdx)("p", null, "This tutorial will take you through the process of adding and removing owners for a given iTwin. iTwin owners are the individuals with upmost level of authority on an iTwin; They are implicitly granted all Access Control permissions for the iTwin they own. For more information, see ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/access-control/#itwinowner"
  }, "iTwin owner overview documentation"), "."), (0,react_.mdx)("p", null, "By the end of this walk-through, you will be able to utilize the API endpoints in order to add and remove iTwin owners.")), (0,react_.mdx)(manage_itwin_owners_guide_TutorialSection, {
    actions: [(0,react_.mdx)(manage_itwin_owners_guide_LinkButton, {
      href: "https://www.google.com/chrome/",
      target: "_blank",
      title: "Google Chrome",
      icon: (0,react_.mdx)(manage_itwin_owners_guide_GoogleChromeIcon, {
        mdxType: "GoogleChromeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(manage_itwin_owners_guide_LinkButton, {
      href: "https://code.visualstudio.com/",
      target: "_blank",
      title: "Visual Studio Code",
      icon: (0,react_.mdx)(manage_itwin_owners_guide_VSCodeIcon, {
        mdxType: "VSCodeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(manage_itwin_owners_guide_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(manage_itwin_owners_guide_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A tool, such as ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Postman"), " that can be used to execute HTTP calls. These calls can also be made using the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Try it out"), " button in the API documentation."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Already created an iTwin. If you have not, follow the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-and-query-itwins-guide/"
  }, "Create and Query iTwins Guide"), "."))), (0,react_.mdx)(manage_itwin_owners_guide_TutorialSection, {
    actions: [(0,react_.mdx)(manage_itwin_owners_guide_CreateSampleAppButton, {
      tooltip: "Register a basic SPA App for this tutorial",
      clientName: "Manage iTwin Owners tutorial",
      scopes: ["iTwins:modify", "iTwins:read"],
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorizesinglepageapplicationsspaanddesktopmobileapplicationsnative"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iTwins API"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "itwins:modify"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "itwins:read"), " scopes enabled."))), (0,react_.mdx)(manage_itwin_owners_guide_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "Before you can make a request to the APIs, a user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application."), (0,react_.mdx)(manage_itwin_owners_guide_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Here you can use Client ID generated from previous registration step."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-the-itwins-documentation-page"
  }, "Grab a user token from the iTwins documentation page"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/access-control/operations/get-iTwin-roles/"
  }, "here")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Try it out"), " button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Under the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " section, select ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "authorizationCode"), " from the dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After the sign in popup closes, the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " header with token value should be visible beneath the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "HTTP request"), " dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Copy & paste the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " value for this tutorial.")), (0,react_.mdx)(manage_itwin_owners_guide_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(manage_itwin_owners_guide_TutorialSection, {
    actions: [(0,react_.mdx)((external_react_default()).Fragment, null, (0,react_.mdx)(manage_itwin_owners_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), ",", (0,react_.mdx)(manage_itwin_owners_guide_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/accesscontrol/itwins/{id}/members/owners HTTP/1.1",
      mdxType: "CodeBlock"
    }), ",", (0,react_.mdx)(manage_itwin_owners_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), ",", (0,react_.mdx)(manage_itwin_owners_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), ",", (0,react_.mdx)(manage_itwin_owners_guide_Title, {
      mdxType: "Title"
    }, "Request Body"), ",", (0,react_.mdx)(manage_itwin_owners_guide_CodeBlock, {
      language: "json",
      code: "{\n  \"email\": \"FirstName.LastName@organization.com\"\n}",
      mdxType: "CodeBlock"
    }), ",", (0,react_.mdx)(manage_itwin_owners_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), ",", (0,react_.mdx)(manage_itwin_owners_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\ncontent-length: 203\ncontent-type: application/json\ndate: Wed, 30 Jun 2021 17:26:10 GMT\nrequest-context: appId=cid-v2:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 74e263d7-ded7-45a5-8347-ca1f98ffab86\nx-itwinplatform-media-type: bentley.itwin-platform.v2\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), ",", (0,react_.mdx)(manage_itwin_owners_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), ",", (0,react_.mdx)(manage_itwin_owners_guide_CodeBlock, {
      language: "json",
      code: "{\n  \"member\": {\n    \"id\": \"d0ec803b-de9a-41cd-9d97-c8edddd4cb0d\",\n    \"email\": \"FirstName.LastName@organization.com\",\n    \"givenName\": \"FirstName\",\n    \"surName\": \"LastName\",\n    \"organization\": \"Organization LLC\"\n  }\n}",
      mdxType: "CodeBlock"
    }))],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-add-a-user-as-an-owner"
  }, "3. Add a user as an owner"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/access-control/operations/add-itwin-owner-member/"
  }, "Add iTwin Owner"), " endpoint is used to add iTwin owners. The user making this request must be an Owner themself. "), (0,react_.mdx)("p", null, "The iTwin ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " from an existing iTwin (see ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/create-and-query-itwins-guide/"
  }, "create and query iTwins guide"), ") is required to manage ownership and the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "email"), " of who is being added as the owner, is also required. "), (0,react_.mdx)("p", null, "The POST call will return the member object. The returned member ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " will be used in subsequent steps to remove the owner. "), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Note:"), " The Account Administrator can also perform this request, and is not required to be an Owner, but that is the only exception to this rule.")), (0,react_.mdx)(manage_itwin_owners_guide_TutorialSection, {
    actions: [(0,react_.mdx)((external_react_default()).Fragment, null, (0,react_.mdx)(manage_itwin_owners_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), ",", (0,react_.mdx)(manage_itwin_owners_guide_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/accesscontrol/itwins/{id}/members/owners HTTP/1.1",
      mdxType: "CodeBlock"
    }), ",", (0,react_.mdx)(manage_itwin_owners_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), ",", (0,react_.mdx)(manage_itwin_owners_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), ",", (0,react_.mdx)(manage_itwin_owners_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), ",", (0,react_.mdx)(manage_itwin_owners_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\ncontent-type: application/json\ndate: Mon, 29 Aug 2022 19:24:14 GMT\nrequest-context: appId=cid-v2:7a353d36-9a8b-423e-965e-9d7f51324584\nvary: Accept-Encoding\nx-correlation-id: 260678e5-0244-413d-bc60-f6dac19fd450\nx-itwinplatform-media-type: bentley.itwin-platform.v2\nx-itwinplatform-region: East US\nx-rate-limit-limit: 1s\nx-rate-limit-remaining: 49\nx-rate-limit-reset: 2022-08-29T19:24:15.3864257Z",
      mdxType: "CodeBlock"
    }), ",", (0,react_.mdx)(manage_itwin_owners_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), ",", (0,react_.mdx)(manage_itwin_owners_guide_CodeBlock, {
      language: "json",
      code: "{\n  \"members\": [\n    {\n      \"id\": \"d0ec803b-de9a-41cd-9d97-c8edddd4cb0d\",\n      \"email\": \"FirstName.LastName@organization.com\",\n      \"givenName\": \"FirstName\",\n      \"surName\": \"LastName\",\n      \"organization\": \"Organization LLC\"\n    },\n    {\n      \"id\": \"5665087f-3f44-446d-9ce5-84c5d41af3c5\",\n      \"email\": \"Another.Owner@organization.com\",\n      \"givenName\": \"Another\",\n      \"surName\": \"Owner\",\n      \"organization\": \"Organization LLC\"\n    }\n  ]\n}",
      mdxType: "CodeBlock"
    }))],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-query-for-an-itwins-owners"
  }, "4. Query for an iTwin\u2019s owners"), (0,react_.mdx)("p", null, "The iTwin ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " can be used to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/access-control/operations/get-itwin-owner-members/"
  }, "retrieve a list of iTwin owners"), "."), (0,react_.mdx)("p", null, "The API will return a list of owners for a given iTwin.")), (0,react_.mdx)(manage_itwin_owners_guide_TutorialSection, {
    actions: [(0,react_.mdx)((external_react_default()).Fragment, null, (0,react_.mdx)(manage_itwin_owners_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), ",", (0,react_.mdx)(manage_itwin_owners_guide_CodeBlock, {
      language: "http",
      code: "DELETE https://api.bentley.com/accesscontrol/itwins/{id}/members/owners/{memberId} HTTP/1.1",
      mdxType: "CodeBlock"
    }), ",", (0,react_.mdx)(manage_itwin_owners_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), ",", (0,react_.mdx)(manage_itwin_owners_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), ",", (0,react_.mdx)(manage_itwin_owners_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), ",", (0,react_.mdx)(manage_itwin_owners_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 204 No Content\ncontent-length: 0\ndate: Tue, 27 Jun 2023 17:13:28 GMT\nrequest-context: appId=cid-v1:eed7f349-e7be-4e9c-a631-b40237883d60\nx-correlation-id: 5e8e9dc2-8fb3-4d39-92c8-e807eabe2e13\nx-itwinplatform-media-type: bentley.itwin-platform.v2\nx-itwinplatform-region: West Central US",
      mdxType: "CodeBlock"
    }))],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-remove-an-owner"
  }, "5. Remove an owner"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/access-control/operations/remove-itwin-owner-member/"
  }, "Remove iTwin Owner"), " endpoint is used to remove iTwin owners. The user making this request must be an Owner themself."), (0,react_.mdx)("p", null, "The iTwin ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " from an existing iTwin (see ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/create-and-query-itwins-guide/"
  }, "create and query iTwins guide"), ") is required to manage ownership and the member ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " of the owner being removed, is also required. "), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Note:"), " The Account Administrator can also perform this request, and is not required to be an Owner, but that is the only exception to this rule.")), (0,react_.mdx)(manage_itwin_owners_guide_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(manage_itwin_owners_guide_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(manage_itwin_owners_guide_ResourceTile, {
    title: "Create and Query iTwins Guide",
    href: "/tutorials/create-and-query-itwins-guide/",
    description: "Tutorial for creating and querying iTwins.",
    isExternal: false,
    mdxType: "ResourceTile"
  }))));
}
;
manage_itwin_owners_guide_MDXContent.isMDXComponent = true;
var manage_itwin_owners_guide_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-the-itwins-documentation-page",
      level: 3,
      title: "Grab a user token from the iTwins documentation page",
      children: []
    }]
  }, {
    id: "3-add-a-user-as-an-owner",
    level: 2,
    title: "3. Add a user as an owner",
    children: []
  }, {
    id: "4-query-for-an-itwins-owners",
    level: 2,
    title: "4. Query for an iTwin’s owners",
    children: []
  }, {
    id: "5-remove-an-owner",
    level: 2,
    title: "5. Remove an owner",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var manage_itwin_owners_guide_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/manage-project-team-members-guide.mdx


var manage_project_team_members_guide_excluded = ["components"];
var manage_project_team_members_guide_jsx = (external_react_default()).createElement;


var manage_project_team_members_guide_readingTime = {
  "text": "7 min read",
  "minutes": 6.42,
  "time": 385200,
  "words": 1284
};
/* @jsxRuntime classic */
/* @jsx mdx */

var manage_project_team_members_guide_metadata = {
  title: 'Manage Project Team Members',
  tile: {
    name: 'Manage Project Team Members',
    description: 'This tutorial will guide you through the process of managing project team members',
    href: '/tutorials/manage-project-team-members-guide',
    durationInMinutes: 15,
    relatedApiIds: ['projects'],
    showInFirstSteps: false,
    firstStepsSequenceNumber: 3
  }
};
var manage_project_team_members_guide_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var manage_project_team_members_guide_Introduction = manage_project_team_members_guide_makeShortcode("Introduction");
var manage_project_team_members_guide_TutorialSection = manage_project_team_members_guide_makeShortcode("TutorialSection");
var manage_project_team_members_guide_LinkButton = manage_project_team_members_guide_makeShortcode("LinkButton");
var manage_project_team_members_guide_GoogleChromeIcon = manage_project_team_members_guide_makeShortcode("GoogleChromeIcon");
var manage_project_team_members_guide_VSCodeIcon = manage_project_team_members_guide_makeShortcode("VSCodeIcon");
var manage_project_team_members_guide_PostmanIcon = manage_project_team_members_guide_makeShortcode("PostmanIcon");
var manage_project_team_members_guide_CreateSampleAppButton = manage_project_team_members_guide_makeShortcode("CreateSampleAppButton");
var manage_project_team_members_guide_Alert = manage_project_team_members_guide_makeShortcode("Alert");
var manage_project_team_members_guide_Title = manage_project_team_members_guide_makeShortcode("Title");
var manage_project_team_members_guide_CodeBlock = manage_project_team_members_guide_makeShortcode("CodeBlock");
var manage_project_team_members_guide_ContinueLearningSection = manage_project_team_members_guide_makeShortcode("ContinueLearningSection");
var manage_project_team_members_guide_TileList = manage_project_team_members_guide_makeShortcode("TileList");
var manage_project_team_members_guide_ResourceTile = manage_project_team_members_guide_makeShortcode("ResourceTile");
var manage_project_team_members_guide_layoutProps = {
  metadata: manage_project_team_members_guide_metadata
};
var manage_project_team_members_guide_MDXLayout = "wrapper";
function manage_project_team_members_guide_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, manage_project_team_members_guide_excluded);
  return (0,react_.mdx)(manage_project_team_members_guide_MDXLayout, (0,esm_extends/* default */.Z)({}, manage_project_team_members_guide_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(manage_project_team_members_guide_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "15",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial will take you through the process of creating roles, adding team members, and retrieving team members for a given iTwin Project."), (0,react_.mdx)("p", null, "By the end of this walk-through, you will be able to utilize the API endpoints in order to create roles, add & assign permissions to the role, invite users to a project, and retrieve the list of project members.")), (0,react_.mdx)(manage_project_team_members_guide_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(manage_project_team_members_guide_LinkButton, {
      href: "https://www.google.com/chrome/",
      target: "_blank",
      title: "Google Chrome",
      icon: (0,react_.mdx)(manage_project_team_members_guide_GoogleChromeIcon, {
        mdxType: "GoogleChromeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(manage_project_team_members_guide_LinkButton, {
      href: "https://code.visualstudio.com/",
      target: "_blank",
      title: "Visual Studio Code",
      icon: (0,react_.mdx)(manage_project_team_members_guide_VSCodeIcon, {
        mdxType: "VSCodeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(manage_project_team_members_guide_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(manage_project_team_members_guide_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-and-query-projects-guide/"
  }, "Project")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A tool such as ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Postman"), " that can be used to execute http calls. These calls can also be made using the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "TryIt"), " button in the API documentation."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "If a user is affiliated with an Organization, then the user must be an Organization Administrator in order to manage team members for a project. An Organization Administrator\nmust have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0"
  }, "Licensing, Cloud, and Web Services"), " wiki page."))), (0,react_.mdx)(manage_project_team_members_guide_TutorialSection, {
    actions: [(0,react_.mdx)(manage_project_team_members_guide_CreateSampleAppButton, {
      tooltip: "Register a basic SPA App for this tutorial",
      clientName: "Manage Project Team Members tutorial",
      scopes: ["projects:modify", "projects:read"],
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Projects API"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "projects:modify projects:read"), " scopes enabled."))), (0,react_.mdx)(manage_project_team_members_guide_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "Before you can make a request to the APIs, a user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)(manage_project_team_members_guide_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Here you can use Client ID generated from previous registration step."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-api-reference-try-it-section"
  }, "Grab a user token from Api reference \u201CTry it\u201D Section"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/projects/operations/get-project-team-members/"
  }, "here")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Try it"), " button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Under the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " section, select ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "authorizationCode"), " from the dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After the sign in popup closes, the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " header with token value should be visible beneath the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "HTTP request"), " dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Copy & paste the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " value for this tutorial.")), (0,react_.mdx)(manage_project_team_members_guide_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(manage_project_team_members_guide_TutorialSection, {
    actions: [(0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/projects/{id}/roles/ HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "json",
      code: "{\n  \"displayName\":\"Project Administrator\",\n  \"description\":\"Project Administrator\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\ncontent-length: 203\ncontent-type: application/json\ndate: Wed, 30 Jun 2021 17:26:10 GMT\nrequest-context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 74e263d7-ded7-45a5-8347-ca1f98ffab86\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "json",
      code: "{\n  \"role\":{\n    \"id\":\"14b391cf-ce9e-43d3-8fee-c49e57c2680d\",\n    \"displayName\":\"Project Administrator\",\n    \"description\":\"A description of Project Administrator\",\n    \"permissions\":[\n      \n    ]\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-create-project-role"
  }, "3. Create Project Role"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/projects/operations/create-project-role/"
  }, "Create project role"), " endpoint is used to create project roles. After role is created permissions can be assigned."), (0,react_.mdx)("p", null, (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "project id"), " is required to create a role. A ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "display name"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "description"), " are required in the POST body."), (0,react_.mdx)("p", null, "The POST call will return a new role instance. The returned ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "role id"), " along with the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "project id"), " will be used to add permissions in the next step.")), (0,react_.mdx)(manage_project_team_members_guide_TutorialSection, {
    actions: [(0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "http",
      code: "PATCH https://api.bentley.com/projects/{id}/roles/{roleId} HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "json",
      code: "{\n  \"permissions\":[\n    \"administration_invite_member\",\n    \"administration_manage_roles\",\n    \"administration_remove_member\"\n  ]\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\ncontent-length: 324\ncontent-type: application/json\ndate: Wed, 30 Jun 2021 18:17:39 GMT\nrequest-context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: f16d2765-4a9c-40a4-995e-bd7c6b8b8d4a\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "json",
      code: "{\n  \"role\":{\n    \"id\":\"10a2d277-ea41-4e81-b309-f7a9aea09d51\",\n    \"displayName\":\"Project Administrator\",\n    \"description\":\"A description of Project Administrator\",\n    \"permissions\":[\n      \"administration_invite_member\",\n      \"administration_manage_roles\",\n      \"administration_remove_member\"\n    ]\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-update-project-role-using-the-project-id-and-role-id"
  }, "4. Update Project Role Using the Project Id and Role Id"), (0,react_.mdx)("p", null, "To assign ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "permissions"), " Role needs to be ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/projects/operations/update-project-role/"
  }, "updated"), ". ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "project id"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "role id"), " are required. The POST body should contain ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "list of permissions"), "."), (0,react_.mdx)("p", null, "The response will contain the role details along with the list of permissions assigned.")), (0,react_.mdx)(manage_project_team_members_guide_TutorialSection, {
    actions: [(0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/projects/d9102abc-abfc-4617-b19d-804896064cea/roles HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK \ncache-control: must-revalidate, no-cache, private\ncontent-encoding: gzip\ncontent-type: application/json\ndate: Wed, 30 Jun 2021 18:26:19 GMT\netag: \"QosNxHidwaC0+OqsAO9D5HQ9s0g=\"\nmas-request-id: 280616fa-b078-4276-8cb6-b93b8e38433f\nmas-server: Bentley-WSG/4.0.12,Bentley-WebAPI/2.9\npragma: no-cache\nrequest-context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nvary: Accept-Encoding\nx-correlation-id: 06f3046a-5973-4571-b09b-747cbdddf2c1\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "json",
      code: "{\n  \"roles\":[\n    {\n      \"id\":\"10a2d277-ea41-4e81-b309-f7a9aea09d51\",\n      \"displayName\":\"Project Administrator\",\n      \"description\":\"A description of Project Administrator\",\n      \"permissions\":[\n        \"administration_invite_member\",\n        \"administration_manage_roles\",\n        \"administration_remove_member\"\n      ]\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://api.bentley.com/projects/d9102abc-abfc-4617-b19d-804896064cea/roles?$skip=0&$top=100\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-query-for-roles-using-the-project-id"
  }, "5. Query for Roles using the Project Id"), (0,react_.mdx)("p", null, (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Project Id"), " can be used to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/projects/operations/get-project-roles/"
  }, "retrieve a list of project roles"), "."), (0,react_.mdx)("p", null, "The api will return a list of roles for a given project.")), (0,react_.mdx)(manage_project_team_members_guide_TutorialSection, {
    actions: [(0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/projects/2ff085cf-c255-46a9-9c6f-7d88f59bcbf9/members HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "json",
      code: "{\n  \"email\":\"John.Doe@bentley.com\",\n  \"roleNames\":[\n    \"Project Administrator\"\n  ]\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\ncache-control: must-revalidate, no-cache, private\ncontent-encoding: gzip\ncontent-type: application/json\ndate: Wed, 30 Jun 2021 19:30:40 GMT\nlocation: https://api.bentley.com/projects/2ff085cf-c255-46a9-9c6f-7d88f59bcbf9/members/56c58c0c-28a9-4cd2-b50b-102e33b657f2\nmas-request-id: 744155a0-f492-44a9-b78d-3a8c516f53ee\nmas-server: Bentley-WSG/4.0.12,Bentley-WebAPI/2.9\npragma: no-cache\nrequest-context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nvary: Accept-Encoding\nx-correlation-id: d1999ea1-62bd-4e84-8e5d-1a8aac040de4\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "json",
      code: "NO CONTENT",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-add-project-team-member"
  }, "6. Add Project Team Member"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/projects/operations/add-project-team-member/"
  }, "Add project team member"), " endpoint is used to add team members to a given project."), (0,react_.mdx)("p", null, (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "project id"), " is a required parameter. User ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "email"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "list of role names"), " are required in the POST body."), (0,react_.mdx)("p", null, "The POST call will only return the headers.")), (0,react_.mdx)(manage_project_team_members_guide_TutorialSection, {
    actions: [(0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/projects/{id}/members HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK \ncontent-length: 480\ncontent-type: application/json\ndate: Wed, 30 Jun 2021 19:46:24 GMT\nrequest-context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 7a199ff9-317f-4d4f-ba82-70ba25f31d32\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_project_team_members_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(manage_project_team_members_guide_CodeBlock, {
      language: "json",
      code: "{\n  \"members\":[\n    {\n      \"userId\":\"7caa33e9-9d4d-4446-be0e-4c012071e636\",\n      \"email\":\"John.Doe@bentley.com\",\n      \"givenName\":\"John\",\n      \"surname\":\"Doe\",\n      \"organization\":\"Bentley Systems Inc\",\n      \"roles\":[\n        \"Team Member\",\n        \"Project Administrator\"\n      ]\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://api.bentley.com/projects/d9102abc-abfc-4617-b19d-804896064cea/roles?$skip=0&$top=100\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "7-query-for-team-members-using-the-project-id"
  }, "7. Query for Team Members using the Project Id"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Id"), " query parameter can be used to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/projects/operations/get-project-team-members/"
  }, "retrieve a list of team members"), " using the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Project Id"), "."), (0,react_.mdx)("p", null, "The api will return a list of team members for the given project.")), (0,react_.mdx)(manage_project_team_members_guide_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(manage_project_team_members_guide_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(manage_project_team_members_guide_ResourceTile, {
    title: "iTwin Project Sample App",
    href: "https://github.com/iTwin/iTwin-project-sample-app",
    description: "Sample application that uses the Projects API to create roles and add users to projects.",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
manage_project_team_members_guide_MDXContent.isMDXComponent = true;
var manage_project_team_members_guide_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-api-reference-try-it-section",
      level: 3,
      title: "Grab a user token from Api reference “Try it” Section",
      children: []
    }]
  }, {
    id: "3-create-project-role",
    level: 2,
    title: "3. Create Project Role",
    children: []
  }, {
    id: "4-update-project-role-using-the-project-id-and-role-id",
    level: 2,
    title: "4. Update Project Role Using the Project Id and Role Id",
    children: []
  }, {
    id: "5-query-for-roles-using-the-project-id",
    level: 2,
    title: "5. Query for Roles using the Project Id",
    children: []
  }, {
    id: "6-add-project-team-member",
    level: 2,
    title: "6. Add Project Team Member",
    children: []
  }, {
    id: "7-query-for-team-members-using-the-project-id",
    level: 2,
    title: "7. Query for Team Members using the Project Id",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var manage_project_team_members_guide_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/manage-user-members-on-itwins-guide.mdx


var manage_user_members_on_itwins_guide_excluded = ["components"];
var manage_user_members_on_itwins_guide_jsx = (external_react_default()).createElement;


var manage_user_members_on_itwins_guide_readingTime = {
  "text": "6 min read",
  "minutes": 5.195,
  "time": 311700,
  "words": 1039
};
/* @jsxRuntime classic */
/* @jsx mdx */

var manage_user_members_on_itwins_guide_metadata = {
  title: 'Manage User Members on iTwins',
  tile: {
    name: 'Manage User Members on iTwins',
    description: 'This tutorial will guide you through the process of managing iTwin user members',
    href: '/tutorials/manage-user-members-on-itwins-guide',
    durationInMinutes: 15,
    relatedApiIds: ['accesscontrol'],
    showInFirstSteps: false
  }
};
var manage_user_members_on_itwins_guide_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var manage_user_members_on_itwins_guide_Introduction = manage_user_members_on_itwins_guide_makeShortcode("Introduction");
var manage_user_members_on_itwins_guide_Alert = manage_user_members_on_itwins_guide_makeShortcode("Alert");
var manage_user_members_on_itwins_guide_TutorialSection = manage_user_members_on_itwins_guide_makeShortcode("TutorialSection");
var manage_user_members_on_itwins_guide_LinkButton = manage_user_members_on_itwins_guide_makeShortcode("LinkButton");
var manage_user_members_on_itwins_guide_GoogleChromeIcon = manage_user_members_on_itwins_guide_makeShortcode("GoogleChromeIcon");
var manage_user_members_on_itwins_guide_VSCodeIcon = manage_user_members_on_itwins_guide_makeShortcode("VSCodeIcon");
var manage_user_members_on_itwins_guide_PostmanIcon = manage_user_members_on_itwins_guide_makeShortcode("PostmanIcon");
var manage_user_members_on_itwins_guide_CreateSampleAppButton = manage_user_members_on_itwins_guide_makeShortcode("CreateSampleAppButton");
var manage_user_members_on_itwins_guide_Title = manage_user_members_on_itwins_guide_makeShortcode("Title");
var manage_user_members_on_itwins_guide_CodeBlock = manage_user_members_on_itwins_guide_makeShortcode("CodeBlock");
var manage_user_members_on_itwins_guide_ContinueLearningSection = manage_user_members_on_itwins_guide_makeShortcode("ContinueLearningSection");
var manage_user_members_on_itwins_guide_TileList = manage_user_members_on_itwins_guide_makeShortcode("TileList");
var manage_user_members_on_itwins_guide_ResourceTile = manage_user_members_on_itwins_guide_makeShortcode("ResourceTile");
var manage_user_members_on_itwins_guide_layoutProps = {
  metadata: manage_user_members_on_itwins_guide_metadata
};
var manage_user_members_on_itwins_guide_MDXLayout = "wrapper";
function manage_user_members_on_itwins_guide_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, manage_user_members_on_itwins_guide_excluded);
  return (0,react_.mdx)(manage_user_members_on_itwins_guide_MDXLayout, (0,esm_extends/* default */.Z)({}, manage_user_members_on_itwins_guide_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(manage_user_members_on_itwins_guide_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "15",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)(manage_user_members_on_itwins_guide_Alert, {
    mdxType: "Alert"
  }, "This tutorial is for the", ' ', (0,react_.mdx)("a", {
    href: "/apis/access-control-v2/overview/"
  }, "Access Control API V2"), ". To control the API version,", ' ', (0,react_.mdx)("a", {
    href: "/apis/overview/lifecycle/#api-versions"
  }, "see the API versions documentation")), (0,react_.mdx)("p", null, "This tutorial will take you through the process of adding and retrieving user members for a given iTwin. Members are users which have been assigned a role, in turn giving them a set of permissions. Members can be assigned more than one role and the same role can be assigned to more than one member."), (0,react_.mdx)("p", null, "By the end of this walk-through, you will be able to utilize the API endpoints in order to invite users to an iTwin, and retrieve the list of iTwin user members.")), (0,react_.mdx)(manage_user_members_on_itwins_guide_TutorialSection, {
    actions: [(0,react_.mdx)(manage_user_members_on_itwins_guide_LinkButton, {
      href: "https://www.google.com/chrome/",
      target: "_blank",
      title: "Google Chrome",
      icon: (0,react_.mdx)(manage_user_members_on_itwins_guide_GoogleChromeIcon, {
        mdxType: "GoogleChromeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(manage_user_members_on_itwins_guide_LinkButton, {
      href: "https://code.visualstudio.com/",
      target: "_blank",
      title: "Visual Studio Code",
      icon: (0,react_.mdx)(manage_user_members_on_itwins_guide_VSCodeIcon, {
        mdxType: "VSCodeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(manage_user_members_on_itwins_guide_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(manage_user_members_on_itwins_guide_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A tool, such as ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Postman"), " that can be used to execute HTTP calls. These calls can also be made using the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Try it out"), " button in the API documentation."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "If a user is affiliated with an Organization, the user must be an Organization Administrator to create an iTwin. An Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0"
  }, "Licensing, Cloud, and Web Services"), " wiki page."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "An iTwin role. For more information on creating an iTwin role, please see the tutorial ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-and-query-itwin-roles-guide/"
  }, "Create and Query iTwin Roles"), "."))), (0,react_.mdx)(manage_user_members_on_itwins_guide_TutorialSection, {
    actions: [(0,react_.mdx)(manage_user_members_on_itwins_guide_CreateSampleAppButton, {
      tooltip: "Register a basic SPA App for this tutorial",
      clientName: "Create and Query iTwins tutorial",
      scopes: ["itwins:modify", "itwins:read"],
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iTwins API"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwins:modify"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwins:read"), " scopes enabled."))), (0,react_.mdx)(manage_user_members_on_itwins_guide_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "Before you can make a request to the APIs, a user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application."), (0,react_.mdx)(manage_user_members_on_itwins_guide_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Here you can use Client ID generated from previous registration step."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-the-itwins-documentation-page"
  }, "Grab a user token from the iTwins documentation page"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/access-control/operations/get-iTwin-roles/"
  }, "here")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Try it out"), " button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Under the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " section, select ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "authorizationCode"), " from the dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After the sign in popup closes, the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " header with token value should be visible beneath the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "HTTP request"), " dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Copy & paste the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " value for this tutorial.")), (0,react_.mdx)(manage_user_members_on_itwins_guide_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(manage_user_members_on_itwins_guide_TutorialSection, {
    actions: [(0,react_.mdx)(manage_user_members_on_itwins_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(manage_user_members_on_itwins_guide_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/accesscontrol/itwins/{id}/members HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_user_members_on_itwins_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(manage_user_members_on_itwins_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_user_members_on_itwins_guide_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(manage_user_members_on_itwins_guide_CodeBlock, {
      language: "json",
      code: "{\n  \"members\": [\n    {\n    \"email\": \"John.Doe@bentley.com\",\n    \"roleId\": \"806ac320-80be-489e-b95d-7d27752776a0\"\n    }\n  ]\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_user_members_on_itwins_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(manage_user_members_on_itwins_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\ncache-control: must-revalidate, no-cache, private\ncontent-encoding: gzip\ncontent-type: application/json\ndate: Wed, 30 Jun 2021 19:30:40 GMT\nmas-request-id: 744155a0-f492-44a9-b78d-3a8c516f53ee\nmas-server: Bentley-WSG/4.0.12,Bentley-WebAPI/2.9\npragma: no-cache\nrequest-context: appId=cid-v2:7a353d36-9a8b-423e-965e-9d7f51324584\nvary: Accept-Encoding\nx-correlation-id: d1999ea1-62bd-4e84-8e5d-1a8aac040de4\nx-itwinplatform-media-type: bentley.itwin-platform.v2\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_user_members_on_itwins_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(manage_user_members_on_itwins_guide_CodeBlock, {
      language: "json",
      code: "{\n    \"members\": [\n      {\n        \"id\": \"08a2ede0-fc7d-4f52-996e-e1047feb27e9\",\n        \"email\": \"John.Doe@bentley.com\",\n        \"givenName\": \"John\",\n        \"surname\": \"Doe\",\n        \"organization\": \"Bentley Systems Inc\",\n        \"roles\": [{\n            \"id\": \"0af949d5-af90-4eed-84e0-d4d860f723d0\",\n            \"displayName\": \"iTwin Administrator\",\n            \"assignedDateTime\": \"2022-08-29T18:05:19.537846\"\n        }]\n    }]\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-add-itwin-user-member"
  }, "3. Add iTwin User Member"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/access-control/operations/add-iTwin-members/"
  }, "Add iTwin user member"), " endpoint is used to add user members to a given iTwin."), (0,react_.mdx)("p", null, (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwin id"), " is a required parameter. The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "role id"), " from an existing Role (see ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/create-and-query-itwin-roles-guide/"
  }, "create and query iTwins roles guide"), ") is required to create a add an user member to an iTwin. User ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "email"), " and the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "role id"), " are required in the POST body."), (0,react_.mdx)("p", null, "The POST call will return the added user member(s).")), (0,react_.mdx)(manage_user_members_on_itwins_guide_TutorialSection, {
    actions: [(0,react_.mdx)(manage_user_members_on_itwins_guide_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(manage_user_members_on_itwins_guide_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/accesscontrol/itwins/{id}/members HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_user_members_on_itwins_guide_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(manage_user_members_on_itwins_guide_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_user_members_on_itwins_guide_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(manage_user_members_on_itwins_guide_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\ncontent-length: 480\ncontent-type: application/json\ndate: Wed, 30 Jun 2021 19:46:24 GMT\nrequest-context: appId=cid-v2:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 7a199ff9-317f-4d4f-ba82-70ba25f31d32\nx-itwinplatform-media-type: bentley.itwin-platform.v2\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(manage_user_members_on_itwins_guide_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(manage_user_members_on_itwins_guide_CodeBlock, {
      language: "json",
      code: "{\n    \"members\": [{\n        \"id\": \"56c58c0c-28a9-4cd2-b50b-102e33b657f2\",\n        \"email\": \"Jane.Doe@example.com\",\n        \"givenName\": \"Jane\",\n        \"surname\": \"Doe\",\n        \"organization\": \"Example Inc\",\n        \"roles\": [{\n            \"id\": \"56e96811-6d6e-4418-a78f-a7f5933e6ed4\",\n            \"displayName\": \"iTwin owner\",\n            \"assignedDateTime\": \"2021-09-14T19:41:29.913\"\n        }]\n    }, {\n        \"id\": \"54d1cc67-7900-47cd-8135-b6eaabf5c703\",\n        \"email\": \"John.Doe@example.com\",\n        \"givenName\": \"John\",\n        \"surname\": \"Doe\",\n        \"organization\": \"Example Inc\",\n        \"roles\": [{\n            \"id\": \"0af949d5-af90-4eed-84e0-d4d860f723d0\",\n            \"displayName\": \"iTwin Administrator\",\n            \"assignedDateTime\": \"2022-08-29T18:05:19.537846\"\n        }]\n    }],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://api.bentley.com/accesscontrol/efa557b7-ecd7-4a60-9589-2acce11f6cc9/members?$top=100&$skip=0\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-query-for-user-members-using-the-itwin-id"
  }, "4. Query for User Members using the iTwin Id"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Id"), " query parameter can be used to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/access-control/operations/get-iTwin-members/"
  }, "retrieve a list of user members"), " using the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwin Id"), "."), (0,react_.mdx)("p", null, "The api will return a list of user members for the given iTwin.")), (0,react_.mdx)(manage_user_members_on_itwins_guide_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(manage_user_members_on_itwins_guide_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(manage_user_members_on_itwins_guide_ResourceTile, {
    title: "Create and Query iTwins Guide",
    href: "/tutorials/create-and-query-itwins-guide/",
    description: "Tutorial for creating and querying iTwins.",
    isExternal: false,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(manage_user_members_on_itwins_guide_ResourceTile, {
    title: "Create and Query iTwins Roles Guide",
    href: "/tutorials/create-and-query-itwin-roles-guide/",
    description: "Tutorial for creating and querying iTwin roles.",
    isExternal: false,
    mdxType: "ResourceTile"
  }))));
}
;
manage_user_members_on_itwins_guide_MDXContent.isMDXComponent = true;
var manage_user_members_on_itwins_guide_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-the-itwins-documentation-page",
      level: 3,
      title: "Grab a user token from the iTwins documentation page",
      children: []
    }]
  }, {
    id: "3-add-itwin-user-member",
    level: 2,
    title: "3. Add iTwin User Member",
    children: []
  }, {
    id: "4-query-for-user-members-using-the-itwin-id",
    level: 2,
    title: "4. Query for User Members using the iTwin Id",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var manage_user_members_on_itwins_guide_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/mobile-sdk-ios-gettingstarted.mdx


var mobile_sdk_ios_gettingstarted_excluded = ["components"];
var mobile_sdk_ios_gettingstarted_jsx = (external_react_default()).createElement;


var mobile_sdk_ios_gettingstarted_readingTime = {
  "text": "9 min read",
  "minutes": 8.365,
  "time": 501900,
  "words": 1673
};
/* @jsxRuntime classic */
/* @jsx mdx */

var mobile_sdk_ios_gettingstarted_metadata = {
  title: 'Get started with the iTwin Mobile SDK for iOS',
  tile: {
    name: 'Get started with the iTwin Mobile SDK for iOS',
    description: 'This tutorial will get you up and running with the iTwin sample app for iOS.',
    href: '/tutorials/mobile-sdk-ios-gettingstarted/',
    thumbnail: '/images/tutorials/mobile-sdk-ios-getting-started/banner.png',
    durationInMinutes: 30
  }
};
var mobile_sdk_ios_gettingstarted_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var mobile_sdk_ios_gettingstarted_Introduction = mobile_sdk_ios_gettingstarted_makeShortcode("Introduction");
var mobile_sdk_ios_gettingstarted_TutorialSection = mobile_sdk_ios_gettingstarted_makeShortcode("TutorialSection");
var mobile_sdk_ios_gettingstarted_LinkButton = mobile_sdk_ios_gettingstarted_makeShortcode("LinkButton");
var XcodeIcon = mobile_sdk_ios_gettingstarted_makeShortcode("XcodeIcon");
var mobile_sdk_ios_gettingstarted_NodeJsIcon = mobile_sdk_ios_gettingstarted_makeShortcode("NodeJsIcon");
var mobile_sdk_ios_gettingstarted_GitIcon = mobile_sdk_ios_gettingstarted_makeShortcode("GitIcon");
var mobile_sdk_ios_gettingstarted_VSCodeIcon = mobile_sdk_ios_gettingstarted_makeShortcode("VSCodeIcon");
var mobile_sdk_ios_gettingstarted_SignInButton = mobile_sdk_ios_gettingstarted_makeShortcode("SignInButton");
var mobile_sdk_ios_gettingstarted_CreateNativeAppButton = mobile_sdk_ios_gettingstarted_makeShortcode("CreateNativeAppButton");
var mobile_sdk_ios_gettingstarted_CodeBlock = mobile_sdk_ios_gettingstarted_makeShortcode("CodeBlock");
var mobile_sdk_ios_gettingstarted_layoutProps = {
  metadata: mobile_sdk_ios_gettingstarted_metadata
};
var mobile_sdk_ios_gettingstarted_MDXLayout = "wrapper";
function mobile_sdk_ios_gettingstarted_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, mobile_sdk_ios_gettingstarted_excluded);
  return (0,react_.mdx)(mobile_sdk_ios_gettingstarted_MDXLayout, (0,esm_extends/* default */.Z)({}, mobile_sdk_ios_gettingstarted_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "30",
    summaryImageSrc: "/unreal-docs-site/static/images/tutorials/mobile-sdk-ios-getting-started/banner.png",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial guides you through creating a new iOS app using the iTwin Mobile SDK for iOS. In this walk-through you will be introduced to the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iTwin Mobile SDK for iOS"), " using ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Swift Package Manager"), " and the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "SwiftUI"), " sample app."), (0,react_.mdx)("p", null, "By the end of this tutorial, you will have the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iTwin sample app for iOS"), " running on your iPad or iPhone."), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Note:"), "\nYou must use a Mac capable of running Xcode 13 to complete this tutorial.\nIf using an Intel Mac, you have the option to run the sample app in the Simulator.\nIf using an Apple Silicon Mac, use a physical device to run the sample app."))), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-set-up-your-environment"
  }, "1. Set up your environment"), (0,react_.mdx)("p", null, "Before you start this walk-through, download and install the following software on your Mac.")), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(mobile_sdk_ios_gettingstarted_LinkButton, {
      href: "https://apps.apple.com/us/app/xcode/id497799835?mt=12",
      target: "_blank",
      title: "Xcode",
      icon: (0,react_.mdx)(XcodeIcon, {
        mdxType: "XcodeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_LinkButton, {
      href: "https://nodejs.org",
      target: "_blank",
      title: "Node.js",
      icon: (0,react_.mdx)(mobile_sdk_ios_gettingstarted_NodeJsIcon, {
        mdxType: "NodeJsIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_LinkButton, {
      href: "https://git-scm.com/downloads",
      target: "_blank",
      title: "Git",
      icon: (0,react_.mdx)(mobile_sdk_ios_gettingstarted_GitIcon, {
        mdxType: "GitIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "11-required-materials"
  }, "1.1 Required materials"), (0,react_.mdx)("h5", {
    "id": "xcode-13"
  }, (0,react_.mdx)("a", {
    parentName: "h5",
    "href": "https://apps.apple.com/us/app/xcode/id497799835?mt=12"
  }, "Xcode 13")), (0,react_.mdx)("p", null, "Xcode is the development environment you will use for building iOS and macOS apps. Download it from the AppStore. Start Xcode after you install it and allow it to install additional components."), (0,react_.mdx)("h5", {
    "id": "nodejs-lts-version"
  }, (0,react_.mdx)("a", {
    parentName: "h5",
    "href": "https://nodejs.org"
  }, "Node.js (LTS version)")), (0,react_.mdx)("p", null, "This tool provides the backend JavaScript runtime necessary for your computer to read and render code appropriately. It also allows you to run ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "NPM"), " commands at the terminal."), (0,react_.mdx)("h5", {
    "id": "git"
  }, (0,react_.mdx)("a", {
    parentName: "h5",
    "href": "https://git-scm.com/downloads"
  }, "Git")), (0,react_.mdx)("p", null, "This is the source code control system for the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwin Mobile SDK sample"), " repository.")), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(mobile_sdk_ios_gettingstarted_LinkButton, {
      href: "https://code.visualstudio.com/",
      target: "_blank",
      title: "Visual Studio Code",
      icon: (0,react_.mdx)(mobile_sdk_ios_gettingstarted_VSCodeIcon, {
        mdxType: "VSCodeIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "12-suggested-tools"
  }, "1.2 Suggested tools"), (0,react_.mdx)("h5", {
    "id": "visual-studio-code"
  }, (0,react_.mdx)("a", {
    parentName: "h5",
    "href": "https://code.visualstudio.com/"
  }, "Visual Studio Code")), (0,react_.mdx)("p", null, "This is our recommended editor and debugger tool for developing iTwin.js applications. It is free, open source and includes a GUI for working with GIT."), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Note:"), " Optionally, install the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "code"), " command in your ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "PATH"), " by running the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "install 'code' command in PATH"), " command at the command palette in ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "VSCode"), "."))), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-register-an-application"
  }, "2. Register an application"), (0,react_.mdx)("p", null, "To begin, register a new client on the iTwin platform developer portal. Once the new client is registered, you are ready to start building your app.")), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(mobile_sdk_ios_gettingstarted_SignInButton, {
      mdxType: "SignInButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "sign-in"
  }, "Sign in"), (0,react_.mdx)("p", null, "To register an application you need to be signed in.\nIf you are not already, you can do that by clicking the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Sign In"), " button in the action pane or in the top right corner of the page.")), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_TutorialSection, {
    subSection: true,
    actions: function actions(data) {
      return [(0,react_.mdx)(mobile_sdk_ios_gettingstarted_CreateNativeAppButton, {
        tooltip: "Register a basic Native Application for this tutorial",
        clientName: "Mobile SDK getting started with iOS",
        allowedScopes: ['projects:read', 'savedviews:modify', 'realitydata:read', 'savedviews:read', 'imodelaccess:read', 'itwinjs', 'imodels:read'],
        redirectUri: "imodeljs://app/signin-callback",
        postLogoutRedirectUris: ["imodeljs://app/signout-callback"],
        mdxType: "CreateNativeAppButton"
      }, "Register application"), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_CodeBlock, {
        language: "xcconfig",
        code: !data.clientId || !data.redirectUris || !data.scope ? undefined : "ITMAPPLICATION_CLIENT_ID = ".concat(data.clientId, "\nITMAPPLICATION_SCOPE = ").concat(data.scope),
        mdxType: "CodeBlock"
      })];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "register-a-native-application"
  }, "Register a Native Application"), (0,react_.mdx)("p", null, "All apps connecting to and sending data through the platform must be registered on your account.\nUse the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register application"), " button to automatically create your first Native Application.\nThis allows you to configure authentication for your app. For more information, see ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your Native Application"), "."), (0,react_.mdx)("p", null, "Once the client is generated, a few lines of code are displayed; note these lines. You will add these to the Xcode config file in a later step."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "ITMAPPLICATION_CLIENT_ID"), " - This is the unique identifier for your application. It is displayed on the application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "ITMAPPLICATION_SCOPE"), " - List of accesses granted to the application. Displayed on the application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "For future reference:"), " Register and configure your application manually following the instructions in the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial. Ensure that you select an ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Application type"), " of ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Desktop/Mobile"), "."))), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_TutorialSection, {
    actions: [(0,react_.mdx)(mobile_sdk_ios_gettingstarted_CodeBlock, {
      language: "bash",
      code: "git clone https://github.com/iTwin/mobile-samples.git",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_CodeBlock, {
      language: "bash",
      code: "code mobile-samples",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-clone-the-sample-repository"
  }, "3. Clone the sample repository"), (0,react_.mdx)("p", null, "Clone the repository to follow along with this tutorial. In your Terminal, enter ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "cd ~/Desktop"), ", then run ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "git clone https://github.com/iTwin/mobile-samples.git"), "."), (0,react_.mdx)("p", null, "Next, open the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "mobile-samples"), " folder in ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "VS Code"), "."), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Note:"), " If you have the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "code"), " command installed in your path, you can enter ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "code mobile-samples"), " in your Terminal."))), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "31-directory-structure"
  }, "3.1 Directory structure"), (0,react_.mdx)("p", null, "This section gives a high-level description of the top-level folders in the sample app."), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iOS"), " directory contains all of the code that is specific to the iOS platform. This includes Xcode projects for the Getting Started samples based on SwiftUI (", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "SwiftUIStarter"), ") and UIKit (", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "MobileStarter"), "), and variations that can target local builds of the SDK that can be used for SDK development (PRs are very welcome). The ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Shared"), " directory contains utility files that are used in multiple sample apps. Finally, there are additional sample apps to help you get up and running."), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "cross-platform"), " directory contains the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "react-app"), " containing all of the user interface code in the sample app. The other directories in ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "cross-platform"), " are not used in this sample."), (0,react_.mdx)("p", null, "Finally, the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Snapshot iModels"), " directory contains an iModel that you can use when running your sample."), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/tutorials/mobile-sdk-ios-getting-started/file-structure.png",
    "alt": "file-structure"
  }))), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-xcode"
  }, "4. Xcode"), (0,react_.mdx)("p", null, "Finally, we\u2019re ready to start diving into the code!")), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(mobile_sdk_ios_gettingstarted_CodeBlock, {
      language: "bash",
      code: "open iOS/MobileStarter/MobileStarter.xcodeproj",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_CodeBlock, {
      language: "bash",
      code: "open iOS/SwiftUIStarter/SwiftUIStarter.xcodeproj",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "41-ui-framework"
  }, "4.1 UI framework"), (0,react_.mdx)("p", null, "Feel free to choose the project for the UI framework that you prefer. We will be using the SwiftUI starter in this tutorial. If you chose to use UIKit, substitute MobileStarter in all cases throughout the rest of the tutorial."), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Note:"), " All of the app UI in this sample project is written in React, but the iTwin Model Viewer runs in a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "WKWebView"), " and can be integrated into any app.")), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "UIKit")), (0,react_.mdx)("p", null, "If you prefer to work with UIKit, open ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iOS/MobileStarter/MobileStarter.xcodeproj")), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "SwiftUI")), (0,react_.mdx)("p", null, "If you prefer to work with SwiftUI, open ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iOS/SwiftUIStarter/SwiftUIStarter.xcodeproj"))), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "42-swift-package-manager"
  }, "4.2 Swift Package Manager"), (0,react_.mdx)("p", null, "Swift Package Manager (SPM) downloads several packages as soon as you open the sample. This should only take a couple of minutes, depending on your network speed. Wait for this to finish, then click the project name in the Project navigator."), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/tutorials/mobile-sdk-ios-getting-started/swiftpackages.png",
    "alt": "SPM"
  })), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "NOTE"), ": You might encounter an error during Swift Package installation or later when you try to run the app. If so, choose ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "File > Packages > Reset Package Caches"), " in the Xcode menu."))), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "43-target-configuration"
  }, "4.3 Target configuration"), (0,react_.mdx)("p", null, "Select ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "SwiftUIStarter"), " in the Project Navigator, then select the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "SwiftUIStarter"), " target in the Targets section. Change the Bundle Identifier to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "com.<myteam>.SwiftUIStarter"), ", replacing ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "<myteam>"), " with your actual team name."), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/tutorials/mobile-sdk-ios-getting-started/targetconfig-general.png",
    "alt": "target-general"
  })), (0,react_.mdx)("p", null, "Next, switch to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Signing & Capabilities"), " tab and select your development team from the dropdown."), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/tutorials/mobile-sdk-ios-getting-started/targetconfig-signing.png",
    "alt": "target-signing"
  }))), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(mobile_sdk_ios_gettingstarted_CodeBlock, {
      language: "bash",
      code: "touch iOS/ITMApplication.xcconfig",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "44-xcconfig"
  }, "4.4 Xcconfig"), (0,react_.mdx)("p", null, "The last thing to do before switching over to VSCode is to create a file called ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ITMApplication.xcconfig"), " in the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iOS/"), " directory. Copy the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ITMAPPLICATION_CLIENT_ID"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ITMAPPLICATION_SCOPE"), " code block from the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Register a Native Application"), " section above and paste it into this file.")), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_TutorialSection, {
    actions: [(0,react_.mdx)(mobile_sdk_ios_gettingstarted_CodeBlock, {
      language: "bash",
      code: "cd cross-platform/react-app\nnpm install\nnpm run build\nnpm start",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-npm-install"
  }, "5. NPM Install"), (0,react_.mdx)("p", null, "iTwin.js apps are built using JavaScript, and in order to build and run that side of the codebase, you\u2019ll need to install some dependencies. You should have installed the latest LTS version of Node.js back when you were setting up your environment. Go back and do that now if you skipped that step."), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Note:"), " If you\u2019re using an Apple Silicon Mac, you\u2019ll need to use a Rosetta 2 terminal for this step. Once the install is done you don\u2019t need Rosetta again.")), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "cd"), " into ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "cross-platform/react-app")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Run ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "npm install")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Run ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "npm run build")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Run ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "npm start"))), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Note:"), " The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "npm start"), " command starts a debug server on your Mac that the iOS app will communicate with. This allows you to debug the JavaScript code using Safari\u2019s Web Inspector. This means that your device needs to be on the same local network as your Mac, and your Mac must not block incoming connections from the local network. In order to run a production-like build, uncomment ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ITMAPPLICATION_NO_DEBUG_SERVER = YES"), " in ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iOSSamples.xcconfig"), ". Note that if you do this you will not be able to use Safari to debug the JavaScript code."))), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-run-the-app"
  }, "6. Run the app"), (0,react_.mdx)("p", null, "Now that the React app is built and the debug server is running, or you\u2019ve uncommented ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ITMAPPLICATION_NO_DEBUG_SERVER = YES"), " in ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iOSSamples.xcconfig"), ", it\u2019s time to go back to Xcode."), (0,react_.mdx)("p", null, "If you\u2019ve followed along with the steps in Section 4, you should be able to simply select your device from the Devices dropdown and run the app (\u2318 R)."), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Reminder:"), " If you see errors that mention Package resolution, choose ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "File > Packages > Reset Package Caches"), " then try to run the app again.")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Note:"), " You may encounter an error dialog that says ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Could not connect to React debug server."), " If you see this error, uncomment ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ITMAPPLICATION_USE_IP = YES"), " in ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iOSSamples.xcconfig"), " and try launching the app again.")), (0,react_.mdx)("p", null, "Once the app is running, you have two ways to open and view an iModel."), (0,react_.mdx)("p", null, "The first, and easiest, way is to tap ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Hub iModels"), " and open an iModel directly from the iModel Hub. However, this ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "does"), " require that you have access to a project with an iModel."), (0,react_.mdx)("p", null, "The other way is to open a snapshot iModel that is loaded onto your device. A simple snapshot iModel is included in the repository at ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Snapshot iModels/Building Blocks.bim"), ". You can copy this onto your device using Finder and then use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Snapshot iModels"), " button to open it in the iTwin Sample app."), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/tutorials/mobile-sdk-ios-getting-started/building_blocks.png",
    "alt": "Building blocks iModel"
  }))), (0,react_.mdx)(mobile_sdk_ios_gettingstarted_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "conclusion"
  }, "Conclusion"), (0,react_.mdx)("p", null, "In this tutorial, you learned how to create a new iTwin mobile client, how an iTwin mobile app is divided between native code and React code, and how to load and view an iModel on your device.")));
}
;
mobile_sdk_ios_gettingstarted_MDXContent.isMDXComponent = true;
var mobile_sdk_ios_gettingstarted_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "1-set-up-your-environment",
    level: 2,
    title: "1. Set up your environment",
    children: [{
      id: "11-required-materials",
      level: 3,
      title: "1.1 Required materials",
      children: []
    }, {
      id: "12-suggested-tools",
      level: 3,
      title: "1.2 Suggested tools",
      children: []
    }]
  }, {
    id: "2-register-an-application",
    level: 2,
    title: "2. Register an application",
    children: []
  }, {
    id: "3-clone-the-sample-repository",
    level: 2,
    title: "3. Clone the sample repository",
    children: [{
      id: "31-directory-structure",
      level: 3,
      title: "3.1 Directory structure",
      children: []
    }]
  }, {
    id: "4-xcode",
    level: 2,
    title: "4. Xcode",
    children: [{
      id: "41-ui-framework",
      level: 3,
      title: "4.1 UI framework",
      children: []
    }, {
      id: "42-swift-package-manager",
      level: 3,
      title: "4.2 Swift Package Manager",
      children: []
    }, {
      id: "43-target-configuration",
      level: 3,
      title: "4.3 Target configuration",
      children: []
    }, {
      id: "44-xcconfig",
      level: 3,
      title: "4.4 Xcconfig",
      children: []
    }]
  }, {
    id: "5-npm-install",
    level: 2,
    title: "5. NPM Install",
    children: []
  }, {
    id: "6-run-the-app",
    level: 2,
    title: "6. Run the app",
    children: []
  }, {
    id: "conclusion",
    level: 2,
    title: "Conclusion",
    children: []
  }];
};
var mobile_sdk_ios_gettingstarted_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/property-validation-basics.mdx


var property_validation_basics_excluded = ["components"];
var property_validation_basics_jsx = (external_react_default()).createElement;


var property_validation_basics_readingTime = {
  "text": "9 min read",
  "minutes": 8.77,
  "time": 526200,
  "words": 1754
};
/* @jsxRuntime classic */
/* @jsx mdx */

var property_validation_basics_metadata = {
  title: 'Property Validation Basics',
  tile: {
    name: 'Property Validation Basics',
    description: 'Walk-through to create property validation rules and tests and then run them and get the results.',
    href: '/tutorials/property-validation-basics/',
    thumbnail: '/images/property-validation-thumbnail.png',
    durationInMinutes: 20,
    relatedApiIds: ['validation/propertyValue']
  }
};
var property_validation_basics_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var property_validation_basics_Introduction = property_validation_basics_makeShortcode("Introduction");
var property_validation_basics_TutorialSection = property_validation_basics_makeShortcode("TutorialSection");
var property_validation_basics_Title = property_validation_basics_makeShortcode("Title");
var property_validation_basics_CodeBlock = property_validation_basics_makeShortcode("CodeBlock");
var property_validation_basics_Alert = property_validation_basics_makeShortcode("Alert");
var property_validation_basics_ContinueLearningSection = property_validation_basics_makeShortcode("ContinueLearningSection");
var property_validation_basics_TileList = property_validation_basics_makeShortcode("TileList");
var property_validation_basics_ResourceTile = property_validation_basics_makeShortcode("ResourceTile");
var property_validation_basics_layoutProps = {
  metadata: property_validation_basics_metadata
};
var property_validation_basics_MDXLayout = "wrapper";
function property_validation_basics_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, property_validation_basics_excluded);
  return (0,react_.mdx)(property_validation_basics_MDXLayout, (0,esm_extends/* default */.Z)({}, property_validation_basics_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(property_validation_basics_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "20",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "Use Property Validation to check whether property values in an iModel conform to certain rules. The validation is run on user-defined rules for specified property values."), (0,react_.mdx)("p", null, "In this tutorial, you will learn how to:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Get property value rule templates"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Create/Update/Delete a property validation rule, test, and run"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Run the property validation test against a specific iModel version"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Retrieve the property validation test run results"))), (0,react_.mdx)(property_validation_basics_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/web-application-quick-start/#3-create-an-imodel"
  }, "Access to an iModel"), " and the associated project ID and iModel ID for that iModel, along with the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/imodels/operations/get-imodel-named-version-details/"
  }, "named version ID"), " for the version you want to run the test against."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Property and schema information for the rules you want to implement.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "For instructions on retrieving schemas for a specific iModel, see ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/retrieve-validation-model-data"
  }, "Retrieve Validation Model Data"), "."))))), (0,react_.mdx)(property_validation_basics_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-request-an-authorization-token-using-one-of-the-methods-below"
  }, "1. Request an authorization token using one of the methods below"), (0,react_.mdx)("h3", {
    "id": "implement-the-authorization-code-flow-in-the-application"
  }, "Implement the Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Use the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "OAuth2 Authorization"), " article to implement an Authorization code workflow in your application. Include the scopes \u201Cvalidation:read\u201D and 'validation:modify\u2019."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-api-reference-try-it-out-section"
  }, "Grab a user token from API reference \u201CTry it out\u201D Section"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Open ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/validation/operations/get-validation-propertyvalue-rule-templates/"
  }, "Get property value validation rule templates")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Try it out"), " button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "In the Authorization section, select ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "AuthorizationCode"), "."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Copy the Authorization token in the Header section for use in this tutorial. It will replace the JWT_TOKEN dynamic parameter in the following steps."))), (0,react_.mdx)(property_validation_basics_TutorialSection, {
    actions: [(0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/validation/propertyValue/ruleTemplates?projectId=00000000-0000-0000-0000-000000000000 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"ruleTemplates\":{\n    \"id\":\"0000000000000000000000000000000000000000000\",\n    \"displayName\":\"PropertyValuePattern\",\n    \"description\":\"Checks if the property confirms to the provided pattern\",\n    \"prompt\":\"Looks for given pattern in iModel\",\n    \"templateExpression\":{\n      \"propertyName\": \"LastMod\",\n      \"pattern\": \"west\"\n    }\n  },\n  \"_links\":{\n    \"next\":{\n      \"href\":\"https://api.bentley.com/validation/propertyValue/ruleTemplates?projectId=00000000-0000-0000-0000-000000000000\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-property-validation-rule-templates"
  }, "2. Get property validation rule templates"), (0,react_.mdx)("p", null, "A property validation rule is used as a basis for verifying the value of a property. A rule checks if the value of a property is defined, within a range of values, matches a pattern, etc."), (0,react_.mdx)("p", null, "We have provided a variety of property validation rule templates to get you started. The ", (0,react_.mdx)("code", null, "HTTP GET ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/validation/propertyValue/ruleTemplates?projectId%5B&continuationToken%5D%5B&$top%5D"
  }, "https://api.bentley.com/validation/propertyValue/ruleTemplates?projectId[&continuationToken][&$top]")), " request returns all property validation rule templates for the given project ID. Choose the template that is best suited for your goals based on the description."), (0,react_.mdx)("p", null, "In this tutorial, we demonstrate using the PropertyValuePattern template.")), (0,react_.mdx)(property_validation_basics_TutorialSection, {
    actions: [(0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/validation/propertyValue/rules HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"displayName\":\"TestRule1\",\n  \"description\":\"test rule\",\n  \"templateId\":\"0000000000000000000000000000000000000000000\",\n  \"severity\":\"high\",\n  \"ecSchema\":\"ProcessPhysical\",\n  \"ecClass\":\"PUMP\",\n  \"whereClause\":\"\",\n  \"dataType\":\"property\",\n  \"functionParameters\":{\n    \"propertyName\":\"COMPONENT_NAME\",\n    \"pattern\":\"pmp\",\n    \"flags\":\"i\"\n  }\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"rule\":{\n    \"id\": \"0000000000000000000000000000000000000000000\",\n    \"displayName\": \"PropertyValuePatternRule\",\n    \"description\": \"property value pattern rule\",\n    \"templateId\": \"0000000000000000000000000000000000000000000\",\n    \"severity\": \"high\",\n    \"ecSchema\": \"ProcessPhysical\",\n    \"ecClass\": \"PUMP\",\n    \"whereClause\": null,\n    \"functionParameters\": {\n      \"propertyName\": \"COMPONENT_NAME\",\n      \"pattern\": \"pmp\",\n      \"flags\": \"i\"\n    },\n    \"dataType\": \"property\",\n    \"_links\": {\n      \"self\": {\n          \"href\": \"https://api.bentley.com/validation/propertyValue/rules/0000000000000000000000000000000000000000000\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-creating-a-property-validation-rule"
  }, "3. Creating a property validation rule"), (0,react_.mdx)("p", null, "Configuring the validation rules is the biggest part of creating a property validation test."), (0,react_.mdx)("p", null, "To create a property validation rule, you need the template ID of a property validation template, a name for the rule, a description, the severity of the rule, and the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "dataType"), ". You will also need a project ID as well as an EC schema and class. Optionally, you can include a conditional ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "whereClause"), ". Depending on the template used, you may also need to provide ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "functionParameters"), "."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "severity"), ": One of four values: \u201CveryHigh\u2019, 'high\u2019, 'medium\u2019, 'low\u201D"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "dataType"), ": One of three values: \u201Cproperty\u2019, 'aspect\u2019, 'typeDefinition\u201D"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "functionParameters"), ": These are the parameters listed in the templateExpression object of a retrieved template."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "whereClause"), ": Syntax for the where clause is as follows: ", "[propertyName][comparison operator]", " ", "[value]", ", ie USER_LABEL = 'Door\u2019, for multiple properties connectors such as AND/OR can be used as well.")), (0,react_.mdx)("p", null, "In the example on the right, a rule is created to match all PUMP elements with a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "COMPONENT_NAME"), " property containg the pattern \u201Cpmp\u201D with the case-insensitive flag specified. The template ID is set to use the PropertyValuePattern template."), (0,react_.mdx)("p", null, "If your rule is created successfully, it will return the rule metadata and a rule ID. This will be used in the following steps to associate the rule with a test."), (0,react_.mdx)("h3", {
    "id": "updating-a-property-validation-rule"
  }, "Updating a property validation rule"), (0,react_.mdx)("p", null, "To update a rule, the request body format is the same, but requires calling the ", (0,react_.mdx)("code", null, "HTTP PUT ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/validation/propertyValue/rules/%7Bid%7D"
  }, "https://api.bentley.com/validation/propertyValue/rules/{id}")), " request with the rule ID. Currently, ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "functionParameters"), " cannot be updated. If a change is needed, you must delete the rule and create a new one."), (0,react_.mdx)("h3", {
    "id": "deleting-a-property-validation-rule"
  }, "Deleting a property validation rule"), (0,react_.mdx)("p", null, "Deleting a property validation rule requires calling the ", (0,react_.mdx)("code", null, "HTTP DELETE ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/validation/propertyValue/rules/%7Bid%7D"
  }, "https://api.bentley.com/validation/propertyValue/rules/{id}")), " request with the rule ID."), (0,react_.mdx)(property_validation_basics_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note: At this time, deleting a property validation rule does not automatically delete them from associated tests. Make sure to update the tests in conjunction with the rule deletion to keep things consistent.")), (0,react_.mdx)(property_validation_basics_TutorialSection, {
    actions: [(0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/validation/propertyValue/tests HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nPrefer: return=representation\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"projectId\":\"00000000-0000-0000-0000-000000000000\",\n  \"displayName\":\"PV test1\",\n  \"description\":\"PV test1\",\n  \"rules\":[\n    \"0000000000000000000000000000000000000000000\"\n  ],\n  \"stopExecutionOnFailure\":true\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"test\":{\n    \"id\":\"0000000000000000000000000000000000000000000\",\n    \"_links\":{\n      \"self\":{\n        \"href\":\"https://api.bentley.com/validation/propertyValue/tests/0000000000000000000000000000000000000000000\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-creating-a-property-validation-test"
  }, "4. Creating a Property Validation Test"), (0,react_.mdx)("p", null, "The process of creating a property validation test is very basic as the majority of the configuration happens during rule creation."), (0,react_.mdx)("p", null, "To create a property validation test, you need the ID of the project, a name and description for the test, as well as an array of rule IDs to associate with the test."), (0,react_.mdx)("p", null, "To get a list of rules and rule IDs created and available for a specific project requires calling the ", (0,react_.mdx)("code", null, "HTTP GET ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/validation/propertyValue/rules?projectId%5B&continuationToken%5D%5B&$top%5D"
  }, "https://api.bentley.com/validation/propertyValue/rules?projectId[&continuationToken][&$top]")), " request. The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Prefer"), " parameter to the header can be used to get a condensed or more detailed list of rules. For more details, see ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/validation/operations/get-validation-propertyvalue-rules/"
  }, "Get validation PropertyValue rules"), "."), (0,react_.mdx)("p", null, "For this tutorial, simply set the rules array in the given example request body to the ID of the newly created rule from the previous step. Optionally, call the GET request and add some of the rule IDs that are returned."), (0,react_.mdx)("h3", {
    "id": "updating-a-property-validation-test"
  }, "Updating a property validation test"), (0,react_.mdx)("p", null, "To update a test, the request body format remains the same but requires calling the ", (0,react_.mdx)("code", null, "HTTP PUT ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/validation/propertyValue/tests/%7Bid%7D"
  }, "https://api.bentley.com/validation/propertyValue/tests/{id}")), " request with the test ID."), (0,react_.mdx)(property_validation_basics_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note: This will replace everything. If you are adding new rules, make sure to pass in the full list of rule IDs rather than just the new rule."), (0,react_.mdx)("h3", {
    "id": "deleting-a-property-validation-test"
  }, "Deleting a property validation test"), (0,react_.mdx)("p", null, "Deleting a property validation requires calling the ", (0,react_.mdx)("code", null, "HTTP DELETE ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/validation/propertyValue/tests/%7Bid%7D"
  }, "https://api.bentley.com/validation/propertyValue/tests/{id}")), " request with the test ID."), (0,react_.mdx)(property_validation_basics_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note: Deleting a property validation test does not automatically delete associated test runs.")), (0,react_.mdx)(property_validation_basics_TutorialSection, {
    actions: [(0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/propertyValue/runs HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"testId\":\"0000000000000000000000000000000000000000000\",\n  \"iModelId\":\"00000000-0000-0000-0000-000000000000\",\n  \"namedVersionId\":\"0000000000000000000000000000000000000000\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"run\":{\n    \"id\":\"0000000000000000000000000000000000000000000\",\n    \"_links\":{\n      \"run\":{\n        \"href\":\"https://api.bentley.com/validation/propertyValue/runs/0000000000000000000000000000000000000000000\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-run-a-property-validation-test"
  }, "5. Run a Property Validation Test"), (0,react_.mdx)("p", null, "Triggering a property validation test run requires the test ID from the created test, as well as the iModel ID and Named Version ID of the iModel on which the test is being run."), (0,react_.mdx)("p", null, "If a test is successfully triggered, the POST request will return the ID of the run triggered with the associated test. The given run ID can be used in the ", (0,react_.mdx)("code", null, "HTTP GET ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/validation/propertyValue/runs/%7Bid%7D"
  }, "https://api.bentley.com/validation/propertyValue/runs/{id}")), " request to check the status of the run as well as retrieve the test results, which are detailed in the next step.")), (0,react_.mdx)(property_validation_basics_TutorialSection, {
    actions: [(0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/validation/propertyValue/runs/C3LRQU_ILkmFYQVClhDuxow-EXGyYdJHrgH5zpcUQ8U HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"run\":{\n    \"id\":\"0000000000000000000000000000000000000000000\",\n    \"displayName\":\"PropertyValueTest1-10/21/2020 4:07:28 PM\",\n    \"executedDateTime\":\"12/1/2020 5:12:50 PM\",\n    \"count\":\"27\",\n    \"userName\":\"John Johnson\",\n    \"status\":\"queued\",\n    \"_links\":{\n      \"result\":{\n        \"href\":\"https://api.bentley.com/validation/propertyValue/results/0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      \"test\":{\n        \"href\":\"https://api.bentley.com/validation/propertyValue/tests/0000000000000000000000000000000000000000000\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/validation/propertyValue/results/0000000000000000000000000000000000000000000000000000000000000000 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "http",
      code: "Content-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(property_validation_basics_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(property_validation_basics_CodeBlock, {
      language: "json",
      code: "{\n  \"result\":[\n    {\n      \"elementId\":\"0x3000000000d\",\n      \"elementLabel\":\" [3-D] \",\n      \"ruleIndex\":0,\n      \"badValue\":\"Undefined\"\n    },\n    {\n      \"elementId\":\"0x3000000000f\",\n      \"elementLabel\":\" [3-F] \",\n      \"ruleIndex\":0,\n      \"badValue\":\"Undefined\"\n    },\n    {\n      \"elementId\":\"0x30000000010\",\n      \"elementLabel\":\" [3-G] \",\n      \"ruleIndex\":0,\n      \"badValue\":\"Undefined\"\n    }\n  ],\n  \"ruleList\":[\n    {\n      \"id\":\"0000000000000000000000000000000000000000000\",\n      \"displayName\":\"TestRule1\"\n    }\n  ]\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-getting-property-validation-test-results"
  }, "6. Getting Property Validation Test Results"), (0,react_.mdx)("p", null, "A results link is provided in the response body of the ", (0,react_.mdx)("code", null, "HTTP GET ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/validation/propertyValue/runs/%7Bid%7D"
  }, "https://api.bentley.com/validation/propertyValue/runs/{id}")), " request. Retrieving the results can be done by making a GET request using said link which points to the ", (0,react_.mdx)("code", null, "HTTP GET ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/validation/propertyValue/results/%7Bid%7D"
  }, "https://api.bentley.com/validation/propertyValue/results/{id}")), " request."), (0,react_.mdx)(property_validation_basics_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note: While the results link will always appear in the response body, you will not be able to actually retrieve the results until the status is shown as complete."), (0,react_.mdx)("p", null, "The property validation results are formatted with a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "result"), " array that holds all the invalid property values as well as a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ruleList"), " array that holds all of the rules associated with the test run."), (0,react_.mdx)("p", null, "Within each object in the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "result"), " array:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "elementId"), ": the element id of the invalid property"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "elementLabel"), ": the element label of the invalid property"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "ruleIndex"), ": the index of the rule within ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "ruleList"), " that this property failed to pass"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "badValue"), ": the invalid property value")), (0,react_.mdx)("p", null, "Within each object in the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ruleList"), " array:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "id"), ": the rule ID"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "displayName"), ": the rule name")), (0,react_.mdx)("p", null, "The given example response body to the right shows what might be returned."), (0,react_.mdx)("h3", {
    "id": "delete-a-property-validation-test-run"
  }, "Delete a property validation test run"), (0,react_.mdx)("p", null, "Deleting a property validation test run requires calling the ", (0,react_.mdx)("code", null, "HTTP DELETE ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/validation/propertyValue/runs/%7Bid%7D"
  }, "https://api.bentley.com/validation/propertyValue/runs/{id}")), " request with the run ID.")), (0,react_.mdx)(property_validation_basics_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "conclusion"
  }, "Conclusion"), (0,react_.mdx)("p", null, "In this tutorial, you learned how to create, update and delete property validation rules and tests. You also learned how to run a property validation test and fetch the results.")), (0,react_.mdx)(property_validation_basics_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(property_validation_basics_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(property_validation_basics_ResourceTile, {
    title: "iTwin Validation",
    href: "/api-groups/validation/",
    description: "An overview of Validation APIs.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(property_validation_basics_ResourceTile, {
    title: "Property Validation Showcase",
    href: "https://www.itwinjs.org/sample-showcase/?group=iTwin+Platform+APIs&sample=property-validation-sample&imodel=Bay+Town+Process+Plant",
    description: "This sample demonstrates calling Property Validation APIs to retrieve validation rules and the elements that violate them and present it for review in a viewer app.",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
property_validation_basics_MDXContent.isMDXComponent = true;
var property_validation_basics_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-request-an-authorization-token-using-one-of-the-methods-below",
    level: 2,
    title: "1. Request an authorization token using one of the methods below",
    children: [{
      id: "implement-the-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement the Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-api-reference-try-it-out-section",
      level: 3,
      title: "Grab a user token from API reference “Try it out” Section",
      children: []
    }]
  }, {
    id: "2-get-property-validation-rule-templates",
    level: 2,
    title: "2. Get property validation rule templates",
    children: []
  }, {
    id: "3-creating-a-property-validation-rule",
    level: 2,
    title: "3. Creating a property validation rule",
    children: [{
      id: "updating-a-property-validation-rule",
      level: 3,
      title: "Updating a property validation rule",
      children: []
    }, {
      id: "deleting-a-property-validation-rule",
      level: 3,
      title: "Deleting a property validation rule",
      children: []
    }]
  }, {
    id: "4-creating-a-property-validation-test",
    level: 2,
    title: "4. Creating a Property Validation Test",
    children: [{
      id: "updating-a-property-validation-test",
      level: 3,
      title: "Updating a property validation test",
      children: []
    }, {
      id: "deleting-a-property-validation-test",
      level: 3,
      title: "Deleting a property validation test",
      children: []
    }]
  }, {
    id: "5-run-a-property-validation-test",
    level: 2,
    title: "5. Run a Property Validation Test",
    children: []
  }, {
    id: "6-getting-property-validation-test-results",
    level: 2,
    title: "6. Getting Property Validation Test Results",
    children: [{
      id: "delete-a-property-validation-test-run",
      level: 3,
      title: "Delete a property validation test run",
      children: []
    }]
  }, {
    id: "conclusion",
    level: 2,
    title: "Conclusion",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var property_validation_basics_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/query-and-download-component-from-catalog.mdx


var query_and_download_component_from_catalog_excluded = ["components"];
var query_and_download_component_from_catalog_jsx = (external_react_default()).createElement;


var query_and_download_component_from_catalog_readingTime = {
  "text": "11 min read",
  "minutes": 10.09,
  "time": 605400,
  "words": 2018
};
/* @jsxRuntime classic */
/* @jsx mdx */

var query_and_download_component_from_catalog_metadata = {
  title: 'Query and Download Component from a Catalog',
  tile: {
    name: 'Query and Download Component from a Catalog',
    description: 'This tutorial will guide you through the process of querying a component from a catalog in an organization.',
    href: '/tutorials/query-and-download-component-from-catalog',
    durationInMinutes: 10,
    relatedApiIds: ['library'],
    showInFirstSteps: false,
    firstStepsSequenceNumber: 3
  }
};
var query_and_download_component_from_catalog_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var query_and_download_component_from_catalog_Introduction = query_and_download_component_from_catalog_makeShortcode("Introduction");
var query_and_download_component_from_catalog_TutorialSection = query_and_download_component_from_catalog_makeShortcode("TutorialSection");
var query_and_download_component_from_catalog_LinkButton = query_and_download_component_from_catalog_makeShortcode("LinkButton");
var query_and_download_component_from_catalog_PostmanIcon = query_and_download_component_from_catalog_makeShortcode("PostmanIcon");
var query_and_download_component_from_catalog_CreateSampleAppButton = query_and_download_component_from_catalog_makeShortcode("CreateSampleAppButton");
var query_and_download_component_from_catalog_Alert = query_and_download_component_from_catalog_makeShortcode("Alert");
var query_and_download_component_from_catalog_Title = query_and_download_component_from_catalog_makeShortcode("Title");
var query_and_download_component_from_catalog_CodeBlock = query_and_download_component_from_catalog_makeShortcode("CodeBlock");
var query_and_download_component_from_catalog_ContinueLearningSection = query_and_download_component_from_catalog_makeShortcode("ContinueLearningSection");
var query_and_download_component_from_catalog_TileList = query_and_download_component_from_catalog_makeShortcode("TileList");
var query_and_download_component_from_catalog_Tile = query_and_download_component_from_catalog_makeShortcode("Tile");
var query_and_download_component_from_catalog_ResourceTile = query_and_download_component_from_catalog_makeShortcode("ResourceTile");
var query_and_download_component_from_catalog_layoutProps = {
  metadata: query_and_download_component_from_catalog_metadata
};
var query_and_download_component_from_catalog_MDXLayout = "wrapper";
function query_and_download_component_from_catalog_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, query_and_download_component_from_catalog_excluded);
  return (0,react_.mdx)(query_and_download_component_from_catalog_MDXLayout, (0,esm_extends/* default */.Z)({}, query_and_download_component_from_catalog_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(query_and_download_component_from_catalog_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "10",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial will take you through the process of querying a component from a catalog in an organization."), (0,react_.mdx)("p", null, "By the end of this walk-through, you will be able to utilize the API endpoints in order to query components from a catalog and download associated files from the component.")), (0,react_.mdx)(query_and_download_component_from_catalog_TutorialSection, {
    actions: [(0,react_.mdx)(query_and_download_component_from_catalog_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(query_and_download_component_from_catalog_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A tool such as ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Postman"), " that can be used to execute http calls. These calls can also be made using the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "TryIt"), " button in the API documentation."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "User must be affiliated with an Organization and should either be an Organization Administrator or have \u201CRead\u201D permission at Organization level to upload components to catalog."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "For more information about User Management please visit our Bentley Communities ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0"
  }, "Licensing, Cloud, and Web Services"), " wiki page."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A catalog containing few components already exists and User has the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "id"), " of the catalog.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Instructions to upload components to a catalog can be found ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/upload-component-to-catalog"
  }, "here")))))), (0,react_.mdx)(query_and_download_component_from_catalog_TutorialSection, {
    actions: [(0,react_.mdx)(query_and_download_component_from_catalog_CreateSampleAppButton, {
      tooltip: "Register a basic SPA App for this tutorial",
      scopes: ['realitydata:read', 'imodels:read', 'imodels:modify', 'library:read', 'library:modify', 'storage:read', 'storage:modify'],
      clientName: "Upload component to catalog tutorial",
      mdxType: "CreateSampleAppButton"
    }, "Register Application")],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iModels"), ", ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Library"), ", ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "RealityData"), " and ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Storage"), " APIs and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "realitydata:read imodels:read imodels:modify library:read library:modify storage:read storage:modify"), " scopes enabled."))), (0,react_.mdx)(query_and_download_component_from_catalog_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "Before you can make a request to the APIs, a user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application."), (0,react_.mdx)(query_and_download_component_from_catalog_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Here you can use Client ID generated from previous registration step."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-api-reference-try-it-section"
  }, "Grab a user token from Api reference \u201CTry it\u201D Section"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/library/operations/upload-component/"
  }, "here")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Try it"), " button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Under the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " section, select ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "authorizationCode"), " from the dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After the sign in popup closes, the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " header with token value should be visible beneath the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "HTTP request"), " dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Copy & paste the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " value for this tutorial.")), (0,react_.mdx)(query_and_download_component_from_catalog_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(query_and_download_component_from_catalog_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-query-components-from-a-catalog"
  }, "3. Query Components From a Catalog"), (0,react_.mdx)("p", null, "Library API provides ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/library/components"), " endpoint to query components. When no query parameter is provided in the\nrequest, all the components from the organization are returned. You can set ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "$top"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "$skip"), " query parameters to specify specific page and number of components in the response.\nQuery parameter ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "projectId"), " is used in case query is made to a project context but we will not use this, since in this tutorial we are dealing with organization context.\nIn next steps we will use two query parameters of this endpoint ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "catalogs"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "$search"), " to query components from a catalog."), (0,react_.mdx)("p", null, "See the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/library/operations/get-components"
  }, "Library API documentation to get components"), " for more details.")), (0,react_.mdx)(query_and_download_component_from_catalog_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(query_and_download_component_from_catalog_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(query_and_download_component_from_catalog_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/library/components?catalogs=7f427c30-8dce-4803-81dc-e8681a3bd757 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(query_and_download_component_from_catalog_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(query_and_download_component_from_catalog_CodeBlock, {
      language: "http",
      code: "Prefer: return=representation\nAccept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(query_and_download_component_from_catalog_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(query_and_download_component_from_catalog_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK \ncache-control: no-cache\ncontent-encoding: gzip\ncontent-type: application/json\ndate: Thu, 09 Sep 2021 08:14:47 GMT\nelapsed-time: 276\nexpires: -1\nodata-version: 4.0\npragma: no-cache\npreference-applied: odata.include-annotations=\"*\"\nrequest-context: appId=cid-v1:6ee7c246-23f0-43be-ac34-bbbb36da72e9\nrequest-id: 58ea777e-2615-4f7c-9f3f-0c85e882e9fa\nstrict-transport-security: max-age=15724800; includeSubDomains\nvary: Accept-Encoding\nx-correlation-id: 1dd1cd38-4b6c-42b2-9104-2ae0353f4a63\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(query_and_download_component_from_catalog_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(query_and_download_component_from_catalog_CodeBlock, {
      language: "json",
      code: "{\n    \"components\": [{\n        \"id\": \"404f7540-63c7-49b5-be77-21b56074e58c\",\n        \"displayName\": \"Sample Door\",\n        \"description\": \"Tutorial sample door\",\n        \"state\": \"Draft\",\n        \"createdDateTime\": \"2021-09-09T07:27:07.055Z\",\n        \"lastModifiedDateTime\": \"2021-09-09T09:09:34.225Z\",\n        \"supportedFileTypes\": [\"RFA\"],\n        \"hashtags\": [\"tutorialsampledoor\", \"wooden\"],\n        \"_links\": {\n            \"catalogs\": [{\n                \"href\": \"https://api.bentley.com/library/catalogs/7f427c30-8dce-4803-81dc-e8681a3bd757\"\n            }],\n            \"application\": {\n                \"href\": \"https://api.bentley.com/library/applications/3c18a35e-2524-4afb-b8cc-ac0447aa26dd\"\n            },\n            \"manufacturer\": {\n                \"href\": \"https://api.bentley.com/library/manufacturers/83d16fc5-7193-4726-bd6f-4a5a95c01ba1\"\n            },\n            \"category\": {\n                \"href\": \"https://api.bentley.com/library/categories/d41ad7d4-12cb-44ee-912d-8ff24936fd4a\"\n            }\n        }\n    }, {\n        \"id\": \"a0aff8bb-1d8e-4227-9cee-a1b87a646e34\",\n        \"displayName\": \"Sample Window\",\n        \"description\": \"A sample window\",\n        \"state\": \"Draft\",\n        \"createdDateTime\": \"2021-09-09T09:09:11.145Z\",\n        \"lastModifiedDateTime\": \"2021-09-09T09:09:11.543Z\",\n        \"supportedFileTypes\": [\"RFA\"],\n        \"hashtags\": [\"wooden\"],\n        \"_links\": {\n            \"catalogs\": [{\n                \"href\": \"https://api.bentley.com/library/catalogs/7f427c30-8dce-4803-81dc-e8681a3bd757\"\n            }],\n            \"application\": {\n                \"href\": \"https://api.bentley.com/library/applications/3c18a35e-2524-4afb-b8cc-ac0447aa26dd\"\n            },\n            \"manufacturer\": {\n                \"href\": null\n            },\n            \"category\": {\n                \"href\": \"https://api.bentley.com/library/categories/d41ad7d4-12cb-44ee-912d-8ff24936fd4a\"\n            }\n        }\n    }, {\n        \"id\": \"57fefe11-df1d-40c7-ae1a-02e233b9a7c7\",\n        \"displayName\": \"Tutorial Sample Component\",\n        \"description\": \"Tutorial Sample Description\",\n        \"state\": \"Published\",\n        \"createdDateTime\": \"2021-09-06T15:17:45.883Z\",\n        \"lastModifiedDateTime\": \"2021-09-06T15:37:06.137Z\",\n        \"supportedFileTypes\": [\"RFA\"],\n        \"hashtags\": [\"SampleTag1\", \"SampleTag2\"],\n        \"_links\": {\n            \"catalogs\": [{\n                \"href\": \"https://api.bentley.com/library/catalogs/7f427c30-8dce-4803-81dc-e8681a3bd757\"\n            }],\n            \"application\": {\n                \"href\": \"https://api.bentley.com/library/applications/1418693a-8f60-4719-af0b-ceee1ad41e33\"\n            },\n            \"manufacturer\": {\n                \"href\": \"https://api.bentley.com/library/manufacturers/d4485150-ad6d-4d76-a3e2-50a0f690afc9\"\n            },\n            \"category\": {\n                \"href\": \"https://api.bentley.com/library/categories/63b7d70a-a426-4530-8c0f-3efd6a6c0da7\"\n            }\n        }\n    }],\n    \"_links\": {\n        \"self\": {\n            \"href\": \"https://api.bentley.com/library/components?$skip=0&$top=100\"\n        },\n        \"prev\": {\n            \"href\": \"https://api.bentley.com/library/components?$skip=0&$top=100\"\n        },\n        \"next\": {\n            \"href\": \"https://api.bentley.com/library/components?$skip=100&$top=100\"\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "31-query-all-components-from-a-catalog"
  }, "3.1 Query All Components From a Catalog"), (0,react_.mdx)("p", null, "We already have a catalog with ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " 7f427c30\u20138dce-4803\u201381dc-e8681a3bd757 and it has three components. By providing catalog Id to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "catalogs"), " query parameters, you can get\nall the components in the catalog. ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "catalogs"), " query parameter can accept a comma separated string of multiple catalog Ids to return components from more than one catalogs but for this tutorial\nwe will use a single catalog Id. Let\u2019s make a GET call to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/library/components?catalogs=7f427c30-8dce-4803-81dc-e8681a3bd757"), " endpoint. Response contains all the components\nfrom this catalog, in this case there are three components."), (0,react_.mdx)("p", null, "By default, ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Prefer"), " header is set to \u201Creturn=minimal\u201D to return only ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), " of the components in the response, We have changed this value to \u201Creturn=representation\u201D\nto get all the properties of the component in the response.")), (0,react_.mdx)(query_and_download_component_from_catalog_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(query_and_download_component_from_catalog_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(query_and_download_component_from_catalog_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/library/components?$search=Door&catalogs=7f427c30-8dce-4803-81dc-e8681a3bd757 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(query_and_download_component_from_catalog_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(query_and_download_component_from_catalog_CodeBlock, {
      language: "http",
      code: "Prefer: return=representation\nAccept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(query_and_download_component_from_catalog_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(query_and_download_component_from_catalog_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK \ncache-control: no-cache\ncontent-encoding: gzip\ncontent-type: application/json\ndate: Thu, 09 Sep 2021 08:14:47 GMT\nelapsed-time: 276\nexpires: -1\nodata-version: 4.0\npragma: no-cache\npreference-applied: odata.include-annotations=\"*\"\nrequest-context: appId=cid-v1:6ee7c246-23f0-43be-ac34-bbbb36da72e9\nrequest-id: 58ea777e-2615-4f7c-9f3f-0c85e882e9fa\nstrict-transport-security: max-age=15724800; includeSubDomains\nvary: Accept-Encoding\nx-correlation-id: 1dd1cd38-4b6c-42b2-9104-2ae0353f4a63\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(query_and_download_component_from_catalog_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(query_and_download_component_from_catalog_CodeBlock, {
      language: "json",
      code: "{\n    \"components\": [{\n        \"id\": \"404f7540-63c7-49b5-be77-21b56074e58c\",\n        \"displayName\": \"Sample Door\",\n        \"description\": \"Tutorial sample door\",\n        \"state\": \"Draft\",\n        \"createdDateTime\": \"2021-09-09T07:27:07.055Z\",\n        \"lastModifiedDateTime\": \"2021-09-09T07:27:07.493Z\",\n        \"supportedFileTypes\": [\"RFA\"],\n        \"hashtags\": [\"tutorialsampledoor\"],\n        \"_links\": {\n            \"catalogs\": [{\n                \"href\": \"https://api.bentley.com/library/catalogs/7f427c30-8dce-4803-81dc-e8681a3bd757\"\n            }],\n            \"application\": {\n                \"href\": \"https://api.bentley.com/library/applications/3c18a35e-2524-4afb-b8cc-ac0447aa26dd\"\n            },\n            \"manufacturer\": {\n                \"href\": \"https://api.bentley.com/library/manufacturers/83d16fc5-7193-4726-bd6f-4a5a95c01ba1\"\n            },\n            \"category\": {\n                \"href\": \"https://api.bentley.com/library/categories/d41ad7d4-12cb-44ee-912d-8ff24936fd4a\"\n            }\n        }\n    }],\n    \"_links\": {\n        \"self\": {\n            \"href\": \"https://api.bentley.com/library/components?$skip=0&$top=100\"\n        },\n        \"prev\": {\n            \"href\": \"https://api.bentley.com/library/components?$skip=0&$top=100\"\n        },\n        \"next\": {\n            \"href\": \"https://api.bentley.com/library/components?$skip=100&$top=100\"\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "32-search-components-by-display-name-from-a-catalog"
  }, "3.2 Search Components by Display Name From a Catalog"), (0,react_.mdx)("p", null, "We can also search specific components from a catalog by applying ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "$search"), " query parameter in addition to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "catalogs"), " query parameter. ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "$search"), " searches for the string in the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "hashtags"), " property values\nof the components. One of the components, we retrieved from the catalog in previous steps has a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), " value \u201CSample Door\u2019. We can use a substring from this displayName value 'Door\u201D to search this particular component.\nMake a GET call to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/library/components?$search=Door&catalogs=7f427c30-8dce-4803-81dc-e8681a3bd757"), " endpoint, this time the response contains only single component that has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "$search"), " query parameter value\nin the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), " property.")), (0,react_.mdx)(query_and_download_component_from_catalog_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(query_and_download_component_from_catalog_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(query_and_download_component_from_catalog_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/library/components?$search=wooden&catalogs=7f427c30-8dce-4803-81dc-e8681a3bd757 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(query_and_download_component_from_catalog_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(query_and_download_component_from_catalog_CodeBlock, {
      language: "http",
      code: "Prefer: return=representation\nAccept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(query_and_download_component_from_catalog_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(query_and_download_component_from_catalog_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK \ncache-control: no-cache\ncontent-encoding: gzip\ncontent-type: application/json\ndate: Thu, 09 Sep 2021 08:14:47 GMT\nelapsed-time: 276\nexpires: -1\nodata-version: 4.0\npragma: no-cache\npreference-applied: odata.include-annotations=\"*\"\nrequest-context: appId=cid-v1:6ee7c246-23f0-43be-ac34-bbbb36da72e9\nrequest-id: 58ea777e-2615-4f7c-9f3f-0c85e882e9fa\nstrict-transport-security: max-age=15724800; includeSubDomains\nvary: Accept-Encoding\nx-correlation-id: 1dd1cd38-4b6c-42b2-9104-2ae0353f4a63\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(query_and_download_component_from_catalog_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(query_and_download_component_from_catalog_CodeBlock, {
      language: "json",
      code: "{\n    \"components\": [{\n        \"id\": \"a0aff8bb-1d8e-4227-9cee-a1b87a646e34\",\n        \"displayName\": \"Sample Window\",\n        \"description\": \"A sample window\",\n        \"state\": \"Draft\",\n        \"createdDateTime\": \"2021-09-09T09:09:11.145Z\",\n        \"lastModifiedDateTime\": \"2021-09-09T09:09:11.543Z\",\n        \"supportedFileTypes\": [\"RFA\"],\n        \"hashtags\": [\"wooden\"],\n        \"_links\": {\n            \"catalogs\": [{\n                \"href\": \"https://api.bentley.com/library/catalogs/7f427c30-8dce-4803-81dc-e8681a3bd757\"\n            }],\n            \"application\": {\n                \"href\": \"https://api.bentley.com/library/applications/3c18a35e-2524-4afb-b8cc-ac0447aa26dd\"\n            },\n            \"manufacturer\": {\n                \"href\": null\n            },\n            \"category\": {\n                \"href\": \"https://api.bentley.com/library/categories/d41ad7d4-12cb-44ee-912d-8ff24936fd4a\"\n            }\n        }\n    }, {\n        \"id\": \"404f7540-63c7-49b5-be77-21b56074e58c\",\n        \"displayName\": \"Sample Door\",\n        \"description\": \"Tutorial sample door\",\n        \"state\": \"Draft\",\n        \"createdDateTime\": \"2021-09-09T07:27:07.055Z\",\n        \"lastModifiedDateTime\": \"2021-09-09T09:09:34.225Z\",\n        \"supportedFileTypes\": [\"RFA\"],\n        \"hashtags\": [\"tutorialsampledoor\", \"wooden\"],\n        \"_links\": {\n            \"catalogs\": [{\n                \"href\": \"https://api.bentley.com/library/catalogs/7f427c30-8dce-4803-81dc-e8681a3bd757\"\n            }],\n            \"application\": {\n                \"href\": \"https://api.bentley.com/library/applications/3c18a35e-2524-4afb-b8cc-ac0447aa26dd\"\n            },\n            \"manufacturer\": {\n                \"href\": \"https://api.bentley.com/library/manufacturers/83d16fc5-7193-4726-bd6f-4a5a95c01ba1\"\n            },\n            \"category\": {\n                \"href\": \"https://api.bentley.com/library/categories/d41ad7d4-12cb-44ee-912d-8ff24936fd4a\"\n            }\n        }\n    }],\n    \"_links\": {\n        \"self\": {\n            \"href\": \"https://api.bentley.com/library/components?$skip=0&$top=100\"\n        },\n        \"prev\": {\n            \"href\": \"https://api.bentley.com/library/components?$skip=0&$top=100\"\n        },\n        \"next\": {\n            \"href\": \"https://api.bentley.com/library/components?$skip=100&$top=100\"\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "33-search-components-by-hashtags-from-a-catalog"
  }, "3.3 Search Components by Hashtags From a Catalog"), (0,react_.mdx)("p", null, "In the previous step, we searched a component by applying a string value from the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), ". We will use ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "$search"), " query parameter again but this time, we will use a string from the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "hashtags"), " property value.\nCouple of components, we retrieved from the catalog in previous steps has one of the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "hashtags"), " value 'wooden\u2019. We can use this value to search components having this hashtag value.\nMake a GET call to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/library/components?$search=wooden&catalogs=7f427c30-8dce-4803-81dc-e8681a3bd757"), " endpoint, this time the response contains both the components containing \u201Cwooden\u201D\nin the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "hashtags"), " property.")), (0,react_.mdx)(query_and_download_component_from_catalog_TutorialSection, {
    actions: [(0,react_.mdx)(query_and_download_component_from_catalog_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(query_and_download_component_from_catalog_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/library/components/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/documents HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(query_and_download_component_from_catalog_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(query_and_download_component_from_catalog_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(query_and_download_component_from_catalog_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(query_and_download_component_from_catalog_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK \ncontent-encoding: gzip\ncontent-type: application/json\ndate: Wed, 08 Sep 2021 09:51:02 GMT\nodata-version: 4.0\nrequest-context: appId=cid-v1:6ee7c246-23f0-43be-ac34-bbbb36da72e9\nvary: Accept-Encoding\nx-correlation-id: 2c094e5a-b770-4240-9aeb-67bca189263a\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(query_and_download_component_from_catalog_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(query_and_download_component_from_catalog_CodeBlock, {
      language: "json",
      code: "{\n    \"documents\": [{\n        \"id\": \"3938de7f-ebf2-470f-b41a-d314fdb90ec7\",\n        \"displayName\": \"TutorialSampleFile\",\n        \"extension\": \"rfa\",\n        \"version\": \"1\",\n        \"previousVersionId\": null,\n        \"purpose\": \"Design\",\n        \"size\": 749568,\n        \"available\": true,\n        \"isActive\": true,\n        \"createdDateTime\": \"2021-09-06T15:17:46.0180736Z\",\n        \"lastModifiedDateTime\": \"2021-09-06T15:17:46.1465969Z\",\n        \"_links\": {\n            \"associatedDesignDocument\": {\n                \"href\": null\n            },\n            \"fileUrl\": {\n                \"href\": \"https://componentscenprodeussa01.blob.core.windows.net/private-5a7b3c7c-03af-49f0-b1df-115ddc0e0048/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/3938de7f-ebf2-470f-b41a-d314fdb90ec7.rfa?sv=2018-03-28&sr=b&sig=Smec6HJrZCKZGXYARrGkU1RWJuaO3jqmXKs3%2B5irnak%3D&se=2021-09-08T10%3A51%3A03Z&sp=r&rscd=attachment%3B%20filename%3DTutorialSampleFile.rfa\"\n            }\n        }\n    }, {\n        \"id\": \"4f618030-ba8c-4144-872e-c61842c3d90e\",\n        \"displayName\": \"TutorialSampleFile.png\",\n        \"extension\": \"png\",\n        \"version\": null,\n        \"previousVersionId\": null,\n        \"purpose\": \"Thumbnail\",\n        \"size\": 0,\n        \"available\": true,\n        \"isActive\": true,\n        \"createdDateTime\": \"2021-09-06T15:17:46.2226747Z\",\n        \"lastModifiedDateTime\": \"2021-09-06T15:17:46.3093526Z\",\n        \"_links\": {\n            \"associatedDesignDocument\": {\n                \"href\": \"https://api.bentley.com/library/components/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/documents/3938de7f-ebf2-470f-b41a-d314fdb90ec7\"\n            },\n            \"fileUrl\": {\n                \"href\": \"https://componentscenprodeussa01.blob.core.windows.net/public-5a7b3c7c-03af-49f0-b1df-115ddc0e0048/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/4f618030-ba8c-4144-872e-c61842c3d90e.png\"\n            }\n        }\n    }, {\n        \"id\": \"f9d9f7ce-a014-4b54-b0a6-e351482ec3a5\",\n        \"displayName\": \"TutorialSampleFile\",\n        \"extension\": \"txt\",\n        \"version\": null,\n        \"previousVersionId\": null,\n        \"purpose\": \"TypeCatalog\",\n        \"size\": 760,\n        \"available\": true,\n        \"isActive\": true,\n        \"createdDateTime\": \"2021-09-06T15:17:46.4256707Z\",\n        \"lastModifiedDateTime\": \"2021-09-06T15:17:46.510613Z\",\n        \"_links\": {\n            \"associatedDesignDocument\": {\n                \"href\": \"https://api.bentley.com/library/components/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/documents/3938de7f-ebf2-470f-b41a-d314fdb90ec7\"\n            },\n            \"fileUrl\": {\n                \"href\": \"https://componentscenprodeussa01.blob.core.windows.net/private-5a7b3c7c-03af-49f0-b1df-115ddc0e0048/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/f9d9f7ce-a014-4b54-b0a6-e351482ec3a5.txt?sv=2018-03-28&sr=b&sig=1yb19XFDPtuEl6rYiFDLuCjz%2FO8a3r7h89KAHdFwvw8%3D&se=2021-09-08T10%3A51%3A03Z&sp=r&rscd=attachment%3B%20filename%3DTutorialSampleFile.txt\"\n            }\n        }\n    }, {\n        \"id\": \"bf15e508-3b59-49d5-a1b5-ea9ef9d66515\",\n        \"displayName\": \"Tutorial Sample Document\",\n        \"extension\": \"pdf\",\n        \"version\": \"1\",\n        \"previousVersionId\": null,\n        \"purpose\": \"Reference\",\n        \"size\": 388077,\n        \"available\": true,\n        \"isActive\": true,\n        \"createdDateTime\": \"2021-09-06T15:46:51.5524663Z\",\n        \"lastModifiedDateTime\": \"2021-09-06T15:54:47.206787Z\",\n        \"_links\": {\n            \"associatedDesignDocument\": {\n                \"href\": null\n            },\n            \"fileUrl\": {\n                \"href\": \"https://componentscenprodeussa01.blob.core.windows.net/private-5a7b3c7c-03af-49f0-b1df-115ddc0e0048/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/bf15e508-3b59-49d5-a1b5-ea9ef9d66515.pdf?sv=2018-03-28&sr=b&sig=oft6xWrKourfRl5Nemd03duMS9pmi8zkiaPSE8Pynzw%3D&se=2021-09-08T10%3A51%3A03Z&sp=r&rscd=attachment%3B%20filename%3DTutorial%2BSample%2BDocument.pdf\"\n            }\n        }\n    }]\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-get-component-documents-and-download-files"
  }, "4. Get Component Documents and Download Files"), (0,react_.mdx)("p", null, "So far, we have already learnt how to search components from a catalog. Once we have the component, We can use ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " and make a GET call to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/library/components/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/documents"), " endpoint\nto get all the documents associated to the component. ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "_links->fileUrl-href"), " property value in each document instance in the response, provides the url of the file associated with the document. File download can be done\nby making a Http GET request on the provided url via tool such as ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Postman"), " or programmatically use Azure libraries to download file (", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob"
  }, "https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob"), ").")), (0,react_.mdx)(query_and_download_component_from_catalog_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)("p", null, "Congratulation for completing Query and Download Component from Catalog tutorial! You should be able to query components from a catalog and download files associated to component documents."), (0,react_.mdx)(query_and_download_component_from_catalog_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(query_and_download_component_from_catalog_Tile, {
    name: "Upload Component to a Catalog",
    description: "Guide on uploading component to a catalog.",
    href: "/tutorials/upload-component-to-catalog/",
    mdxType: "Tile"
  }), (0,react_.mdx)(query_and_download_component_from_catalog_Tile, {
    name: "Create a Component",
    description: "Guide on creating a new component in an organization.",
    href: "/tutorials/create-a-component/",
    mdxType: "Tile"
  })), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(query_and_download_component_from_catalog_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(query_and_download_component_from_catalog_ResourceTile, {
    title: "Library API",
    href: "/apis/library/",
    description: "There are more capabilities, which could be used for managing components in library.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(query_and_download_component_from_catalog_ResourceTile, {
    title: "iTwin Library Sample App",
    href: "https://github.com/iTwin/library-api-sample-app",
    description: "Sample application that uses the Library API to create, upload and query components.",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
query_and_download_component_from_catalog_MDXContent.isMDXComponent = true;
var query_and_download_component_from_catalog_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-api-reference-try-it-section",
      level: 3,
      title: "Grab a user token from Api reference “Try it” Section",
      children: []
    }]
  }, {
    id: "3-query-components-from-a-catalog",
    level: 2,
    title: "3. Query Components From a Catalog",
    children: [{
      id: "31-query-all-components-from-a-catalog",
      level: 3,
      title: "3.1 Query All Components From a Catalog",
      children: []
    }, {
      id: "32-search-components-by-display-name-from-a-catalog",
      level: 3,
      title: "3.2 Search Components by Display Name From a Catalog",
      children: []
    }, {
      id: "33-search-components-by-hashtags-from-a-catalog",
      level: 3,
      title: "3.3 Search Components by Hashtags From a Catalog",
      children: []
    }]
  }, {
    id: "4-get-component-documents-and-download-files",
    level: 2,
    title: "4. Get Component Documents and Download Files",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var query_and_download_component_from_catalog_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/react-to-events-using-webhooks.mdx


var react_to_events_using_webhooks_excluded = ["components"];
var react_to_events_using_webhooks_jsx = (external_react_default()).createElement;


var react_to_events_using_webhooks_readingTime = {
  "text": "11 min read",
  "minutes": 10.075,
  "time": 604500,
  "words": 2015
};
/* @jsxRuntime classic */
/* @jsx mdx */

var react_to_events_using_webhooks_metadata = {
  title: 'React to iModel events using Webhooks API',
  tile: {
    name: 'React to iModel events using Webhooks API',
    description: 'This tutorial will teach you how to use Webhooks API to subscribe to iModel events and introduce basic event handling workflows.',
    href: '/tutorials/react-to-events-using-webhooks/',
    durationInMinutes: 45,
    relatedApiIds: ['webhooks']
  }
};
var react_to_events_using_webhooks_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var react_to_events_using_webhooks_Introduction = react_to_events_using_webhooks_makeShortcode("Introduction");
var react_to_events_using_webhooks_TutorialSection = react_to_events_using_webhooks_makeShortcode("TutorialSection");
var react_to_events_using_webhooks_LinkButton = react_to_events_using_webhooks_makeShortcode("LinkButton");
var react_to_events_using_webhooks_NodeJsIcon = react_to_events_using_webhooks_makeShortcode("NodeJsIcon");
var react_to_events_using_webhooks_GitIcon = react_to_events_using_webhooks_makeShortcode("GitIcon");
var react_to_events_using_webhooks_VSCodeIcon = react_to_events_using_webhooks_makeShortcode("VSCodeIcon");
var react_to_events_using_webhooks_PostmanIcon = react_to_events_using_webhooks_makeShortcode("PostmanIcon");
var react_to_events_using_webhooks_Title = react_to_events_using_webhooks_makeShortcode("Title");
var react_to_events_using_webhooks_CodeBlock = react_to_events_using_webhooks_makeShortcode("CodeBlock");
var react_to_events_using_webhooks_Alert = react_to_events_using_webhooks_makeShortcode("Alert");
var react_to_events_using_webhooks_ContinueLearningSection = react_to_events_using_webhooks_makeShortcode("ContinueLearningSection");
var react_to_events_using_webhooks_TileList = react_to_events_using_webhooks_makeShortcode("TileList");
var react_to_events_using_webhooks_ResourceTile = react_to_events_using_webhooks_makeShortcode("ResourceTile");
var react_to_events_using_webhooks_layoutProps = {
  metadata: react_to_events_using_webhooks_metadata
};
var react_to_events_using_webhooks_MDXLayout = "wrapper";
function react_to_events_using_webhooks_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, react_to_events_using_webhooks_excluded);
  return (0,react_.mdx)(react_to_events_using_webhooks_MDXLayout, (0,esm_extends/* default */.Z)({}, react_to_events_using_webhooks_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(react_to_events_using_webhooks_Introduction, {
    skillLevel: "Intermediate",
    durationInMinutes: "45",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "In this tutorial, you will learn how to use the Webhooks REST API to create and manage your webhooks. Also you will learn how to validate the webhook signature and process received event messages in your application.")), (0,react_.mdx)(react_to_events_using_webhooks_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Basic knowledge on ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://en.wikipedia.org/wiki/Webhook"
  }, "webhooks"), " and how they work."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Knowledge on web application deployment or experience using ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://www.heroku.com/about"
  }, "Heroku"), "/", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://www.netlify.com/"
  }, "Netlify"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Already registered your own application/client on iTwin Platform.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Steps to follow for registering an application can be found ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/register-and-modify-application/"
  }, "here"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Make sure that your application/client is associated with ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Webhooks API"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "webhooks:read"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "webhooks:modify"), " scopes enabled."))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Any existing ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "iModel"), " that your application/client has access and contains at least one changeset that has not a named version created on.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "In order to create one you need to run the synchronization for an iModel which is described in this ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/synchronization-storage-tutorial"
  }, "tutorial"), ". Or you can ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-test-imodel-sample"
  }, "create a new iModel"), " from Bentley provided sample."))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Knowledge on creating named versions for your iModel.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A tutorial on how to create a named version can be found ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-named-version"
  }, "here"), "."))))), (0,react_.mdx)(react_to_events_using_webhooks_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-set-up-your-environment"
  }, "1. Set up your environment")), (0,react_.mdx)(react_to_events_using_webhooks_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_LinkButton, {
      href: "https://nodejs.org",
      target: "_blank",
      title: "Node.js",
      icon: (0,react_.mdx)(react_to_events_using_webhooks_NodeJsIcon, {
        mdxType: "NodeJsIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(react_to_events_using_webhooks_LinkButton, {
      href: "https://git-scm.com/downloads",
      target: "_blank",
      title: "Git",
      icon: (0,react_.mdx)(react_to_events_using_webhooks_GitIcon, {
        mdxType: "GitIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "11-required-materials"
  }, "1.1 Required materials"), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpsnodejsorg-target_blanknodejs-14x-lts-versiona"
  }, (0,react_.mdx)("a", {
    href: "https://nodejs.org",
    target: "_blank"
  }, "Node.js (14.x LTS version)")), (0,react_.mdx)("p", null, "This tool provides the backend JavaScript runtime necessary for your computer to read and render code appropriately. It also allows you to run NPM command line."), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpsgit-scmcomdownloads-target_blankgita"
  }, (0,react_.mdx)("a", {
    href: "https://git-scm.com/downloads",
    target: "_blank"
  }, "Git")), (0,react_.mdx)("p", null, "This is the common source code control system.")), (0,react_.mdx)(react_to_events_using_webhooks_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_LinkButton, {
      href: "https://code.visualstudio.com/",
      target: "_blank",
      title: "VS Code",
      icon: (0,react_.mdx)(react_to_events_using_webhooks_VSCodeIcon, {
        mdxType: "VSCodeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(react_to_events_using_webhooks_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(react_to_events_using_webhooks_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "12-suggested-materials"
  }, "1.2 Suggested materials"), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpscodevisualstudiocom-target_blankvisual-studio-codea"
  }, (0,react_.mdx)("a", {
    href: "https://code.visualstudio.com/",
    target: "_blank"
  }, "Visual Studio Code")), (0,react_.mdx)("p", null, "This is our recommended editor and debugger tool for developing iTwin.js applications. It is free, open source and includes a GUI for working with GIT."), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpswwwpostmancomdownloads-target_blankpostmana"
  }, (0,react_.mdx)("a", {
    href: "https://www.postman.com/downloads/",
    target: "_blank"
  }, "Postman")), (0,react_.mdx)("p", null, "If you want to test the REST API calls directly, you can use ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.postman.com/downloads/"
  }, "Postman"), " or any other solution capable of sending HTTP requests. If you do it this way, you will require an authorization token for the requests to work."), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpssignupherokucom-target_blankheroku-accounta"
  }, (0,react_.mdx)("a", {
    href: "https://signup.heroku.com/",
    target: "_blank"
  }, "Heroku account")), (0,react_.mdx)("p", null, "Heroku will be used to deploy the test application during this tutorial.")), (0,react_.mdx)(react_to_events_using_webhooks_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-create-your-application"
  }, "2. Create your application"), (0,react_.mdx)("p", null, "Since webhooks are sending the events via HTTP requests you need to have an application running that exposes a public HTTP endpoint - callback URL. In this tutorial we are going to use ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://nodejs.org/en"
  }, "Node.js"), " together with ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://expressjs.com/"
  }, "Express"), " for test application.")), (0,react_.mdx)(react_to_events_using_webhooks_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_Title, {
      mdxType: "Title"
    }, "Project initialization"), (0,react_.mdx)(react_to_events_using_webhooks_CodeBlock, {
      language: "bash",
      code: "cd your-project\nnpm init -y\nnpm install express\nnpm install -D typescript @types/express\ntsc --init",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(react_to_events_using_webhooks_Title, {
      mdxType: "Title"
    }, "tsconfig.json"), (0,react_.mdx)(react_to_events_using_webhooks_CodeBlock, {
      language: "json",
      code: "\"outDir\":\"dist\"",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(react_to_events_using_webhooks_Title, {
      mdxType: "Title"
    }, "package.json"), (0,react_.mdx)(react_to_events_using_webhooks_CodeBlock, {
      language: "json",
      code: "\"main\":\"dist/index.js\"",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(react_to_events_using_webhooks_CodeBlock, {
      language: "json",
      code: "\"scripts\":{\n  \"start\":\"tsc && node dist/index.js\"\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "21-initialize-the-project"
  }, "2.1 Initialize the project"), (0,react_.mdx)("p", null, "To start off, create new directory for your application and execute the following initialization commands. These commands will initialize new npm project, install required dependencies and configure typescript. After initialization, update freshly generated ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "tsconfig.json"), " file by setting ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "outDir"), " property to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "\"dist\""), ". Next step will be updating ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "package.json"), " file to update the application entry point and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "start"), " script. After that is done, the project is ready for the next step."), (0,react_.mdx)(react_to_events_using_webhooks_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "If you are running into \"tsc is not recognized\" problems, try installing typescript globally \"npm install typescript -g\".")), (0,react_.mdx)(react_to_events_using_webhooks_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_Title, {
      mdxType: "Title"
    }, "src/index.ts"), (0,react_.mdx)(react_to_events_using_webhooks_CodeBlock, {
      language: "typescript",
      code: "import express from \"express\";\n\nconst app = express();\napp.use(express.text({ type: \"application/json\" }));\n\napp.post(\"/events\", () => {\n  // Handle the event\n});\n\nconst port = 5000;\napp.listen(port, () => {\n  console.log(\"Application was started.\");\n});",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "22-create-express-server"
  }, "2.2 Create express server"), (0,react_.mdx)("p", null, "Now let\u2019s start implementing the application. At first, create a new file in your project directory ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "src/index.ts"), ". This is going to be the application starting point. From example on the side you can see that we are going to have a public HTTP endpoint that will be accepting POST requests ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "app.post(\"/events\", () => {})"), ". This is because event messages are sent using POST method. Note that above there is a line ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "app.use(express.text({ type: \"application/json\" }))"), " that makes the server treat the requests with json content as text and not deserialize them initially because raw payload will be required for event authorization in one of the upcoming steps.")), (0,react_.mdx)(react_to_events_using_webhooks_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_Title, {
      mdxType: "Title"
    }, "src/index.ts"), (0,react_.mdx)(react_to_events_using_webhooks_CodeBlock, {
      language: "typescript",
      code: "\napp.options(\"/events\", async (req, res) => {\n  const requestedOrigin = req.headers[\"webhook-request-origin\"] as string;\n\n  res.setHeader(\"allow\", [\"POST\"]);\n  res.setHeader(\"webhook-allowed-origin\", requestedOrigin);\n  res.sendStatus(200);\n});",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "23-add-callback-validation-handler"
  }, "2.3 Add callback validation handler"), (0,react_.mdx)("p", null, "Before we start working with event handling, first we need to make sure that newly created webhook gets activated by passing the callback URL validation. To handle this, we need to add one more HTTP endpoint that accepts OPTIONS requests ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "app.options(\"/events\", () => {})"), " and performs the validation handshake as described in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/webhooks/#callbackvalidation"
  }, "documentation"), ".")), (0,react_.mdx)(react_to_events_using_webhooks_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_Title, {
      mdxType: "Title"
    }, "src/index.ts"), (0,react_.mdx)(react_to_events_using_webhooks_CodeBlock, {
      language: "typescript",
      code: "import crypto from \"crypto\";",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(react_to_events_using_webhooks_CodeBlock, {
      language: "typescript",
      code: "function validateSignature(payload: string, signatureHeader: string): boolean {\n  // Replace with your own webhook secret later\n  const secret = \"4eb25d308ef2a9722ffbd7a2b7e5026f9d1f2feaca5999611d4ef8692b1ad70d\";\n\n  const [algorithm, signature] = signatureHeader.split(\"=\");\n  const generated_sig = crypto.createHmac(algorithm, secret).update(payload, \"utf-8\").digest(\"hex\");\n\n  return generated_sig.toLowerCase() === signature.toLowerCase();\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "24-add-event-authorization"
  }, "2.4 Add event authorization"), (0,react_.mdx)("p", null, "In order to authorize the event source, we need to add event signature validation. Event signature is ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "HMAC-SHA256"), " string that is included in the request ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Signature"), " header. For validation we will be using Node.js ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "crypto"), " utility which basically lets us to generate the same type of signature in our end. Generated signature and the signature included in the request should match to pass the authorization. Let\u2019s start adding validation by creating a new function ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "function validateSignature(payload: string, signatureHeader: string)"), ". As a first parameter it will to expect raw request payload and as a second parameter it will expect signature header value. This function will also need the webhook ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "secret"), " which we are going to add later on we create a webhook. Since, the signature header value also contains the cryptographic algorithm name and the signature value separated by ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "="), ", we need to extract these values into separate variables ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "const [algorithm, signature] = signatureHeader.split(\"=\")"), ". Then at this point, using all the existing variables we can generate a signature ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "crypto.createHmac(algorithm, secret).update(payload, \"utf-8\").digest(\"hex\")"), ". Lastly, we need to check if both signatures match and return the result.")), (0,react_.mdx)(react_to_events_using_webhooks_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_Title, {
      mdxType: "Title"
    }, "src/models.ts"), (0,react_.mdx)(react_to_events_using_webhooks_CodeBlock, {
      language: "typescript",
      code: "export type Event = {\n  content: IModelEvent | NamedVersionCreatedEvent;\n  contentType: string;\n  enqueuedDateTime: string;\n  messageId: string;\n  subscriptionId: string;\n};\n\nexport type IModelEvent = {\n  imodelId: string;\n  projectId: string;\n};\n\nexport type NamedVersionCreatedEvent = {\n  changesetId: string;\n  changesetIndex: string;\n  versionId: string;\n  versionName: string;\n} & IModelEvent;",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "25-define-data-models"
  }, "2.5 Define data models"), (0,react_.mdx)("p", null, "Before we can start receiving the events, we need to prepare the models for expected data. You can find events schema by downloading API definition file from ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/webhooks"
  }, "API reference"), ". Select preferred schema type on the right and click Export. Now from that point, create a new file ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "src/models.ts"), " and create event types by matching the schema.")), (0,react_.mdx)(react_to_events_using_webhooks_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_Title, {
      mdxType: "Title"
    }, "src/index.ts"), (0,react_.mdx)(react_to_events_using_webhooks_CodeBlock, {
      language: "typescript",
      code: "import { Event, NamedVersionCreatedEvent } from \"./models\";",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(react_to_events_using_webhooks_CodeBlock, {
      language: "typescript",
      code: "app.post(\"/events\", (req, res) => {\n  const signatureHeader = req.headers[\"signature\"] as string;\n  if (!signatureHeader || !req.body) res.sendStatus(401);\n\n  if (!validateSignature(req.body, signatureHeader)) {\n    res.sendStatus(401);\n  } else {\n    const event = JSON.parse(req.body) as Event;\n    switch (event.contentType) {\n      case \"NamedVersionCreatedEvent\": {\n        const content = event.content as NamedVersionCreatedEvent;\n        console.log(`New named version (ID: ${content.versionId}, Name: ${content.versionName}) was created for iModel (ID: ${content.imodelId})`);\n        break;\n      }\n      default:\n        res.sendStatus(400); //Unexpected event type\n    }\n  }\n});",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "26-event-handling"
  }, "2.6 Event handling"), (0,react_.mdx)("p", null, "Now that we have everything ready for event handling, we can start implementing it. Firstly, we want to return ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "401 Unauthorized"), " for any request that does not have a event signature header or any payload, because these are required components for passing the validation ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "if (!signatureHeader || !req.body) res.sendStatus(401)"), ". If request does have these components then we can proceed with further processing logic and try to validate the event signature using the function we defined in step 2.3 ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "if (!validateSignature(req.body, signatureHeader)) res.sendStatus(401)"), ". If validation fails, we can assume that the event was sent from unexpected source and safely return ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "401 Unauthorized"), " as well. In other case, when validation passes, proceed by deserializing the event and react accordingly to its type.")), (0,react_.mdx)(react_to_events_using_webhooks_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "27-deploy"
  }, "2.7 Deploy"), (0,react_.mdx)("p", null, "For this application to work, you have to deploy it to be publicly accessible. If you have any preferences for the deployment, go ahead and use your own deployment method and platform. If not, you can keep following the tutorial and deploy the application using ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.heroku.com/about"
  }, "Heroku"), ":"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Create new Heroku application and empty Heroku Git repository ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://devcenter.heroku.com/articles/git#for-a-new-heroku-app"
  }, "https://devcenter.heroku.com/articles/git#for-a-new-heroku-app"), "."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Deploy by pushing the code ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://devcenter.heroku.com/articles/git#deploying-code"
  }, "https://devcenter.heroku.com/articles/git#deploying-code"), "."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Use ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "heroku logs --tail"), " for monitoring the behavior of the application.")), (0,react_.mdx)("p", null, "Once you have the application deployed and running, we can move on to the webhook creation.")), (0,react_.mdx)(react_to_events_using_webhooks_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-create-a-webhook"
  }, "3. Create a webhook"), (0,react_.mdx)("p", null, "Webhooks are one way that apps can send automated messages or information to other apps. In this case, we are going to create a webhook for an existing iModel events.")), (0,react_.mdx)(react_to_events_using_webhooks_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_Title, {
      mdxType: "Title"
    }, "Example HTTP request for \"Create iModel events webhook\" operation"), (0,react_.mdx)(react_to_events_using_webhooks_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/webhooks/imodels HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "31-request"
  }, "3.1 Request"), (0,react_.mdx)("p", null, "A webhook for iModel events is created by sending a POST request to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/webhooks/imodels"
  }, "https://api.bentley.com/webhooks/imodels"), ". ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Authorization"), " header with valid Bearer access token is required.")), (0,react_.mdx)(react_to_events_using_webhooks_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_Title, {
      mdxType: "Title"
    }, "Example request body"), (0,react_.mdx)(react_to_events_using_webhooks_CodeBlock, {
      language: "json",
      code: "{\n  \"imodelId\":\"IMODEL_ID\",\n  \"callbackUrl\":\"https://HOSTNAME/events\",\n  \"eventTypes\":[\n    \"NamedVersionCreatedEvent\"\n  ],\n  \"expirationDateTime\":\"2021-06-07T08:27:42Z\"\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "32-request-body"
  }, "3.2 Request body"), (0,react_.mdx)("p", null, "Webhook creation has 3 required properties:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "imodelId"), " - related iModel ID of which events you want to receive."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "callbackUrl"), " - a public endpoint of your application where you expect the event to be sent."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "eventTypes"), " - a list of iModel event types you want to subscribe to."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "expirationDateTime - ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "(optional)"), " date and time when the webhook will not longer be active. If the value is not specified, webhook will expire in 30 days.")), (0,react_.mdx)("p", null, "For more information see the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/webhooks/operations/create-imodels-webhook"
  }, "documentation"), "."), (0,react_.mdx)(react_to_events_using_webhooks_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Don't forget to replace the \"IMODEL_ID\" placeholder value with an existing iModel ID and \"HOSTNAME\" placeholder value with your deployed application hostname.")), (0,react_.mdx)(react_to_events_using_webhooks_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_Title, {
      mdxType: "Title"
    }, "Example response \"Location\" header"), (0,react_.mdx)(react_to_events_using_webhooks_CodeBlock, {
      language: "http",
      code: "Location: https://api.bentley.com/webhooks/f6f3aff5-7e28-4874-a3ff-22dbc62d94c9",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(react_to_events_using_webhooks_Title, {
      mdxType: "Title"
    }, "Example response result"), (0,react_.mdx)(react_to_events_using_webhooks_CodeBlock, {
      language: "json",
      code: "{\n  \"webhook\":{\n    \"id\": \"b41adbb6-2ecc-4770-a626-1721dff5be1e\",\n    \"secret\":\"4eb25d308ef2a9722ffbd7a2b7e5026f9d1f2feaca5999611d4ef8692b1ad70d\"\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "33-response"
  }, "3.3 Response"), (0,react_.mdx)("p", null, "On the successful response you will get returned the webhook secret which will be needed later validating received events. The location of created webhook will be included in response ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Location"), " header value. Generally you would need to store both webhook location or ID and secret in your application storage in order to prepare for receiving events, but for this tutorial just use it to replace the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "const secret"), " value in ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "function validateSignature"), " from step 2.3."), (0,react_.mdx)(react_to_events_using_webhooks_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note that the webhook secret should not be shared with anyone and treated as a private key.")), (0,react_.mdx)(react_to_events_using_webhooks_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-trigger-imodel-event"
  }, "4. Trigger iModel event"), (0,react_.mdx)("p", null, "Since we created the webhook specifically for ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "NamedVersionCreatedEvent"), " event type, you will need to trigger this event manually. Use Get iModel Changesets ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/imodels/operations/create-named-version"
  }, "operation"), ". For detailed explanation on how to create a named version see this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/create-named-version"
  }, "tutorial"), "."), (0,react_.mdx)("p", null, "After you create a named version, webhook event will be triggered and sent to your application (callback URL) for further processing. If you have deployed your test application using Heroku, use ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "heroku logs --tail"), " command to monitor your application logs and wait for the event to be captured and processed.")), (0,react_.mdx)(react_to_events_using_webhooks_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(react_to_events_using_webhooks_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(react_to_events_using_webhooks_ResourceTile, {
    title: "Workflow Automation API group documentation",
    href: "/api-groups/workflow-automation",
    description: "An overview and detailed Workflow Automation API group documentation.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(react_to_events_using_webhooks_ResourceTile, {
    title: "Data Management API group documentation",
    href: "/api-groups/data-management",
    description: "An overview and detailed Data Management API group documentation.",
    mdxType: "ResourceTile"
  }))));
}
;
react_to_events_using_webhooks_MDXContent.isMDXComponent = true;
var react_to_events_using_webhooks_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-set-up-your-environment",
    level: 2,
    title: "1. Set up your environment",
    children: [{
      id: "11-required-materials",
      level: 3,
      title: "1.1 Required materials",
      children: []
    }, {
      id: "12-suggested-materials",
      level: 3,
      title: "1.2 Suggested materials",
      children: []
    }]
  }, {
    id: "2-create-your-application",
    level: 2,
    title: "2. Create your application",
    children: [{
      id: "21-initialize-the-project",
      level: 3,
      title: "2.1 Initialize the project",
      children: []
    }, {
      id: "22-create-express-server",
      level: 3,
      title: "2.2 Create express server",
      children: []
    }, {
      id: "23-add-callback-validation-handler",
      level: 3,
      title: "2.3 Add callback validation handler",
      children: []
    }, {
      id: "24-add-event-authorization",
      level: 3,
      title: "2.4 Add event authorization",
      children: []
    }, {
      id: "25-define-data-models",
      level: 3,
      title: "2.5 Define data models",
      children: []
    }, {
      id: "26-event-handling",
      level: 3,
      title: "2.6 Event handling",
      children: []
    }, {
      id: "27-deploy",
      level: 3,
      title: "2.7 Deploy",
      children: []
    }]
  }, {
    id: "3-create-a-webhook",
    level: 2,
    title: "3. Create a webhook",
    children: [{
      id: "31-request",
      level: 3,
      title: "3.1 Request",
      children: []
    }, {
      id: "32-request-body",
      level: 3,
      title: "3.2 Request body",
      children: []
    }, {
      id: "33-response",
      level: 3,
      title: "3.3 Response",
      children: []
    }]
  }, {
    id: "4-trigger-imodel-event",
    level: 2,
    title: "4. Trigger iModel event",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var react_to_events_using_webhooks_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/react-to-events-using-webhooks-v2.mdx


var react_to_events_using_webhooks_v2_excluded = ["components"];
var react_to_events_using_webhooks_v2_jsx = (external_react_default()).createElement;


var react_to_events_using_webhooks_v2_readingTime = {
  "text": "12 min read",
  "minutes": 11.03,
  "time": 661800,
  "words": 2206
};
/* @jsxRuntime classic */
/* @jsx mdx */

var react_to_events_using_webhooks_v2_metadata = {
  title: 'React to events using Webhooks V2 API',
  tile: {
    name: 'React to events using Webhooks V2 API',
    description: 'This tutorial will teach you how to use Webhooks API to subscribe to iModel events and introduce basic event handling workflows.',
    href: '/tutorials/react-to-events-using-webhooks-v2/',
    durationInMinutes: 45,
    relatedApiIds: ['webhooks']
  }
};
var react_to_events_using_webhooks_v2_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var react_to_events_using_webhooks_v2_Introduction = react_to_events_using_webhooks_v2_makeShortcode("Introduction");
var react_to_events_using_webhooks_v2_TutorialSection = react_to_events_using_webhooks_v2_makeShortcode("TutorialSection");
var react_to_events_using_webhooks_v2_LinkButton = react_to_events_using_webhooks_v2_makeShortcode("LinkButton");
var react_to_events_using_webhooks_v2_NodeJsIcon = react_to_events_using_webhooks_v2_makeShortcode("NodeJsIcon");
var react_to_events_using_webhooks_v2_GitIcon = react_to_events_using_webhooks_v2_makeShortcode("GitIcon");
var react_to_events_using_webhooks_v2_VSCodeIcon = react_to_events_using_webhooks_v2_makeShortcode("VSCodeIcon");
var react_to_events_using_webhooks_v2_PostmanIcon = react_to_events_using_webhooks_v2_makeShortcode("PostmanIcon");
var react_to_events_using_webhooks_v2_Title = react_to_events_using_webhooks_v2_makeShortcode("Title");
var react_to_events_using_webhooks_v2_CodeBlock = react_to_events_using_webhooks_v2_makeShortcode("CodeBlock");
var react_to_events_using_webhooks_v2_Alert = react_to_events_using_webhooks_v2_makeShortcode("Alert");
var react_to_events_using_webhooks_v2_ContinueLearningSection = react_to_events_using_webhooks_v2_makeShortcode("ContinueLearningSection");
var react_to_events_using_webhooks_v2_TileList = react_to_events_using_webhooks_v2_makeShortcode("TileList");
var react_to_events_using_webhooks_v2_ResourceTile = react_to_events_using_webhooks_v2_makeShortcode("ResourceTile");
var react_to_events_using_webhooks_v2_layoutProps = {
  metadata: react_to_events_using_webhooks_v2_metadata
};
var react_to_events_using_webhooks_v2_MDXLayout = "wrapper";
function react_to_events_using_webhooks_v2_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, react_to_events_using_webhooks_v2_excluded);
  return (0,react_.mdx)(react_to_events_using_webhooks_v2_MDXLayout, (0,esm_extends/* default */.Z)({}, react_to_events_using_webhooks_v2_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(react_to_events_using_webhooks_v2_Introduction, {
    skillLevel: "Intermediate",
    durationInMinutes: "45",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "In this tutorial, you will learn how to use the Webhooks V2 API to create and manage your webhooks. Also you will learn how to validate the webhook signature and process received event messages in your application.")), (0,react_.mdx)(react_to_events_using_webhooks_v2_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Basic knowledge on ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://en.wikipedia.org/wiki/Webhook"
  }, "webhooks"), " and how they work."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Knowledge on web application deployment or experience using ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://www.heroku.com/about"
  }, "Heroku"), "/", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://www.netlify.com/"
  }, "Netlify"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Already registered your own Service Application on the iTwin Platform.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Steps to follow for registering an Service Application can be found ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/authorize-service/"
  }, "here"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Make sure that your Service Application is associated with ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Webhooks API"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "webhooks:read"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "webhooks:modify"), " scopes enabled."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "The Webhooks API V2 can only be called by Service Applications."))))), (0,react_.mdx)(react_to_events_using_webhooks_v2_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-set-up-your-environment"
  }, "1. Set up your environment")), (0,react_.mdx)(react_to_events_using_webhooks_v2_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_v2_LinkButton, {
      href: "https://nodejs.org",
      target: "_blank",
      title: "Node.js",
      icon: (0,react_.mdx)(react_to_events_using_webhooks_v2_NodeJsIcon, {
        mdxType: "NodeJsIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(react_to_events_using_webhooks_v2_LinkButton, {
      href: "https://git-scm.com/downloads",
      target: "_blank",
      title: "Git",
      icon: (0,react_.mdx)(react_to_events_using_webhooks_v2_GitIcon, {
        mdxType: "GitIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "11-required-materials"
  }, "1.1 Required materials"), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpsnodejsorg-target_blanknodejs-14x-lts-versiona"
  }, (0,react_.mdx)("a", {
    href: "https://nodejs.org",
    target: "_blank"
  }, "Node.js (14.x LTS version)")), (0,react_.mdx)("p", null, "This tool provides the backend JavaScript runtime necessary for your computer to read and render code appropriately. It also allows you to run NPM command line."), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpsgit-scmcomdownloads-target_blankgita"
  }, (0,react_.mdx)("a", {
    href: "https://git-scm.com/downloads",
    target: "_blank"
  }, "Git")), (0,react_.mdx)("p", null, "This is the common source code control system.")), (0,react_.mdx)(react_to_events_using_webhooks_v2_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_v2_LinkButton, {
      href: "https://code.visualstudio.com/",
      target: "_blank",
      title: "VS Code",
      icon: (0,react_.mdx)(react_to_events_using_webhooks_v2_VSCodeIcon, {
        mdxType: "VSCodeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(react_to_events_using_webhooks_v2_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(react_to_events_using_webhooks_v2_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "12-suggested-materials"
  }, "1.2 Suggested materials"), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpscodevisualstudiocom-target_blankvisual-studio-codea"
  }, (0,react_.mdx)("a", {
    href: "https://code.visualstudio.com/",
    target: "_blank"
  }, "Visual Studio Code")), (0,react_.mdx)("p", null, "This is our recommended editor and debugger tool for developing iTwin.js applications. It is free, open source and includes a GUI for working with GIT."), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpswwwpostmancomdownloads-target_blankpostmana"
  }, (0,react_.mdx)("a", {
    href: "https://www.postman.com/downloads/",
    target: "_blank"
  }, "Postman")), (0,react_.mdx)("p", null, "If you want to test the REST API calls directly, you can use ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.postman.com/downloads/"
  }, "Postman"), " or any other solution capable of sending HTTP requests. If you do it this way, you will require an authorization token for the requests to work."), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpssignupherokucom-target_blankheroku-accounta"
  }, (0,react_.mdx)("a", {
    href: "https://signup.heroku.com/",
    target: "_blank"
  }, "Heroku account")), (0,react_.mdx)("p", null, "Heroku will be used to deploy the test application during this tutorial.")), (0,react_.mdx)(react_to_events_using_webhooks_v2_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-create-your-application"
  }, "2. Create your application"), (0,react_.mdx)("p", null, "Since webhooks are sending the events via HTTP requests you need to have an application running that exposes a public HTTP endpoint - callback URL. In this tutorial we are going to use ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://nodejs.org/en"
  }, "Node.js"), " together with ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://expressjs.com/"
  }, "Express"), " for test application.")), (0,react_.mdx)(react_to_events_using_webhooks_v2_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_v2_Title, {
      mdxType: "Title"
    }, "Project initialization"), (0,react_.mdx)(react_to_events_using_webhooks_v2_CodeBlock, {
      language: "bash",
      code: "cd your-project\nnpm init -y\nnpm install express\nnpm install -D typescript @types/express\ntsc --init",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(react_to_events_using_webhooks_v2_Title, {
      mdxType: "Title"
    }, "tsconfig.json"), (0,react_.mdx)(react_to_events_using_webhooks_v2_CodeBlock, {
      language: "json",
      code: "\"outDir\":\"dist\"",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(react_to_events_using_webhooks_v2_Title, {
      mdxType: "Title"
    }, "package.json"), (0,react_.mdx)(react_to_events_using_webhooks_v2_CodeBlock, {
      language: "json",
      code: "\"main\":\"dist/index.js\"",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(react_to_events_using_webhooks_v2_CodeBlock, {
      language: "json",
      code: "\"scripts\":{\n  \"start\":\"tsc && node dist/index.js\"\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "21-initialize-the-project"
  }, "2.1 Initialize the project"), (0,react_.mdx)("p", null, "To start off, create new directory for your application and execute the following initialization commands. These commands will initialize new npm project, install required dependencies and configure typescript. After initialization, update freshly generated ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "tsconfig.json"), " file by setting ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "outDir"), " property to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "\"dist\""), ". Next step will be updating ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "package.json"), " file to update the application entry point and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "start"), " script. After that is done, the project is ready for the next step."), (0,react_.mdx)(react_to_events_using_webhooks_v2_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "If you are running into \"tsc is not recognized\" problems, try installing typescript globally \"npm install typescript -g\".")), (0,react_.mdx)(react_to_events_using_webhooks_v2_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_v2_Title, {
      mdxType: "Title"
    }, "src/index.ts"), (0,react_.mdx)(react_to_events_using_webhooks_v2_CodeBlock, {
      language: "typescript",
      code: "import express from \"express\";\n\nconst app = express();\napp.use(express.text({ type: \"application/json\" }));\n\napp.post(\"/events\", () => {\n  // Handle the event\n});\n\nconst port = 5000;\napp.listen(port, () => {\n  console.log(\"Application was started.\");\n});",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "22-create-express-server"
  }, "2.2 Create express server"), (0,react_.mdx)("p", null, "Now let\u2019s start implementing the application. At first, create a new file in your project directory ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "src/index.ts"), ". This is going to be the application starting point. From example on the side you can see that we are going to have a public HTTP endpoint that will be accepting POST requests ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "app.post(\"/events\", () => {})"), ". This is because event messages are sent using POST method. Note that above there is a line ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "app.use(express.text({ type: \"application/json\" }))"), " that makes the server treat the requests with json content as text and not deserialize them initially because raw payload will be required for event authorization in one of the upcoming steps.")), (0,react_.mdx)(react_to_events_using_webhooks_v2_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_v2_Title, {
      mdxType: "Title"
    }, "src/index.ts"), (0,react_.mdx)(react_to_events_using_webhooks_v2_CodeBlock, {
      language: "typescript",
      code: "import crypto from \"crypto\";",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(react_to_events_using_webhooks_v2_CodeBlock, {
      language: "typescript",
      code: "function validateSignature(payload: string, signatureHeader: string): boolean {\n  // Replace with your own webhook secret later\n  const secret = \"4eb25d308ef2a9722ffbd7a2b7e5026f9d1f2feaca5999611d4ef8692b1ad70d\";\n\n  const [algorithm, signature] = signatureHeader.split(\"=\");\n  const generated_sig = crypto.createHmac(algorithm, secret).update(payload, \"utf-8\").digest(\"hex\");\n\n  return generated_sig.toLowerCase() === signature.toLowerCase();\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "23-add-event-authorization"
  }, "2.3 Add event authorization"), (0,react_.mdx)("p", null, "In order to authorize the event source, we need to add event signature validation. Event signature is ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "HMAC-SHA256"), " string that is included in the request ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Signature"), " header. For validation we will be using Node.js ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "crypto"), " utility which basically lets us to generate the same type of signature in our end. Generated signature and the signature included in the request should match to pass the authorization. Let\u2019s start adding validation by creating a new function ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "function validateSignature(payload: string, signatureHeader: string)"), ". As a first parameter it will to expect raw request payload and as a second parameter it will expect signature header value. This function will also need the webhook ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "secret"), " which we are going to add later on we create a webhook. Since, the signature header value also contains the cryptographic algorithm name and the signature value separated by ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "="), ", we need to extract these values into separate variables ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "const [algorithm, signature] = signatureHeader.split(\"=\")"), ". Then at this point, using all the existing variables we can generate a signature ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "crypto.createHmac(algorithm, secret).update(payload, \"utf-8\").digest(\"hex\")"), ". Lastly, we need to check if both signatures match and return the result.")), (0,react_.mdx)(react_to_events_using_webhooks_v2_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_v2_Title, {
      mdxType: "Title"
    }, "src/models.ts"), (0,react_.mdx)(react_to_events_using_webhooks_v2_CodeBlock, {
      language: "typescript",
      code: "export type Event = {\n  content: iModelDeletedEvent | NamedVersionCreatedEvent;\n  eventType: string;\n  enqueuedDateTime: string;\n  messageId: string;\n  webhookId: string;\n  iTwinId: string;\n};\n\nexport type iModelDeletedEvent = {\n  imodelId: string;\n  userId: string;\n};\n\nexport type MemberAddedEvent = {\n  memberId: string;\n  eventCreatedBy: string;\n  memberType: string;\n  roleId: string;\n  roleName: string;\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "24-define-data-models"
  }, "2.4 Define data models"), (0,react_.mdx)("p", null, "Before we can start receiving the events, we need to prepare the models for expected data. You can find the schema for the base event and all other available events ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/webhooks-v2/events"
  }, "here"), ". Create a new file ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "src/models.ts"), " and create event types by matching the schema. For this example we will create two event types, ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iModels.iModelDeleted.v1"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "accessControl.memberAdded.v1"))), (0,react_.mdx)(react_to_events_using_webhooks_v2_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_v2_Title, {
      mdxType: "Title"
    }, "src/index.ts"), (0,react_.mdx)(react_to_events_using_webhooks_v2_CodeBlock, {
      language: "typescript",
      code: "import { Event, NamedVersionCreatedEvent } from \"./models\";",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(react_to_events_using_webhooks_v2_CodeBlock, {
      language: "typescript",
      code: "app.post(\"/events\", (req, res) => {\n  const signatureHeader = req.headers[\"signature\"] as string;\n  if (!signatureHeader || !req.body) res.sendStatus(401);\n\n  if (!validateSignature(req.body, signatureHeader)) {\n    res.sendStatus(401);\n  } else {\n    const event = JSON.parse(req.body) as Event;\n    switch (event.eventType) {\n      case \"accessControl.memberAdded.v1\": {\n        const content = event.content as MemberAddedEvent;\n        console.log(`Member (Id:${content.memberId}) was added to iTwin (${event.iTwinId})!  Member was granted the ${content.roleName} role (Id: ${content.roleId}).`);\n        break;\n      }\n      default:\n        res.sendStatus(400); //Unexpected event type\n    }\n  }\n  res.sendStatus(200);\n});",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "25-event-handling"
  }, "2.5 Event handling"), (0,react_.mdx)("p", null, "Now that we have everything ready for event handling, we can start implementing it. First we want to validate the request you receive came from our Webhooks Service. You can do this be checking the signature header. If the request either does not contain a signature header or a request body, you can go ahead and return '401 Unauthorized\" ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "if (!signatureHeader || !req.body) res.sendStatus(401)"), ". If request does have these components then we can proceed with further processing logic and try to validate the event signature using the function we defined in step 2.3 ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "if (!validateSignature(req.body, signatureHeader)) res.sendStatus(401)"), ". If validation fails, we can assume that the event was sent from unexpected source and safely return ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "401 Unauthorized"), " as well."), (0,react_.mdx)("p", null, "If we do not receive a response within 5 seconds we will count that request as failed and start the retry procedure. To avoid any inadvertent timeouts we suggest validating the request, putting any work you will be doing in reaction to the event on a seperate thread, and then return '200 Ok\u2019. More information about the retry procedure can be found ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/webhooks-v2/overview/#RetryProcedure"
  }, "here"), ".")), (0,react_.mdx)(react_to_events_using_webhooks_v2_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "26-deploy"
  }, "2.6 Deploy"), (0,react_.mdx)("p", null, "For this application to work, you have to deploy it to be publicly accessible. If you have any preferences for the deployment, go ahead and use your own deployment method and platform. If not, you can keep following the tutorial and deploy the application using ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.heroku.com/about"
  }, "Heroku"), ":"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Create new Heroku application and empty Heroku Git repository ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://devcenter.heroku.com/articles/git#for-a-new-heroku-app"
  }, "https://devcenter.heroku.com/articles/git#for-a-new-heroku-app"), "."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Deploy by pushing the code ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://devcenter.heroku.com/articles/git#deploying-code"
  }, "https://devcenter.heroku.com/articles/git#deploying-code"), "."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Use ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "heroku logs --tail"), " for monitoring the behavior of the application.")), (0,react_.mdx)("p", null, "Once you have the application deployed and running, we can move on to the webhook creation.")), (0,react_.mdx)(react_to_events_using_webhooks_v2_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-create-a-webhook"
  }, "3. Create a webhook"), (0,react_.mdx)("p", null, "Webhooks allows you to subscribe to events happening in iTwin Platform. Webhooks are an easy way to automate workflows inside of the iTwin Platform.")), (0,react_.mdx)(react_to_events_using_webhooks_v2_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_v2_Title, {
      mdxType: "Title"
    }, "Example HTTP request for \"Create webhook\" operation"), (0,react_.mdx)(react_to_events_using_webhooks_v2_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/webhooks HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "31-request"
  }, "3.1 Request"), (0,react_.mdx)("p", null, "A webhook for iModel events is created by sending a POST request to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/webhooks/"
  }, "https://api.bentley.com/webhooks/"), ". ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Authorization"), " header with valid Bearer access token is required."), (0,react_.mdx)("p", null, "The Webhooks API V2 can only be called by Service Applications. This request requires an ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Authorization"), " header with a valid Bearer token with the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "{scope}"), " scope. For more information on Service Applications and how to obtain an access token can be found ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/authorize-service/"
  }, "here"), ". A list of your Service Applications can be found ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/my-apps"
  }, "here"), ".")), (0,react_.mdx)(react_to_events_using_webhooks_v2_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_v2_Title, {
      mdxType: "Title"
    }, "Example request body"), (0,react_.mdx)(react_to_events_using_webhooks_v2_CodeBlock, {
      language: "json",
      code: "{  \n  \"callbackUrl\":\"https://HOSTNAME/events\",\n  \"scope\": \"account\",\n  \"secret\": \"optional-32-character-value\"\n  \"eventTypes\":[\n    \"iModels.iModelDeleted.v1\",\n    \"accessControl.memberAdded.v1\"\n  ]\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "32-request-body"
  }, "3.2 Request body"), (0,react_.mdx)("p", null, "Webhook creation properties:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "callbackUrl"), " - a public endpoint of your application where you expect the event to be sent."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "eventTypes"), " - a list of event types you want to subscribe to. A full list can be found ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/webhooks-v2/events"
  }, "here")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "secret"), " - (optional) At least 32 character string value. Used to validate the request to the callback url. If no value is given a secret will be generate and returned. For more information, see ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/webhooks-v2/overview/#Webhooksecret"
  }, "here"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "scope"), " - Scope of the events that will be received. Only \u201CAccount\u201D is the accepted value.")), (0,react_.mdx)("p", null, "For more information see the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/webhooks/operations/create-webhook"
  }, "documentation"), "."), (0,react_.mdx)(react_to_events_using_webhooks_v2_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Don't forget to replace the \"HOSTNAME\" placeholder value with your deployed application hostname.")), (0,react_.mdx)(react_to_events_using_webhooks_v2_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_v2_Title, {
      mdxType: "Title"
    }, "Example response result"), (0,react_.mdx)(react_to_events_using_webhooks_v2_CodeBlock, {
      language: "json",
      code: "{\n  \"webhook\":{\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\n    \"scope\": \"Account\",\n    \"scopeId\": \"00000000-0000-0000-0000-000000000000\",\n    \"active\": false,\n    \"callbackUrl\":\"https://HOSTNAME/events\",\n    \"secret\": \"1de62d1611b20e00245c0db2b0805e9f60021b104702a3c227cf6e216f1f153b\",\n    \"eventTypes\": [\n      \"iModels.iModelDeleted.v1\",\n      \"accessControl.memberAdded.v1\"\n    ]\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "33-response"
  }, "3.3 Response"), (0,react_.mdx)("p", null, "On the successful response you will get returned the webhook secret if you did not provided one in the request. We will be need it later to validate received events. You will need to store the secret in your application storage in order to prepare for receiving events, but for this tutorial just use it to replace the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "const secret"), " value in ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "function validateSignature"), " from step 2.3."), (0,react_.mdx)(react_to_events_using_webhooks_v2_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note that the webhook secret should not be shared with anyone and treated as a private key.")), (0,react_.mdx)(react_to_events_using_webhooks_v2_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-activate-a-webhook"
  }, "4. Activate a webhook"), (0,react_.mdx)("p", null, "For your webhooks to start receiving events it must first be activated. By default webhooks are created as inactivate. These steps can also be used to reactivate a webhook after a failed retry procedure. More information about the retry procedure can be found ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/webhooks-v2/overview/#RetryProcedure"
  }, "here"), ".")), (0,react_.mdx)(react_to_events_using_webhooks_v2_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_v2_Title, {
      mdxType: "Title"
    }, "Example HTTP request for \"Update webhook\" operation"), (0,react_.mdx)(react_to_events_using_webhooks_v2_CodeBlock, {
      language: "http",
      code: "PATCH https://api.bentley.com/webhooks/{webhookId} HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "41-request"
  }, "4.1 Request"), (0,react_.mdx)("p", null, "A webhook can be updated by sending a PATCH request to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/webhooks/%7BwebhookId%7D"
  }, "https://api.bentley.com/webhooks/{webhookId}"), ". ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Authorization"), " header with valid Bearer access token is required."), (0,react_.mdx)("p", null, "The Webhooks API V2 can only be called by Service Applications. This request requires an ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Authorization"), " header with a valid Bearer token with the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "{scope}"), " scope. For more information on Service Applications and how to obtain an access token can be found ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/authorize-service/"
  }, "here"), ". A list of your Service Applications can be found ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/my-apps"
  }, "here"), ".")), (0,react_.mdx)(react_to_events_using_webhooks_v2_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_v2_Title, {
      mdxType: "Title"
    }, "Example request body"), (0,react_.mdx)(react_to_events_using_webhooks_v2_CodeBlock, {
      language: "json",
      code: "{  \n  \"active\": true\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "42-request-body"
  }, "4.2 Request body"), (0,react_.mdx)("p", null, "To activate a webhook you will need to set the \u201Cactive\u201D field to 'true\u2019. You can also use the PATCH request to update the following properties:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "active"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "callbackUrl"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "eventTypes"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "secret")), (0,react_.mdx)("p", null, "For more information see the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/webhooks/operations/update-webhook"
  }, "documentation"), "."), (0,react_.mdx)(react_to_events_using_webhooks_v2_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note that the webhook secret will not be return in the response. We will only return the secret in the response of the webhook creation.")), (0,react_.mdx)(react_to_events_using_webhooks_v2_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(react_to_events_using_webhooks_v2_Title, {
      mdxType: "Title"
    }, "Example response result"), (0,react_.mdx)(react_to_events_using_webhooks_v2_CodeBlock, {
      language: "json",
      code: "{\n  \"webhook\":{\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\n    \"scope\": \"Account\",\n    \"scopeId\": \"00000000-0000-0000-0000-000000000000\",\n    \"active\": true,\n    \"callbackUrl\":\"https://HOSTNAME/events\",\n    \"eventTypes\": [\n      \"iModels.iModelDeleted.v1\",\n      \"accessControl.memberAdded.v1\"\n    ]\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "43-response"
  }, "4.3 Response"), (0,react_.mdx)("p", null, "On the successful response you will get returned the webhook with the updated values. For this example only the \u201Cactive\u201D field is updated."), (0,react_.mdx)("p", null, "Your webhook is now active. Your application setup in Step 2 will now start to receive events.")), (0,react_.mdx)(react_to_events_using_webhooks_v2_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(react_to_events_using_webhooks_v2_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(react_to_events_using_webhooks_v2_ResourceTile, {
    title: "Workflow Automation API group documentation",
    href: "/api-groups/workflow-automation",
    description: "An overview and detailed Workflow Automation API group documentation.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(react_to_events_using_webhooks_v2_ResourceTile, {
    title: "Data Management API group documentation",
    href: "/api-groups/data-management",
    description: "An overview and detailed Data Management API group documentation.",
    mdxType: "ResourceTile"
  }))));
}
;
react_to_events_using_webhooks_v2_MDXContent.isMDXComponent = true;
var react_to_events_using_webhooks_v2_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-set-up-your-environment",
    level: 2,
    title: "1. Set up your environment",
    children: [{
      id: "11-required-materials",
      level: 3,
      title: "1.1 Required materials",
      children: []
    }, {
      id: "12-suggested-materials",
      level: 3,
      title: "1.2 Suggested materials",
      children: []
    }]
  }, {
    id: "2-create-your-application",
    level: 2,
    title: "2. Create your application",
    children: [{
      id: "21-initialize-the-project",
      level: 3,
      title: "2.1 Initialize the project",
      children: []
    }, {
      id: "22-create-express-server",
      level: 3,
      title: "2.2 Create express server",
      children: []
    }, {
      id: "23-add-event-authorization",
      level: 3,
      title: "2.3 Add event authorization",
      children: []
    }, {
      id: "24-define-data-models",
      level: 3,
      title: "2.4 Define data models",
      children: []
    }, {
      id: "25-event-handling",
      level: 3,
      title: "2.5 Event handling",
      children: []
    }, {
      id: "26-deploy",
      level: 3,
      title: "2.6 Deploy",
      children: []
    }]
  }, {
    id: "3-create-a-webhook",
    level: 2,
    title: "3. Create a webhook",
    children: [{
      id: "31-request",
      level: 3,
      title: "3.1 Request",
      children: []
    }, {
      id: "32-request-body",
      level: 3,
      title: "3.2 Request body",
      children: []
    }, {
      id: "33-response",
      level: 3,
      title: "3.3 Response",
      children: []
    }]
  }, {
    id: "4-activate-a-webhook",
    level: 2,
    title: "4. Activate a webhook",
    children: [{
      id: "41-request",
      level: 3,
      title: "4.1 Request",
      children: []
    }, {
      id: "42-request-body",
      level: 3,
      title: "4.2 Request body",
      children: []
    }, {
      id: "43-response",
      level: 3,
      title: "4.3 Response",
      children: []
    }]
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var react_to_events_using_webhooks_v2_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/reality-management-essentials.mdx


var reality_management_essentials_excluded = ["components"];
var reality_management_essentials_jsx = (external_react_default()).createElement;


var reality_management_essentials_readingTime = {
  "text": "17 min read",
  "minutes": 16.205,
  "time": 972300,
  "words": 3241
};
/* @jsxRuntime classic */
/* @jsx mdx */

var reality_management_essentials_metadata = {
  title: 'Reality Management API - Essentials',
  tile: {
    name: 'Reality Management API - Essentials',
    description: 'An introduction to the Reality Management API. It covers the essential concepts required to get started.',
    thumbnail: '/images/tutorials/reality-management-essentials/reality-management-essentials-thumbnail.jpg',
    href: '/tutorials/reality-management-essentials/',
    relatedApiIds: ['realitymanagement', 'reality-management/reality-data']
  }
};
var reality_management_essentials_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var reality_management_essentials_Alert = reality_management_essentials_makeShortcode("Alert");
var Section = reality_management_essentials_makeShortcode("Section");
var AuthorizeUserButton = reality_management_essentials_makeShortcode("AuthorizeUserButton");
var CreateiTwinButton = reality_management_essentials_makeShortcode("CreateiTwinButton");
var DownloadFilesButton = reality_management_essentials_makeShortcode("DownloadFilesButton");
var reality_management_essentials_RequestLine = reality_management_essentials_makeShortcode("RequestLine");
var SimpleLink = reality_management_essentials_makeShortcode("SimpleLink");
var reality_management_essentials_ExecutableCodeBlock = reality_management_essentials_makeShortcode("ExecutableCodeBlock");
var LinkButtonUsingTutorialData = reality_management_essentials_makeShortcode("LinkButtonUsingTutorialData");
var reality_management_essentials_TileList = reality_management_essentials_makeShortcode("TileList");
var reality_management_essentials_ResourceTile = reality_management_essentials_makeShortcode("ResourceTile");
var reality_management_essentials_layoutProps = {
  metadata: reality_management_essentials_metadata
};
var reality_management_essentials_MDXLayout = "wrapper";
function reality_management_essentials_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, reality_management_essentials_excluded);
  return (0,react_.mdx)(reality_management_essentials_MDXLayout, (0,esm_extends/* default */.Z)({}, reality_management_essentials_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial covers the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "essential"), " topics for using the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/reality-management/overview"
  }, "Reality Management API"), ".\nYou will learn the following:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "How to create a reality data."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "How to upload data files to your reality data."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "How to query your created reality data.")), (0,react_.mdx)("p", null, "You will also see how your reality data looks in an iTwin Viewer application."), (0,react_.mdx)(reality_management_essentials_Alert, {
    mdxType: "Alert"
  }, (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Use sample data")), (0,react_.mdx)("p", null, "This tutorial walks you through using the Reality Management API. We recommend using\nsample names and data while learning the API for this tutorial. The same\ninstructions apply when using the Reality Management API for your production\napplications.")), (0,react_.mdx)("h2", {
    "id": "before-you-begin"
  }, "Before you begin"), (0,react_.mdx)("p", null, "Ensure you meet the following requirements before starting the tutorial:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Be familiar with the concept of an iTwin. See the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/itwins/overview/"
  }, "iTwin API Overview"), " for more information."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Be familiar with the concept of Reality Data. See the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/reality-management/overview/"
  }, "Reality Management API Overview"), " for more information."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "(Optional) Be familiar with ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://learn.microsoft.com/en-us/azure/storage/blobs/storage-blobs-overview"
  }, "Azure Blob Storage"), ".\nYou can complete this tutorial regardless of your Azure knowledge level."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "(Optional) An API client tool that allows you to execute HTTP calls.\nFor ease of use, we have added executable code blocks enabling you to make sample requests within the tutorial.\nAPI client tools are helpful when testing your real-world applications.")), (0,react_.mdx)("h2", {
    "id": "set-up-your-tutorial-environment"
  }, "Set up your tutorial environment"), (0,react_.mdx)("p", null, "This section guides you through the pre-requisite steps for the tutorial so you can make sample API requests.\nIt also provides sample data for you to use during the tutorial."), (0,react_.mdx)(Section, {
    level: 2,
    mdxType: "Section"
  }, (0,react_.mdx)("h3", {
    "id": "authorize-your-requests"
  }, "Authorize your requests"), (0,react_.mdx)("p", null, "This tutorial provides an access token enabling you to complete the tutorial without setting up your own authentication."), (0,react_.mdx)("p", null, "Click ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Authorize"), " to generate the token. Your token is automatically populated in the headers of the sample requests."), (0,react_.mdx)(AuthorizeUserButton, {
    scopes: ['realitydata:read', 'realitydata:modify', 'itwins:modify'],
    mdxType: "AuthorizeUserButton"
  }), (0,react_.mdx)(reality_management_essentials_Alert, {
    mdxType: "Alert"
  }, (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Application permissions")), (0,react_.mdx)("p", null, "When using this API to authorize your own application, you need to define the\nscopes and permissions for your solution. See the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization"
  }, "Authorization overview"), " for more information.\nThe tutorial uses the following scopes to make reality managment API requests: ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "realitydata:read"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "realitydata:modify"), "."))), (0,react_.mdx)(Section, {
    level: 2,
    mdxType: "Section"
  }, (0,react_.mdx)("h3", {
    "id": "create-an-itwin"
  }, "Create an iTwin"), (0,react_.mdx)("p", null, "To use the Reality Management API, you must associate your reality data with an iTwin."), (0,react_.mdx)("p", null, "Click ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Create iTwin"), "."), (0,react_.mdx)("p", null, "The ID of your iTwin is automatically populated in the requests that need it.\nMake sure save the iTwin ID. Click the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Copy"), " button to copy the ID and save it somewhere safe.\nWhen using the iTwin ID, make sure to remove the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "iTwin ID"), " label from the pasted copy."), (0,react_.mdx)(CreateiTwinButton, {
    name: 'Reality_Management_Essentials_Tutorial_iTwin',
    accessTokenFunc: function accessTokenFunc(data) {
      return data.accessToken ? data.accessToken : undefined;
    },
    mdxType: "CreateiTwinButton"
  }), (0,react_.mdx)(reality_management_essentials_Alert, {
    mdxType: "Alert"
  }, (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Manually create an iTwin")), (0,react_.mdx)("p", null, "An iTwin is required when using this API in your own applications. For more information on creating an iTwin, see the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/itwins/operations/create-itwin/"
  }, "Create iTwin"), " reference."))), (0,react_.mdx)(Section, {
    level: 2,
    mdxType: "Section"
  }, (0,react_.mdx)("h3", {
    "id": "get-your-data-files"
  }, "Get your data files"), (0,react_.mdx)("p", null, "You must have reality data files on your computer to follow this tutorial. We have provided some sample files for you to use."), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, (0,react_.mdx)("p", {
    parentName: "li"
  }, "Click ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Download Data"), " to download the sample reality data files."), (0,react_.mdx)("p", {
    parentName: "li"
  }, "There are a lot of data files.\nIt may take a few minutes for them to download.")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, (0,react_.mdx)("p", {
    parentName: "li"
  }, "Please unzip the folder ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Scene.zip"), " after the download completes."), (0,react_.mdx)("p", {
    parentName: "li"
  }, "There are a lot of data files.\nIt may take a few minutes for them to unzip."))), (0,react_.mdx)(DownloadFilesButton, {
    type: "folder",
    folderName: "Scene.zip",
    buttonText: "Download Data",
    jsonFilesManifest: {
      filename: 'data_manifest.json',
      filepath: '/images/tutorials/reality-management-essentials/data_manifest.json'
    },
    mdxType: "DownloadFilesButton"
  }), (0,react_.mdx)(reality_management_essentials_Alert, {
    mdxType: "Alert"
  }, (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Generate your own files")), (0,react_.mdx)("p", null, "Provide your own reality data files when using the Reality Management API in production applications. Please see the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/contextcapture/"
  }, "Reality Modeling API"), " for more information."))), (0,react_.mdx)("h2", {
    "id": "create-a-reality-data"
  }, "Create a reality data"), (0,react_.mdx)("p", null, "The Reality Management API enables you to create and manage reality models and data.\nA ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "reality model"), " is the real world environment visualized in a reality data viewer and is stored as data files.\n", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Reality data"), " is a place to store your reality model and any information describing that reality model."), (0,react_.mdx)("p", null, "Send a request to the create reality data endpoint:"), (0,react_.mdx)(reality_management_essentials_RequestLine, {
    method: "POST",
    path: "/reality-management/reality-data/",
    href: "/apis/reality-management/operations/create-reality-data/",
    mdxType: "RequestLine"
  }), (0,react_.mdx)("p", null, "The example request includes the following properties in its body:"), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, (0,react_.mdx)("strong", {
    parentName: "th"
  }, "Parameter")), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, (0,react_.mdx)("strong", {
    parentName: "th"
  }, "Required")), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, (0,react_.mdx)("strong", {
    parentName: "th"
  }, "Description")))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "iTwinId"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "No"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "The iTwin ID is a unique identifier associating your reality data with your iTwin. ", (0,react_.mdx)("strong", {
    parentName: "td"
  }, "Reminder:"), " The ID is pre-populated in this tutorial if you clicked the ", (0,react_.mdx)(SimpleLink, {
    href: '/tutorials/reality-management-essentials/#create-an-itwin',
    mdxType: "SimpleLink"
  }, (0,react_.mdx)("strong", {
    parentName: "td"
  }, "Create an iTwin")), " button during setup.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "displayName"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Yes"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "The user friendly name of the reality data.")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "type"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Yes"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Indicates the format of your reality data files. Find the list of available types in the ", (0,react_.mdx)("a", {
    parentName: "td",
    "href": "/apis/reality-management/rm-rd-details/#types"
  }, "types table"), " on the ", (0,react_.mdx)("a", {
    parentName: "td",
    "href": "/apis/reality-management/rm-rd-details/"
  }, "Reality Data Properties"), " page. For the sample files provided, the ", (0,react_.mdx)("inlineCode", {
    parentName: "td"
  }, "type"), " is ", (0,react_.mdx)("inlineCode", {
    parentName: "td"
  }, "Cesium3DTiles"), ".")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "rootDocument"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "No"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "The path to the root document file. The root document file is a manifest containing extra information about the reality data and is used by the Visualization service to visualize your reality model. See the ", (0,react_.mdx)("a", {
    parentName: "td",
    "href": "/apis/reality-management/rm-rd-details/#root-document"
  }, "Root Document"), " section on the ", (0,react_.mdx)("a", {
    parentName: "td",
    "href": "/apis/reality-management/rm-rd-details/"
  }, "Reality Data Properties"), " page for more information. In our sample, the root document file is ", (0,react_.mdx)("inlineCode", {
    parentName: "td"
  }, "electrical_substation.json"), " in the ", (0,react_.mdx)("inlineCode", {
    parentName: "td"
  }, "Scene"), " folder making the ", (0,react_.mdx)("inlineCode", {
    parentName: "td"
  }, "rootDocument"), " value ", (0,react_.mdx)("inlineCode", {
    parentName: "td"
  }, "Scene/electrical_substation.json"), ".")))), (0,react_.mdx)(reality_management_essentials_Alert, {
    mdxType: "Alert"
  }, (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "More properties")), (0,react_.mdx)("p", null, "This step contains the bare minimum properties required for this tutorial.\nMany more properties are available and detailed in the\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/reality-management/operations/create-reality-data/#create-reality-data"
  }, "Create reality data"), " reference.")), (0,react_.mdx)("h3", {
    "id": "create-reality-data-request-example"
  }, "Create reality data request example"), (0,react_.mdx)(reality_management_essentials_ExecutableCodeBlock, {
    method: "POST",
    path: "/reality-management/reality-data/",
    headers: function headers(data) {
      var _data$accessToken;
      return {
        'Accept': 'application/vnd.bentley.itwin-platform.v1+json',
        'Content-Type': 'application/json',
        'Authorization': (_data$accessToken = data.accessToken) !== null && _data$accessToken !== void 0 ? _data$accessToken : 'Bearer TOKEN'
      };
    },
    body: function body(data) {
      return "{\n    \"iTwinId\": \"".concat(data.iTwinId ? data.iTwinId : '{iTwinId}', "\",\n    \"displayName\": \"Reality_Management_Essentials_Tutorial\",\n    \"type\": \"Cesium3DTiles\",\n    \"rootDocument\": \"Scene/electrical_substation.json\"\n}");
    },
    dataToSave: [{
      variableName: 'realityDataId',
      jsonQuery: 'realityData.id'
    }],
    handleResponse: function handleResponse(response, helpers) {
      if (response.status === 401) {
        {
          helpers === null || helpers === void 0 ? void 0 : helpers.toaster.negative((0,react_.mdx)("span", null, "Did you complete the ", (0,react_.mdx)("b", null, "Authorize your requests"), " step?"), {
            link: {
              onClick: function onClick() {
                window.open('/tutorials/reality-management-essentials/#authorize-your-requests', '_self');
              },
              title: 'Go to step'
            }
          });
        }
      }
      if (response.status === 422 && response.data.error.details.some(function (detail) {
        return detail.target === 'iTwinId';
      })) {
        helpers === null || helpers === void 0 ? void 0 : helpers.toaster.negative((0,react_.mdx)("span", null, "Did you complete the ", (0,react_.mdx)("b", null, "Create an iTwin"), " step?"), {
          link: {
            onClick: function onClick() {
              window.open('/tutorials/reality-management-essentials/#create-an-itwin', '_self');
            },
            title: 'Go to step'
          }
        });
      }
    },
    mdxType: "ExecutableCodeBlock"
  }), (0,react_.mdx)("p", null, "The ID of your reality data is automatically populated in the following requests that need it."), (0,react_.mdx)("h2", {
    "id": "upload-your-reality-model-to-the-reality-datas-container"
  }, "Upload your reality model to the reality data\u2019s container"), (0,react_.mdx)("p", null, "A reality data provides basic information about your reality model through its properties (such as what is the type/format of the files, where is the root document, etc).\nWhen you created your reality data, a container in the cloud was also created to serve as a home for your reality model."), (0,react_.mdx)("p", null, "This section details how to access and upload reality data files to that container."), (0,react_.mdx)(Section, {
    level: 2,
    mdxType: "Section"
  }, (0,react_.mdx)("h3", {
    "id": "get-your-reality-datas-container"
  }, "Get your reality data\u2019s container"), (0,react_.mdx)("p", null, "The Reality Management API exposes two endpoints you can use to access your reality data\u2019s container.\nOne endpoint provides read access to the container. The other endpoint provides write access.\nHowever, both endpoints accept the same parameters.\nThe container is hosted in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://learn.microsoft.com/en-us/azure/storage/blobs/"
  }, "Azure Blob Storage"), "."), (0,react_.mdx)("p", null, "We want write access so you can upload the reality data files to the container.\nFor more information on read access, please see the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/reality-management/operations/get-read-access-to-reality-data-container"
  }, "Retrieve read access to reality data container"), " reference."), (0,react_.mdx)("p", null, "For write access, send the request to the write access endpoint."), (0,react_.mdx)(reality_management_essentials_RequestLine, {
    method: "GET",
    path: "/reality-management/reality-data/{id}/writeaccess?iTwinId={iTwinId}",
    href: "/apis/reality-management/operations/get-write-access-to-reality-data-container/",
    mdxType: "RequestLine"
  }), (0,react_.mdx)("p", null, "The endpoint accepts the following parameters:"), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, (0,react_.mdx)("strong", {
    parentName: "th"
  }, "Parameter")), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, (0,react_.mdx)("strong", {
    parentName: "th"
  }, "Required")), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, (0,react_.mdx)("strong", {
    parentName: "th"
  }, "Description")))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "id"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Yes"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "The ID of your reality data. ", (0,react_.mdx)("strong", {
    parentName: "td"
  }, "Reminder:"), " The ID is pre-populated in this tutorial if you completed the ", (0,react_.mdx)(SimpleLink, {
    href: '/tutorials/reality-management-essentials/#create-reality-data-request-example',
    mdxType: "SimpleLink"
  }, "Create reality data request example"), ".")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "iTwinId"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "No"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "The ID of your iTwin. It affects the permissions for accessing the container as discussed in the ", (0,react_.mdx)("a", {
    parentName: "td",
    "href": "/apis/reality-management/operations/get-write-access-to-reality-data-container/"
  }, "Retrieve write access to reality data container"), " reference. ", (0,react_.mdx)("strong", {
    parentName: "td"
  }, "Reminder:"), " The ID is pre-populated in this tutorial if you clicked the ", (0,react_.mdx)(SimpleLink, {
    href: '/tutorials/reality-management-essentials/#create-an-itwin',
    mdxType: "SimpleLink"
  }, (0,react_.mdx)("strong", {
    parentName: "td"
  }, "Create an iTwin")), " button during setup.")))), (0,react_.mdx)("h4", {
    "id": "retrieve-write-access-to-reality-data-container-request-example"
  }, "Retrieve write access to reality data container request example"), (0,react_.mdx)(reality_management_essentials_ExecutableCodeBlock, {
    method: "GET",
    path: function path(data) {
      var _data$realityDataId, _data$iTwinId;
      return "/reality-management/reality-data/".concat((_data$realityDataId = data.realityDataId) !== null && _data$realityDataId !== void 0 ? _data$realityDataId : '{id}', "/writeaccess?iTwinId=").concat((_data$iTwinId = data.iTwinId) !== null && _data$iTwinId !== void 0 ? _data$iTwinId : '{iTwinId}');
    },
    headers: function headers(data) {
      var _data$accessToken2;
      return {
        Accept: 'application/vnd.bentley.itwin-platform.v1+json',
        Authorization: (_data$accessToken2 = data.accessToken) !== null && _data$accessToken2 !== void 0 ? _data$accessToken2 : 'Bearer TOKEN'
      };
    },
    handleResponse: function handleResponse(response, helpers) {
      if (response.status === 401) {
        {
          helpers === null || helpers === void 0 ? void 0 : helpers.toaster.negative((0,react_.mdx)("span", null, "Did you complete the ", (0,react_.mdx)("b", null, "Authorize your requests"), " step?"), {
            link: {
              onClick: function onClick() {
                window.open('/tutorials/reality-management-essentials/#authorize-your-requests', '_self');
              },
              title: 'Go to step'
            }
          });
        }
      }
      if (response.status === 422 && response.data.error.details.some(function (detail) {
        return detail.target === 'id';
      })) {
        helpers === null || helpers === void 0 ? void 0 : helpers.toaster.negative((0,react_.mdx)("span", null, "Did you complete the ", (0,react_.mdx)("b", null, "Create a reality data"), " step?"), {
          link: {
            onClick: function onClick() {
              window.open('/tutorials/reality-management-essentials/#create-a-reality-data', '_self');
            },
            title: 'Go to step'
          }
        });
      }
      if (response.status === 422 && response.data.error.details.some(function (detail) {
        return detail.target === 'iTwinId';
      })) {
        helpers === null || helpers === void 0 ? void 0 : helpers.toaster.negative((0,react_.mdx)("span", null, "Did you complete the ", (0,react_.mdx)("b", null, "Create an iTwin"), " step?"), {
          link: {
            onClick: function onClick() {
              window.open('/tutorials/reality-management-essentials/#create-an-itwin', '_self');
            },
            title: 'Go to step'
          }
        });
      }
    },
    mdxType: "ExecutableCodeBlock"
  }), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "href"), " returned in the response is a SAS URI with write access to the Azure blob hosting your reality data\u2019s container."), (0,react_.mdx)(reality_management_essentials_Alert, {
    mdxType: "Alert"
  }, (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Understanding the SAS URI")), (0,react_.mdx)("p", null, "Understanding the SAS URI is not required to use it for the API or tutorial.\nYou can learn more about Azure Storage SAS URI\u2019s\nfrom ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://learn.microsoft.com/en-us/azure/storage/common/storage-sas-overview#sas-token"
  }, "Microsoft\u2019s SAS token documentation"), "."))), (0,react_.mdx)(Section, {
    level: 2,
    mdxType: "Section"
  }, (0,react_.mdx)("h3", {
    "id": "upload-your-files-to-the-container"
  }, "Upload your files to the container"), (0,react_.mdx)("p", null, "Microsoft has several workflows available for uploading data to an Azure blob.\nExhaustively exploring these options is beyond this scope of this tutorial.\nHowever, we will point you to a couple of workflows that will allow you to upload the previously downloaded ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Scene"), " folder with as little friction as possible."), (0,react_.mdx)(Section, {
    level: 3,
    mdxType: "Section"
  }, (0,react_.mdx)("h4", {
    "id": "uploading-the-files-via-the-command-line"
  }, "Uploading the files via the command line"), (0,react_.mdx)("p", null, (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://learn.microsoft.com/en-us/azure/storage/common/storage-use-azcopy-v10"
  }, "AzCopy"), " is a command line tool that you can use to upload files to your storage account.\nThis is our recommended way to upload your files for the tutorial."), (0,react_.mdx)("p", null, "To upload your reality data files, follow these steps:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Ensure you have clicked the ", (0,react_.mdx)(SimpleLink, {
    href: '/tutorials/reality-management-essentials/#get-your-data-files',
    mdxType: "SimpleLink"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Download Data")), " button and unzipped the downloaded ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Scene"), " folder."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://learn.microsoft.com/en-us/azure/storage/common/storage-use-azcopy-v10#download-azcopy"
  }, "Download AzCopy"), "."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://learn.microsoft.com/en-us/azure/storage/common/storage-use-azcopy-v10#run-azcopy"
  }, "Run AzCopy"), " via the command line.\n", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "azcopy copy \"{path_to_downloaded_Scene_folder}\" \"{SAS_URI_from_the_previous_response}\" --recursive"))), (0,react_.mdx)("p", null, "Microsoft has an example in the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://learn.microsoft.com/en-us/azure/storage/common/storage-use-azcopy-v10#option-2-use-a-sas-token"
  }, "Use a SAS token"), " section of their ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://learn.microsoft.com/en-us/azure/storage/common/storage-use-azcopy-v10"
  }, "Get started with AzCopy"), " page.\nBe sure to at least read the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://learn.microsoft.com/en-us/azure/storage/common/storage-use-azcopy-v10#run-azcopy"
  }, "Run AzCopy"), " link. It points out restrictions on where you can run AzCopy.")), (0,react_.mdx)(Section, {
    level: 3,
    mdxType: "Section"
  }, (0,react_.mdx)("h4", {
    "id": "uploading-the-files-graphically"
  }, "Uploading the files graphically"), (0,react_.mdx)("p", null, "Microsoft has a desktop application called Azure Storage Explorer that you can download to have a\ngraphical experience of dragging and dropping your reality data files into your blob container."), (0,react_.mdx)("p", null, "To upload your reality data files using Azure Storage Explorer, follow these steps:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Ensure you have clicked the ", (0,react_.mdx)(SimpleLink, {
    href: '/tutorials/reality-management-essentials/#get-your-data-files',
    mdxType: "SimpleLink"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Download Data")), " button and unzipped the downloaded ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Scene"), " folder."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Download the application by going to Microsoft\u2019s ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://azure.microsoft.com/en-us/products/storage/storage-explorer/"
  }, "Azure Storage Explorer"), " website and selecting your operating system."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Once you have the application downloaded and open, you can follow Microsoft\u2019s instructions in the\n", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://learn.microsoft.com/en-us/azure/vs-azure-tools-storage-manage-with-storage-explorer?tabs=windows#attach-to-an-individual-resource"
  }, "Attach to an individual resource"), "\nand ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://learn.microsoft.com/en-us/azure/vs-azure-tools-storage-manage-with-storage-explorer?tabs=windows#shared-access-signature-sas-url"
  }, "Shared access signature (SAS) URL"), "\nsections of their ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://learn.microsoft.com/en-us/azure/vs-azure-tools-storage-manage-with-storage-explorer?tabs=windows"
  }, "Get started with Storage Explorer"), " page.\nThe resource you want to connect to should be \u201CBlob container\u201D (or something similarly named)."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After following Microsoft\u2019s instructions and connecting, drag and drop the\n", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Scene"), " folder into the container."))), (0,react_.mdx)(reality_management_essentials_Alert, {
    mdxType: "Alert"
  }, (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Programmatic options")), (0,react_.mdx)("p", null, "The above two options are easiest for uploading your reality model quickly.\nHowever, if you are attempting to programmatically upload a reality model in your\napplication, we recommend using Microsoft\u2019s Azure Blob Storage client\nlibraries. Microsoft has Azure Blob Storage client libraries for\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://learn.microsoft.com/en-us/azure/storage/blobs/storage-quickstart-blobs-dotnet?tabs=visual-studio%2Cmanaged-identity%2Croles-azure-portal%2Csign-in-azure-cli%2Cidentity-visual-studio"
  }, ".NET"), ",\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://learn.microsoft.com/en-us/azure/storage/blobs/storage-quickstart-blobs-java?tabs=powershell%2Cmanaged-identity%2Croles-azure-portal%2Csign-in-azure-cli"
  }, "Java"), ",\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://learn.microsoft.com/en-us/azure/storage/blobs/storage-quickstart-blobs-python?tabs=managed-identity%2Croles-azure-portal%2Csign-in-azure-cli"
  }, "Python"), ",\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://learn.microsoft.com/en-us/azure/storage/blobs/quickstart-blobs-javascript-browser"
  }, "JavaScript"), ",\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://learn.microsoft.com/en-us/azure/storage/blobs/quickstart-blobs-c-plus-plus?tabs=environment-variable-windows"
  }, "C++"), ",\nand\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://learn.microsoft.com/en-us/azure/storage/blobs/storage-quickstart-blobs-go?tabs=roles-azure-portal"
  }, "Go"), ".\nIf you are using a language that does not have a client library, check out the\nraw ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://learn.microsoft.com/en-us/rest/api/storageservices/blob-service-rest-api"
  }, "Azure Blob Storage REST\nAPI"), "."))), (0,react_.mdx)("h2", {
    "id": "query-your-created-reality-data"
  }, "Query your created reality data"), (0,react_.mdx)("p", null, "The Reality Management API exposes two endpoints you can use to query your reality data."), (0,react_.mdx)(Section, {
    level: 2,
    mdxType: "Section"
  }, (0,react_.mdx)("h3", {
    "id": "query-reality-data-associated-with-an-itwin"
  }, "Query reality data associated with an iTwin"), (0,react_.mdx)("p", null, "This endpoint returns the first 100 reality data associated with the iTwin specified in the request.\nIt only returns reality data that you have access to, relative to your organization\u2019s access rights."), (0,react_.mdx)("p", null, "To query all reality data associated with your iTwin, send a request to the get iTwin\u2019s reality data endpoint."), (0,react_.mdx)(reality_management_essentials_RequestLine, {
    method: "GET",
    path: "/reality-management/reality-data/?iTwinId={iTwinId}",
    href: "/apis/reality-management/operations/get-all-reality-data/",
    mdxType: "RequestLine"
  }), (0,react_.mdx)("p", null, "The example request includes the following parameters:"), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, (0,react_.mdx)("strong", {
    parentName: "th"
  }, "Parameter")), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, (0,react_.mdx)("strong", {
    parentName: "th"
  }, "Required")), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, (0,react_.mdx)("strong", {
    parentName: "th"
  }, "Description")))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "iTwinId"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "No"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "The ID of your iTwin. If you do not provide your iTwin ID, then the request instead returns the first 100 reality data that you have access to across all iTwins. ", (0,react_.mdx)("strong", {
    parentName: "td"
  }, "Reminder:"), " The ID is pre-populated in this tutorial if you clicked the ", (0,react_.mdx)(SimpleLink, {
    href: '/tutorials/reality-management-essentials/#create-an-itwin',
    mdxType: "SimpleLink"
  }, (0,react_.mdx)("strong", {
    parentName: "td"
  }, "Create an iTwin")), " button during setup.")))), (0,react_.mdx)(reality_management_essentials_Alert, {
    mdxType: "Alert"
  }, (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "More properties")), (0,react_.mdx)("p", null, "This step contains the bare minimum parameters required for this tutorial.\nMore parameters are available and detailed in the documentation for the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/reality-management/operations/get-all-reality-data/"
  }, "Get iTwin\u2019s reality data"), "\nendpoint.")), (0,react_.mdx)("h4", {
    "id": "get-itwins-reality-data-request-example"
  }, "Get iTwin\u2019s reality data request example"), (0,react_.mdx)(reality_management_essentials_ExecutableCodeBlock, {
    method: "GET",
    path: function path(data) {
      var _data$iTwinId2;
      return "/reality-management/reality-data/?iTwinId=".concat((_data$iTwinId2 = data.iTwinId) !== null && _data$iTwinId2 !== void 0 ? _data$iTwinId2 : '{iTwinId}');
    },
    headers: function headers(data) {
      var _data$accessToken3;
      return {
        Prefer: 'return=representation',
        Accept: 'application/vnd.bentley.itwin-platform.v1+json',
        Authorization: (_data$accessToken3 = data.accessToken) !== null && _data$accessToken3 !== void 0 ? _data$accessToken3 : 'Bearer TOKEN'
      };
    },
    handleResponse: function handleResponse(response, helpers) {
      if (response.status === 401) {
        {
          helpers === null || helpers === void 0 ? void 0 : helpers.toaster.negative((0,react_.mdx)("span", null, "Did you complete the ", (0,react_.mdx)("b", null, "Authorize your requests"), " step?"), {
            link: {
              onClick: function onClick() {
                window.open('/tutorials/reality-management-essentials/#authorize-your-requests', '_self');
              },
              title: 'Go to step'
            }
          });
        }
      }
      if (response.status === 422 && response.data.error.details.some(function (detail) {
        return detail.target === 'iTwinId';
      })) {
        helpers === null || helpers === void 0 ? void 0 : helpers.toaster.negative((0,react_.mdx)("span", null, "Did you complete the ", (0,react_.mdx)("b", null, "Create an iTwin"), " step?"), {
          link: {
            onClick: function onClick() {
              window.open('/tutorials/reality-management-essentials/#create-an-itwin', '_self');
            },
            title: 'Go to step'
          }
        });
      }
    },
    mdxType: "ExecutableCodeBlock"
  }), (0,react_.mdx)("p", null, "At this point, only the reality data you created during this tutorial should be listed.")), (0,react_.mdx)(Section, {
    level: 2,
    mdxType: "Section"
  }, (0,react_.mdx)("h3", {
    "id": "query-a-specific-reality-data"
  }, "Query a specific reality data"), (0,react_.mdx)("p", null, "This endpoint takes a reality data ID and returns that specific reality data."), (0,react_.mdx)("p", null, "To query a specific reality data, send a request to the get reality data metadata endpoint."), (0,react_.mdx)(reality_management_essentials_RequestLine, {
    method: "GET",
    path: "/reality-management/reality-data/{id}?iTwinId={iTwinId}",
    href: "/apis/reality-management/operations/get-reality-data-details/",
    mdxType: "RequestLine"
  }), (0,react_.mdx)("p", null, "The example request accepts the following parameters:"), (0,react_.mdx)("table", null, (0,react_.mdx)("thead", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "thead"
  }, (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, (0,react_.mdx)("strong", {
    parentName: "th"
  }, "Parameter")), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, (0,react_.mdx)("strong", {
    parentName: "th"
  }, "Required")), (0,react_.mdx)("th", {
    parentName: "tr",
    "align": null
  }, (0,react_.mdx)("strong", {
    parentName: "th"
  }, "Description")))), (0,react_.mdx)("tbody", {
    parentName: "table"
  }, (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "id"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "Yes"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "The ID of your reality data. ", (0,react_.mdx)("strong", {
    parentName: "td"
  }, "Reminder:"), " The ID is pre-populated in this tutorial if you completed the ", (0,react_.mdx)(SimpleLink, {
    href: '/tutorials/reality-management-essentials/#create-reality-data-request-example',
    mdxType: "SimpleLink"
  }, "Create reality data request example"), ".")), (0,react_.mdx)("tr", {
    parentName: "tbody"
  }, (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "iTwinId"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "No"), (0,react_.mdx)("td", {
    parentName: "tr",
    "align": null
  }, "The ID of your iTwin. It affects the permissions for querying the reality data as discussed in the ", (0,react_.mdx)("a", {
    parentName: "td",
    "href": "/apis/reality-management/operations/get-reality-data-details/"
  }, "Get reality data metadata"), " reference. ", (0,react_.mdx)("strong", {
    parentName: "td"
  }, "Reminder:"), " The ID is pre-populated in this tutorial if you clicked the ", (0,react_.mdx)(SimpleLink, {
    href: '/tutorials/reality-management-essentials/#create-an-itwin',
    mdxType: "SimpleLink"
  }, (0,react_.mdx)("strong", {
    parentName: "td"
  }, "Create an iTwin")), " button during setup.")))), (0,react_.mdx)("h4", {
    "id": "get-reality-data-metadata-request-example"
  }, "Get reality data metadata request example"), (0,react_.mdx)(reality_management_essentials_ExecutableCodeBlock, {
    method: "GET",
    path: function path(data) {
      var _data$realityDataId2, _data$iTwinId3;
      return "/reality-management/reality-data/".concat((_data$realityDataId2 = data.realityDataId) !== null && _data$realityDataId2 !== void 0 ? _data$realityDataId2 : '{id}', "?iTwinId=").concat((_data$iTwinId3 = data.iTwinId) !== null && _data$iTwinId3 !== void 0 ? _data$iTwinId3 : '{iTwinId}');
    },
    headers: function headers(data) {
      var _data$accessToken4;
      return {
        Accept: 'application/vnd.bentley.itwin-platform.v1+json',
        Authorization: (_data$accessToken4 = data.accessToken) !== null && _data$accessToken4 !== void 0 ? _data$accessToken4 : 'Bearer TOKEN'
      };
    },
    handleResponse: function handleResponse(response, helpers) {
      if (response.status === 401) {
        {
          helpers === null || helpers === void 0 ? void 0 : helpers.toaster.negative((0,react_.mdx)("span", null, "Did you complete the ", (0,react_.mdx)("b", null, "Authorize your requests"), " step?"), {
            link: {
              onClick: function onClick() {
                window.open('/tutorials/reality-management-essentials/#authorize-your-requests', '_self');
              },
              title: 'Go to step'
            }
          });
        }
      }
      if (response.status === 422 && response.data.error.details.some(function (detail) {
        return detail.target === 'id';
      })) {
        helpers === null || helpers === void 0 ? void 0 : helpers.toaster.negative((0,react_.mdx)("span", null, "Did you complete the ", (0,react_.mdx)("b", null, "Create a reality data"), " step?"), {
          link: {
            onClick: function onClick() {
              window.open('/tutorials/reality-management-essentials/#create-a-reality-data', '_self');
            },
            title: 'Go to step'
          }
        });
      }
      if (response.status === 422 && response.data.error.details.some(function (detail) {
        return detail.target === 'iTwinId';
      })) {
        helpers === null || helpers === void 0 ? void 0 : helpers.toaster.negative((0,react_.mdx)("span", null, "Did you complete the ", (0,react_.mdx)("b", null, "Create an iTwin"), " step?"), {
          link: {
            onClick: function onClick() {
              window.open('/tutorials/reality-management-essentials/#create-an-itwin', '_self');
            },
            title: 'Go to step'
          }
        });
      }
    },
    mdxType: "ExecutableCodeBlock"
  })), (0,react_.mdx)("h2", {
    "id": "visualize-your-newly-uploaded-reality-data"
  }, "Visualize your newly uploaded reality data"), (0,react_.mdx)("p", null, "After creating a reality data and uploading your reality model to its container, you can now visualize your reality data in an ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/web-application-quick-start/"
  }, "iTwin Viewer"), "."), (0,react_.mdx)("p", null, "Click ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "View Reality Data"), " to see the reality model you created in a Viewer."), (0,react_.mdx)(LinkButtonUsingTutorialData, {
    href: function href(data) {
      return "/my-itwins/".concat(data.iTwinId ? data.iTwinId : 'iTwinId', "/").concat(data.realityDataId ? data.realityDataId : 'realityDataId', "/reality-data-tutorial-viewer/");
    },
    handleTutorialStateValidation: function handleTutorialStateValidation(data, helpers) {
      var isValid = true;
      if (!data.realityDataId) {
        isValid = false;
        helpers === null || helpers === void 0 ? void 0 : helpers.toaster.negative((0,react_.mdx)("span", null, "Did you complete the ", (0,react_.mdx)("b", null, "Create a reality data"), " step?"), {
          link: {
            onClick: function onClick() {
              window.open('/tutorials/reality-management-essentials/#create-a-reality-data', '_self');
            },
            title: 'Go to step'
          }
        });
      }
      if (!data.iTwinId) {
        isValid = false;
        helpers === null || helpers === void 0 ? void 0 : helpers.toaster.negative((0,react_.mdx)("span", null, "Did you complete the ", (0,react_.mdx)("b", null, "Create an iTwin"), " step?"), {
          link: {
            onClick: function onClick() {
              window.open('/tutorials/reality-management-essentials/#create-an-itwin', '_self');
            },
            title: 'Go to step'
          }
        });
      }
      return isValid;
    },
    buttonText: "View Reality Data",
    mdxType: "LinkButtonUsingTutorialData"
  }), (0,react_.mdx)(reality_management_essentials_Alert, {
    type: "warning",
    mdxType: "Alert"
  }, (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Viewer Errors")), (0,react_.mdx)("p", null, "The reality data viewer will attempt to display helpful error messages if it detects a potential mistake.\nTo resolve some of the errors, please check the following:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Ensure that you have completed all steps of the tutorial ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "before"), " clicking the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "View Reality Data"), " button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Verify that the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "rootDocument"), " path specified during the ", (0,react_.mdx)(SimpleLink, {
    href: '/tutorials/reality-management-essentials/#create-a-reality-data',
    mdxType: "SimpleLink"
  }, " Create a reality data"), ' ', "step is still valid based on the structure of the files you uploaded during the ", (0,react_.mdx)(SimpleLink, {
    href: '/tutorials/reality-management-essentials/#upload-your-reality-model-to-the-reality-datas-container',
    mdxType: "SimpleLink"
  }, "Upload your reality model to the reality data\u2019s container"), " step."))), (0,react_.mdx)("p", null, "The official ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/sandboxes/iTwinPlatform/Reality%20Data"
  }, "Reality Data sample"), " provides an example on attaching and visualizing reality data in an iTwin Viewer.\nCheck out that sample, our ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/reference/core-frontend/views/displaystylestate/attachrealitymodel/"
  }, "iTwin.js documentation"), ",\nthe ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.npmjs.com/package/@itwin/reality-data-client"
  }, "@itwin/reality-data-client package"), ",\nand the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/reality-capture/tree/main/typescript/examples/web-app"
  }, "reality-capture web application"), "\nfor how to visualize your reality data in your own application."), (0,react_.mdx)(reality_management_essentials_Alert, {
    mdxType: "Alert"
  }, (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Reality Data Location")), (0,react_.mdx)("p", null, "If you are building your own iTwin Viewer application, it is helpful to know the location of your reality data. The sample reality data has the following coordinates (with longitude and latitude in degrees and height in meters):"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Longitude: 4.668735091306921", "\xB0"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Latitude: 45.265122669456325", "\xB0"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Height: 456.72571760937933 meters"))), (0,react_.mdx)("h2", {
    "id": "what-youve-learned"
  }, "What you\u2019ve learned"), (0,react_.mdx)("p", null, "In this tutorial, you should have learned:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "How to ", (0,react_.mdx)(SimpleLink, {
    href: '/tutorials/reality-management-essentials/#create-a-reality-data',
    mdxType: "SimpleLink"
  }, "Create a reality data"), ":", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Choose a ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "displayName"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Choose the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "type"), " from ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/reality-management/rm-rd-details/#types"
  }, "types table"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Include the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "rootDocument"), " path."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Execute the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/reality-management/operations/create-reality-data/"
  }, "Create reality data"), " request."))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "How to ", (0,react_.mdx)(SimpleLink, {
    href: '/tutorials/reality-management-essentials/#upload-your-reality-model-to-the-reality-datas-container',
    mdxType: "SimpleLink"
  }, "Upload your reality model to the reality data\u2019s container"), " to the reality data\u2019s container:", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Supply your reality data\u2019s ID and your iTwin\u2019s ID for the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/reality-management/operations/get-write-access-to-reality-data-container/"
  }, "Retrieve write access to reality data container"), " request."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Upload your reality data files using the command line, a graphical application, or programmatically."))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "How to ", (0,react_.mdx)(SimpleLink, {
    href: '/tutorials/reality-management-essentials/#query-your-created-reality-data',
    mdxType: "SimpleLink"
  }, "Query your created reality data"), " for your reality data(s)", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Query all reality data associated with your iTwin by providing your iTwin\u2019s ID to the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/reality-management/operations/get-all-reality-data/"
  }, "Get iTwin\u2019s reality data"), " endpoint."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Query a specific reality data by providing that reality data\u2019s ID and your iTwin\u2019s ID to the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/reality-management/operations/get-reality-data-details/"
  }, "Get reality data metadata"), " endpoint.")))), (0,react_.mdx)("p", null, "This tutorial provided the background knowledge required for you to:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Learn how to ", (0,react_.mdx)(SimpleLink, {
    href: '/tutorials/reality-management-essentials/#visualize-your-newly-uploaded-reality-data',
    mdxType: "SimpleLink"
  }, "Visualize your newly uploaded reality data"), " in an iTwin Viewer by checking out the official ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://www.itwinjs.org/sandboxes/iTwinPlatform/Reality%20Data"
  }, "Reality Data sample"), ".")), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(reality_management_essentials_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(reality_management_essentials_ResourceTile, {
    title: "Reality Management API",
    href: "/apis/reality-management/",
    description: "The reference documentation for the reality management API. Allows you to manage your reality data and is covered in this tutorial.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(reality_management_essentials_ResourceTile, {
    title: "Reality Modeling API",
    href: "/apis/contextcapture/",
    description: "The reference documentation for the reality modeling API. Allows you to turn images and point clouds into reality meshes, orthophotos and others.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(reality_management_essentials_ResourceTile, {
    title: "Reality Analysis API",
    href: "/apis/realitydataanalysis/",
    description: "The reference documentation for the reality analysis API. Allows you to run AI/ML on photos, maps, meshes or point clouds.",
    mdxType: "ResourceTile"
  })));
}
;
reality_management_essentials_MDXContent.isMDXComponent = true;
var reality_management_essentials_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "before-you-begin",
    level: 2,
    title: "Before you begin",
    children: []
  }, {
    id: "set-up-your-tutorial-environment",
    level: 2,
    title: "Set up your tutorial environment",
    children: [{
      id: "authorize-your-requests",
      level: 3,
      title: "Authorize your requests",
      children: []
    }, {
      id: "create-an-itwin",
      level: 3,
      title: "Create an iTwin",
      children: []
    }, {
      id: "get-your-data-files",
      level: 3,
      title: "Get your data files",
      children: []
    }]
  }, {
    id: "create-a-reality-data",
    level: 2,
    title: "Create a reality data",
    children: [{
      id: "create-reality-data-request-example",
      level: 3,
      title: "Create reality data request example",
      children: []
    }]
  }, {
    id: "upload-your-reality-model-to-the-reality-datas-container",
    level: 2,
    title: "Upload your reality model to the reality data’s container",
    children: [{
      id: "get-your-reality-datas-container",
      level: 3,
      title: "Get your reality data’s container",
      children: []
    }, {
      id: "upload-your-files-to-the-container",
      level: 3,
      title: "Upload your files to the container",
      children: []
    }]
  }, {
    id: "query-your-created-reality-data",
    level: 2,
    title: "Query your created reality data",
    children: [{
      id: "query-reality-data-associated-with-an-itwin",
      level: 3,
      title: "Query reality data associated with an iTwin",
      children: []
    }, {
      id: "query-a-specific-reality-data",
      level: 3,
      title: "Query a specific reality data",
      children: []
    }]
  }, {
    id: "visualize-your-newly-uploaded-reality-data",
    level: 2,
    title: "Visualize your newly uploaded reality data",
    children: []
  }, {
    id: "what-youve-learned",
    level: 2,
    title: "What you’ve learned",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var reality_management_essentials_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/realitydata-api-quick-start.mdx


var realitydata_api_quick_start_excluded = ["components"];
var realitydata_api_quick_start_jsx = (external_react_default()).createElement;


var realitydata_api_quick_start_readingTime = {
  "text": "14 min read",
  "minutes": 13.055,
  "time": 783300,
  "words": 2611
};
/* @jsxRuntime classic */
/* @jsx mdx */

var realitydata_api_quick_start_metadata = {
  title: 'Get started with RealityData API',
  tile: {
    name: 'Get started with RealityData API',
    description: 'This tutorial is an introduction to RealityData API, explaining the basic workflows.',
    thumbnail: '/images/realitydata-quick-start-thumb.png',
    href: '/tutorials/realitydata-api-quick-start/',
    durationInMinutes: 30,
    relatedApiIds: ['realitydata']
  }
};
var realitydata_api_quick_start_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var realitydata_api_quick_start_Introduction = realitydata_api_quick_start_makeShortcode("Introduction");
var realitydata_api_quick_start_Alert = realitydata_api_quick_start_makeShortcode("Alert");
var realitydata_api_quick_start_TutorialSection = realitydata_api_quick_start_makeShortcode("TutorialSection");
var realitydata_api_quick_start_LinkButton = realitydata_api_quick_start_makeShortcode("LinkButton");
var realitydata_api_quick_start_PostmanIcon = realitydata_api_quick_start_makeShortcode("PostmanIcon");
var realitydata_api_quick_start_CreateNativeAppButton = realitydata_api_quick_start_makeShortcode("CreateNativeAppButton");
var realitydata_api_quick_start_Title = realitydata_api_quick_start_makeShortcode("Title");
var realitydata_api_quick_start_CodeBlock = realitydata_api_quick_start_makeShortcode("CodeBlock");
var realitydata_api_quick_start_ContinueLearningSection = realitydata_api_quick_start_makeShortcode("ContinueLearningSection");
var realitydata_api_quick_start_TileList = realitydata_api_quick_start_makeShortcode("TileList");
var realitydata_api_quick_start_Tile = realitydata_api_quick_start_makeShortcode("Tile");
var realitydata_api_quick_start_ResourceTile = realitydata_api_quick_start_makeShortcode("ResourceTile");
var realitydata_api_quick_start_layoutProps = {
  metadata: realitydata_api_quick_start_metadata
};
var realitydata_api_quick_start_MDXLayout = "wrapper";
function realitydata_api_quick_start_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, realitydata_api_quick_start_excluded);
  return (0,react_.mdx)(realitydata_api_quick_start_MDXLayout, (0,esm_extends/* default */.Z)({}, realitydata_api_quick_start_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(realitydata_api_quick_start_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "30",
    summaryImageSrc: "/unreal-docs-site/static/images/realitydata-quick-start.jpg",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "The RealityData API provides you the ability to manage and share reality models. This tutorial will help you get started using the RealityData API."), (0,react_.mdx)("p", null, "This tutorial will guide you through:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Creating, modifying and deleting RealityData."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Associating and dissociating a RealityData to a Project."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Uploading and downloading reality models to RealityData.")), (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A reality model, such as a ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, ".3mx"), " file."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Project created.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "To learn more, see the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-and-query-projects-guide/"
  }, "create and query projects guide"), ".", (0,react_.mdx)(realitydata_api_quick_start_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "The created project must have a role that contains the", ' ', (0,react_.mdx)("b", null, "RDS_ASSIGN, RDS_CREATE, RDS_MANAGE and RDS_USE"), " permissions, assigned to yourself. A project created through the Projects API should give you the necessary permissions automatically. For more information on managing projects, you may consult the [Projects API](/apis/projects/overview/).")))))), (0,react_.mdx)(realitydata_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitydata_api_quick_start_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(realitydata_api_quick_start_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "suggested-tools"
  }, "Suggested Tools"), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpswwwpostmancomdownloads-target_blankpostmana"
  }, (0,react_.mdx)("a", {
    href: "https://www.postman.com/downloads/",
    target: "_blank"
  }, "Postman")), (0,react_.mdx)("p", null, "To test the REST API calls directly, use ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.postman.com/downloads/"
  }, "Postman"), " or any other solution capable of sending HTTP requests. If you do it this way, you will require an authorization token for the requests to work. See the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Get a token"), " section below for more information.")), (0,react_.mdx)(realitydata_api_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(realitydata_api_quick_start_CreateNativeAppButton, {
      tooltip: "Register basic Desktop/Mobile App for this tutorial",
      clientName: "RealityData Quick Start Tutorial",
      scopes: ["realitydata:read", "realitydata:modify"],
      mdxType: "CreateNativeAppButton"
    }, "Register Application")],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. For this tutorial, a Desktop/Mobile Application is recommended. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first Desktop/Mobile application. This allows you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your Desktop/Mobile application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, a few lines of code is displayed under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - the unique identifier for your application. It is displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. It is displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where to return users after logging out. It is displayed on the application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. It is displayed on the application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nSelect the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Digital Twin Management"), " and ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Visualization"), " API associations\nand verify that the following scopes are present under ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Allowed scopes"), " : ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "realitydata:read realitydata:modify")))), (0,react_.mdx)(realitydata_api_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a Token"), (0,react_.mdx)("p", null, "To make request to the API, a user token is needed. There are several ways to get it. You can consult the Authorization API documentation ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "here"), ",\nand you can use a sample powershell script ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/platform-api-samples/tree/main/Authorization"
  }, "here"), " to use in your app.")), (0,react_.mdx)(realitydata_api_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example HTTP Request for POST RealityData Operation"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/realitydata HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nAccept: application/vnd.bentley.v1+json\nContent-Type: application/json\n\n {\n    \"projectId\": \"d8414d06-560e-49da-81a5-f7204fa4457b\",\n    \"realityData\": {\n        \"displayName\": \"Name of the reality data to create\",\n        \"classification\": \"Model\",\n        \"type\": \"3mx\",\n        \"description\": \"Description of the reality data\",\n        \"dataset\": \"Dataset\",\n        \"group\": \"GroupId\",\n        \"rootDocument\": \"Models/Scene/myModel.3mx\",\n        \"acquisition\": {\n            \"startDateTime\": \"2021-05-12T20:03:12Z\",\n            \"endDateTime\": \"2021-05-15T05:07:18Z\",\n            \"acquirer\": \"Data Acquisition Inc.\"\n        },\n        \"extent\": {\n            \"southWest\": {\n                \"latitude\": 40.0206,\n                \"longitude\": -75.6355\n            },\n            \"northEast\": {\n                \"latitude\": 40.0356,\n                \"longitude\": -75.6059\n            }\n        },\n        \"authoring\": false\n    }\n  }\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Headers"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\nContent-Length: 112\nRequest-Context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 2b59e2ac-3e89-42bf-9678-2717b395c5bf\nX-ITwinPlatform-Media-Type: bentley.itwin-platform.v1\nX-ITwinPlatform-Region: East US\nDate: Mon, 04 Oct 2021 20:51:49 GMT",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Body"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n    \"realityData\": {\n        \"id\": \"95d8dccd-d89e-4287-bb5f-3219acbc71ae\",\n        \"displayName\": \"Name of the reality data to create\",\n        \"dataset\": \"Dataset\",\n        \"group\": \"GroupId\",\n        \"description\": \"Description of reality data\",\n        \"rootDocument\": \"Models/Scene/myModel.3mx\",\n        \"size\": 0,\n        \"classification\": \"Model\",\n        \"type\": \"3mx\",\n        \"acquisition\": {\n            \"startDateTime\": \"2021-05-12T20:03:12Z\",\n            \"endDateTime\": \"2021-05-15T05:07:18Z\",\n            \"acquirer\": \"Data Acquisition Inc.\"\n        },\n         \"extent\": {\n            \"southWest\": {\n                \"latitude\": 40.0206,\n                \"longitude\": -75.6355\n            },\n            \"northEast\": {\n                \"latitude\": 40.0356,\n                \"longitude\": -75.6059\n            }\n        },\n        \"authoring\": false,\n        \"accessControl\": \"Project\",\n        \"dataCenterLocation\": \"North Europe\",\n        \"modifiedDateTime\": \"2021-04-09T19:03:12Z\",\n        \"lastAccessedDateTime\": \"2021-04-09T00:00:00Z\",\n        \"createdDateTime\": \"2021-02-22T20:03:40Z\"\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-create-a-realitydata"
  }, "3. Create a RealityData"), (0,react_.mdx)("p", null, "While using the RealityData API, you will mainly work with ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "RealityData"), " objects. The class defines properties that describe the content of the\nreality data and provides an access point to the data stored in a blob container, using Microsoft Azure Storage technologies."), (0,react_.mdx)("p", null, (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "RealityData"), " properties represent the descriptive data related to a reality data. In addition to this, reality data content is stored as files and folders within a blob container uniquely associated to this reality data.\nIndividual files and folders follow, from the root of the reality data, a normal file tree structure."), (0,react_.mdx)("p", null, "Use a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "POST https://api.bentley.com/realitydata"), " HTTP request to create a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "RealityData"), "."), (0,react_.mdx)("p", null, "Currently, the required properties for creating a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "RealityData"), " are:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "DisplayName"), " : Name of the RealityData"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Classification"), " e.g. \u201CModel\u201D"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Type"), " e.g. \u201C3mx\u201D")), (0,react_.mdx)("p", null, "Upon successfully creating a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "RealityData"), ", the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " property will be generated, and it is used as it\u2019s unique identifier.")), (0,react_.mdx)(realitydata_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example HTTP Request for Get RealityData Container Operation"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com//realitydata/69401bde-6200-4c6c-b783-046f1935e825/container/?projectId=615f57e7-876e-46fc-ab11-79af30cae299&access=Write HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nAccept: application/vnd.bentley.v1+json\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Headers"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\nCache-Control: must-revalidate, no-cache, private\nPragma: no-cache\nTransfer-Encoding: chunked\nContent-Type: application/json\nContent-Encoding: gzip\nETag: \"KtH8hBTTkTuyVh8/AjJ/wdYPRZ4=\"\nVary: Accept-Encoding\nRequest-Context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nStrict-Transport-Security: max-age=63072000\nMas-Server: Bentley-WSG/4.0.13,Bentley-WebAPI/2.9\nX-Correlation-ID: dfab9114-7a6c-4cfe-bed0-c03720278dd9\nMas-Request-Id: dfab9114-7a6c-4cfe-bed0-c03720278dd9\nSet-Cookie: {...}\nX-ITwinPlatform-Media-Type: bentley.itwin-platform.v1\nX-ITwinPlatform-Region: East US\nDate: Mon, 04 Oct 2021 20:56:34 GMT",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Body"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n    \"container\": {\n        \"type\": \"AzureBlobSasUrl\",\n        \"permissions\": \"Write\",\n        \"_links\": {\n            \"containerUrl\": {\n                \"href\": \"https://realityblobdeveussa01.blob.core.windows.net/69401bde-6200-4c6c-b783-046f1935e825?sv=2020-08-04&se=2021-09-09T07%3A45%3A15Z&sr=c&sp=rl&sig=FiYaKr5m%2FPlev%2FwsOIpopyyCbJC3lbRKwhA3be2SQh8%3D\"\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "31-upload-a-reality-model"
  }, "3.1 Upload a Reality Model"), (0,react_.mdx)("p", null, "Once your realityData is created, you may attach a reality model. The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GET https://api.bentley.com/realitydata/{id}/container/?projectId={projectId}&access=Write"), "\nHTTP request will provide you with a SAS URL with write access."), (0,react_.mdx)("p", null, "In order to use this resource, consult the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview"
  }, "Microsoft Documentation")), (0,react_.mdx)("p", null, "Alternatively, if you do not have a reality model yet and want to generate your own reality model, you may be interested in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/contextcapture-api-quick-start"
  }, "Reality Modeling")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, "In order to visualize your Reality Model later on by using an\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/itwin-viewer-hello-world/"
  }, "iTwin Viewer"), ", the created RealityData must have a valid ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "rootDocument"), " value."))), (0,react_.mdx)(realitydata_api_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example HTTP Request for Get RealityData Operation"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/realitydata?projectId=ec002f93-f0c1-4ab3-a407-351848eba233&$top=2 HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nAccept: application/vnd.bentley.v1+json\nPrefer: return=representation\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Headers"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\nCache-Control: must-revalidate, no-cache, private\nPragma: no-cache\nTransfer-Encoding: chunked\nContent-Type: application/json\nContent-Encoding: gzip\nETag: \"HwjuhwwP78X3/dL8Efxr36UHJPc=\"\nVary: Accept-Encoding\nRequest-Context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nStrict-Transport-Security: max-age=63072000\nMas-Server: Bentley-WSG/4.0.13,Bentley-WebAPI/2.9\nX-Correlation-ID: c6c00c24-e37e-4b30-a070-bd7e8b6090b2\nMas-Request-Id: c6c00c24-e37e-4b30-a070-bd7e8b6090b2\nSet-Cookie: {...}\nX-ITwinPlatform-Media-Type: bentley.itwin-platform.v1\nX-ITwinPlatform-Region: East US\nDate: Mon, 04 Oct 2021 21:01:28 GMT",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Body"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n    \"realityData\": [\n        {\n            \"id\": \"4cc193e4-07a7-4ec8-8750-93c68b34cb11\",\n            \"displayName\": \"A random RealityData Display Name\",\n            \"dataset\": \"Dataset\",\n            \"group\": \"xxx\",\n            \"description\": \"Lorem ipsum...\",\n            \"rootDocument\": \"Graz/Scene/Graz.3mx\",\n            \"size\": 444055,\n            \"classification\": \"Model\",\n            \"type\": \"3mx\",\n            \"extent\": {\n                \"southWest\": {\n                    \"latitude\": 50.1171,\n                    \"longitude\": -122.9543\n                },\n                \"northEast\": {\n                    \"latitude\": 50.1172,\n                    \"longitude\": -122.9543\n                }\n            },\n            \"acquisition\": {},\n            \"accessControl\": \"Project\",\n            \"dataCenterLocation\": \"North Europe\",\n            \"modifiedDateTime\": \"2017-05-10T13:43:03Z\",\n            \"lastAccessedDateTime\": \"2021-08-11T00:00:00Z\",\n            \"createdDateTime\": \"2017-05-10T13:43:03Z\"\n        },\n        {\n            \"id\": \"a649f5f9-4c2d-4b2d-8ac0-0ba38d53727c\",\n            \"displayName\": \"A second RealityData's Display Name\",\n            \"dataset\": \"Dataset\",\n            \"group\": \"xxx\",\n            \"description\": \"Lorem ipsum...\",\n            \"rootDocument\": \"Graz/Scene/Graz.3mx\",\n            \"size\": 739560,\n            \"classification\": \"Model\",\n            \"type\": \"3mx\",\n            \"extent\": {\n                \"southWest\": {\n                    \"latitude\": 50.1171,\n                    \"longitude\": -122.9543\n                },\n                \"northEast\": {\n                    \"latitude\": 50.1172,\n                    \"longitude\": -122.9543\n                }\n            },\n            \"acquisition\": {},\n            \"accessControl\": \"Project\",\n            \"dataCenterLocation\": \"North Europe\",\n            \"modifiedDateTime\": \"2017-05-10T13:43:03Z\",\n            \"lastAccessedDateTime\": \"2021-08-11T00:00:00Z\",\n            \"createdDateTime\": \"2017-05-10T13:43:03Z\"\n        }\n      ],\n         \"_links\": {\n        \"next\": {\n            \"href\": \"https://api.bentley.com/realitydata?projectId=ec002f93-f0c1-4ab3-a407-351848eba233&continuationToken=eyJ0b3AiOjUwMCwic2tpcCI6NTAwfQ\"\n        }\n    }\n }",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-get-realitydata"
  }, "4. Get RealityData"), (0,react_.mdx)("p", null, "There are a few ways to query your RealityData. Depending on the app you are developing, one might be more useful than another. You may want to get a single RealityData or multiple ones."), (0,react_.mdx)("p", null, "Once you have created RealityData, the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GET https://api.bentley.com/realitydata"), " request will be the route to use in order to get your created RealityData. Using this call as is will return the first 100 RealityData that you have access to, relatively to your organization\u2019s access rights."), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GET https://api.bentley.com/realitydata/?projectId={projectId}"), " request will return the first 100 RealityData under the given project, relatively to the project\u2019s access rights. provided you have access to it. A continuation token is provided for further querying."), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GET https://api.bentley.com/realitydata/{id}"), " request will only return the RealityData with the given identifier, provided that you have access to it."), (0,react_.mdx)("h3", {
    "id": "41-tailoring-realitydata-requests"
  }, "4.1 Tailoring RealityData Requests"), (0,react_.mdx)("p", null, "Optional parameters are available to customize RealityData requests :"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "projectId"), " : project Identifier"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "continuationToken"), " to get more RealityData on the current query"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "$top"), " to query a number of realityData to get in each page"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "extent"), " to query RealityData in a definite area to search.")), (0,react_.mdx)("p", null, "You may refer to the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/reality-data/operations/get-all-reality-data/"
  }, "RealityData API Documentation"), " for more information on parameters described above."), (0,react_.mdx)("p", null, "When querying multiple RealiyData, the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Prefer: return=representation"), " header will instruct the API to return all properties on every realityData. Otherwise, only minimal information\nwill be returned, such as ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "type"), ".")), (0,react_.mdx)(realitydata_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example HTTP Request for Get RealityData Container Operation"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com//realitydata/69401bde-6200-4c6c-b783-046f1935e825/container/?projectId=615f57e7-876e-46fc-ab11-79af30cae299&access=Write HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nAccept: application/vnd.bentley.v1+json\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Headers"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\nCache-Control: must-revalidate, no-cache, private\nPragma: no-cache\nTransfer-Encoding: chunked\nContent-Type: application/json\nContent-Encoding: gzip\nETag: \"33/0jngG83tl3Zu9AbB+KRdpL34=\"\nVary: Accept-Encoding\nRequest-Context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nStrict-Transport-Security: max-age=63072000\nMas-Server: Bentley-WSG/4.0.13,Bentley-WebAPI/2.9\nX-Correlation-ID: 81cc9899-faac-4d84-9149-6bcc26460e1d\nMas-Request-Id: 81cc9899-faac-4d84-9149-6bcc26460e1d\nSet-Cookie: {...}\nX-ITwinPlatform-Media-Type: bentley.itwin-platform.v1\nX-ITwinPlatform-Region: East US\nDate: Mon, 04 Oct 2021 21:04:45 GMT",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Body"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n    \"container\": {\n        \"type\": \"AzureBlobSasUrl\",\n        \"permissions\": \"Read\",\n        \"_links\": {\n            \"containerUrl\": {\n                \"href\": \"https://realityblobdeveussa01.blob.core.windows.net/69401bde-6200-4c6c-b783-046f1935e825?sv=2020-08-04&se=2021-09-09T07%3A45%3A15Z&sr=c&sp=rl&sig=FiYaKr5m%2FPlev%2FwsOIpopyyCbJC3lbRKwhA3be2SQh8%3D\"\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "42-visualize-your-reality-model"
  }, "4.2 Visualize your Reality Model"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GET https://api.bentley.com/realitydata/{id}/container/?projectId={projectId}&permissions=Read"), " request will provide you with a SAS URL with read access.\nThis will let you download the content of your RealityData."), (0,react_.mdx)("p", null, "You may want to consult this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/sandboxes/iTwinPlatform/Reality%20Data"
  }, "iTwinjs sample"), "\nfor a quick example to display your reality model.")), (0,react_.mdx)(realitydata_api_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example HTTP Request for PATCH RealityData Operation"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "http",
      code: "PATCH https://api.bentley.com/realitydata/69401bde-6200-4c6c-b783-046f1935e825 HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nAccept: application/vnd.bentley.v1+json\nContent-Type: application/json\n\n{\n    \"projectId\" : \"615f57e7-876e-46fc-ab11-79af30cae299\",\n    \"realityData\":\n    {\n        \"id\": \"69401bde-6200-4c6c-b783-046f1935e825\",\n        \"displayName\": \"Modified displayname\",\n        \"dataset\": \"Dataset\",\n        \"group\": \"xxx\",\n        \"description\": \"Lorem ipsum 2...\",\n        \"classification\": \"Model\",\n        \"type\": \"3mx\"\n    }\n}\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Headers"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\nCache-Control: must-revalidate, no-cache, private\nPragma: no-cache\nTransfer-Encoding: chunked\nContent-Type: application/json\nContent-Encoding: gzip\nVary: Accept-Encoding\nRequest-Context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nStrict-Transport-Security: max-age=63072000\nMas-Server: Bentley-WSG/4.0.13,Bentley-WebAPI/2.9\nX-Correlation-ID: 7c55d6fd-173d-4af5-a9cc-b488077442ae\nMas-Request-Id: 7c55d6fd-173d-4af5-a9cc-b488077442ae\nSet-Cookie: {...}\nX-ITwinPlatform-Media-Type: bentley.itwin-platform.v1\nX-ITwinPlatform-Region: East US\nDate: Mon, 04 Oct 2021 21:40:30 GMT",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Body"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n    \"realityData\": {\n        \"id\": \"69401bde-6200-4c6c-b783-046f1935e825\",\n        \"displayName\": \"Modified displayname\",\n        \"dataset\": \"Dataset\",\n        \"group\": \"xxx\",\n        \"description\": \"Lorem ipsum 2...\",\n        \"size\": 0,\n        \"classification\": \"Model\",\n        \"type\": \"3mx\",\n        \"authoring\": false,\n        \"extent\": {\n            \"southWest\": {\n                \"latitude\": 50.1171,\n                \"longitude\": -122.9543\n            },\n            \"northEast\": {\n                \"latitude\": 50.1172,\n                \"longitude\": -122.9543\n            }\n        },\n        \"acquisition\": {},\n        \"accessControl\": \"Project\",\n        \"dataCenterLocation\": \"North Europe\",\n        \"modifiedDateTime\": \"2021-09-08T18:00:47Z\",\n        \"lastAccessedDateTime\": \"2021-09-08T14:32:14Z\",\n        \"createdDateTime\": \"2021-09-08T14:32:14Z\"\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-modify-realitydata"
  }, "5. Modify RealityData"), (0,react_.mdx)("p", null, (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "RealityData"), " properties may be modified at will, provided you have sufficient permissions within the Project you are using or if you are the owner of the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "RealityData"), ".\nUse a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "PATCH https://api.bentley.com/realitydata/{id}"), " HTTP request to modify an existing ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "RealityData"), "."), (0,react_.mdx)("p", null, "Refer to the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/reality-data/rd-details/"
  }, "RealityData Properties"), " page of the documentation for the detailed list of properties you can use and modify.")), (0,react_.mdx)(realitydata_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example HTTP Request for Get RealityData Container Operation"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com//realitydata/69401bde-6200-4c6c-b783-046f1935e825/container/?projectId=615f57e7-876e-46fc-ab11-79af30cae299&access=Write HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nAccept: application/vnd.bentley.v1+json\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Headers"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\nCache-Control: must-revalidate, no-cache, private\nPragma: no-cache\nTransfer-Encoding: chunked\nContent-Type: application/json\nContent-Encoding: gzip\nETag: \"33/0jngG83tl3Zu9AbB+KRdpL34=\"\nVary: Accept-Encoding\nRequest-Context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nStrict-Transport-Security: max-age=63072000\nMas-Server: Bentley-WSG/4.0.13,Bentley-WebAPI/2.9\nX-Correlation-ID: 81cc9899-faac-4d84-9149-6bcc26460e1d\nMas-Request-Id: 81cc9899-faac-4d84-9149-6bcc26460e1d\nSet-Cookie: {...}\nX-ITwinPlatform-Media-Type: bentley.itwin-platform.v1\nX-ITwinPlatform-Region: East US\nDate: Mon, 04 Oct 2021 21:04:45 GMT",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Body"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n    \"container\": {\n        \"type\": \"AzureBlobSasUrl\",\n        \"permissions\": \"Write\",\n        \"_links\": {\n            \"containerUrl\": {\n                \"href\": \"https://realityblobdeveussa01.blob.core.windows.net/69401bde-6200-4c6c-b783-046f1935e825?sv=2020-08-04&se=2021-09-09T07%3A45%3A15Z&sr=c&sp=rl&sig=FiYaKr5m%2FPlev%2FwsOIpopyyCbJC3lbRKwhA3be2SQh8%3D\"\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "51-modify-your-reality-model"
  }, "5.1 Modify your Reality Model"), (0,react_.mdx)("p", null, "You can refer to section 3.1 of this guide as it is the same operation, the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GET https://api.bentley.com/realitydata/{id}/container/?projectId={projectId}&access=Write"), "\nrequest will provide you with a SAS URL with write access. From there, you may change the content of the reality model.")), (0,react_.mdx)(realitydata_api_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-manage-realitydata-relations-to-multiple-projects"
  }, "6. Manage RealityData Relations to Multiple Projects"), (0,react_.mdx)("p", null, "Depending on the purpose of your reality model, you may find useful to have your reality model, therefore it\u2019s ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "RealityData"), ", to be available across multiple projects.\nThe ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "RealityData"), " API leverages the strengths of the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/projects/"
  }, "Projects API"), " to make your model available to others."), (0,react_.mdx)("p", null, "Two actions are possible:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Associating a RealityData to a Project"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Dissociating a RealityData to a Project"))), (0,react_.mdx)(realitydata_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example HTTP Request for Associate RealityData Operation"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "http",
      code: "PUT https://api.bentley.com/realitydata/69401bde-6200-4c6c-b783-046f1935e825/projects/615f57e7-876e-46fc-ab11-79af30cae299 HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nAccept: application/vnd.bentley.v1+json\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Headers"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\nContent-Length: 112\nRequest-Context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 2b59e2ac-3e89-42bf-9678-2717b395c5bf\nX-ITwinPlatform-Media-Type: bentley.itwin-platform.v1\nX-ITwinPlatform-Region: East US\nDate: Mon, 04 Oct 2021 20:51:49 GMT",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Body"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n        \"projectAssociation\": \n        {\n          \"id\": \"69401bde-6200-4c6c-b783-046f1935e825\",\n          \"projectId\": \"615f57e7-876e-46fc-ab11-79af30cae299\"\n        }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "61-associate-realitydata-to-a-project"
  }, "6.1 Associate RealityData to a Project"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "PUT https://api.bentley.com/realitydata/{id}/projects/{projectId}"), " http request will add an association to the desired project, illustrated by ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "projectAssociation"), ".")), (0,react_.mdx)(realitydata_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example HTTP Request for Dissociate RealityData Operation"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "http",
      code: "DELETE https://api.bentley.com/realitydata/69401bde-6200-4c6c-b783-046f1935e825/projects/615f57e7-876e-46fc-ab11-79af30cae299 HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nAccept: application/vnd.bentley.v1+json\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Headers"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 204 No Content\nContent-Length: 0\nRequest-Context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 07b4d6c4-6f05-492c-9b59-3bc382d4de76\nX-ITwinPlatform-Media-Type: bentley.itwin-platform.v1\nX-ITwinPlatform-Region: East US\nDate: Tue, 05 Oct 2021 14:57:12 GMT",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "62-dissociate-realitydata-from-a-project"
  }, "6.2 Dissociate RealityData from a Project"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "DELETE https://api.bentley.com/realitydata/{id}/projects/{projectId}"), " http request will remove an association from the desired project.")), (0,react_.mdx)(realitydata_api_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example HTTP Request for Delete RealityData Operation"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "http",
      code: "DELETE https://api.bentley.com/realitydata/69401bde-6200-4c6c-b783-046f1935e825 HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nAccept: application/vnd.bentley.v1+json\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitydata_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Headers"), (0,react_.mdx)(realitydata_api_quick_start_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 204 No Content\nContent-Length: 0\nRequest-Context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 8c9990c0-c305-42b3-bd44-db295c80dfbd\nX-ITwinPlatform-Media-Type: bentley.itwin-platform.v1\nX-ITwinPlatform-Region: East US\nDate: Tue, 05 Oct 2021 14:59:32 GMT",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "7-delete-realitydata"
  }, "7. Delete RealityData"), (0,react_.mdx)("p", null, "Once your RealityData is no longer needed, you may delete it with the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "DELETE https://api.bentley.com/realitydata/{id}"), " HTTP request. Upon receiving a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "204 No Content"), " response,\nwhich indicates a successful deletion, the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "RealityData"), " resource along with it\u2019s reality model will be deleted. There is no need to manually delete the reality model\nby using GET container http requests with the Write permission."), (0,react_.mdx)(realitydata_api_quick_start_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "If your RealityData is associated to more than one Project, you must first dissociate it from every project, except one. See section 6.2. Note that you must have sufficient rights within the project to delete RealityData."), (0,react_.mdx)(realitydata_api_quick_start_Alert, {
    type: "warning",
    mdxType: "Alert"
  }, "The RealityData API does not support a 'recycle bin' feature. Deleting a RealityData results in immediate deletion of the reality model and it cannot be recovered.")), (0,react_.mdx)(realitydata_api_quick_start_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)("p", null, "Congratulations for completing the RealityData API tutorial! You now have the necessary knowledge to use the RealityData API.\nTo go further and use the RealityData API to its full potential, you can have a look at the following related tutorials."), (0,react_.mdx)(realitydata_api_quick_start_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(realitydata_api_quick_start_Tile, {
    name: "Get started with Reality Modeling API",
    description: "This tutorial is an introduction to Reality Modeling API, explaining the basic workflows.",
    thumbnail: "/unreal-docs-site/static/images/cccs-quick-start-thumb.jpg",
    href: "/tutorials/contextcapture-api-quick-start",
    mdxType: "Tile"
  }), (0,react_.mdx)(realitydata_api_quick_start_Tile, {
    name: "Get started with Reality Analysis API",
    description: "This tutorial is an introduction to Reality Analysis API, explaining the basic workflows.",
    thumbnail: "/unreal-docs-site/static/images/rda/quick-start-thumb.jpg",
    href: "/tutorials/realitydataanalysis-api-quick-start",
    mdxType: "Tile"
  }), (0,react_.mdx)(realitydata_api_quick_start_Tile, {
    name: "Reality Data",
    description: "Adding, removing, and modifying the display of reality data. Discovers available realitymodel and attaches the first one to the viewport.",
    thumbnail: "/unreal-docs-site/static/images/samples/reality-data-thumbnail.png",
    href: "https://www.itwinjs.org/sandboxes/iTwinPlatform/Reality%20Data",
    mdxType: "Tile"
  })), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More Resources that you may like"), (0,react_.mdx)(realitydata_api_quick_start_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(realitydata_api_quick_start_ResourceTile, {
    title: "Reality Data API",
    href: "/apis/reality-data/overview/",
    description: "Complete Reality Data API documentation.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(realitydata_api_quick_start_ResourceTile, {
    title: "Reality Data Client",
    href: "https://www.itwinjs.org/reference/reality-data-client/",
    description: "Typescript Client provided by itwin.js to facilitate the use the Reality Data API.",
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(realitydata_api_quick_start_ResourceTile, {
    title: "Reality Data client Npm Package",
    href: "https://www.npmjs.com/package/@bentley/reality-data-client",
    description: "Npm Package containing client wrappers for sending requests to the RealityData API.",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
realitydata_api_quick_start_MDXContent.isMDXComponent = true;
var realitydata_api_quick_start_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: [{
      id: "suggested-tools",
      level: 3,
      title: "Suggested Tools",
      children: []
    }]
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a Token",
    children: []
  }, {
    id: "3-create-a-realitydata",
    level: 2,
    title: "3. Create a RealityData",
    children: [{
      id: "31-upload-a-reality-model",
      level: 3,
      title: "3.1 Upload a Reality Model",
      children: []
    }]
  }, {
    id: "4-get-realitydata",
    level: 2,
    title: "4. Get RealityData",
    children: [{
      id: "41-tailoring-realitydata-requests",
      level: 3,
      title: "4.1 Tailoring RealityData Requests",
      children: []
    }, {
      id: "42-visualize-your-reality-model",
      level: 3,
      title: "4.2 Visualize your Reality Model",
      children: []
    }]
  }, {
    id: "5-modify-realitydata",
    level: 2,
    title: "5. Modify RealityData",
    children: [{
      id: "51-modify-your-reality-model",
      level: 3,
      title: "5.1 Modify your Reality Model",
      children: []
    }]
  }, {
    id: "6-manage-realitydata-relations-to-multiple-projects",
    level: 2,
    title: "6. Manage RealityData Relations to Multiple Projects",
    children: [{
      id: "61-associate-realitydata-to-a-project",
      level: 3,
      title: "6.1 Associate RealityData to a Project",
      children: []
    }, {
      id: "62-dissociate-realitydata-from-a-project",
      level: 3,
      title: "6.2 Dissociate RealityData from a Project",
      children: []
    }]
  }, {
    id: "7-delete-realitydata",
    level: 2,
    title: "7. Delete RealityData",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More Resources that you may like",
    children: []
  }];
};
var realitydata_api_quick_start_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/realitydataanalysis-api-quick-start.mdx


var realitydataanalysis_api_quick_start_excluded = ["components"];
var realitydataanalysis_api_quick_start_jsx = (external_react_default()).createElement;


var realitydataanalysis_api_quick_start_readingTime = {
  "text": "11 min read",
  "minutes": 10.97,
  "time": 658200,
  "words": 2194
};
/* @jsxRuntime classic */
/* @jsx mdx */

var realitydataanalysis_api_quick_start_metadata = {
  title: 'Get started with the Reality Analysis API',
  tile: {
    name: 'Get started with the Reality Analysis API',
    description: 'This tutorial is an introduction to Reality Analysis API, explaining the basic workflows.',
    thumbnail: '/images/rda/quick-start-thumb.jpg',
    href: '/tutorials/realitydataanalysis-api-quick-start/',
    durationInMinutes: 60,
    relatedApiIds: ['realitydataanalysis']
  }
};
var realitydataanalysis_api_quick_start_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var realitydataanalysis_api_quick_start_Introduction = realitydataanalysis_api_quick_start_makeShortcode("Introduction");
var realitydataanalysis_api_quick_start_TutorialSection = realitydataanalysis_api_quick_start_makeShortcode("TutorialSection");
var realitydataanalysis_api_quick_start_LinkButton = realitydataanalysis_api_quick_start_makeShortcode("LinkButton");
var realitydataanalysis_api_quick_start_PostmanIcon = realitydataanalysis_api_quick_start_makeShortcode("PostmanIcon");
var realitydataanalysis_api_quick_start_CreateSampleAppButton = realitydataanalysis_api_quick_start_makeShortcode("CreateSampleAppButton");
var realitydataanalysis_api_quick_start_CodeBlock = realitydataanalysis_api_quick_start_makeShortcode("CodeBlock");
var realitydataanalysis_api_quick_start_ContinueLearningSection = realitydataanalysis_api_quick_start_makeShortcode("ContinueLearningSection");
var realitydataanalysis_api_quick_start_TileList = realitydataanalysis_api_quick_start_makeShortcode("TileList");
var realitydataanalysis_api_quick_start_ResourceTile = realitydataanalysis_api_quick_start_makeShortcode("ResourceTile");
var realitydataanalysis_api_quick_start_layoutProps = {
  metadata: realitydataanalysis_api_quick_start_metadata
};
var realitydataanalysis_api_quick_start_MDXLayout = "wrapper";
function realitydataanalysis_api_quick_start_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, realitydataanalysis_api_quick_start_excluded);
  return (0,react_.mdx)(realitydataanalysis_api_quick_start_MDXLayout, (0,esm_extends/* default */.Z)({}, realitydataanalysis_api_quick_start_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(realitydataanalysis_api_quick_start_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "60",
    summaryImageSrc: "/unreal-docs-site/static/images/rda/quick-start-header.jpg",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "important-notice"
  }, "Important notice"), (0,react_.mdx)("p", null, "The following tutorial is a step by step detailed description of the low level calls needed for an analysis.\nIt involves using other services, understanding authorizations and creating different json files. It might not be the best way to discover Reality Analysis.\nWe encourage using our Python or TypeScript ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/reality-capture/"
  }, "iTwin Capture SDKs"), " and the included examples\nif you plan to develop a Python or TypeScript application or for a first discovery even if you plan to use a different language."), (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This quick start tutorial is going to help you work with Reality Analysis."), (0,react_.mdx)("p", null, "In this tutorial, you will submit a simple job to detect objects in images."), (0,react_.mdx)("p", null, "It is assumed that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Knowledge of the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/reality-management"
  }, "Reality Management API"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Knowledge of the ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Reality Analysis"), " concepts. Check ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/realitydataanalysis/"
  }, "Reality Analysis"), " and read the ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Overview"), ", ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Context Scenes"), ", ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Context Detectors"), " and ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "Job Types"), " sections."))), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A small set of photos to analyse."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "photo object detector"), ". You may download the Coco 2D object detector of the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://communities.bentley.com/products/3d_imaging_and_point_cloud_software/w/wiki/54656/context-insights-detectors-download-page"
  }, "library page")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "An iTwin and its ID. For instance you can create a project of ID \u201CProjectID\u201D. Check the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-and-query-projects-guide/"
  }, "create and query projects guide"), "."))), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitydataanalysis_api_quick_start_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(realitydataanalysis_api_quick_start_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "suggested-tools"
  }, "Suggested Tools"), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpswwwpostmancomdownloads-target_blankpostmana"
  }, (0,react_.mdx)("a", {
    href: "https://www.postman.com/downloads/",
    target: "_blank"
  }, "Postman")), (0,react_.mdx)("p", null, "If you want to test the REST API calls directly, you can use ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.postman.com/downloads/"
  }, "Postman"), " or any other solution capable of sending HTTP requests. If you do it this way, you will require an authorization token for the requests to work. This is covered in the \u201CGet a token\u201D section below.")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(realitydataanalysis_api_quick_start_CreateSampleAppButton, {
      clientName: "Reality Analysis basic tutorial",
      scopes: ["realitydataanalysis:read", "realitydataanalysis:modify", "realitydata:modify", "realitydata:read"],
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Reality Modeling API"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "realitydataanalysis:read, realitydataanalysis:modify, realitydata:modify, realitydata:read"), " scopes enabled."))), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "To make a request to the API, you need a user token. There are several ways to get it. You can consult the\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "Authorization API documentation"), "\nor you can use a ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/platform-api-samples/tree/main/Authorization"
  }, "sample powershell script"), " to use in your app."), (0,react_.mdx)("p", null, "In the following, JWT_TOKEN will stand for this token.")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-upload-data"
  }, "3. Upload data"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Upload your photos to Reality Management API as ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "CCImageCollection"), " attached to your iTwin project using the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/reality-management"
  }, "Reality Management API"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Upload your detector to Reality Management API as ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "ContextDetector"), " attached to your iTwin project using the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/reality-management"
  }, "Reality Management API"), ".")), (0,react_.mdx)("p", null, "In the following, ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "ProjectID"), " stands for the iTwin project id, ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "ImageCollectionID"), " for the CCImageCollection entry id and ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "DetectorID"), " for the ContextDetector entry id."), (0,react_.mdx)("p", null, "Note that your iTwin project will usually store some detectors and all your ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "raw"), " reality data (photos, point clouds, etc.).\nThey are not intended to be uploaded for each Reality Analysis jobs. In many cases, they will have been uploaded previously and probably by someone else.")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(realitydataanalysis_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n    \"version\" : \"5.0\",\n    \"PhotoCollection\" : {\n        \"Photos\" : {\n            \"0\" : {\n                \"ImagePath\" : \"0:IMAGE_1059.JPG\",\n            },\n            \"1\" : {\n                \"ImagePath\" : \"0:IMAGE_1060.JPG\",\n            },\n            \"2\" : {\n                \"ImagePath\" : \"0:IMAGE_1061.JPG\",\n            }\n        }\n    },\n    \"References\" : {\n        \"0\" : {\n            \"Path\" : \"rds:ImageCollectionID\"\n        }\n    }\n  }",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-prepare-job-input"
  }, "4. Prepare job input"), (0,react_.mdx)("p", null, "You will now chose on which reality data the job will be applied, creating the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "ContextScene"), " pointing to them.\nIt will be very simple in our case, a few photos in a CCImageCollection but remember it could be more complex: pointing to several Reality Management API entries, adding metadata like orientation, etc."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Create ContextScene file pointing to the photos your want to analyze. It should look like the file besides."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Upload it to Reality Management API as ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "ContextScene"), " entry. Remember to name the file ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "ContextScene.json"), " as should be any ContextScene uploaded on Reality Management API. In the following, ", (0,react_.mdx)("em", {
    parentName: "li"
  }, "PhotosID"), " stands for its id."))), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-create-job"
  }, "5. Create job"), (0,react_.mdx)("p", null, "Your next step will be to create the job.")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitydataanalysis_api_quick_start_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/realitydataanalysis/jobs HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "request"
  }, "Request"), (0,react_.mdx)("p", null, "The job is created sending an HTTP POST message to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/realitydataanalysis/jobs"
  }, "https://api.bentley.com/realitydataanalysis/jobs"), " endpoint with the payload describing the job. Be sure to replace JWT_TOKEN by its value.")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitydataanalysis_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"type\": \"objects2D\",\n  \"name\": \"O2D job sample\",\n  \"iTwinId\": \"ProjectID\",\n  \"settings\": {\n    \"inputs\": [\n      {\n        \"name\": \"photos\",\n        \"realityDataId\": \"PhotosID\"\n      },\n      {\n        \"name\": \"photoObjectDetector\",\n        \"realityDataId\": \"DetectorID\"\n      }\n    ],\n    \"outputs\": [\n      \"objects2D\"\n    ]\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "request-body"
  }, "Request Body"), (0,react_.mdx)("p", null, "The request body define the job settings. Be sure to replace ProjectID, PhotosID and DetectorID by their values.")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitydataanalysis_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"settings\": {\n    \"outputs\": [\n      {\n        \"name\": \"objects2D\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"name\": \"photos\",\n        \"realityDataId\": \"PhotosID\"\n      },\n      {\n        \"name\": \"photoObjectDetector\",\n        \"realityDataId\": \"DetectorID\"\n      }\n    ]\n  },\n  \"state\": \"unsubmitted\",\n  \"dataCenter\": \"EastUs\",\n  \"createdDateTime\": \"2022-03-08T10: 55: 24Z\",\n  \"lastModifiedDateTime\": \"2022-03-08T10: 55: 24Z\",\n  \"id\": \"JobID\",\n  \"email\": \"name@bentley.com\",\n  \"costEstimation\": {\n    \"estimatedCost\": -1.0\n  },\n  \"type\": \"objects2D\",\n  \"name\": \"O2D job sample\",\n  \"iTwinId\": \"ProjectID\"\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "response-body"
  }, "Response body"), (0,react_.mdx)("p", null, "The API will respond with a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "201 Created"), " status code if the call is successful.\nThe most important entry of this response is the \u201Cid\u201D which you will use to refer to the job in following steps.")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-estimate-job-cost"
  }, "6. Estimate job cost"), (0,react_.mdx)("p", null, "You can optionally provide relevant quantities about the input to get an estimation of the job cost before deciding to submit it.")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitydataanalysis_api_quick_start_CodeBlock, {
      language: "http",
      code: "PATCH https://api.bentley.com/realitydataanalysis/jobs/JobID HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "request-1"
  }, "Request"), (0,react_.mdx)("p", null, "Send an HTTP PATCH message to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/realitydataanalysis/jobs/JobID"
  }, "https://api.bentley.com/realitydataanalysis/jobs/JobID"), " endpoint with the payload describing the quantities.\nBe sure to replace JWT_TOKEN and JobID by their values.")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitydataanalysis_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"costEstimation\": {\n    \"numberOfPhotos\": 3,\n    \"gigaPixels\": 12\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "request-body-1"
  }, "Request Body"), (0,react_.mdx)("p", null, "For an 2D object detection job type, these quantities are the number of photos and the total number of gigapixels that will be analyzed.")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitydataanalysis_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"settings\": {\n    \"outputs\": [\n      {\n        \"name\": \"objects2D\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"name\": \"photos\",\n        \"realityDataId\": \"PhotosID\"\n      },\n      {\n        \"name\": \"photoObjectDetector\",\n        \"realityDataId\": \"DetectorID\"\n      }\n    ]\n  },\n  \"state\": \"unsubmitted\",\n  \"dataCenter\": \"EastUs\",\n  \"createdDateTime\": \"2022-03-08T10: 55: 24Z\",\n  \"lastModifiedDateTime\": \"2022-03-08T13: 55: 24Z\",\n  \"id\": \"JobID\",\n  \"email\": \"name@bentley.com\",\n  \"costEstimation\": {\n    \"estimatedCost\": 2.4\n  },\n  \"type\": \"objects2D\",\n  \"name\": \"O2D job sample\",\n  \"iTwinId\": \"ProjectID\"\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "response-body-1"
  }, "Response body"), (0,react_.mdx)("p", null, "The API will respond with a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "201 Created"), " status code if the call is successful.\nThe estimatedCost is now set.")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "7-submit-job"
  }, "7. Submit job"), (0,react_.mdx)("p", null, "To submit your job, simply change its state to ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "active"), ".")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitydataanalysis_api_quick_start_CodeBlock, {
      language: "http",
      code: "PATCH https://api.bentley.com/realitydataanalysis/jobs/JobID HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "request-2"
  }, "Request"), (0,react_.mdx)("p", null, "Send an HTTP PATCH message to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/realitydataanalysis/jobs/JobID"
  }, "https://api.bentley.com/realitydataanalysis/jobs/JobID"), " endpoint with the payload to change its state to ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "active"), ".\nBe sure to replace JWT_TOKEN and JobID by their values.")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitydataanalysis_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"state\": \"active\"\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "request-body-2"
  }, "Request Body"), (0,react_.mdx)("p", null, "The only entry to patch is the state of the job.")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitydataanalysis_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"settings\": {\n    \"outputs\": [\n      {\n        \"name\": \"objects2D\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"name\": \"photos\",\n        \"realityDataId\": \"PhotosID\"\n      },\n      {\n        \"name\": \"photoObjectDetector\",\n        \"realityDataId\": \"DetectorID\"\n      }\n    ]\n  },\n  \"state\": \"active\",\n  \"executionInformation\": {\n    \"submissionDateTime\": \"2022-03-08T13:23:52Z\"\n  },\n  \"dataCenter\": \"EastUs\",\n  \"createdDateTime\": \"2022-03-08T10: 55: 24Z\",\n  \"lastModifiedDateTime\": \"2022-03-08T10: 55: 24Z\",\n  \"id\": \"JobID\",\n  \"email\": \"name@bentley.com\",\n  \"costEstimation\": {\n    \"estimatedCost\": 2.4\n  },\n  \"type\": \"objects2D\",\n  \"name\": \"O2D job sample\",\n  \"iTwinId\": \"ProjectID\"\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "response-body-2"
  }, "Response body"), (0,react_.mdx)("p", null, "The API will respond with a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "200 OK"), " status code if the call is successful.\nThe response indicates that the state has changed to active and adds an ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "executionInformation"), " section, filled so far with a submission time.")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "8-monitor-job"
  }, "8. Monitor job"), (0,react_.mdx)("p", null, "You will probably want to monitor your job to check its state and advancement.")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitydataanalysis_api_quick_start_CodeBlock, {
      language: "http",
      code: "PATCH https://api.bentley.com/realitydataanalysis/jobs/JobID/progress HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "request-3"
  }, "Request"), (0,react_.mdx)("p", null, "To monitor the job, send an HTTP GET message to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/realitydataanalysis/jobs/JobID/progress"
  }, "https://api.bentley.com/realitydataanalysis/jobs/JobID/progress"), " endpoint.\nBe sure to replace JWT_TOKEN and JobID by their values.")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitydataanalysis_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"progress\": {\n    \"percentage\": 25,\n    \"state\": \"active\",\n    \"step\": \"Run_Production\"\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "response-body-3"
  }, "Response body"), (0,react_.mdx)("p", null, "The response give you the job advancement, state and a step name.")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "9-get-results"
  }, "9. Get results")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitydataanalysis_api_quick_start_CodeBlock, {
      language: "http",
      code: "PATCH https://api.bentley.com/realitydataanalysis/jobs/JobID HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "request-4"
  }, "Request"), (0,react_.mdx)("p", null, "At any time, you can get all job information sending an HTTP GET message to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/realitydataanalysis/jobs/JobID"
  }, "https://api.bentley.com/realitydataanalysis/jobs/JobID"), " endpoint.")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitydataanalysis_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"settings\": {\n    \"outputs\": [\n      {\n        \"name\": \"objects2D\",\n        \"realityDataId\": \"SomeIDProvidedByTheService\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"name\": \"photos\",\n        \"realityDataId\": \"PhotosID\"\n      },\n      {\n        \"name\": \"photoObjectDetector\",\n        \"realityDataId\": \"DetectorID\"\n      }\n    ]\n  },\n  \"state\": \"success\",\n  \"executionInformation\": {\n    \"exitCode\": 0,\n    \"estimatedUnits\": 3.0,\n    \"startedDateTime\": \"2022-03-08T14:20:44Z\",\n    \"endedDateTime\": \"2022-03-08T14:27:31Z\",\n    \"submissionDateTime\": \"2022-03-08T13:23:52Z\"\n  },\n  \"dataCenter\": \"EastUs\",\n  \"createdDateTime\": \"2022-03-08T10: 55: 24Z\",\n  \"lastModifiedDateTime\": \"2022-03-08T10: 55: 24Z\",\n  \"id\": \"JobID\",\n  \"email\": \"name@bentley.com\",\n  \"costEstimation\": {\n    \"estimatedCost\": 2.4\n  },\n  \"type\": \"objects2D\",\n  \"name\": \"O2D job sample\",\n  \"iTwinId\": \"ProjectID\"\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "response-body-4"
  }, "Response body"), (0,react_.mdx)("p", null, "Once the job is over, your can get its final state and check success.\nThe executionInformation section is also filled with more useful data.\nYour will also get an id in Reality Management API for every output entry. This will allow you to download the results using the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/reality-management"
  }, "Reality Management API"), ".")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitydataanalysis_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n    \"version\" : \"5.0\",\n    \"PhotoCollection\" : {\n        \"Photos\" : {\n            \"0\" : {\n                \"ImagePath\" : \"0:IMAGE_1059.JPG\"\n            },\n            \"1\" : {\n                \"ImagePath\" : \"0:IMAGE_1060.JPG\"\n            },\n            \"2\" : {\n                \"ImagePath\" : \"0:IMAGE_1061.JPG\"\n            }\n        }\n    },\n    \"Annotations\" : {\n        \"Labels\" : {\n            \"3\" : {\n                \"Name\" : \"car\"\n            },\n            \"4\" : {\n                \"Name\" : \"motorcycle\"\n            }\n        },\n        \"Objects2D\" : {\n            \"0\" : {\n                \"e256276a-d478-476d-a654-195dbc23d1d9\" : {\n                    \"LabelInfo\" : {\n                        \"Confidence\" : 0.998534977436066,\n                        \"LabelId\" : 3\n                    },\n                    \"Box2D\" : {\n                        \"xmin\" : 0.0319100245833397,\n                        \"ymin\" : 0.537032723426819,\n                        \"xmax\" : 0.374318659305573,\n                        \"ymax\" : 0.66499537229538\n                    }\n                },\n                \"03f2b2e5-5df5-49a0-8515-62d6df7739bd\" : {\n                    \"LabelInfo\" : {\n                        \"Confidence\" : 0.996562480926514,\n                        \"LabelId\" : 3\n                    },\n                    \"Box2D\" : {\n                        \"xmin\" : 0.877566039562225,\n                        \"ymin\" : 0.4940065741539,\n                        \"xmax\" : 1,\n                        \"ymax\" : 0.62068098783493\n                    }\n                }\n            },\n            \"1\" : {\n                \"b61c36dd-98d2-4a2a-902e-9d12d9472f15\" : {\n                    \"LabelInfo\" : {\n                        \"Confidence\" : 0.983914494514465,\n                        \"LabelId\" : 3\n                    },\n                    \"Box2D\" : {\n                        \"xmin\" : 0.854629874229431,\n                        \"ymin\" : 0.483299434185028,\n                        \"xmax\" : 0.938638925552368,\n                        \"ymax\" : 0.547508895397186\n                    }\n                },\n                ...",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "output-file"
  }, "Output file"), (0,react_.mdx)("p", null, "You should obtain a ContextScene file with 2D objects.")), (0,react_.mdx)(realitydataanalysis_api_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "10-other-requests"
  }, "10. Other requests"), (0,react_.mdx)("p", null, "In this tutorial, you have seen almost all the API requests except two:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "deleting a job: this is only possible if the job has not been submitted yet. The job will be deleted from the service database."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "canceling a job: it can be done while active. The job will stay in the service database but will not be processed anymore.\nPlease refer to the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/realitydataanalysis/operations/"
  }, "API Reference"), ".")), (0,react_.mdx)("p", null, "As mentioned in the documentation, Reality Analysis API is batch oriented to allow concurrent analysis on large datasets.\nThis is why the input and output ContextScenes go through an upload/download to/from Reality Management API.\nTo simplify use cases where these files are light enough to go be transferred via the API requests,\nfuture versions will allow direct json transfers as a possible choice.")), (0,react_.mdx)(realitydataanalysis_api_quick_start_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)("p", null, "Congratulations for completing the Get started with the Reality Analysis API tutorial! You should now be able to detect 2D objects in a set of photos.\nStay tuned for more tutorials. Meanwhile, you might want to try photo segmentation jobs."), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(realitydataanalysis_api_quick_start_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(realitydataanalysis_api_quick_start_ResourceTile, {
    title: "iTwin Capture SDKs",
    href: "https://github.com/iTwin/reality-capture/",
    description: "Python and Typescript SDKs to use iTwin Capture services.",
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(realitydataanalysis_api_quick_start_ResourceTile, {
    title: "Reality Data API",
    href: "/apis/realitydata/",
    description: "Reality Data API is necessary for uploading inputs for Reality Modeling, and downloading outputs.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(realitydataanalysis_api_quick_start_ResourceTile, {
    title: "Detector library",
    href: "https://communities.bentley.com/products/3d_imaging_and_point_cloud_software/w/wiki/54656/context-insights-detectors-download-page",
    description: "Library of available Context Detectors.",
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(realitydataanalysis_api_quick_start_ResourceTile, {
    title: "Reality Management API",
    href: "/apis/reality-management/",
    description: "Reality Management API is necessary for uploading inputs for Reality Modeling, and downloading outputs.",
    mdxType: "ResourceTile"
  }))));
}
;
realitydataanalysis_api_quick_start_MDXContent.isMDXComponent = true;
var realitydataanalysis_api_quick_start_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "important-notice",
    level: 2,
    title: "Important notice",
    children: []
  }, {
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: [{
      id: "suggested-tools",
      level: 3,
      title: "Suggested Tools",
      children: []
    }]
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: []
  }, {
    id: "3-upload-data",
    level: 2,
    title: "3. Upload data",
    children: []
  }, {
    id: "4-prepare-job-input",
    level: 2,
    title: "4. Prepare job input",
    children: []
  }, {
    id: "5-create-job",
    level: 2,
    title: "5. Create job",
    children: [{
      id: "request",
      level: 3,
      title: "Request",
      children: []
    }, {
      id: "request-body",
      level: 3,
      title: "Request Body",
      children: []
    }, {
      id: "response-body",
      level: 3,
      title: "Response body",
      children: []
    }]
  }, {
    id: "6-estimate-job-cost",
    level: 2,
    title: "6. Estimate job cost",
    children: [{
      id: "request-1",
      level: 3,
      title: "Request",
      children: []
    }, {
      id: "request-body-1",
      level: 3,
      title: "Request Body",
      children: []
    }, {
      id: "response-body-1",
      level: 3,
      title: "Response body",
      children: []
    }]
  }, {
    id: "7-submit-job",
    level: 2,
    title: "7. Submit job",
    children: [{
      id: "request-2",
      level: 3,
      title: "Request",
      children: []
    }, {
      id: "request-body-2",
      level: 3,
      title: "Request Body",
      children: []
    }, {
      id: "response-body-2",
      level: 3,
      title: "Response body",
      children: []
    }]
  }, {
    id: "8-monitor-job",
    level: 2,
    title: "8. Monitor job",
    children: [{
      id: "request-3",
      level: 3,
      title: "Request",
      children: []
    }, {
      id: "response-body-3",
      level: 3,
      title: "Response body",
      children: []
    }]
  }, {
    id: "9-get-results",
    level: 2,
    title: "9. Get results",
    children: [{
      id: "request-4",
      level: 3,
      title: "Request",
      children: []
    }, {
      id: "response-body-4",
      level: 3,
      title: "Response body",
      children: []
    }, {
      id: "output-file",
      level: 3,
      title: "Output file",
      children: []
    }]
  }, {
    id: "10-other-requests",
    level: 2,
    title: "10. Other requests",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var realitydataanalysis_api_quick_start_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/realitymanagement-api-quick-start.mdx


var realitymanagement_api_quick_start_excluded = ["components"];
var realitymanagement_api_quick_start_jsx = (external_react_default()).createElement;


var realitymanagement_api_quick_start_readingTime = {
  "text": "14 min read",
  "minutes": 13.47,
  "time": 808200,
  "words": 2694
};
/* @jsxRuntime classic */
/* @jsx mdx */

var realitymanagement_api_quick_start_metadata = {
  title: 'Get started with Reality Management API',
  tile: {
    name: 'Get started with Reality Management API',
    description: 'This tutorial is an introduction to Reality Management API, explaining the basic workflows.',
    thumbnail: '/images/realitydata-quick-start-thumb.png',
    href: '/tutorials/realitymanagement-api-quick-start/',
    durationInMinutes: 30,
    relatedApiIds: ['realitymanagement', 'reality-management/reality-data']
  }
};
var realitymanagement_api_quick_start_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var realitymanagement_api_quick_start_Introduction = realitymanagement_api_quick_start_makeShortcode("Introduction");
var realitymanagement_api_quick_start_Alert = realitymanagement_api_quick_start_makeShortcode("Alert");
var realitymanagement_api_quick_start_TutorialSection = realitymanagement_api_quick_start_makeShortcode("TutorialSection");
var realitymanagement_api_quick_start_LinkButton = realitymanagement_api_quick_start_makeShortcode("LinkButton");
var realitymanagement_api_quick_start_PostmanIcon = realitymanagement_api_quick_start_makeShortcode("PostmanIcon");
var realitymanagement_api_quick_start_CreateNativeAppButton = realitymanagement_api_quick_start_makeShortcode("CreateNativeAppButton");
var realitymanagement_api_quick_start_Title = realitymanagement_api_quick_start_makeShortcode("Title");
var realitymanagement_api_quick_start_CodeBlock = realitymanagement_api_quick_start_makeShortcode("CodeBlock");
var realitymanagement_api_quick_start_ContinueLearningSection = realitymanagement_api_quick_start_makeShortcode("ContinueLearningSection");
var realitymanagement_api_quick_start_TileList = realitymanagement_api_quick_start_makeShortcode("TileList");
var realitymanagement_api_quick_start_Tile = realitymanagement_api_quick_start_makeShortcode("Tile");
var realitymanagement_api_quick_start_ResourceTile = realitymanagement_api_quick_start_makeShortcode("ResourceTile");
var realitymanagement_api_quick_start_layoutProps = {
  metadata: realitymanagement_api_quick_start_metadata
};
var realitymanagement_api_quick_start_MDXLayout = "wrapper";
function realitymanagement_api_quick_start_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, realitymanagement_api_quick_start_excluded);
  return (0,react_.mdx)(realitymanagement_api_quick_start_MDXLayout, (0,esm_extends/* default */.Z)({}, realitymanagement_api_quick_start_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(realitymanagement_api_quick_start_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "30",
    summaryImageSrc: "/unreal-docs-site/static/images/realitydata-quick-start.jpg",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "The Reality Management API provides you the ability to manage and share reality models. This tutorial will help you get started using the Reality Management API."), (0,react_.mdx)("p", null, "This tutorial will guide you through:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Creating, modifying and deleting reality data."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Associating and dissociating a reality data to a iTwin."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Uploading and downloading reality models to reality data.")), (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A reality model, such as a ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, ".3mx"), " file."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "iTwin created.", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "To learn more, see the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-and-query-itwins-guide/"
  }, "create and query iTwins guide"), ".", (0,react_.mdx)(realitymanagement_api_quick_start_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "The created iTwin must have a role that contains the", ' ', (0,react_.mdx)("b", null, "RDS_ASSIGN, RDS_CREATE, RDS_MANAGE and RDS_USE"), " permissions, assigned to yourself. A iTwin created through the iTwins API should give you the necessary permissions automatically. For more information on managing iTwins, you may consult the [iTwins API](/apis/itwins/overview/).")))))), (0,react_.mdx)(realitymanagement_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitymanagement_api_quick_start_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(realitymanagement_api_quick_start_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "suggested-tools"
  }, "Suggested Tools"), (0,react_.mdx)("h5", {
    "id": "a-hrefhttpswwwpostmancomdownloads-target_blankpostmana"
  }, (0,react_.mdx)("a", {
    href: "https://www.postman.com/downloads/",
    target: "_blank"
  }, "Postman")), (0,react_.mdx)("p", null, "To test the REST API calls directly, use ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.postman.com/downloads/"
  }, "Postman"), " or any other solution capable of sending HTTP requests. If you do it this way, you will require an authorization token for the requests to work. See the ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "Get a token"), " section below for more information.")), (0,react_.mdx)(realitymanagement_api_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(realitymanagement_api_quick_start_CreateNativeAppButton, {
      tooltip: "Register basic Desktop/Mobile App for this tutorial",
      clientName: "Reality Management Quick Start Tutorial",
      scopes: ["realitydata:read", "realitydata:modify"],
      mdxType: "CreateNativeAppButton"
    }, "Register Application")],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. For this tutorial, a Desktop/Mobile Application is recommended. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first Desktop/Mobile application. This allows you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your Desktop/Mobile application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, a few lines of code is displayed under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - the unique identifier for your application. It is displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. It is displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where to return users after logging out. It is displayed on the application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. It is displayed on the application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nSelect the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Digital Twin Management"), " and ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Visualization"), " API associations\nand verify that the following scopes are present under ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Allowed scopes"), " : ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "realitydata:read realitydata:modify")))), (0,react_.mdx)(realitymanagement_api_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a Token"), (0,react_.mdx)("p", null, "To make request to the API, a user token is needed. There are several ways to get it. You can consult the Authorization API documentation ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "here"), ",\nand you can use a sample powershell script ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/platform-api-samples/tree/main/Authorization"
  }, "here"), " to use in your app.")), (0,react_.mdx)(realitymanagement_api_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example HTTP Request for POST Reality Data Operation"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/reality-management/reality-data HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nAccept: application/vnd.bentley.v1+json\nContent-Type: application/json\n\n {\n  \"iTwinId\": \"d8414d06-560e-49da-81a5-f7204fa4457b\",\n  \"displayName\": \"Name of the reality data to create\",\n  \"classification\": \"Model\",\n  \"type\": \"3mx\",\n  \"description\": \"Description of the reality data\",\n  \"tags\": [\n    \"tag\"\n  ],\n  \"dataset\": \"Dataset\",\n  \"rootDocument\": \"Models/Scene/myModel.3mx\",\n  \"group\": \"GroupId\",\n  \"authoring\": true,\n  \"acquisition\": {\n    \"startDateTime\": \"2023-05-18T11:43:05.094Z\",\n    \"endDateTime\": \"2023-05-18T11:43:05.094Z\",\n    \"acquirer\": \"Acquirer\"\n  },\n  \"extent\": {\n    \"southWest\": {\n      \"latitude\": 90,\n      \"longitude\": 180\n    },\n    \"northEast\": {\n      \"latitude\": 90,\n      \"longitude\": 180\n    }\n  }\n}\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Headers"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\nContent-Length: 112\nRequest-Context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 2b59e2ac-3e89-42bf-9678-2717b395c5bf\nX-ITwinPlatform-Media-Type: bentley.itwin-platform.v1\nX-ITwinPlatform-Region: East US\nDate: Mon, 22 May 2023 20:51:49 GMT",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Body"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"realityData\": {\n    \"id\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n    \"displayName\": \"Name of the reality data to create\",\n    \"classification\": \"Model\",\n    \"type\": \"3mx\",\n    \"description\": \"Description of the reality data\",\n    \"tags\": [\n      \"tag\"\n    ],\n    \"dataset\": \"Dataset\",\n    \"rootDocument\": \"Models/Scene/myModel.3mx\",\n    \"group\": \"GroupId\",\n    \"dataCenterLocation\": \"North Europe\",\n    \"authoring\": true,\n    \"size\": 0,\n    \"acquisition\": {\n      \"startDateTime\": \"2023-05-18T11:43:05.096Z\",\n      \"endDateTime\": \"2023-05-18T11:43:05.096Z\",\n      \"acquirer\": \"Acquirer\"\n    },\n    \"extent\": {\n      \"southWest\": {\n        \"latitude\": 90,\n        \"longitude\": 180\n      },\n      \"northEast\": {\n        \"latitude\": 90,\n        \"longitude\": 180\n      }\n    },\n    \"modifiedDateTime\": \"2023-05-18T11:43:05.096Z\",\n    \"lastAccessedDateTime\": \"2023-05-18T11:43:05.096Z\",\n    \"createdDateTime\": \"2023-05-18T11:43:05.096Z\"\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-create-a-reality-data"
  }, "3. Create a Reality Data"), (0,react_.mdx)("p", null, (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Reality data"), " properties represent the descriptive data related to a reality data. In addition to this, reality data content is stored as files and folders within a blob container uniquely associated to this reality data.\nIndividual files and folders follow, from the root of the reality data, a normal file tree structure."), (0,react_.mdx)("p", null, "Use a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "POST https://api.bentley.com/reality-management/reality-data"), " HTTP request to create a reality data."), (0,react_.mdx)("p", null, "Currently, the required properties for creating a reality data are:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "DisplayName"), " : Name of the reality data"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Type"), " e.g. \u201C3mx\u201D")), (0,react_.mdx)("p", null, "Upon successfully creating a reality data, the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " property will be generated, and it is used as it\u2019s unique identifier.")), (0,react_.mdx)(realitymanagement_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example HTTP Request for Get Write Access To Reality Data Container Operation"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/reality-management/reality-data/69401bde-6200-4c6c-b783-046f1935e825/writeaccess/?iTwinId=615f57e7-876e-46fc-ab11-79af30cae299 HTTP/1 HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nAccept: application/vnd.bentley.v1+json\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Headers"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\nCache-Control: must-revalidate, no-cache, private\nPragma: no-cache\nTransfer-Encoding: chunked\nContent-Type: application/json\nContent-Encoding: gzip\nETag: \"KtH8hBTTkTuyVh8/AjJ/wdYPRZ4=\"\nVary: Accept-Encoding\nRequest-Context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nStrict-Transport-Security: max-age=63072000\nMas-Server: Bentley-WSG/4.0.13,Bentley-WebAPI/2.9\nX-Correlation-ID: dfab9114-7a6c-4cfe-bed0-c03720278dd9\nMas-Request-Id: dfab9114-7a6c-4cfe-bed0-c03720278dd9\nSet-Cookie: {...}\nX-ITwinPlatform-Media-Type: bentley.itwin-platform.v1\nX-ITwinPlatform-Region: East US\nDate: Mon, 22 May 2023 20:56:34 GMT",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Body"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n        \"type\": \"AzureBlobSasUrl\",\n        \"permissions\": \"Write\",\n        \"_links\": {\n            \"containerUrl\": {\n                \"href\": \"https://realityblobdeveussa01.blob.core.windows.net/69401bde-6200-4c6c-b783-046f1935e825?sv=2020-08-04&se=2021-09-09T07%3A45%3A15Z&sr=c&sp=rl&sig=FiYaKr5m%2FPlev%2FwsOIpopyyCbJC3lbRKwhA3be2SQh8%3D\"\n            }\n        }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "31-upload-a-reality-model"
  }, "3.1 Upload a Reality Model"), (0,react_.mdx)("p", null, "Once your reality data is created, you may attach a reality model. The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GET https://api.bentley.com/reality-management/reality-data/{id}/writeaccess/?iTwinId={iTwinId}"), "\nHTTP request will provide you with a SAS URL with write access."), (0,react_.mdx)("p", null, "In order to use this resource, consult the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview"
  }, "Microsoft Documentation")), (0,react_.mdx)("p", null, "Alternatively, if you do not have a reality model yet and want to generate your own reality model, you may be interested in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/contextcapture-api-quick-start"
  }, "Reality Modeling")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, "In order to visualize your Reality Model later on by using an\n", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/itwin-viewer-hello-world/"
  }, "iTwin Viewer"), ", the created reality data must have a valid ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "rootDocument"), " value."))), (0,react_.mdx)(realitymanagement_api_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example HTTP Request for Get Reality Data Operation"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/reality-management/reality-data?iTwinId=ec002f93-f0c1-4ab3-a407-351848eba233&$top=2 HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nAccept: application/vnd.bentley.v1+json\nPrefer: return=representation\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Headers"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\nCache-Control: must-revalidate, no-cache, private\nPragma: no-cache\nTransfer-Encoding: chunked\nContent-Type: application/json\nContent-Encoding: gzip\nETag: \"HwjuhwwP78X3/dL8Efxr36UHJPc=\"\nVary: Accept-Encoding\nRequest-Context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nStrict-Transport-Security: max-age=63072000\nMas-Server: Bentley-WSG/4.0.13,Bentley-WebAPI/2.9\nX-Correlation-ID: c6c00c24-e37e-4b30-a070-bd7e8b6090b2\nMas-Request-Id: c6c00c24-e37e-4b30-a070-bd7e8b6090b2\nSet-Cookie: {...}\nX-ITwinPlatform-Media-Type: bentley.itwin-platform.v1\nX-ITwinPlatform-Region: East US\nDate: Mon, 22 May 2023 21:01:28 GMT",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Body"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n    \"realityData\": [\n        {\n            \"id\": \"4cc193e4-07a7-4ec8-8750-93c68b34cb11\",\n            \"displayName\": \"A random Reality Data Display Name\",\n            \"dataset\": \"Dataset\",\n            \"group\": \"xxx\",\n            \"description\": \"Lorem ipsum...\",\n            \"rootDocument\": \"Graz/Scene/Graz.3mx\",\n            \"size\": 444055,\n            \"classification\": \"Model\",\n            \"type\": \"3mx\",\n            \"extent\": {\n                \"southWest\": {\n                    \"latitude\": 50.1171,\n                    \"longitude\": -122.9543\n                },\n                \"northEast\": {\n                    \"latitude\": 50.1172,\n                    \"longitude\": -122.9543\n                }\n            },\n            \"acquisition\": {},\n            \"dataCenterLocation\": \"North Europe\",\n            \"modifiedDateTime\": \"2017-05-10T13:43:03Z\",\n            \"lastAccessedDateTime\": \"2021-08-11T00:00:00Z\",\n            \"createdDateTime\": \"2017-05-10T13:43:03Z\"\n        },\n        {\n            \"id\": \"a649f5f9-4c2d-4b2d-8ac0-0ba38d53727c\",\n            \"displayName\": \"A second Reality Data's Display Name\",\n            \"dataset\": \"Dataset\",\n            \"group\": \"xxx\",\n            \"description\": \"Lorem ipsum...\",\n            \"rootDocument\": \"Graz/Scene/Graz.3mx\",\n            \"size\": 739560,\n            \"classification\": \"Model\",\n            \"type\": \"3mx\",\n            \"extent\": {\n                \"southWest\": {\n                    \"latitude\": 50.1171,\n                    \"longitude\": -122.9543\n                },\n                \"northEast\": {\n                    \"latitude\": 50.1172,\n                    \"longitude\": -122.9543\n                }\n            },\n            \"acquisition\": {},\n            \"dataCenterLocation\": \"North Europe\",\n            \"modifiedDateTime\": \"2017-05-10T13:43:03Z\",\n            \"lastAccessedDateTime\": \"2021-08-11T00:00:00Z\",\n            \"createdDateTime\": \"2017-05-10T13:43:03Z\"\n        }\n      ],\n      \"count\": 4,\n      \"_links\": {\n        \"next\": {\n            \"href\": \"https://api.bentley.com/reality-management/reality-data?iTwinId=ec002f93-f0c1-4ab3-a407-351848eba233&continuationToken=eyJ0b3AiOjUwMCwic2tpcCI6NTAwfQ\"\n        }\n    }\n }",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-get-reality-data"
  }, "4. Get Reality Data"), (0,react_.mdx)("p", null, "There are a few ways to query your reality data. Depending on the app you are developing, one might be more useful than another. You may want to get a single reality data or multiple ones."), (0,react_.mdx)("p", null, "Once you have created reality data, the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GET https://api.bentley.com/reality-management/reality-data"), " request will be the route to use in order to get your created reality data. Using this call as it will return the first 100 reality data that you have access to, relatively to your organization\u2019s access rights."), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GET https://api.bentley.com/reality-management/reality-data/?iTwinId={iTwinId}"), " request will return the first 100 reality data under the given iTwin, relatively to the iTwin\u2019s access rights. provided you have access to it. A continuation token is provided for further querying."), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GET https://api.bentley.com/reality-management/reality-data/{id}"), " request will only return the reality data with the given identifier, provided that you have access to it."), (0,react_.mdx)("h3", {
    "id": "41-tailoring-reality-data-requests"
  }, "4.1 Tailoring Reality Data Requests"), (0,react_.mdx)("p", null, "Optional parameters are available to customize reality data requests :"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "iTwinId"), " : iTwin Identifier"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "continuationToken"), " to get more reality data on the current query"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "$top"), " to query a number of reality data to get in each page"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "extent"), " to query reality data in a definite area to search."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "$orderBy"), " to query reality data by specific property in either ascending or descending order. default is ascending."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "$search"), " search reality data by any value."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "types"), " to query reality data by type of reality data."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "acquisitionStartDateTime"), " to query reality data by acquisition start date time."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "acquisitionEndDateTime"), " to query reality data by acquisition end date time."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "tag"), " to query reality data by tags assigned at creation time.")), (0,react_.mdx)("p", null, "You may refer to the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/reality-management/operations/get-all-reality-data/"
  }, "Reality Management API Documentation"), " for more information on parameters described above."), (0,react_.mdx)("p", null, "When querying multiple realiy data, the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Prefer: return=representation"), " header will instruct the API to return all properties on every reality data. Otherwise, only minimal information\nwill be returned, such as ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "type"), ".")), (0,react_.mdx)(realitymanagement_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example HTTP Request for Get Reality Data Container Operation"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/reality-management/reality-data/69401bde-6200-4c6c-b783-046f1935e825/readaccess/?iTwinId=615f57e7-876e-46fc-ab11-79af30cae299 HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nAccept: application/vnd.bentley.v1+json\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Headers"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\nCache-Control: must-revalidate, no-cache, private\nPragma: no-cache\nTransfer-Encoding: chunked\nContent-Type: application/json\nContent-Encoding: gzip\nETag: \"33/0jngG83tl3Zu9AbB+KRdpL34=\"\nVary: Accept-Encoding\nRequest-Context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nStrict-Transport-Security: max-age=63072000\nMas-Server: Bentley-WSG/4.0.13,Bentley-WebAPI/2.9\nX-Correlation-ID: 81cc9899-faac-4d84-9149-6bcc26460e1d\nMas-Request-Id: 81cc9899-faac-4d84-9149-6bcc26460e1d\nSet-Cookie: {...}\nX-ITwinPlatform-Media-Type: bentley.itwin-platform.v1\nX-ITwinPlatform-Region: East US\nDate: Mon, 22 May 2023 21:04:45 GMT",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Body"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n    \"container\": {\n        \"type\": \"AzureBlobSasUrl\",\n        \"permissions\": \"Read\",\n        \"_links\": {\n            \"containerUrl\": {\n                \"href\": \"https://realityblobdeveussa01.blob.core.windows.net/69401bde-6200-4c6c-b783-046f1935e825?sv=2020-08-04&se=2021-09-09T07%3A45%3A15Z&sr=c&sp=rl&sig=FiYaKr5m%2FPlev%2FwsOIpopyyCbJC3lbRKwhA3be2SQh8%3D\"\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "42-visualize-your-reality-model"
  }, "4.2 Visualize your Reality Model"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GET https://api.bentley.com/reality-management/reality-data/{id}/readaccess/?iTwinId={iTwinId}"), " request will provide you with a SAS URL with read access.\nThis will let you download the content of your reality data."), (0,react_.mdx)("p", null, "You may want to consult this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/sandboxes/iTwinPlatform/Reality%20Data"
  }, "iTwinjs sample"), "\nfor a quick example to display your reality model.")), (0,react_.mdx)(realitymanagement_api_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example HTTP Request for PATCH Reality Data Operation"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "http",
      code: "PATCH https://api.bentley.com/reality-management/reality-data/69401bde-6200-4c6c-b783-046f1935e825 HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nAccept: application/vnd.bentley.v1+json\nContent-Type: application/json\n\n{\n    \"iTwinId\" : \"615f57e7-876e-46fc-ab11-79af30cae299\",\n    \"displayName\": \"Modified displayname\",\n    \"dataset\": \"Dataset\",\n    \"group\": \"xxx\",\n    \"description\": \"Lorem ipsum 2...\",\n    \"classification\": \"Model\",\n    \"type\": \"3mx\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Headers"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\nCache-Control: must-revalidate, no-cache, private\nPragma: no-cache\nTransfer-Encoding: chunked\nContent-Type: application/json\nContent-Encoding: gzip\nVary: Accept-Encoding\nRequest-Context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nStrict-Transport-Security: max-age=63072000\nMas-Server: Bentley-WSG/4.0.13,Bentley-WebAPI/2.9\nX-Correlation-ID: 7c55d6fd-173d-4af5-a9cc-b488077442ae\nMas-Request-Id: 7c55d6fd-173d-4af5-a9cc-b488077442ae\nSet-Cookie: {...}\nX-ITwinPlatform-Media-Type: bentley.itwin-platform.v1\nX-ITwinPlatform-Region: East US\nDate:  Mon, 22 May 2023 21:40:30 GMT",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Body"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n    \"realityData\": {\n        \"id\": \"69401bde-6200-4c6c-b783-046f1935e825\",\n        \"displayName\": \"Modified displayname\",\n        \"dataset\": \"Dataset\",\n        \"group\": \"xxx\",\n        \"description\": \"Lorem ipsum 2...\",\n        \"size\": 0,\n        \"classification\": \"Model\",\n        \"type\": \"3mx\",\n        \"authoring\": false,\n        \"extent\": {\n            \"southWest\": {\n                \"latitude\": 50.1171,\n                \"longitude\": -122.9543\n            },\n            \"northEast\": {\n                \"latitude\": 50.1172,\n                \"longitude\": -122.9543\n            }\n        },\n        \"acquisition\": {},\n        \"dataCenterLocation\": \"North Europe\",\n        \"modifiedDateTime\": \"2021-09-08T18:00:47Z\",\n        \"lastAccessedDateTime\": \"2021-09-08T14:32:14Z\",\n        \"createdDateTime\": \"2021-09-08T14:32:14Z\"\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-modify-reality-data"
  }, "5. Modify Reality Data"), (0,react_.mdx)("p", null, "Reality data properties may be modified at will, provided you have sufficient permissions within the iTwin you are using or if you are the owner of the reality data.\nUse a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "PATCH https://api.bentley.com/reality-management/reality-data/{id}"), " HTTP request to modify an existing reality data."), (0,react_.mdx)("p", null, "Refer to the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/reality-management/rm-rd-details/"
  }, "Reality Data Properties"), " page of the documentation for the detailed list of properties you can use and modify.")), (0,react_.mdx)(realitymanagement_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example HTTP Request for Get Reality Data Container Operation"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/reality-management/reality-data/69401bde-6200-4c6c-b783-046f1935e825/writeaccess/?iTwinId=615f57e7-876e-46fc-ab11-79af30cae299 HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nAccept: application/vnd.bentley.v1+json\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Headers"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\nCache-Control: must-revalidate, no-cache, private\nPragma: no-cache\nTransfer-Encoding: chunked\nContent-Type: application/json\nContent-Encoding: gzip\nETag: \"33/0jngG83tl3Zu9AbB+KRdpL34=\"\nVary: Accept-Encoding\nRequest-Context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nStrict-Transport-Security: max-age=63072000\nMas-Server: Bentley-WSG/4.0.13,Bentley-WebAPI/2.9\nX-Correlation-ID: 81cc9899-faac-4d84-9149-6bcc26460e1d\nMas-Request-Id: 81cc9899-faac-4d84-9149-6bcc26460e1d\nSet-Cookie: {...}\nX-ITwinPlatform-Media-Type: bentley.itwin-platform.v1\nX-ITwinPlatform-Region: East US\nDate: Mon, 22 May 2023 21:04:45 GMT",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Body"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n    \"container\": {\n        \"type\": \"AzureBlobSasUrl\",\n        \"permissions\": \"Write\",\n        \"_links\": {\n            \"containerUrl\": {\n                \"href\": \"https://realityblobdeveussa01.blob.core.windows.net/69401bde-6200-4c6c-b783-046f1935e825?sv=2020-08-04&se=2021-09-09T07%3A45%3A15Z&sr=c&sp=rl&sig=FiYaKr5m%2FPlev%2FwsOIpopyyCbJC3lbRKwhA3be2SQh8%3D\"\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "51-modify-your-reality-model"
  }, "5.1 Modify your Reality Model"), (0,react_.mdx)("p", null, "You can refer to section 3.1 of this guide as it is the same operation, the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GET https://api.bentley.com/reality-management/reality-data/{id}/writeaccess/?iTwinId={iTwinId}"), "\nrequest will provide you with a SAS URL with write access. From there, you may change the content of the reality model.")), (0,react_.mdx)(realitymanagement_api_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-manage-reality-data-relations-to-multiple-itwin"
  }, "6. Manage Reality Data Relations to Multiple iTwin"), (0,react_.mdx)("p", null, "Depending on the purpose of your reality model, you may find useful to have your reality model, therefore it\u2019s reality data, to be available across multiple iTwins.\nThe ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Reality Management"), " API leverages the strengths of the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/itwins/"
  }, "iTwins API"), " to make your model available to others."), (0,react_.mdx)("p", null, "Two actions are possible:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Associating a reality data to a iTwin"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Dissociating a reality data from a iTwin"))), (0,react_.mdx)(realitymanagement_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example HTTP Request for Associate Reality Data Operation"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/reality-management/reality-data/69401bde-6200-4c6c-b783-046f1935e825/iTwins/615f57e7-876e-46fc-ab11-79af30cae299 HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nAccept: application/vnd.bentley.v1+json\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Headers"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\nContent-Length: 112\nRequest-Context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 2b59e2ac-3e89-42bf-9678-2717b395c5bf\nX-ITwinPlatform-Media-Type: bentley.itwin-platform.v1\nX-ITwinPlatform-Region: East US\nDate: Mon, 22 May 2023 20:51:49 GMT",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Body"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "json",
      code: "{\n        \"iTwinAssociation\": \n        {\n          \"id\": \"69401bde-6200-4c6c-b783-046f1935e825\",\n          \"iTwinId\": \"615f57e7-876e-46fc-ab11-79af30cae299\"\n        }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "61-associate-reality-data-to-a-itwin"
  }, "6.1 Associate Reality Data to a iTwin"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "POST https://api.bentley.com/reality-management/reality-data/{id}/iTwins/{iTwinId}"), " http request will add an association to the desired iTwin, illustrated by ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iTwinAssociation"), ".")), (0,react_.mdx)(realitymanagement_api_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example HTTP Request for Dissociate Reality Data Operation"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "http",
      code: "DELETE https://api.bentley.com/reality-management/reality-data/69401bde-6200-4c6c-b783-046f1935e825/iTwinss/615f57e7-876e-46fc-ab11-79af30cae299 HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nAccept: application/vnd.bentley.v1+json\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Headers"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 204 No Content\nContent-Length: 0\nRequest-Context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 07b4d6c4-6f05-492c-9b59-3bc382d4de76\nX-ITwinPlatform-Media-Type: bentley.itwin-platform.v1\nX-ITwinPlatform-Region: East US\nDate: Mon, 22 May 2023 14:57:12 GMT",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "62-dissociate-reality-data-from-a-itwin"
  }, "6.2 Dissociate Reality Data from a iTwin"), (0,react_.mdx)("p", null, "The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "DELETE https://api.bentley.com/reality-management/reality-data/{id}/iTwins/{iTwinId}"), " http request will remove an association from the desired iTwin.")), (0,react_.mdx)(realitymanagement_api_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example HTTP Request for Delete Reality Data Operation"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "http",
      code: "DELETE https://api.bentley.com/reality-management/reality-data/69401bde-6200-4c6c-b783-046f1935e825 HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nAccept: application/vnd.bentley.v1+json\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(realitymanagement_api_quick_start_Title, {
      mdxType: "Title"
    }, "Example Response Headers"), (0,react_.mdx)(realitymanagement_api_quick_start_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 204 No Content\nContent-Length: 0\nRequest-Context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 8c9990c0-c305-42b3-bd44-db295c80dfbd\nX-ITwinPlatform-Media-Type: bentley.itwin-platform.v1\nX-ITwinPlatform-Region: East US\nDate: Mon, 22 May 2023 14:59:32 GMT",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "7-delete-reality-data"
  }, "7. Delete Reality Data"), (0,react_.mdx)("p", null, "Once your reality data is no longer needed, you may delete it with the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "DELETE https://api.bentley.com/reality-management/reality-data/{id}"), " HTTP request. Upon receiving a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "204 No Content"), " response,\nwhich indicates a successful deletion, the reality data resource along with it\u2019s reality model will be deleted. There is no need to manually delete the reality model\nby using GET container http requests with the Write permission."), (0,react_.mdx)(realitymanagement_api_quick_start_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "If your reality data is associated to more than one iTwin, you must first dissociate it from every iTwin, except one. See section 6.2. Note that you must have sufficient rights within the iTwin to delete reality data."), (0,react_.mdx)(realitymanagement_api_quick_start_Alert, {
    type: "warning",
    mdxType: "Alert"
  }, "The Reality Management API does not support a 'recycle bin' feature. Deleting a reality data results in immediate deletion of the reality model and it cannot be recovered.")), (0,react_.mdx)(realitymanagement_api_quick_start_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)("p", null, "Congratulations for completing the Reality Management API tutorial! You now have the necessary knowledge to use the Reality Management API.\nTo go further and use the Reality Management API to its full potential, you can have a look at the following related tutorials."), (0,react_.mdx)(realitymanagement_api_quick_start_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(realitymanagement_api_quick_start_Tile, {
    name: "Get started with Reality Modeling API",
    description: "This tutorial is an introduction to Reality Modeling API, explaining the basic workflows.",
    thumbnail: "/unreal-docs-site/static/images/cccs-quick-start-thumb.jpg",
    href: "/tutorials/contextcapture-api-quick-start",
    mdxType: "Tile"
  }), (0,react_.mdx)(realitymanagement_api_quick_start_Tile, {
    name: "Get started with Reality Analysis API",
    description: "This tutorial is an introduction to Reality Analysis API, explaining the basic workflows.",
    thumbnail: "/unreal-docs-site/static/images/rda/quick-start-thumb.jpg",
    href: "/tutorials/realitydataanalysis-api-quick-start",
    mdxType: "Tile"
  }), (0,react_.mdx)(realitymanagement_api_quick_start_Tile, {
    name: "Reality Data",
    description: "Adding, removing, and modifying the display of reality data. Discovers available realitymodel and attaches the first one to the viewport.",
    thumbnail: "/unreal-docs-site/static/images/samples/reality-data-thumbnail.png",
    href: "https://www.itwinjs.org/sandboxes/iTwinPlatform/Reality%20Data",
    mdxType: "Tile"
  })), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More Resources that you may like"), (0,react_.mdx)(realitymanagement_api_quick_start_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(realitymanagement_api_quick_start_ResourceTile, {
    title: "Reality Data API",
    href: "/apis/reality-data/overview/",
    description: "Complete Reality Data API documentation.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(realitymanagement_api_quick_start_ResourceTile, {
    title: "Reality Data Client",
    href: "https://www.itwinjs.org/reference/reality-data-client/",
    description: "Typescript Client provided by itwin.js to facilitate the use the Reality Data API.",
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(realitymanagement_api_quick_start_ResourceTile, {
    title: "Reality Data client Npm Package",
    href: "https://www.npmjs.com/package/@bentley/reality-data-client",
    description: "Npm Package containing client wrappers for sending requests to the RealityData API.",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
realitymanagement_api_quick_start_MDXContent.isMDXComponent = true;
var realitymanagement_api_quick_start_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: [{
      id: "suggested-tools",
      level: 3,
      title: "Suggested Tools",
      children: []
    }]
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a Token",
    children: []
  }, {
    id: "3-create-a-reality-data",
    level: 2,
    title: "3. Create a Reality Data",
    children: [{
      id: "31-upload-a-reality-model",
      level: 3,
      title: "3.1 Upload a Reality Model",
      children: []
    }]
  }, {
    id: "4-get-reality-data",
    level: 2,
    title: "4. Get Reality Data",
    children: [{
      id: "41-tailoring-reality-data-requests",
      level: 3,
      title: "4.1 Tailoring Reality Data Requests",
      children: []
    }, {
      id: "42-visualize-your-reality-model",
      level: 3,
      title: "4.2 Visualize your Reality Model",
      children: []
    }]
  }, {
    id: "5-modify-reality-data",
    level: 2,
    title: "5. Modify Reality Data",
    children: [{
      id: "51-modify-your-reality-model",
      level: 3,
      title: "5.1 Modify your Reality Model",
      children: []
    }]
  }, {
    id: "6-manage-reality-data-relations-to-multiple-itwin",
    level: 2,
    title: "6. Manage Reality Data Relations to Multiple iTwin",
    children: [{
      id: "61-associate-reality-data-to-a-itwin",
      level: 3,
      title: "6.1 Associate Reality Data to a iTwin",
      children: []
    }, {
      id: "62-dissociate-reality-data-from-a-itwin",
      level: 3,
      title: "6.2 Dissociate Reality Data from a iTwin",
      children: []
    }]
  }, {
    id: "7-delete-reality-data",
    level: 2,
    title: "7. Delete Reality Data",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More Resources that you may like",
    children: []
  }];
};
var realitymanagement_api_quick_start_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/register-and-modify-application.mdx


var register_and_modify_application_excluded = ["components"];
var register_and_modify_application_jsx = (external_react_default()).createElement;


var register_and_modify_application_readingTime = {
  "text": "11 min read",
  "minutes": 10.255,
  "time": 615300,
  "words": 2051
};
/* @jsxRuntime classic */
/* @jsx mdx */

var register_and_modify_application_metadata = {
  title: 'Register and modify an Application',
  tile: {
    name: 'Register and modify an Application',
    description: 'Before you can start using iTwin Platform REST APIs you need to create an application. This tutorial covers basic application registration and modification steps.',
    thumbnail: '',
    href: '/tutorials/register-and-modify-application/',
    durationInMinutes: 15,
    relatedApiIds: []
  }
};
var register_and_modify_application_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var register_and_modify_application_Introduction = register_and_modify_application_makeShortcode("Introduction");
var register_and_modify_application_TutorialSection = register_and_modify_application_makeShortcode("TutorialSection");
var register_and_modify_application_Title = register_and_modify_application_makeShortcode("Title");
var register_and_modify_application_Alert = register_and_modify_application_makeShortcode("Alert");
var register_and_modify_application_ContinueLearningSection = register_and_modify_application_makeShortcode("ContinueLearningSection");
var register_and_modify_application_TileList = register_and_modify_application_makeShortcode("TileList");
var register_and_modify_application_ResourceTile = register_and_modify_application_makeShortcode("ResourceTile");
var register_and_modify_application_layoutProps = {
  metadata: register_and_modify_application_metadata
};
var register_and_modify_application_MDXLayout = "wrapper";
function register_and_modify_application_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, register_and_modify_application_excluded);
  return (0,react_.mdx)(register_and_modify_application_MDXLayout, (0,esm_extends/* default */.Z)({}, register_and_modify_application_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(register_and_modify_application_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: register_and_modify_application_metadata.tile.durationInMinutes,
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "Before you can start using iTwin Platform REST APIs you need to create an application. Registered application gives you an ability to access iTwin Platform REST APIs and manage client accesses (scopes). This tutorial covers basic application registration and modification steps.")), (0,react_.mdx)(register_and_modify_application_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-sign-in-or-sign-up-for-a-bentley-account"
  }, "1. Sign in or sign up for a Bentley account"), (0,react_.mdx)("p", null, "Before you register your first application you need to have a Bentley account to Sign In to iTwin Platform Portal. Only signed-in users can create, view, edit or delete applications.")), (0,react_.mdx)(register_and_modify_application_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(register_and_modify_application_Title, {
      mdxType: "Title"
    }, "Create Your Account form"), (0,react_.mdx)("img", {
      src: "/unreal-docs-site/static/images/tutorials/register-and-modify-application/create-account-form.png",
      alt: "Create Your Account",
      className: "sample-img-m"
    }), (0,react_.mdx)(register_and_modify_application_Title, {
      mdxType: "Title"
    }, "Email Address verification"), (0,react_.mdx)("img", {
      src: "/unreal-docs-site/static/images/tutorials/register-and-modify-application/verify-email-address.png",
      alt: "Verify Email Address",
      className: "sample-img-m"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "11-create-your-bentley-account"
  }, "1.1 Create your Bentley account"), (0,react_.mdx)("p", null, "If you don\u2019t have a Bentley account yet, you can create one by following these steps:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go to ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://developer.bentley.com"
  }, "https://developer.bentley.com")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Sign In"), " button. You will be redirected to Sign In page"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Don\u2019t have an account? Register now"), " link. You will be redirected to account registration page"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Fill in the appropriate information for each of the text boxes"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "When the form is complete, click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Create Account"), ". You will be redirected to email verification page"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Enter ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Verification Code"), ". You should receive an email from ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "no-reply@bentley.com"), " to address you entered in registration form with ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Verification Code")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Verify"))), (0,react_.mdx)("p", null, "Now you can ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "#sign-in"
  }, "Sign-in"), " using your newly created Bentley account credentials.")), (0,react_.mdx)(register_and_modify_application_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(register_and_modify_application_Title, {
      mdxType: "Title"
    }, "Sign in page"), (0,react_.mdx)("img", {
      src: "/unreal-docs-site/static/images/tutorials/register-and-modify-application/sign-in-page.png",
      alt: "Sign in",
      className: "sample-img-m"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "12-sign-in"
  }, "1.2 Sign in"), (0,react_.mdx)("p", null, "To Sign In to iTwin Platform Portal you need to:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go to ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://developer.bentley.com"
  }, "https://developer.bentley.com")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Sign In"), " button. You will be redirected to Sign In page"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Sign-in using your Bentley account credentials"))), (0,react_.mdx)(register_and_modify_application_TutorialSection, {
    actions: [(0,react_.mdx)(register_and_modify_application_Title, {
      mdxType: "Title"
    }, "Application registration form"), (0,react_.mdx)("img", {
      src: "/unreal-docs-site/static/images/tutorials/register-and-modify-application/register-your-application-form.png",
      alt: "Application registration form",
      className: "sample-img-l"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-register-an-application"
  }, "2. Register an application"), (0,react_.mdx)(register_and_modify_application_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "To create an application you must Sign in. Only signed-in users can create, view, edit or delete applications."), (0,react_.mdx)("p", null, "Before you can start using iTwin Platform REST APIs you need to create an application. Registered application gives you an ability to access iTwin Platform REST APIs and manage client accesses (scopes)."), (0,react_.mdx)("p", null, "To register an application follow these instructions:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go to the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, (0,react_.mdx)("a", {
    parentName: "strong",
    "href": "/my-apps"
  }, "My Apps")), " page"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "+ Register New"), " to open new application registration form"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Give your application a ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Name")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Select ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "API associations"), " you are going to use", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "API association represents set of APIs. Full list of API associations with their APIs you can find on ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis"
  }, "iTwin Platform Documentation"), " page."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Each API endpoint requires certain OAuth scopes. When you select API associations that your application will use, registration form will allow you to chose scopes that are available in these associations."))), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Change the scope list to give your application appropriate accesses", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Make sure you selected correct API associations. You will see only a set of scopes from selected API associations."))), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Select your ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Application type"), " (SPA, Web App, Service or Desktop/Mobile)", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Single Page Application (SPA)"), " is a web application that runs in a browser and does not require the page to be reloaded."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Web App"), " is a traditional web application where every change involves a new request for the server to provide an HTML page."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Service"), " represents an automated service with no human interaction."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Desktop/Mobile"), " is an application that runs on a desktop computer or mobile device.", (0,react_.mdx)(register_and_modify_application_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Make sure you choose valid Application type. You won't be able to change it later.")))), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Enter ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URI"), " specifies the location where the authorization server can send the user once the application has been successfully authorized."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "If you create your application to complete some other tutorial, you can use ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "http://localhost:3000/signin-callback"), " as a ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URI"), "."))), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Enter ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), " (Optional)", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URI"), " specifies the location where the authorization server can send the user after a logout."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "If you create your application to complete some other tutorial, you can leave ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), " empty."))), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Please review and acknowledge the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://connect-agreementportal.bentley.com/AgreementApp/Home/Eula/view/readonly/BentleyConnect"
  }, "Terms of Service"), ". By proceeding to register your application, you agree to our ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://connect-agreementportal.bentley.com/AgreementApp/Home/Eula/view/readonly/BentleyConnect"
  }, "Terms of Service")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Save"), " to submit application creation")), (0,react_.mdx)(register_and_modify_application_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "After registering a ", (0,react_.mdx)("strong", null, "Service"), " or ", (0,react_.mdx)("strong", null, "Web App"), ' ', "application, you will see the success dialog with your", ' ', (0,react_.mdx)("strong", null, "Client Secret"), ". Make sure you copy and save it. We don't store it and you will not be able to see it again.")), (0,react_.mdx)(register_and_modify_application_TutorialSection, {
    actions: [(0,react_.mdx)(register_and_modify_application_Title, {
      mdxType: "Title"
    }, "My Apps table"), (0,react_.mdx)("img", {
      src: "/unreal-docs-site/static/images/tutorials/register-and-modify-application/my-apps-page.png",
      alt: "My Apps table",
      className: "sample-img-l"
    }), (0,react_.mdx)(register_and_modify_application_Title, {
      mdxType: "Title"
    }, "Application details page"), (0,react_.mdx)("img", {
      src: "/unreal-docs-site/static/images/tutorials/register-and-modify-application/app-details-page.png",
      alt: "Application details page",
      className: "sample-img-l"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-view-an-application"
  }, "3. View an application"), (0,react_.mdx)(register_and_modify_application_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "To view an application you must Sign in. Only signed-in users can create, view, edit or delete applications."), (0,react_.mdx)("p", null, "Now that you have registered an application, you can see it in My Apps table on ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, (0,react_.mdx)("a", {
    parentName: "strong",
    "href": "/my-apps"
  }, "My Apps")), " page. To see all application details:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go to ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, (0,react_.mdx)("a", {
    parentName: "strong",
    "href": "/my-apps"
  }, "My Apps")), " page"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Find application in a table"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click on its title link. You will navigate to selected application details page.")), (0,react_.mdx)("p", null, "This page has all information about your application:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Application name"), " - A human-readable name for your application."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Application type"), " - Type of your application. Cannot be changed."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), " - A unique identifier for your application."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client email"), " (only for ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Service"), " applications) - fake user email, created for role assignment."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), " - list of accesses granted to the application."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), " (only for ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "SPA"), ", ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Web App"), ", ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Desktop/Mobile"), " applications) - the list of locations where the authorization server can send the user once the application has been successfully authorized."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), " (only for ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "SPA"), ", ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Web App"), ", ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Desktop/Mobile"), " applications) - the list of locations where the authorization server can send the user after a logout."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Regenerate client secret"), " button (only for ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Service"), " and ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Web App"), " applications) - a control to regenerate ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client Secret"), " if the one given during application registration was missed."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Owners"), " - list of users that can view, edit or delete this application."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "API associations"), " - list of APIs that can be used by your application."))), (0,react_.mdx)(register_and_modify_application_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-edit-an-application"
  }, "4. Edit an application"), (0,react_.mdx)(register_and_modify_application_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "To edit an application you must Sign in. Only signed-in users can create, view, edit or delete applications."), (0,react_.mdx)("p", null, "As an owner of application you can easily change it anytime. To edit an application you need to:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go to ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, (0,react_.mdx)("a", {
    parentName: "strong",
    "href": "/my-apps"
  }, "My Apps")), " page"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Find application in a table"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click on its title link. You will navigate to selected application details page")), (0,react_.mdx)("p", null, "Application details that can be changed:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Application name"), " - A human-readable name for your application."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), " (only for ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "SPA"), ", ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Web App"), ", ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Desktop/Mobile"), " applications) - the list of locations where the authorization server can send the user once the application has been successfully authorized."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), " (only for ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "SPA"), ", ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Web App"), ", ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Desktop/Mobile"), " applications) - the list of locations where the authorization server can send the user after a logout."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Owners"), " - list of users that can view, edit or delete this application."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "API associations"), " - list of APIs that can be used by your application."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), " - list of accesses granted to the application.")), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Application name"), ", ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Redirect URIs"), ", ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Post logout redirect URIs"), " can be simply changed by editing their content or adding additional values (for URIs) and clicking ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Save"), " button, but other properties require more manipulations.")), (0,react_.mdx)(register_and_modify_application_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(register_and_modify_application_Title, {
      mdxType: "Title"
    }, "API associations card"), (0,react_.mdx)("img", {
      src: "/unreal-docs-site/static/images/tutorials/register-and-modify-application/api-associations.png",
      alt: "API associations card",
      className: "sample-img-m"
    }), (0,react_.mdx)(register_and_modify_application_Title, {
      mdxType: "Title"
    }, "Add APIs dialog"), (0,react_.mdx)("img", {
      src: "/unreal-docs-site/static/images/tutorials/register-and-modify-application/add-apis-dialog.png",
      alt: "Add APIs dialog",
      className: "sample-img-m"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "41-adding-or-removing-apis"
  }, "4.1 Adding or removing APIs"), (0,react_.mdx)("p", null, "To add or remove API in API associations list, follow these instructions:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Scroll down to API associations card"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Add APIs"), " button", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "You will see a modal window with list of API groups."))), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Select APIs you want to add by toggling them ON", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Some API groups have more than one API. If you want to select single APIs from group - expand the API list and toggle each API separately."))), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Select APIs you want to remove by toggling them OFF"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Save"), (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Now you can see that your API associations list has changed and all APIs you have selected are in the list."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "At this point your changes are not submitted yet. If you refresh the page - changes won\u2019t be saved."))), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "To submit your changes (if any have been made) you need to click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Save"), " button at the bottom of the page", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "The success toast message will inform that your changes were successfully saved."))))), (0,react_.mdx)(register_and_modify_application_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(register_and_modify_application_Title, {
      mdxType: "Title"
    }, "Expanded \"Manage your scopes\""), (0,react_.mdx)("img", {
      src: "/unreal-docs-site/static/images/tutorials/register-and-modify-application/api-scopes-expanded.png",
      alt: "Manage your scopes",
      className: "sample-img-m"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "42-changing-scopes"
  }, "4.2 Changing scopes"), (0,react_.mdx)("p", null, "Each API in your API associations list has it\u2019s own list of scopes that can be changed. To manage API scopes that are assigned to your app, follow these instructions:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Scroll down to API associations card"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Find API for which you want to manage scopes"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Expand ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Manage your scopes"), " of selected API"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Toggle ON scopes you want to be granted to your application"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Toggle OFF scopes you do not want to be granted to your application"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "To submit your changes (if any have been made) you need to click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Save"), " button at the bottom of the page", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "The success toast message will inform that your changes were successfully saved.")))), (0,react_.mdx)("p", null, "After successful save you can see that your scope list have changed and all scopes you selected are in the list.")), (0,react_.mdx)(register_and_modify_application_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "43-managing-application-owners"
  }, "4.3 Managing application Owners"), (0,react_.mdx)("p", null, "You can add users with Bentley account as an owners of your application. This will allow them to see, edit or delete your application.")), (0,react_.mdx)(register_and_modify_application_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)("img", {
      src: "/unreal-docs-site/static/images/tutorials/register-and-modify-application/add-owner.png",
      alt: "Adding owner",
      className: "sample-img-m"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "add-application-owner"
  }, "Add application owner"), (0,react_.mdx)("p", null, "To add an additional owner, follow these instructions:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Add owner"), " button. You will get an input for typing an email address"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Type in an email of user you want to share ownership with"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Add"), (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "The toast message will inform that user is being added to owners list.")))), (0,react_.mdx)("p", null, "After success toast message you will see that user is now added to application owners list. Now user, who was added to owners list should see your application on ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/my-apps"
  }, "My Apps"), " page.")), (0,react_.mdx)(register_and_modify_application_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)("img", {
      src: "/unreal-docs-site/static/images/tutorials/register-and-modify-application/remove-owner.png",
      alt: "Remove application owner",
      className: "sample-img-m"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "remove-application-owner"
  }, "Remove application owner"), (0,react_.mdx)("p", null, "To remove an additional owner, follow these instructions:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "x"), " (cross) button near user you want to remove from owners list", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "The toast message will inform that user is being removed from owners list.")))), (0,react_.mdx)("p", null, "After success toast message you will see that user is now removed from application owners list. Now user, who was removed from owners list won\u2019t see your application on ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/my-apps"
  }, "My Apps"), " page anymore.")), (0,react_.mdx)(register_and_modify_application_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(register_and_modify_application_Title, {
      mdxType: "Title"
    }, "Application details with \"Regenerate client secret\" button"), (0,react_.mdx)("img", {
      src: "/unreal-docs-site/static/images/tutorials/register-and-modify-application/app-details.png",
      alt: "Application details with \"Regenerate client secret\" button",
      className: "sample-img-m"
    }), (0,react_.mdx)(register_and_modify_application_Title, {
      mdxType: "Title"
    }, "Client Secret regeneration confirmation dialog"), (0,react_.mdx)("img", {
      src: "/unreal-docs-site/static/images/tutorials/register-and-modify-application/regenerate-client-secret-confirm-dialog.png",
      alt: "Client Secret regeneration confirmation dialog",
      className: "sample-img-m"
    }), (0,react_.mdx)(register_and_modify_application_Title, {
      mdxType: "Title"
    }, "New Client Secret"), (0,react_.mdx)("img", {
      src: "/unreal-docs-site/static/images/tutorials/register-and-modify-application/regenerate-client-secret-success-dialog.png",
      alt: "New Client Secret",
      className: "sample-img-m"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "44-regenerating-client-secret-only-for-service-and-web-app-applications"
  }, "4.4 Regenerating Client Secret (only for Service and Web App applications)"), (0,react_.mdx)("p", null, "If you missed your ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Client Secret"), " you can always regenerate it."), (0,react_.mdx)("p", null, "To regenerate ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Client Secret"), ":"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Regenerate client secret"), " button"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "In ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Confirmation"), " dialog click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Regenerate")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Wait for ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client Secret"), " regeneration process completion"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "In ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Success!"), " dialog you will see new ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client Secret"))), (0,react_.mdx)("p", null, "Make sure you copy and save your new ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Client Secret"), ". We don\u2019t store it and you will not be able to see it again."), (0,react_.mdx)(register_and_modify_application_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "After ", (0,react_.mdx)("strong", null, "Client Secret"), " regeneration previous secret becomes invalid. Make sure to replace old ", (0,react_.mdx)("strong", null, "Client Secret"), " by new one.")), (0,react_.mdx)(register_and_modify_application_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(register_and_modify_application_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(register_and_modify_application_ResourceTile, {
    title: "Register your application",
    href: "/register/",
    description: "New application registration form.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(register_and_modify_application_ResourceTile, {
    title: "My Apps",
    href: "/my-apps/",
    description: "List of all applications owned by you.",
    mdxType: "ResourceTile"
  }))));
}
;
register_and_modify_application_MDXContent.isMDXComponent = true;
var register_and_modify_application_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "1-sign-in-or-sign-up-for-a-bentley-account",
    level: 2,
    title: "1. Sign in or sign up for a Bentley account",
    children: [{
      id: "11-create-your-bentley-account",
      level: 3,
      title: "1.1 Create your Bentley account",
      children: []
    }, {
      id: "12-sign-in",
      level: 3,
      title: "1.2 Sign in",
      children: []
    }]
  }, {
    id: "2-register-an-application",
    level: 2,
    title: "2. Register an application",
    children: []
  }, {
    id: "3-view-an-application",
    level: 2,
    title: "3. View an application",
    children: []
  }, {
    id: "4-edit-an-application",
    level: 2,
    title: "4. Edit an application",
    children: [{
      id: "41-adding-or-removing-apis",
      level: 3,
      title: "4.1 Adding or removing APIs",
      children: []
    }, {
      id: "42-changing-scopes",
      level: 3,
      title: "4.2 Changing scopes",
      children: []
    }, {
      id: "43-managing-application-owners",
      level: 3,
      title: "4.3 Managing application Owners",
      children: []
    }, {
      id: "44-regenerating-client-secret-only-for-service-and-web-app-applications",
      level: 3,
      title: "4.4 Regenerating Client Secret (only for Service and Web App applications)",
      children: []
    }]
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var register_and_modify_application_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/retrieve-validation-model-data.mdx


var retrieve_validation_model_data_excluded = ["components"];
var retrieve_validation_model_data_jsx = (external_react_default()).createElement;


var retrieve_validation_model_data_readingTime = {
  "text": "10 min read",
  "minutes": 9.23,
  "time": 553800,
  "words": 1846
};
/* @jsxRuntime classic */
/* @jsx mdx */

var retrieve_validation_model_data_metadata = {
  title: 'Retrieve Validation Model Data',
  tile: {
    name: 'Retrieve Validation Model Data',
    description: 'Walk-through of retrieving and understanding basic model information needed for various validation functions.',
    href: '/tutorials/retrieve-validation-model-data/',
    thumbnail: '/images/ClashDetectionSample.png',
    durationInMinutes: 20,
    relatedApiIds: ['clashdetection', 'validation/propertyValue']
  }
};
var retrieve_validation_model_data_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var retrieve_validation_model_data_Introduction = retrieve_validation_model_data_makeShortcode("Introduction");
var retrieve_validation_model_data_TutorialSection = retrieve_validation_model_data_makeShortcode("TutorialSection");
var retrieve_validation_model_data_Alert = retrieve_validation_model_data_makeShortcode("Alert");
var retrieve_validation_model_data_Title = retrieve_validation_model_data_makeShortcode("Title");
var retrieve_validation_model_data_CodeBlock = retrieve_validation_model_data_makeShortcode("CodeBlock");
var retrieve_validation_model_data_ContinueLearningSection = retrieve_validation_model_data_makeShortcode("ContinueLearningSection");
var retrieve_validation_model_data_TileList = retrieve_validation_model_data_makeShortcode("TileList");
var retrieve_validation_model_data_ResourceTile = retrieve_validation_model_data_makeShortcode("ResourceTile");
var retrieve_validation_model_data_layoutProps = {
  metadata: retrieve_validation_model_data_metadata
};
var retrieve_validation_model_data_MDXLayout = "wrapper";
function retrieve_validation_model_data_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, retrieve_validation_model_data_excluded);
  return (0,react_.mdx)(retrieve_validation_model_data_MDXLayout, (0,esm_extends/* default */.Z)({}, retrieve_validation_model_data_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(retrieve_validation_model_data_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "20",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "Model validation functions are used to check a model you\u2019ve created to make sure everything is as expected. In the case of property validation, this means making sure element properties fit specific criteria. In the case of clash detection, this means certain elements are not touching or are within a certain range of each other.")), (0,react_.mdx)(retrieve_validation_model_data_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-optional-create-a-test-itwin-and-imodel-for-testing"
  }, "1. (Optional) Create a Test iTwin and iModel for testing"), (0,react_.mdx)("p", null, "Follow the steps listed ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/create-test-imodel-sample/"
  }, "here")), (0,react_.mdx)("p", null, "You will be redirected to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "\"My iTwins - iModel Home\""), " page. Click the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "\"Copy IDs\""), " button in the top right. The iTwin ID (also referred to as the project ID) and the iModel ID will be copied to the clipboard. Both of these IDs will be used frequently throughout validation API calls.")), (0,react_.mdx)(retrieve_validation_model_data_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "To make API requests, a user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application. You will need to include the scopes clashdetection:read and clashdetection:modify."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-the-api-reference-try-it-out-section"
  }, "Grab a user token from the API reference \u201CTry it out\u201D Section"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/clash-detection/operations/create-clashdetection-tests/"
  }, "here")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "\"Try it out\""), " button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "On Authorization section select ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "\"AuthorizationCode\""), "."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After popup closes Authorization header with your user token value should be visible."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Save user token value for this tutorial.")), (0,react_.mdx)(retrieve_validation_model_data_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use the user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(retrieve_validation_model_data_TutorialSection, {
    actions: [(0,react_.mdx)(retrieve_validation_model_data_Title, {
      mdxType: "Title"
    }, "Extraction Request Syntax"), (0,react_.mdx)(retrieve_validation_model_data_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/clashdetection/modelsAndCategories/imodels/00000000-0000-0000-0000-000000000000 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(retrieve_validation_model_data_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(retrieve_validation_model_data_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(retrieve_validation_model_data_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(retrieve_validation_model_data_CodeBlock, {
      language: "json",
      code: "{\n  \"projectId\": \"00000000-0000-0000-0000-000000000000\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(retrieve_validation_model_data_Title, {
      mdxType: "Title"
    }, "Retrieval Request Syntax"), (0,react_.mdx)(retrieve_validation_model_data_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/clashdetection/modelsAndCategories/imodels/00000000-0000-0000-0000-000000000000?projectId=00000000-0000-0000-0000-000000000000 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(retrieve_validation_model_data_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(retrieve_validation_model_data_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(retrieve_validation_model_data_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(retrieve_validation_model_data_CodeBlock, {
      language: "json",
      code: "{\n  \"status\":\"available\",\n  \"models\":[\n    {\n      \"id\":\"0x21\",\n      \"displayName\":\"ProcessPhysicalModel\"\n    }\n  ],\n  \"categories\":[\n    {\n      \"id\":\"0x20000000002\",\n      \"displayName\":\"Uncategorized\"\n    },\n    {\n      \"id\":\"0x30000000048\",\n      \"displayName\":\"PID LineStyle Default\"\n    },\n    {\n      \"id\":\"0x3000000004a\",\n      \"displayName\":\"Border\"\n    },\n    {\n      \"id\":\"0x4000000000d\",\n      \"displayName\":\"Tag-Category\"\n    },\n    {\n      \"id\":\"0x40000000e71\",\n      \"displayName\":\"Structure\"\n    }\n  ]\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-retrieving-models-and-categories"
  }, "3. Retrieving Models and Categories"), (0,react_.mdx)("p", null, "For creating any Clash Detection test, you will need a list of the models or categories you wish to check for clashing elements."), (0,react_.mdx)("p", null, "There are two ways to retrieve these:"), (0,react_.mdx)("h3", {
    "id": "31-extractionretrieval-request-apis"
  }, "3.1 Extraction/Retrieval Request APIs"), (0,react_.mdx)("p", null, "First, you can send an HTTP request to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "POST https://api.bentley.com/clashdetection/modelsAndCategories/imodels/{iModelId}"), " using your iModel ID in place of {iModelId}. If model information has not previously been extracted for the iModel, an agent will be started to process the request. A status of 202 is returned if the agent was successfully started."), (0,react_.mdx)("p", null, "Next, you can repeat calls to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GET https://api.bentley.com//clashdetection/modelsAndCategories/imodels{iModelId}"), " until a status of ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "available"), " is returned with the response."), (0,react_.mdx)("p", null, "The response will include a complete list of models and categories, with their respective ids and display names.")), (0,react_.mdx)(retrieve_validation_model_data_TutorialSection, {
    actions: [(0,react_.mdx)(retrieve_validation_model_data_Title, {
      mdxType: "Title"
    }, "Sample Category List widget and provider"), (0,react_.mdx)(retrieve_validation_model_data_CodeBlock, {
      language: "typescript",
      code: "import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useActiveIModelConnection } from \"@itwin/appui-react\";\nimport { AbstractWidgetProps, StagePanelLocation, StagePanelSection, UiItemsProvider, WidgetState } from \"@itwin/appui-abstract\";\nimport { QueryRowFormat } from \"@itwin/core-common\";\nimport { Table } from \"@itwin/itwinui-react\";\nexport interface CategoryInfo {\n  id: string;\n  name: string;\n};\nexport type CreateTypeFromInterface<Interface> = {\n  [Property in keyof Interface]: Interface[Property];\n};\nexport type CategoryInfoType = CreateTypeFromInterface<CategoryInfo>;\nconst CategoryListWidget = () => {\n  const [availableCategories, setAvailableCategories] = useState<CategoryInfoType[]>([]);\n  const iModel = useActiveIModelConnection();\n  // Example for querying list of all categories in the iModel\n  const queryCategories = useCallback(async (): Promise<CategoryInfo[]> => {\n    const categories: CategoryInfo[] = [];\n    // Query for list of unique category ids in iModel\n    const selectUsedSpatialCategoryIds = \"SELECT DISTINCT Category.Id as id from BisCore.GeometricElement3d WHERE Category.Id IN (SELECT ECInstanceId from BisCore.SpatialCategory)\";\n    // Use category ids to query for label and code values\n    const ecsql = \"SELECT ECInstanceId as id, UserLabel as label, CodeValue as code FROM BisCore.SpatialCategory WHERE ECInstanceId IN (\" + selectUsedSpatialCategoryIds + \")\";\n    const rowIterator = iModel?.query(ecsql, undefined, { rowFormat: QueryRowFormat.UseJsPropertyNames });\n    if (rowIterator) {\n        for await (const row of rowIterator) {\n        categories.push({ id: row.id, name: row.label ?? row.code });\n      }\n    }  \n    return categories;\n  }, [iModel]);\n  useEffect(() => {\n    queryCategories()\n      .then((categoryInfos: CategoryInfo[]) => {\n        setAvailableCategories(categoryInfos);\n      })\n      .catch((_e) => {\n        setAvailableCategories([]);\n      });\n  }, [queryCategories]);\n  const columnDefinition = useMemo(() => [\n    {\n      Header: \"Table\",\n      columns: [\n        {\n          id: \"categoryId\",\n          Header: \"Id\",\n          accessor: \"id\",\n        },\n        {\n          id: \"categoryName\",\n          Header: \"Name\",\n          accessor: \"name\",\n        },\n      ],\n    },\n  ], []);\n  return (\n    <Table\n      data={availableCategories}\n      columns={columnDefinition}\n      emptyTableContent={\"No data\"}\n      density=\"extra-condensed\"\n      style={{ height: \"100%\" }} />\n  );\n};\nexport class CategoryListWidgetProvider implements UiItemsProvider {\n  public readonly id: string = \"CategoryListWidgetProvider\";\n  public provideWidgets(_stageId: string, _stageUsage: string, location: StagePanelLocation, _section?: StagePanelSection): ReadonlyArray<AbstractWidgetProps> {\n    const widgets: AbstractWidgetProps[] = [];\n    if (location === StagePanelLocation.Bottom && _section === StagePanelSection.Start) {\n      widgets.push(\n        {\n          id: \"CategorListWidget\",\n          label: \"Category List\",\n          defaultState: WidgetState.Open,\n          getWidgetContent: () => <CategoryListWidget />,\n        }\n      );\n    }\n    return widgets;\n  }\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(retrieve_validation_model_data_Title, {
      mdxType: "Title"
    }, "Sample Model List widget and provider"), (0,react_.mdx)(retrieve_validation_model_data_CodeBlock, {
      language: "typescript",
      code: "import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { AbstractWidgetProps, StagePanelLocation, StagePanelSection, UiItemsProvider, WidgetState } from \"@itwin/appui-abstract\";\nimport { useActiveIModelConnection } from \"@itwin/appui-react\";\nimport { Table } from \"@itwin/itwinui-react\";\nimport type { GeometricModel3dProps, ModelQueryParams } from \"@itwin/core-common\";\nexport type CreateTypeFromInterface<Interface> = {\n  [Property in keyof Interface]: Interface[Property];\n};\nexport interface ModelInfo {\n  id: string;\n  name: string;\n}\nexport type ModelInfoType = CreateTypeFromInterface<ModelInfo>;\nconst ModelListWidget = () => {\n  const [availableModels, setAvailableModels] = useState<ModelInfoType[]>([]);\n  const iModel = useActiveIModelConnection();\n  // Example for querying list of all 3D models in the iModel\n  const queryModels = useCallback(async (): Promise<ModelInfo[]> => {\n    const queryParams: ModelQueryParams = {\n      from: \"BisCore.GeometricModel3d\",\n      wantPrivate: false,\n    };\n    const modelProps = await iModel?.models.queryProps(queryParams) ?? [];\n    return modelProps\n      .map(({ id, name }: GeometricModel3dProps) => ({ id, name }))\n      .filter(({ id }) => id) as ModelInfo[];\n  }, [iModel]);\n  useEffect(() => {\n    queryModels()\n      .then((modelInfos: ModelInfo[]) => {\n        setAvailableModels(modelInfos);\n      })\n      .catch((_e) => {\n        setAvailableModels([]);\n      });\n  }, [queryModels]);\n  const columnDefinition = useMemo(() => [\n    {\n      Header: \"Table\",\n      columns: [\n        {\n          id: \"id\",\n          Header: \"Id\",\n          accessor: \"id\",\n        },\n        {\n          id: \"modelName\",\n          Header: \"Name\",\n          accessor: \"name\",\n        },\n      ],\n    },\n  ], []);\n  return (\n    <Table\n      data={availableModels}\n      columns={columnDefinition}\n      emptyTableContent={\"No data\"}\n      density=\"extra-condensed\"\n      style={{ height: \"100%\" }} />\n  );\n};\nexport class ModelListWidgetProvider implements UiItemsProvider {\n  public readonly id: string = \"ModelListWidgetProvider\";\n  public provideWidgets(_stageId: string, _stageUsage: string, location: StagePanelLocation, _section?: StagePanelSection): ReadonlyArray<AbstractWidgetProps> {\n    const widgets: AbstractWidgetProps[] = [];\n    if (location === StagePanelLocation.Bottom && _section === StagePanelSection.Start) {\n      widgets.push(\n        {\n          id: \"ModelListWidget\",\n          label: \"Model List\",\n          defaultState: WidgetState.Open,\n          getWidgetContent: () => <ModelListWidget />,\n        }\n      );\n    }\n    return widgets;\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "32-direct-imodel-query"
  }, "3.2 Direct iModel Query"), (0,react_.mdx)("p", null, "For applications with access to an iModel, you can directly query for the list of models and categories."), (0,react_.mdx)("h4", {
    "id": "321-creating-a-sample-app"
  }, "3.2.1 Creating a Sample App"), (0,react_.mdx)("p", null, "To assist you with implementing this, we have included two sample widgets on the right which can be dropped into an iTwin viewer app."), (0,react_.mdx)(retrieve_validation_model_data_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "For help with creating an iTwin viewer app, see", ' ', (0,react_.mdx)("a", {
    style: {
      textDecoration: 'underline'
    },
    href: "https://developer.bentley.com/tutorials/web-application-quick-start/"
  }, "iTwin Viewer Quick Start"), "."), (0,react_.mdx)("p", null, "Once you have a sample app ready to test with, you can create a couple new .tsx files called ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "CategoryListWidget.tsx"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ModelListWidget.tsx"), " and copy the sample code into them.")), (0,react_.mdx)(retrieve_validation_model_data_TutorialSection, {
    actions: [(0,react_.mdx)(retrieve_validation_model_data_Title, {
      mdxType: "Title"
    }, "Sample imports for widget providers"), (0,react_.mdx)(retrieve_validation_model_data_CodeBlock, {
      language: "typescript",
      code: "import { CategoryListWidgetProvider } from \"./CategoryListWidget\";\nimport { ModelListWidgetProvider } from \"./ModelListWidget\";",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(retrieve_validation_model_data_Title, {
      mdxType: "Title"
    }, "Sample for adding the CategoryListWidgetProvider and ModelListWidgetProvider to your iTwin viewer app."), (0,react_.mdx)(retrieve_validation_model_data_CodeBlock, {
      language: "jsx",
      code: "<Viewer\n  iTwinId={iTwinId ?? \"\"}\n  iModelId={iModelId ?? \"\"}\n  authClient={authClient}\n  onIModelAppInit={onIModelAppInit}\n  uiProviders={[\n    new CategoryListWidgetProvider(),\n    new ModelListWidgetProvider(),\n  ]}\n/>",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "322-adding-the-widgets-to-the-application"
  }, "3.2.2 Adding the widgets to the application"), (0,react_.mdx)("p", null, "Once you have the viewer app ready with the sample widgets copied in, you can get them hooked up by adding the provider names to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "uiProviders"), " property of the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Viewer"), " react component (as shown on the right)."), (0,react_.mdx)(retrieve_validation_model_data_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "If you want a more in-depth explanation on the usage of providers, see", ' ', (0,react_.mdx)("a", {
    style: {
      textDecoration: 'underline'
    },
    href: "/tutorials/itwin-viewer-hello-world"
  }, "iTwin Viewer Hello World tutorial"), ".")), (0,react_.mdx)(retrieve_validation_model_data_TutorialSection, {
    actions: [(0,react_.mdx)(retrieve_validation_model_data_Title, {
      mdxType: "Title"
    }, "Extraction Request Syntax"), (0,react_.mdx)(retrieve_validation_model_data_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/clashdetection/schemas/imodels/00000000-0000-0000-0000-000000000000 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(retrieve_validation_model_data_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(retrieve_validation_model_data_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(retrieve_validation_model_data_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(retrieve_validation_model_data_CodeBlock, {
      language: "json",
      code: "{\n  \"projectId\": \"00000000-0000-0000-0000-000000000000\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(retrieve_validation_model_data_Title, {
      mdxType: "Title"
    }, "Retrieval Request Syntax"), (0,react_.mdx)(retrieve_validation_model_data_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/clashdetection/schemas/imodels/00000000-0000-0000-0000-000000000000?projectId=00000000-0000-0000-0000-000000000000 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(retrieve_validation_model_data_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(retrieve_validation_model_data_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(retrieve_validation_model_data_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(retrieve_validation_model_data_CodeBlock, {
      language: "json",
      code: "{\n  \"schema\":[\n    {\n      \"name\":\"ProcessPhysical\",\n      \"label\":null,\n      \"entityClass\":[\n        {\n          \"name\":\"PIPING_COMPONENT\",\n          \"label\":\"Piping Component\",\n          \"properties\":[\n            {\n              \"name\":\"COMPONENT_NAME\",\n              \"label\":\"Component Name\"\n            },\n            {\n              \"name\":\"STATE\",\n              \"label\":\"Component State\"\n            },\n            {\n              \"name\":\"LENGTH_EFFECTIVE\",\n              \"label\":\"Length Effective\"\n            },\n            {\n              \"name\":\"DESIGN_LENGTH_CENTER_TO_BRANCH_END_EFFECTIVE\",\n              \"label\":\"Design Length Center To Branch End Effective\"\n            },\n            {\n              \"name\":\"DESIGN_LENGTH_CENTER_TO_OUTLET_END_EFFECTIVE\",\n              \"label\":\"Design Length Center To Outlet End Effective\"\n            },\n            {\n              \"name\":\"DESIGN_LENGTH_CENTER_TO_RUN_END_EFFECTIVE\",\n              \"label\":\"Design Length Center To Run End Effective\"\n            },\n            {\n              \"name\":\"WALL_THICKNESS\",\n              \"label\":\"Wall Thickness\"\n            },\n            {\n              \"name\":\"UPDATE_GRAPHICS\",\n              \"label\":\"Update Graphics\"\n            },\n            {\n              \"name\":\"NOMINAL_DIAMETER_RUN_END\",\n              \"label\":\"Nominal Diameter Run End\"\n            },\n            {\n              \"name\":\"Geometry\",\n              \"label\":\"Element Geometry\"\n            },\n            {\n              \"name\":\"SPOOL_ID\",\n              \"label\":\"Spool Id\"\n            },\n            {\n              \"name\":\"SPOOL_NUMBER\",\n              \"label\":\"Spool Number\"\n            },\n            {\n              \"name\":\"OPTION_CODE\",\n              \"label\":\"Option Code\"\n            },\n            {\n              \"name\":\"NOTES\",\n              \"label\":\"Notes\"\n            },\n            {\n              \"name\":\"CATALOG_NAME\",\n              \"label\":\"Catalog Name\"\n            },\n            {\n              \"name\":\"EC_CLASS_NAME\",\n              \"label\":\"EC Class Name\"\n            },\n            {\n              \"name\":\"UNIT_OF_MEASURE\",\n              \"label\":\"Unit Of Measure\"\n            },\n            {\n              \"name\":\"PIECE_MARK\",\n              \"label\":\"Piece Mark\"\n            },\n            {\n              \"name\":\"FABRICATION_CATEGORY\",\n              \"label\":\"Fabrication Category\"\n            },\n            {\n              \"name\":\"LINENUMBER\",\n              \"label\":\"Line Number\"\n            },\n            {\n              \"name\":\"INSULATION_THICKNESS\",\n              \"label\":\"Insulation Thickness\"\n            },\n            {\n              \"name\":\"INSULATION\",\n              \"label\":\"Insulation Material\"\n            },\n            {\n              \"name\":\"LENGTH\",\n              \"label\":\"Length\"\n            },\n            {\n              \"name\":\"INSIDE_DIAMETER\",\n              \"label\":\"Inside Diameter\"\n            },\n            {\n              \"name\":\"NORMAL_OPERATING_PRESSURE\",\n              \"label\":\"Normal Operating Pressure\"\n            },\n            {\n              \"name\":\"OUTSIDE_DIAMETER\",\n              \"label\":\"Outside Diameter\"\n            },\n            {\n              \"name\":\"PIPE_FLANGE_TYPE\",\n              \"label\":\"Pipe Flange Type\"\n            },\n            {\n              \"name\":\"GRADE\",\n              \"label\":\"Grade\"\n            },\n            {\n              \"name\":\"SHOP_FIELD\",\n              \"label\":\"Shop Field\"\n            },\n            {\n              \"name\":\"HUB_DEPTH\",\n              \"label\":\"Hub Depth\"\n            },\n            {\n              \"name\":\"HUB_WIDTH\",\n              \"label\":\"Hub Width\"\n            },\n            {\n              \"name\":\"TRACING\",\n              \"label\":\"Tracing\"\n            }\n          ],\n          \"aspects\":[],\n          \"typeDefinitions\":[]\n        }\n      ]\n    }\n  ]\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-get-schema-info"
  }, "4. Get Schema Info"), (0,react_.mdx)("p", null, "For creating Property Validation rules you will need to get all the class/property names in the iModel schemas."), (0,react_.mdx)("p", null, "First, you can send an HTTP request to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "POST https://api.bentley.com/clashdetection/schemas/imodels/{iModelId}"), " using your iModel ID in place of {iModelId}. If schema information has not previously been extracted for the iModel, an agent will be started to process the request. A status of 202 is returned if the agent was successfully started."), (0,react_.mdx)("p", null, "Next, you can repeat calls to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "GET https://api.bentley.com//clashdetection/schemas/imodels{iModelId}"), " until a status of ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "available"), " is returned with the response."), (0,react_.mdx)("p", null, "The response will include a complete tree of schemas, classes and associated properties. For creating property validation rules, you will be using the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "name"), " values. However, the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "label"), " values may help you identify the correct classes and properties.")), (0,react_.mdx)(retrieve_validation_model_data_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-conclusion"
  }, "4. Conclusion"), (0,react_.mdx)("p", null, "You should be able to successfully retrieve the related IDs and schema info for your model. While this information is of limited value on its own, it is useful and necessary for creating clash detection and property validation tests, so check out the continue learning section to put your new knowledge to use.")), (0,react_.mdx)(retrieve_validation_model_data_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(retrieve_validation_model_data_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(retrieve_validation_model_data_ResourceTile, {
    title: "Clash Test Basics",
    href: "/tutorials/clash-test-basics",
    description: "A tutorial that covers the basics of the clash detection lifecycle and usage.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(retrieve_validation_model_data_ResourceTile, {
    title: "Validation API documentation",
    href: "/api-groups/validation/",
    description: "An overview and detailed version of Validation API documentation, including both Clash Detection and Property Validation.",
    mdxType: "ResourceTile"
  }))));
}
;
retrieve_validation_model_data_MDXContent.isMDXComponent = true;
var retrieve_validation_model_data_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "1-optional-create-a-test-itwin-and-imodel-for-testing",
    level: 2,
    title: "1. (Optional) Create a Test iTwin and iModel for testing",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-the-api-reference-try-it-out-section",
      level: 3,
      title: "Grab a user token from the API reference “Try it out” Section",
      children: []
    }]
  }, {
    id: "3-retrieving-models-and-categories",
    level: 2,
    title: "3. Retrieving Models and Categories",
    children: [{
      id: "31-extractionretrieval-request-apis",
      level: 3,
      title: "3.1 Extraction/Retrieval Request APIs",
      children: []
    }, {
      id: "32-direct-imodel-query",
      level: 3,
      title: "3.2 Direct iModel Query",
      children: []
    }]
  }, {
    id: "4-get-schema-info",
    level: 2,
    title: "4. Get Schema Info",
    children: []
  }, {
    id: "4-conclusion",
    level: 2,
    title: "4. Conclusion",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var retrieve_validation_model_data_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/running-the-pnid-pipeline.mdx


var running_the_pnid_pipeline_excluded = ["components"];
var running_the_pnid_pipeline_jsx = (external_react_default()).createElement;


var running_the_pnid_pipeline_readingTime = {
  "text": "10 min read",
  "minutes": 9.1,
  "time": 546000,
  "words": 1820
};
/* @jsxRuntime classic */
/* @jsx mdx */

var running_the_pnid_pipeline_metadata = {
  title: 'Running the PnID ML Pipeline',
  tile: {
    name: 'Running the PnID ML Pipeline',
    description: 'Walk-through on how to run the PnID ML Model and get your Results.',
    href: '/tutorials/running-the-pnid-pipeline/',
    durationInMinutes: 15,
    relatedApiIds: ['synchronization/pnidtoitwin']
  }
};
var running_the_pnid_pipeline_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var running_the_pnid_pipeline_Introduction = running_the_pnid_pipeline_makeShortcode("Introduction");
var running_the_pnid_pipeline_TutorialSection = running_the_pnid_pipeline_makeShortcode("TutorialSection");
var running_the_pnid_pipeline_CreateSampleAppButton = running_the_pnid_pipeline_makeShortcode("CreateSampleAppButton");
var running_the_pnid_pipeline_Alert = running_the_pnid_pipeline_makeShortcode("Alert");
var running_the_pnid_pipeline_Title = running_the_pnid_pipeline_makeShortcode("Title");
var running_the_pnid_pipeline_CodeBlock = running_the_pnid_pipeline_makeShortcode("CodeBlock");
var running_the_pnid_pipeline_ContinueLearningSection = running_the_pnid_pipeline_makeShortcode("ContinueLearningSection");
var running_the_pnid_pipeline_TileList = running_the_pnid_pipeline_makeShortcode("TileList");
var running_the_pnid_pipeline_ResourceTile = running_the_pnid_pipeline_makeShortcode("ResourceTile");
var running_the_pnid_pipeline_layoutProps = {
  metadata: running_the_pnid_pipeline_metadata
};
var running_the_pnid_pipeline_MDXLayout = "wrapper";
function running_the_pnid_pipeline_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, running_the_pnid_pipeline_excluded);
  return (0,react_.mdx)(running_the_pnid_pipeline_MDXLayout, (0,esm_extends/* default */.Z)({}, running_the_pnid_pipeline_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(running_the_pnid_pipeline_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "15",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "Use this quick start to help you understand how to create a PnID inference run and retrieve its results."), (0,react_.mdx)("p", null, "By the end of this walk-through, you will have all the tools you need to take any PnID drawings with piping components and\nrun it through the PnID interface. You will gain familiarity with the workflow and all APIs\ninvolved and be able to integrate the PnID model into your iTwin-Powered\napplications.")), (0,react_.mdx)(running_the_pnid_pipeline_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Created and configured a project. For instructions on creating a project, see\n", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/create-and-query-projects-guide"
  }, "Create and Query Projects"), ". You can use an existing Project\nif you have access to one."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Prepared PnID drawings with piping components."))), (0,react_.mdx)(running_the_pnid_pipeline_TutorialSection, {
    actions: [(0,react_.mdx)(running_the_pnid_pipeline_CreateSampleAppButton, {
      scopes: ['synchronization:read', 'synchronization:modify'],
      clientName: "Design Element Classification client",
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "PnID API"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "synchronization:read synchronization:modify"), " scopes enabled."))), (0,react_.mdx)(running_the_pnid_pipeline_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "To make requests to this APIs a valid user token is required. There are several ways to get one."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement the\nAuthorization Code workflow in your application."), (0,react_.mdx)(running_the_pnid_pipeline_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Here you can use the Client ID generated from previous application registration step."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-api-reference-try-it-section"
  }, "Grab a user token from Api reference \u201CTry it\u201D Section"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go to the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/pnid-to-itwin-v2/operations/get-itwin-inferences/"
  }, "API Documentation"), "."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click the \u201CTry it\u201D button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "For Authorization section select \u201CAuthorizationCode\u201D."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After the login popup closes, the Authorization header with your user token value should be visible."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Save your user token value to reuse later.")), (0,react_.mdx)(running_the_pnid_pipeline_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace the 'JWT_TOKEN' placeholder parameter in the next steps.")), (0,react_.mdx)(running_the_pnid_pipeline_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-choose-available-pnid-model-versions"
  }, "3. Choose available PnID Model versions"), (0,react_.mdx)("p", null, "Select an existing model version to use for your inference Run. See ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/pnid-to-itwin-v2/model-versions/"
  }, "Model versions"), " to view the supported PnID model versions."), (0,react_.mdx)(running_the_pnid_pipeline_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "We recommend using the latest model version; however, if backward compatibility is required, use the appropriate version of the model.")), (0,react_.mdx)(running_the_pnid_pipeline_TutorialSection, {
    actions: [(0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/synchronization/pnidtoitwin/inferences HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "json",
      code: "{\n  \"modelVersion\":\"1.3\",\n  \"iTwinId\":\"ea9cb5ab-22c5-4cef-807a-df47f07b01f3\",\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: 'Content-Type: application/json',
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "json",
      code: "{\n    \"inference\": {\n        \"id\": \"bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3\",\n        \"modelVersion\": \"1.3\",\n        \"lastModifiedDateTime\": \"2022-01-20T14:45:47.073Z\",\n        \"createdDateTime\": \"2022-01-20T14:45:47.073Z\",\n        \"_links\": {\n            \"iTwin\": {\n                \"href\": \"https://api.bentley.com/itwins/ea9cb5ab-22c5-4cef-807a-df47f07b01f3\"\n            },\n            \"run\": {\n                \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3/run\"\n            },\n            \"inputs\": {\n                \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3/inputs\"\n            },\n            \"results\": {\n                \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3/run/results\"\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-create-a-new-pnid-inference"
  }, "4. Create a new PnID inference"), (0,react_.mdx)("p", null, "Use the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/pnid-to-itwin-v2/operations/create-inference/"
  }, "Create Inference"), "\nAPI to create PnID inference for the provided project."), (0,react_.mdx)("p", null, "You have a couple of parameters available for configuring the PnID:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "modelVersion"), " - PnID Model version chosen from step 3."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "iTwinId"), " - Id of the iTwin that created the PnID Inference.")), (0,react_.mdx)(running_the_pnid_pipeline_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note the inference ID that is returned when creating a Inference will be needed in later steps.")), (0,react_.mdx)(running_the_pnid_pipeline_TutorialSection, {
    actions: [(0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/synchronization/pnidtoitwin/inferences/INFERENCE_ID/inputs HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/pdf\nContent-Dispposition: attachment; filename=\"pnid_1.pdf\"",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: 'Content-Type: application/json',
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "json",
      code: "{\n    \"input\": {\n        \"id\": \"cG5pZC5wZGY-\",\n        \"filename\": \"pnid.pdf\",\n        \"size\": 100,\n        \"_links\": {\n            \"inputs\": {\n                \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/inferences/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3/inputs\"\n            },\n            \"inference\": {\n                \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/inferences/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3\"\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-upload-data-to-pnid-inference-input"
  }, "5. Upload data to PnID Inference Input."), (0,react_.mdx)("p", null, "Use the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/pnid-to-itwin-v2/operations/upload-inference-input-content/"
  }, "Upload Inference Input Content"), "\nAPI to create or replace one of the PnID Inference Input files on which inference will run.")), (0,react_.mdx)(running_the_pnid_pipeline_TutorialSection, {
    actions: [(0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/synchronization/pnidtoitwin/inferences/INFERENCE_ID/run HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: 'Content-Type: application/json',
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "json",
      code: "{\n    \"run\": {\n        \"status\": \"inProgress\",\n        \"duration\": \"PT10M\",\n        \"progress\": 0.1,\n        \"createdDateTime\": \"2022-01-20T14:45:47.073Z\",\n        \"_links\": {\n            \"inputs\": {\n                \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3/inputs\"\n            },\n            \"results\": {\n                \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3/results\"\n            },\n            \"inference\": {\n                \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3\"\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-starts-pnid-inference-run-after-all-inputs-are-uploaded"
  }, "6. Starts PnID Inference Run after all inputs are uploaded."), (0,react_.mdx)("p", null, "Use the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/pnid-to-itwin-v2/operations/create-inference-run/"
  }, "Create Inference Run"), "\nAPI to start PnID inference Run after all inputs are uploaded."), (0,react_.mdx)(running_the_pnid_pipeline_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Run status may be ", (0,react_.mdx)("b", null, "Queued"), " for a short time while the process kicks off.")), (0,react_.mdx)(running_the_pnid_pipeline_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/synchronization/pnidtoitwin/inferences/INFERENCE_ID/run HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: 'Content-Type: application/json',
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "json",
      code: "{\n      \"run\": {\n          \"status\": \"inProgress\",\n          \"duration\": \"PT10M\",\n          \"progress\": 0.1,\n          \"createdDateTime\": \"2022-01-20T14:45:47.073Z\",\n          \"_links\": {\n              \"inputs\": {\n                  \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3/inputs\"\n              },\n              \"results\": {\n                  \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3/results\"\n              },\n              \"inference\": {\n                  \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3\"\n              }\n          }\n      }\n  }",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "query-status"
  }, "Query status"), (0,react_.mdx)("p", null, "To check the status of a run, use ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/pnid-to-itwin-v2/operations/get-inference-run/"
  }, "Get Inference Run Status"), "."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Finished"), " - Run has successfully completed. Results are ready to be used."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Canceled"), " - Run was canceled by user."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Failed"), " - Run failed to complete."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "NotStarted"), " - Run has not been triggered."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Queued"), " - Run was created, but has not started."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "InProgress"), " - Run was created and has started. Waiting for completion."))), (0,react_.mdx)(running_the_pnid_pipeline_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "7-retrieve-run-output"
  }, "7. Retrieve Run output"), (0,react_.mdx)("p", null, "Download the results once a PnID Run has successfully completed.")), (0,react_.mdx)(running_the_pnid_pipeline_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/synchronization/pnidtoitwin/inferences/INFERENCE_ID/run/results HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: 'Content-Type: application/json',
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "json",
      code: "{\n    \"results\": [{\n        \"id\": \"cG5pZF9wZGZfcDAwMDAxLmpzb24-\",\n        \"filename\": \"pnid_pdf_p00001.json\",\n        \"size\": 100,\n        \"_links\": {\n            \"content\": {\n                \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/inferences/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3/run/results/cG5pZF9wZGZfcDAwMDAxLmpzb24-/content\"\n            }\n        }\n    }],\n    \"_links\": {\n        \"self\": {\n            \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/inferences/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3/run/results\"\n        },\n        \"inference\": {\n            \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/inferences/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3\"\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "get-inference-run-results"
  }, "Get Inference Run Results"), (0,react_.mdx)("p", null, "Fetch a list of all pipeline results using the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/pnid-to-itwin-v2/operations/get-inference-run-results/"
  }, "Get Inference Run Results"), "\nAPI.")), (0,react_.mdx)(running_the_pnid_pipeline_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/synchronization/pnidtoitwin/inferences/{inferenceId}/run/results/FILE_ID/content HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "get-inference-run-result-content"
  }, "Get Inference Run Result Content"), (0,react_.mdx)("p", null, "To download a specific file from the Results, use the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/pnid-to-itwin-v2/operations/get-inference-run-result-content/"
  }, "Get Inference Run Result Content"), "\nAPI.")), (0,react_.mdx)(running_the_pnid_pipeline_TutorialSection, {
    actions: [(0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/synchronization/pnidtoitwin/inferences?iTwinId=ITWIN_ID HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: 'Content-Type: application/json',
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "json",
      code: "{\n    \"inferences\": [{\n        \"id\": \"bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3\",\n        \"modelVersion\": \"1.3\",\n        \"lastModifiedDateTime\": \"2022-01-20T14:45:47.073Z\",\n        \"createdDateTime\": \"2022-01-20T14:45:47.073Z\",\n        \"_links\": {\n            \"iTwin\": {\n                \"href\": \"https://api.bentley.com/itwins/ea9cb5ab-22c5-4cef-807a-df47f07b01f3\"\n            },\n            \"run\": {\n                \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/inferences/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3/run\"\n            },\n            \"inputs\": {\n                \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/inferences/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3/inputs\"\n            },\n            \"results\": {\n                \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/inferences/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3/run/results\"\n            }\n        }\n    }],\n    \"_links\": {\n        \"next\": {\n            \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/inferences?iTwinId=ea9cb5ab-22c5-4cef-807a-df47f07b01f3&$top=100&$continuationToken=eyJOZXh0UGFydGl0aW9uS2V5IjoiMSExMDAhT0RnMll6TmlOMlF0TnpNM1pDMDBOakUwTFRsaE4yTXROV1JsTlRobE5qTm1OVGc0WHpBNFlqZzROVEV3TFdNek1tTXRORGt4WWkwNVpqZGhMVEZpTXpBd016azFPV1F6TlEtLSIsIk5leHRSb3dLZXkiOiIxASD4IU56Y3dNREU1T1RFdFl6UmpZeSAbTUdKaUxUa3dOMlV0WXpPrewtSmhZV0k0WlRBMSIsIk5leHRUYWJsZU5hbWUiOm51bGwsIlLncmdldExvY2F0aW9uIjowfQ--\"\n        },\n        \"self\": {\n            \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/inferences?iTwinId=ea9cb5ab-22c5-4cef-807a-df47f07b01f3&$top=100\"\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "8-get-previous-inferences-in-a-itwin"
  }, "8. Get previous inferences in a iTwin"), (0,react_.mdx)("p", null, "All PnID Runs are associated with a iTwin. To get a history of all Runs\nyou can call the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/pnid-to-itwin-v2/operations/get-itwin-inferences/"
  }, "Get iTwin Inferences"), "\nAPI.")), (0,react_.mdx)(running_the_pnid_pipeline_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "9-advanced"
  }, "9. Advanced"), (0,react_.mdx)("p", null, "We provide some additional APIs that provide a little more control and management over your PnID Inferences Runs.")), (0,react_.mdx)(running_the_pnid_pipeline_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "DELETE https://api.bentley.com/synchronization/pnidtoitwin/inferences/INFERENCE_ID/run HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "cancel-execution-of-pnid-inference-run"
  }, "Cancel execution of PnID Inference Run."), (0,react_.mdx)("p", null, "PnID Runs are complex and can take a long time to complete. Runs can be cancelled using\nthe ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/pnid-to-itwin-v2/operations/delete-inference-run/"
  }, "Delete Inference Run"), " API\nso you don\u2019t have to waste time waiting for Runs to naturally fail or complete when unnecessary.")), (0,react_.mdx)(running_the_pnid_pipeline_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "DELETE https://api.bentley.com/synchronization/pnidtoitwin/inferences/INFERENCE_ID HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "delete-pnid-inference"
  }, "Delete PnID Inference"), (0,react_.mdx)("p", null, "We strongly recommend deleting canceled Runs. You might also want to clean up a Project of stale or unnecessary\nhistorical Runs. Use the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/pnid-to-itwin-v2/operations/delete-inference/"
  }, "Delete Inference"), "\nAPI for this."), (0,react_.mdx)(running_the_pnid_pipeline_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Only completed Runs can be deleted. Completed Run statuses:", ' ', (0,react_.mdx)("b", null, "Failed, Canceled, Finished"), ".")), (0,react_.mdx)(running_the_pnid_pipeline_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/synchronization/pnidtoitwin/inferences/INFERENCE_ID/inputs HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: 'Content-Type: application/json',
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "json",
      code: "{\n    \"inputs\": [{\n        \"id\": \"cG5pZC5wZGY-\",\n        \"filename\": \"pnid.pdf\",\n        \"size\": 100,\n        \"_links\": {\n            \"input\": {\n                \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/inferences/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3/inputs/cG5pZC5wZGY-\"\n            },\n            \"content\": {\n                \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/inferences/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3/inputs/cG5pZC5wZGY-/content\"\n            }\n        }\n    }],\n    \"_links\": {\n        \"self\": {\n            \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/inferences/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3/inputs\"\n        },\n        \"inference\": {\n            \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/inferences/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3\"\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "get-pnid-inference-inputs"
  }, "Get PnID Inference Inputs"), (0,react_.mdx)("p", null, "Inference can contain several input files. To see the list of added inputs files use the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/pnid-to-itwin-v2/operations/get-inference-inputs/"
  }, "Get Inference Inputs"), "\nAPI.")), (0,react_.mdx)(running_the_pnid_pipeline_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/synchronization/pnidtoitwin/inferences/INFERENCE_ID/inputs/FILE_ID/content HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: 'Content-Type: application/json',
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "get-pnid-inference-input-content"
  }, "Get PnID Inference Input Content"), (0,react_.mdx)("p", null, "If there is a need to download the contents of a previously uploaded input file, use the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/pnid-to-itwin-v2/operations/get-inference-input-content/"
  }, "Get Inference Input Content"), "\nAPI.")), (0,react_.mdx)(running_the_pnid_pipeline_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "DELETE https://api.bentley.com/synchronization/pnidtoitwin/inferences/INFERENCE_ID/inputs/FILE_ID HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "delete-pnid-inference-input"
  }, "Delete PnID Inference Input"), (0,react_.mdx)("p", null, "If an invalid file was uploaded for inference, it is possible to remove that file. Use the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/pnid-to-itwin-v2/operations/delete-inference-input/"
  }, "Delete Inference Input"), "\nAPI for this.")), (0,react_.mdx)(running_the_pnid_pipeline_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/synchronization/pnidtoitwin/inferences/INFERENCE_ID HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v2+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(running_the_pnid_pipeline_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(running_the_pnid_pipeline_CodeBlock, {
      language: "json",
      code: "{\n      \"inference\": {\n          \"id\": \"bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3\",\n          \"modelVersion\": \"1.3\",\n          \"lastModifiedDateTime\": \"2022-01-20T14:45:47.073Z\",\n          \"createdDateTime\": \"2022-01-20T14:45:47.073Z\",\n          \"_links\": {\n              \"iTwin\": {\n                  \"href\": \"https://api.bentley.com/projects/ea9cb5ab-22c5-4cef-807a-df47f07b01f3\"\n              },\n              \"run\": {\n                  \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3/run\"\n              },\n              \"inputs\": {\n                  \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3/inputs\"\n              },\n              \"results\": {\n                  \"href\": \"https://api.bentley.com/synchronization/pnidtoitwin/bcbc71d4-c4d8-4cf7-b1fe-aaa194cd61c3/run/results\"\n              }\n          }\n      }\n  }",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "get-pnid-inference-by-specified-id"
  }, "Get PnID Inference by specified Id"), (0,react_.mdx)("p", null, "In order to get some information about already created inference you should use the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/pnid-to-itwin-v2/operations/get-inference/"
  }, "Get Inference"), "\nAPI for this.")), (0,react_.mdx)(running_the_pnid_pipeline_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "conclusion"
  }, "Conclusion"), (0,react_.mdx)("p", null, "Congratulations on completing this tutorial, at this point you should have been able to create PnID run for PnID drawings with piping components, query run status and finally download run results.")), (0,react_.mdx)(running_the_pnid_pipeline_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(running_the_pnid_pipeline_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(running_the_pnid_pipeline_ResourceTile, {
    title: "Reporting & Insights",
    href: "/api-groups/reporting-and-insights",
    description: "An overview and detailed Reporting & Insights API group documentation.",
    mdxType: "ResourceTile"
  }))));
}
;
running_the_pnid_pipeline_MDXContent.isMDXComponent = true;
var running_the_pnid_pipeline_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-api-reference-try-it-section",
      level: 3,
      title: "Grab a user token from Api reference “Try it” Section",
      children: []
    }]
  }, {
    id: "3-choose-available-pnid-model-versions",
    level: 2,
    title: "3. Choose available PnID Model versions",
    children: []
  }, {
    id: "4-create-a-new-pnid-inference",
    level: 2,
    title: "4. Create a new PnID inference",
    children: []
  }, {
    id: "5-upload-data-to-pnid-inference-input",
    level: 2,
    title: "5. Upload data to PnID Inference Input.",
    children: []
  }, {
    id: "6-starts-pnid-inference-run-after-all-inputs-are-uploaded",
    level: 2,
    title: "6. Starts PnID Inference Run after all inputs are uploaded.",
    children: [{
      id: "query-status",
      level: 3,
      title: "Query status",
      children: []
    }]
  }, {
    id: "7-retrieve-run-output",
    level: 2,
    title: "7. Retrieve Run output",
    children: [{
      id: "get-inference-run-results",
      level: 3,
      title: "Get Inference Run Results",
      children: []
    }, {
      id: "get-inference-run-result-content",
      level: 3,
      title: "Get Inference Run Result Content",
      children: []
    }]
  }, {
    id: "8-get-previous-inferences-in-a-itwin",
    level: 2,
    title: "8. Get previous inferences in a iTwin",
    children: []
  }, {
    id: "9-advanced",
    level: 2,
    title: "9. Advanced",
    children: [{
      id: "cancel-execution-of-pnid-inference-run",
      level: 3,
      title: "Cancel execution of PnID Inference Run.",
      children: []
    }, {
      id: "delete-pnid-inference",
      level: 3,
      title: "Delete PnID Inference",
      children: []
    }, {
      id: "get-pnid-inference-inputs",
      level: 3,
      title: "Get PnID Inference Inputs",
      children: []
    }, {
      id: "get-pnid-inference-input-content",
      level: 3,
      title: "Get PnID Inference Input Content",
      children: []
    }, {
      id: "delete-pnid-inference-input",
      level: 3,
      title: "Delete PnID Inference Input",
      children: []
    }, {
      id: "get-pnid-inference-by-specified-id",
      level: 3,
      title: "Get PnID Inference by specified Id",
      children: []
    }]
  }, {
    id: "conclusion",
    level: 2,
    title: "Conclusion",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var running_the_pnid_pipeline_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/stepping-through-an-issue-workflow.mdx


var stepping_through_an_issue_workflow_excluded = ["components"];
var stepping_through_an_issue_workflow_jsx = (external_react_default()).createElement;


var stepping_through_an_issue_workflow_readingTime = {
  "text": "6 min read",
  "minutes": 5.825,
  "time": 349500,
  "words": 1165
};
/* @jsxRuntime classic */
/* @jsx mdx */

var stepping_through_an_issue_workflow_metadata = {
  title: 'Stepping Through an Issue Workflow',
  tile: {
    name: 'Stepping Through an Issue Workflow',
    description: 'Use a workflow to track the status of an issue created through the Issues REST API.',
    thumbnail: null,
    href: '/tutorials/stepping-through-an-issue-workflow',
    durationInMinutes: 15,
    relatedApiIds: ['issues']
  }
};
var stepping_through_an_issue_workflow_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var stepping_through_an_issue_workflow_Introduction = stepping_through_an_issue_workflow_makeShortcode("Introduction");
var stepping_through_an_issue_workflow_TutorialSection = stepping_through_an_issue_workflow_makeShortcode("TutorialSection");
var stepping_through_an_issue_workflow_Title = stepping_through_an_issue_workflow_makeShortcode("Title");
var stepping_through_an_issue_workflow_ActionLinkButton = stepping_through_an_issue_workflow_makeShortcode("ActionLinkButton");
var stepping_through_an_issue_workflow_CodeBlock = stepping_through_an_issue_workflow_makeShortcode("CodeBlock");
var stepping_through_an_issue_workflow_Alert = stepping_through_an_issue_workflow_makeShortcode("Alert");
var stepping_through_an_issue_workflow_ContinueLearningSection = stepping_through_an_issue_workflow_makeShortcode("ContinueLearningSection");
var stepping_through_an_issue_workflow_TileList = stepping_through_an_issue_workflow_makeShortcode("TileList");
var stepping_through_an_issue_workflow_Tile = stepping_through_an_issue_workflow_makeShortcode("Tile");
var stepping_through_an_issue_workflow_layoutProps = {
  metadata: stepping_through_an_issue_workflow_metadata
};
var stepping_through_an_issue_workflow_MDXLayout = "wrapper";
function stepping_through_an_issue_workflow_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, stepping_through_an_issue_workflow_excluded);
  return (0,react_.mdx)(stepping_through_an_issue_workflow_MDXLayout, (0,esm_extends/* default */.Z)({}, stepping_through_an_issue_workflow_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(stepping_through_an_issue_workflow_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "15",
    summaryImageSrc: null,
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "Each issue type by default is associated with a workflow. Workflows help users keep track of which of their issues they have addressed and how far along they are with each."), (0,react_.mdx)("p", null, "In this tutorial you will learn how to look up the workflow for the issue you created and then step the issue through the workflow\u2019s statuses until it is considered closed (i.e., done)."), (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "You will need to first complete the tutorial ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "../creating-your-first-issue/"
  }, "Creating Your First Issue"), " so that you have an issue to modify."), (0,react_.mdx)("p", null, "Take note of the issue\u2019s ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "type"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " properties, as you will need them here.")), (0,react_.mdx)(stepping_through_an_issue_workflow_TutorialSection, {
    actions: [(0,react_.mdx)(stepping_through_an_issue_workflow_Title, {
      mdxType: "Title"
    }, (0,react_.mdx)(stepping_through_an_issue_workflow_ActionLinkButton, {
      href: "/apis/issues-v1/operations/get-workflow/",
      title: "Try the Get Workflow endpoint",
      target: "_blank",
      buttonText: "Go",
      mdxType: "ActionLinkButton"
    })), (0,react_.mdx)(stepping_through_an_issue_workflow_Title, {
      mdxType: "Title"
    }, "Sample request"), (0,react_.mdx)(stepping_through_an_issue_workflow_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/issues/workflows/<your-issue-type>?projectId=<your-project-id> HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(stepping_through_an_issue_workflow_Title, {
      mdxType: "Title"
    }, "Sample response"), (0,react_.mdx)(stepping_through_an_issue_workflow_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\n\n{\n  \"workflow\":{\n    \"id\":\"xospFt7H20-9uSSLOwfBeMrXBKJQWpdOqXbvQ8xzG7s\",\n    \"startStates\":[\"Open\"],\n    \"type\":\"Field Data\",\n    \"states\":[\n      {\n        \"name\":\"Open\",\n        \"color\":\"#ff0000\",\n        \"editableProperties\":[],\n        \"stateCategory\":\"Open\"\n      },\n      {\n        \"name\":\"Assigned\",\n        \"color\":\"#ff9900\",\n        \"editableProperties\":[\n          \"AssignedTo\",\n          \"AssignedToId\",\n          \"_DueDate\",\n          \"_AssignedUsers\"\n        ],\n        \"stateCategory\":\"Open\"\n      },\n      {\n        \"name\":\"Review\",\n        \"color\":\"#ffff00\",\n        \"editableProperties\":[\n          \"AssignedTo\",\n          \"AssignedToId\",\n          \"_DueDate\",\n          \"_AssignedUsers\"\n        ],\n        \"stateCategory\":\"Open\"\n      },\n      {\n        \"name\":\"Approved\",\n        \"color\":\"#66cc00\",\n        \"editableProperties\":[\"!\"],\n        \"stateCategory\":\"Closed\"\n      },\n      {\n        \"name\":\"Rejected\",\n        \"color\":\"#990000\",\n        \"editableProperties\":[\"!\"],\n        \"stateCategory\":\"Closed\"\n      },\n      {\n        \"name\":\"Voided\",\n        \"color\":\"#999999\",\n        \"editableProperties\":[\"!\"],\n        \"stateCategory\":\"Closed\"\n      }\n    ],\n    \"transitions\":[\n      {\n        \"displayName\":\"Assign\",\n        \"start\":\"Open\",\n        \"end\":\"Assigned\",\n        \"notes\":\"None\"\n      },\n      {\n        \"displayName\":\"Void\",\n        \"start\":\"Open\",\n        \"end\":\"Voided\",\n        \"notes\":\"None\"\n      },\n      {\n        \"displayName\":\"Send for Review\",\n        \"start\":\"Assigned\",\n        \"end\":\"Review\",\n        \"notes\":\"None\"\n      },\n      {\n        \"displayName\":\"Send back\",\n        \"start\":\"Assigned\",\n        \"end\":\"Open\",\n        \"notes\":\"None\"\n      },\n      {\n        \"displayName\":\"Approve\",\n        \"start\":\"Review\",\n        \"end\":\"Approved\",\n        \"notes\":\"None\"\n      },\n      {\n        \"displayName\":\"Reject\",\n        \"start\":\"Review\",\n        \"end\":\"Rejected\",\n        \"notes\":\"None\"\n      },\n      {\n        \"displayName\":\"Void\",\n        \"start\":\"Review\",\n        \"end\":\"Voided\",\n        \"notes\":\"None\"\n      },\n      {\n        \"displayName\":\"Send back\",\n        \"start\":\"Review\",\n        \"end\":\"Assigned\",\n        \"notes\":\"None\"\n      },\n      {\n        \"displayName\":\"Reopen\",\n        \"start\":\"Approved\",\n        \"end\":\"Review\",\n        \"notes\":\"None\"\n      },\n      {\n        \"displayName\":\"Reopen\",\n        \"start\":\"Rejected\",\n        \"end\":\"Review\",\n        \"notes\":\"None\"\n      },\n      {\n        \"displayName\":\"Reopen\",\n        \"start\":\"Voided\",\n        \"end\":\"Review\",\n        \"notes\":\"None\"\n      }\n    ],\n    \"startingTransitions\":[\n      {\n        \"displayName\":\"Create as Open\",\n        \"start\":null,\n        \"end\":\"Open\",\n        \"notes\":\"None\"\n      }\n    ],\n    \"uninitializedState\":{\n      \"name\":null,\n      \"color\":null,\n      \"editableProperties\":[],\n      \"stateCategory\":null\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-look-up-the-workflow"
  }, "1. Look Up the Workflow"), (0,react_.mdx)("p", null, "Make a GET request to the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/issues-v1/operations/get-workflow/"
  }, "Get Workflow"), " endpoint to retrieve the workflow definition."), (0,react_.mdx)("h4", {
    "id": "url"
  }, "URL"), (0,react_.mdx)("p", null, "The URL of the request includes a path of ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "/workflows"), " followed by your issue type. You must also provide ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "projectId"), " as a query string parameter."), (0,react_.mdx)("p", null, "Format: ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/issues/workflows/<type>?projectId=<projectId>")), (0,react_.mdx)("h4", {
    "id": "understanding-the-workflow-definition"
  }, "Understanding the Workflow Definition"), (0,react_.mdx)("p", null, "The workflow definition in the response body consists of two main concepts: ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "states"), " and ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "transitions"), ". States are named statuses that an issue can have as the value of its ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "status"), " property. Transitions dictate the possible changes between states; if an issue is in Status A, then it can be changed to Status B if and only if there is a transition with a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "start"), " of A and an ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "end"), " of B."), (0,react_.mdx)("p", null, "Thus, a workflow can be pictured as a flowchart where states are bubbles and transitions are arrows. Below is a visual representation of the workflow shown in the sample response body."), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/issue-workflow.png",
    "alt": "Visualized Workflow"
  })), (0,react_.mdx)("p", null, "Examine the sample response and note that one of the states in the list of states has a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "name"), " of \u201COpen\u201D. Also, there are transitions named \u201CAssign\u201D and \u201CVoid\u201D that both have a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "start"), " of \u201COpen\u201D, and have ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "end"), " values of \u201CAssigned\u201D and \u201CVoided\u201D, respectively. Thus, an issue with a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "status"), " of \u201COpen\u201D can be changed to have a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "status"), " of \u201CAssigned\u201D or \u201CVoided\u201D, but no other values."), (0,react_.mdx)(stepping_through_an_issue_workflow_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Tip for application designers: Usually, a UI element for setting an issue's workflow status consists of a dropdown list. Each transition that's available for the current status (i.e., has the current status as its ", (0,react_.mdx)("code", null, "start"), ") appears as an option in the list with text equal to the transition's ", (0,react_.mdx)("code", null, "displayName"), ". Selecting the option modifies the issue's status to the value of ", (0,react_.mdx)("code", null, "end"), " for that transition.")), (0,react_.mdx)(stepping_through_an_issue_workflow_TutorialSection, {
    actions: [(0,react_.mdx)(stepping_through_an_issue_workflow_Title, {
      mdxType: "Title"
    }, (0,react_.mdx)(stepping_through_an_issue_workflow_ActionLinkButton, {
      href: "/apis/issues-v1/operations/modify-issue/",
      target: "_blank",
      title: "Try the Update Issue endpoint",
      buttonText: "Go",
      mdxType: "ActionLinkButton"
    })), (0,react_.mdx)(stepping_through_an_issue_workflow_CodeBlock, {
      language: "http",
      code: "PATCH https://api.bentley.com/issues/<your-issue-id> HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(stepping_through_an_issue_workflow_Title, {
      mdxType: "Title"
    }, "Sample body (1)"), (0,react_.mdx)(stepping_through_an_issue_workflow_CodeBlock, {
      language: "json",
      code: "{\n  \"status\":\"Assigned\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(stepping_through_an_issue_workflow_Title, {
      mdxType: "Title"
    }, "Sample body (2)"), (0,react_.mdx)(stepping_through_an_issue_workflow_CodeBlock, {
      language: "json",
      code: "{\n  \"status\":\"Review\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(stepping_through_an_issue_workflow_Title, {
      mdxType: "Title"
    }, "Sample body (3)"), (0,react_.mdx)(stepping_through_an_issue_workflow_CodeBlock, {
      language: "json",
      code: "{\n  \"status\":\"Approved\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(stepping_through_an_issue_workflow_Title, {
      mdxType: "Title"
    }, "Sample response"), (0,react_.mdx)(stepping_through_an_issue_workflow_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\n\n{\n  \"issue\":{\n    \"id\":\"xospFt7H20-9uSSLOwfBeBs-UbbpqxhKgAL4wWWajpw\",\n    \"status\":\"Approved\",\n    \"createdBy\":\"Andrew Menzies\",\n    \"createdDateTime\":\"2021-06-11T18:17:45.4807786Z\",\n    \"lastModifiedBy\":\"Andrew Menzies\",\n    \"lastModifiedDateTime\":\"2021-06-21T19:43:55.146858Z\",\n    \"assignee\":{\n      \"displayName\":\"Andrew Menzies\",\n      \"id\":\"9e39de83-2457-466d-9de3-8d8a186b4189\"\n    },\n    \"number\":\"FID-00002\",\n    \"displayName\":\"FID-00002\",\n    \"subject\":\"Which Material? With model ID\",\n    \"description\":\"Version 1.2 of the plans does not specify what material this support beam will be made out of.\",\n    \"type\":\"Field Data\",\n    \"container\":{\n      \"id\":\"2374523948759432\"\n    },\n    \"item\":{\n      \"id\":\"9090096798506970\"\n    },\n    \"dueDate\":\"2021-07-30T00:00:00Z\",\n    \"state\":\"Closed\",\n    \"properties\":{\n      \"_StatusColor\":\"#66cc00\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-update-the-issues-status"
  }, "2. Update the Issue\u2019s Status"), (0,react_.mdx)("p", null, "An issue\u2019s ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "status"), " property dictates what step of the workflow it\u2019s currently on. When you create an issue, you can set its ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "status"), " to one of the strings listed in the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "startStates"), " array. Since you didn\u2019t set a status when creating your issue in the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Creating Your First Issue"), " tutorial, it was automatically set to the first ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "startState"), ", \u201COpen\u201D."), (0,react_.mdx)("p", null, "To change the issue\u2019s status, make a PATCH request to the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/issues-v1/operations/modify-issue/"
  }, "Update Issue"), " endpoint, just as you did in the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Creating Your First Issue"), " tutorial. Include the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "status"), " property, making sure to set its value according to the workflow transitions."), (0,react_.mdx)("p", null, "For instance, to change your issue from \u201COpen\u201D to \u201CAssigned\u201D, make a request with the body shown in \u201CSample Body (1)\u201D."), (0,react_.mdx)("p", null, "To keep stepping the issue through the workflow, make additional Update Issue requests, using \u201CSample Body (2)\u201D and then \u201CSample Body (3)\u201D. This will change the issue from \u201CAssigned\u201D to \u201CReview\u201D and then \u201CApproved\u201D. Once all of these requests are done, you should get the response shown under \u201CSample response\u201D."), (0,react_.mdx)("p", null, "Note that the \u201CApproved\u201D status in the workflow definition has a ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "stateCategory"), " of \u201CClosed\u201D rather than \u201COpen\u201D. ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "stateCategory"), " is a conceptual grouping of workflow states into one of three types: \u201COpen\u201D, \u201CClosed\u201D, and \u201CDraft\u201D. Conceptually, to users, an issue in an Open state generally requires attention; one in Closed has been taken care of (or deemed not a problem). A Draft issue is being worked on by its creator and may not be ready for review by others yet. In terms of functionality, Open and Draft issues can both be edited like normal, but a Closed issue cannot be edited except to change its ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "status"), "."), (0,react_.mdx)(stepping_through_an_issue_workflow_Alert, {
    mdxType: "Alert"
  }, "Note: The ", (0,react_.mdx)("strong", null, "state"), " property of an issue (not to be confused with", ' ', (0,react_.mdx)("strong", null, "status"), ") corresponds to the ", (0,react_.mdx)("strong", null, "stateCategory"), " of the issue's current ", (0,react_.mdx)("strong", null, "status"), " in the workflow definition. The", ' ', (0,react_.mdx)("strong", null, "state"), " property is set automatically and cannot be included in the body of ", (0,react_.mdx)("strong", null, "Create Issue"), " or ", (0,react_.mdx)("strong", null, "Update Issue"), ' ', "requests."), (0,react_.mdx)("p", null, "Well done! You now understand how to use the Issues REST API to find an issue\u2019s workflow, how the workflow affects updating the issue (the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "status"), " property), and how the issue becomes ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "open"), " or ", (0,react_.mdx)("em", {
    parentName: "p"
  }, "closed"), " as a result.")), (0,react_.mdx)(stepping_through_an_issue_workflow_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)(stepping_through_an_issue_workflow_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(stepping_through_an_issue_workflow_Tile, {
    name: "Stepping Through an Issue Workflow",
    description: "Learn how an issue's status can be set to track its progress.",
    href: "../stepping-through-an-issue-workflow",
    mdxType: "Tile"
  }), (0,react_.mdx)(stepping_through_an_issue_workflow_Tile, {
    name: "Model Issues Interactive Sample",
    description: "See the Issues API in action in an iTwin Viewer app.",
    href: "https://www.itwinjs.org/sandboxes/iTwinPlatform/Issues",
    mdxType: "Tile"
  }))));
}
;
stepping_through_an_issue_workflow_MDXContent.isMDXComponent = true;
var stepping_through_an_issue_workflow_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-look-up-the-workflow",
    level: 2,
    title: "1. Look Up the Workflow",
    children: []
  }, {
    id: "2-update-the-issues-status",
    level: 2,
    title: "2. Update the Issue’s Status",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }];
};
var stepping_through_an_issue_workflow_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/storage-quick-start.mdx


var storage_quick_start_excluded = ["components"];
var storage_quick_start_jsx = (external_react_default()).createElement;


var storage_quick_start_readingTime = {
  "text": "14 min read",
  "minutes": 13.085,
  "time": 785100,
  "words": 2617
};
/* @jsxRuntime classic */
/* @jsx mdx */

var storage_quick_start_metadata = {
  title: 'Get started with Storage API',
  tile: {
    name: 'Get started with Storage API',
    description: 'This tutorial is introduction to Storage API explaining main workflows and operations.',
    href: '/tutorials/storage-quick-start/',
    durationInMinutes: 45,
    relatedApiIds: ['storage']
  }
};
var storage_quick_start_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var storage_quick_start_Introduction = storage_quick_start_makeShortcode("Introduction");
var storage_quick_start_TutorialSection = storage_quick_start_makeShortcode("TutorialSection");
var storage_quick_start_LinkButton = storage_quick_start_makeShortcode("LinkButton");
var storage_quick_start_PostmanIcon = storage_quick_start_makeShortcode("PostmanIcon");
var storage_quick_start_CreateSampleAppButton = storage_quick_start_makeShortcode("CreateSampleAppButton");
var storage_quick_start_Alert = storage_quick_start_makeShortcode("Alert");
var storage_quick_start_Title = storage_quick_start_makeShortcode("Title");
var storage_quick_start_CodeBlock = storage_quick_start_makeShortcode("CodeBlock");
var storage_quick_start_ContinueLearningSection = storage_quick_start_makeShortcode("ContinueLearningSection");
var storage_quick_start_TileList = storage_quick_start_makeShortcode("TileList");
var storage_quick_start_ResourceTile = storage_quick_start_makeShortcode("ResourceTile");
var storage_quick_start_layoutProps = {
  metadata: storage_quick_start_metadata
};
var storage_quick_start_MDXLayout = "wrapper";
function storage_quick_start_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, storage_quick_start_excluded);
  return (0,react_.mdx)(storage_quick_start_MDXLayout, (0,esm_extends/* default */.Z)({}, storage_quick_start_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(storage_quick_start_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "45",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This quick start is going to help you work with using Storage API. Tutorial describes main operations required to create files with folders, retrieving and managing them.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(storage_quick_start_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(storage_quick_start_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A tool such as ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Postman"), " that can be used to execute http calls. These calls can also be made using the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Try It"), " button in the API documentation except from requests for file uploads."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Project created and configured. Try ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/projects/operations/create-project/"
  }, "Projects API"), "."))), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-preparing-to-use-storage-api"
  }, "1. Preparing to use Storage API"), (0,react_.mdx)("p", null, "There are some actions, which should be completed before starting using Storage API.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(storage_quick_start_CreateSampleAppButton, {
      tooltip: "Register a basic SPA App for this tutorial",
      clientName: "Get started with Storage API tutorial",
      scopes: ["storage:modify", "storage:read"],
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "11-register-an-application"
  }, "1.1 Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Storage API"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "storage:modify storage:read"), " scopes enabled."))), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "12-get-a-token"
  }, "1.2 Get a token"), (0,react_.mdx)("p", null, "To make request to API user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application."), (0,react_.mdx)(storage_quick_start_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Here you can use Client ID generated from previous registration step."), (0,react_.mdx)("h4", {
    "id": "grab-a-user-token-from-api-reference-try-it-section"
  }, "Grab a user token from API reference \u201CTry it\u201D Section"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go to ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/storage/operations/get-top-level-folders-and-files-by-project/"
  }, "Get top level folders and files by project - Storage")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click \u201CTry it\u201D button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "On Authorization section select \u201CAuthorizationCode\u201D."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After popup closes Authorization header with your user token value should be visible."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Save user token value for this tutorial.")), (0,react_.mdx)(storage_quick_start_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "HTTP request"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/storage?projectId=PROJECT_ID HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"items\": [],\n  \"_links\": {\n    \"self\": {\n        \"href\": \"https://api.bentley.com/storage?projectId=PROJECT_ID&$skip=0&$top=100\"\n    },\n    \"prev\": {\n        \"href\": \"https://api.bentley.com/storage?projectId=PROJECT_ID&$skip=0&$top=100\"\n    },\n    \"next\": {\n        \"href\": \"https://api.bentley.com/storage?projectId=PROJECT_ID&$skip=100&$top=100\"\n    },\n    \"folder\": {\n        \"href\": \"https://api.bentley.com/storage/folders/TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "13-get-a-link-to-the-storage"
  }, "1.3 Get a link to the Storage"), (0,react_.mdx)("p", null, "Files and folders created via Storage API are associated with project. If project is already existing then ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "root folder"), ", which is parent folder to first level files and folders could be retrieved by ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/projects/operations/create-project/"
  }, "getting project"), " operation."), (0,react_.mdx)("p", null, "Another way of getting link to the storage is by executing HTTP GET ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/storage?projectId=PROJECT_ID"
  }, "https://api.bentley.com/storage?projectId=PROJECT_ID"), " request."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/storage/operations/get-top-level-folders-and-files-by-project/"
  }, "Get top level folders and files by project documentation"), " page, \u201CTry it\u201D section."), (0,react_.mdx)("p", null, "Top level folders with files should be returned if there are any. Response will contain link to the storage, to the root folder.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "HTTP request"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/storage/folders/FOLDER_ID HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"folder\": {\n    \"id\": \"FOLDER_ID\",\n    \"displayName\": \"test\",\n    \"description\": \"test folder\",\n    \"path\": \"folderName/test\",\n    \"lastModifiedByDisplayName\": \"Bob User\",\n    \"createdDateTime\": \"2020-05-03T11:05:11.0133549Z\",\n    \"lastModifiedDateTime\": \"2020-05-03T11:05:11.0133549Z\",\n    \"parentFolderId\": \"TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s\",\n    \"_links\": {\n      \"createdBy\": {\n          \"href\": \"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/1140f95b-1ba0-49d9-bbf4-b53e54d80387\"\n      },\n      \"lastModifiedBy\": {\n          \"href\": \"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/1140f95b-1ba0-49d9-bbf4-b53e54d80387\"\n      },\n      \"parentFolder\": {\n          \"href\": \"https://api.bentley.com/storage/folders/TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-folder"
  }, "2. Get folder"), (0,react_.mdx)("p", null, "To retrieve root folder, HTTP GET ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/storage/folders/FOLDER_ID"
  }, "https://api.bentley.com/storage/folders/FOLDER_ID"), " request should be executed by using link from previous section or by existing another root folder ID."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/storage/operations/get-folder/"
  }, "Get folder documentation"), " page, \u201CTry it\u201D section.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "HTTP request"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/storage/folders/FOLDER_ID/folders HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"displayName\": \"test\",\n  \"description\": \"test folder\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"folder\": {\n    \"id\": \"TYJsPN0xtkWId0yUrXkS5pN5AQzuullIkxz5aDnDJSI\",\n    \"displayName\": \"test\",\n    \"description\": \"test folder\",\n    \"path\": \"test\",\n    \"lastModifiedByDisplayName\": \"Bob User\",\n    \"createdDateTime\": \"2020-05-03T11:05:11.0133549Z\",\n    \"lastModifiedDateTime\": \"2020-05-03T11:05:11.0133549Z\",\n    \"parentFolderId\": \"TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s\",\n    \"_links\": {\n      \"createdBy\": {\n          \"href\": \"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/1140f95b-1ba0-49d9-bbf4-b53e54d80387\"\n      },\n      \"lastModifiedBy\": {\n          \"href\": \"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/1140f95b-1ba0-49d9-bbf4-b53e54d80387\"\n      },\n      \"parentFolder\": {\n          \"href\": \"https://api.bentley.com/storage/folders/TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "Response headers"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "http",
      code: "Location: https://api.bentley.com/storage/folders/TYJsPN0xtkWId0yUrXkS5pN5AQzuullIkxz5aDnDJSI",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-create-folder"
  }, "3. Create folder"), (0,react_.mdx)("p", null, "Files are organized in a folder structure. To create folder request, send the payload using HTTP POST ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/storage/folders/FOLDER_ID/folders"
  }, "https://api.bentley.com/storage/folders/FOLDER_ID/folders"), ". ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), " is required, while ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "description"), " is optional in the payload."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/storage/operations/create-folder/"
  }, "Create folder documentation"), " page, \u201CTry it\u201D section."), (0,react_.mdx)("p", null, "Folder should be created and ready to be used.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-create-file"
  }, "4. Create file"), (0,react_.mdx)("p", null, "Create file is a three steps operation. First, create the metadata, then the actual file should be uploaded, and finally confirmation request needs to be sent. Created files can be synchronized with iModels. Try ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/api-groups/synchronization/"
  }, "Synchronization API"), ".")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "HTTP request"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/storage/folders/FOLDER_ID/files HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"displayName\": \"test.txt\",\n  \"description\": \"test file\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"_links\": {\n    \"completeUrl\": {\n        \"href\": \"https://api.bentley.com/storage/files/TYJsPN0xtkWId0yUrXkS5s4FlCroosBMlyDhZZmlzoc/complete\"\n    },\n    \"uploadUrl\": {\n        \"href\": \"https://projectshareprodeussa01.blob.core.windows.net/azuresqldbecpluginstorage/ProjectShare/File/b6145b7f-fee9-4a13-b1e4-5d061970373e?sv=2017-04-17&sr=b&sig=4NfdEriAONQhbHGkrTAL4bNMzjW8Qm5l%2FoEPiSQl%2BPo%3D&se=2020-10-19T15:12:51Z&sp=rw&rscd=attachment%3B%20filename%3D%22test.txt%22&userid=b905387c-a685-4d27-aab7-468c9ff0c9a6\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "41-create-files-metadata"
  }, "4.1 Create file\u2019s metadata"), (0,react_.mdx)("p", null, "Use root folder ID from previous step to create a file in the same directory as previously created folder and execute HTTP POST ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/storage/folders/FOLDER_ID/files"
  }, "https://api.bentley.com/storage/folders/FOLDER_ID/files"), " request. ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), " is required, while ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "description"), " is optional in the payload."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/storage/operations/create-file/"
  }, "Create file documentation"), " page, \u201CTry it\u201D section."), (0,react_.mdx)("p", null, "File\u2019s metadata should be created and links from the response will be used in the further steps to create file.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "HTTP request"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "http",
      code: "PUT https://projectshareprodeussa01.blob.core.windows.net/azuresqldbecpluginstorage/ProjectShare/File/b6145b7f-fee9-4a13-b1e4-5d061970373e?sv=2017-04-17&sr=b&sig=4NfdEriAONQhbHGkrTAL4bNMzjW8Qm5l%2FoEPiSQl%2BPo%3D&se=2020-10-19T15:12:51Z&sp=rw&rscd=attachment%3B%20filename%3D%22test.txt%22&userid=b905387c-a685-4d27-aab7-468c9ff0c9a6 HTTP/1.1\nx-ms-blob-type: BlockBlob",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "json",
      code: "test",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "42-upload-actual-file"
  }, "4.2 Upload actual file"), (0,react_.mdx)("p", null, "To upload actual file, use a request. A tool such as ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Postman"), " should be used to make http request. Url should be picked from previous request\u2019s response where ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "uploadUrl"), " is specified. The maximum size of the file is ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "256 MiB"), ". If bigger file needs to be uploaded there are possibility to use Azure libraries to upload file via given Azure SAS url or by uploading file with ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://docs.microsoft.com/en-us/rest/api/storageservices/operations-on-block-blobs"
  }, "multiple requests"), "."), (0,react_.mdx)(storage_quick_start_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note: Authorization header is not required for this request.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "HTTP request"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/storage/files/TYJsPN0xtkWId0yUrXkS5s4FlCroosBMlyDhZZmlzoc/complete HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"file\":{\n    \"id\":\"TYJsPN0xtkWId0yUrXkS5s4FlCroosBMlyDhZZmlzoc\",\n    \"displayName\":\"test.txt\",\n    \"description\":\"test file\",\n    \"path\":\"folderName/test.txt\",\n    \"size\":8,\n    \"lastModifiedByDisplayName\":\"Bob User\",\n    \"createdDateTime\":\"2020-05-03T11:05:11.0133549Z\",\n    \"lastModifiedDateTime\":\"2020-05-03T11:05:11.0133549Z\",\n    \"parentFolderId\":\"TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s\",\n    \"_links\":{\n      \"createdBy\":{\n        \"href\":\"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/1140f95b-1ba0-49d9-bbf4-b53e54d80387\"\n      },\n      \"lastModifiedBy\":{\n        \"href\":\"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/1140f95b-1ba0-49d9-bbf4-b53e54d80387\"\n      },\n      \"parentFolder\":{\n        \"href\":\"https://api.bentley.com/storage/folders/TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "43-complete-file-creation"
  }, "4.3 Complete file creation"), (0,react_.mdx)("p", null, "Confirmation is required after file upload. That will make file visible, and it could be used further. Url should be picked from the first step of file\u2019s metadata creation where ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "completeUrl"), " is specified."), (0,react_.mdx)("p", null, "Execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/storage/operations/complete-file-creation/"
  }, "Complete file upload"), " page, \u201CTry it\u201D section."), (0,react_.mdx)("p", null, "Your file should be placed in the storage and be ready to be used.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "HTTP request"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/storage/files/FILE_ID/download HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+octet-stream\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "http",
      code: "Location: https://projectshareprodeussa01.blob.core.windows.net/azuresqldbecpluginstorage/ProjectShare/File/b6145b7f-fee9-4a13-b1e4-5d061970373e?sv=2017-04-17&sr=b&sig=4NfdEriAONQhbHGkrTAL4bNMzjW8Qm5l%2FoEPiSQl%2BPo%3D&se=2020-10-19T15:12:51Z&sp=rw&rscd=attachment%3B%20filename%3D%22test.txt%22&userid=b905387c-a685-4d27-aab7-468c9ff0c9a6",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-download-file"
  }, "5. Download file"), (0,react_.mdx)("p", null, "Download the files by executing HTTP GET ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/storage/files/FILE_ID/download"
  }, "https://api.bentley.com/storage/files/FILE_ID/download"), " request."), (0,react_.mdx)("p", null, "The request can be executed in the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/storage/operations/download-file/"
  }, "Complete file upload"), " page, \u201CTry it\u201D section."), (0,react_.mdx)("p", null, "Download the file with the content specified in the previous request."), (0,react_.mdx)(storage_quick_start_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Execute a follow-up request using the link in the `Location` header, this should return a `302` redirect response.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "HTTP request"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/storage/folders/FOLDER_ID/list HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"items\":[\n    {\n      \"type\":\"folder\",\n      \"id\":\"TYJsPN0xtkWId0yUrXkS5pN5AQzuullIkxz5aDnDJSI\",\n      \"displayName\":\"test\",\n      \"description\":\"test folder\",\n      \"path\":\"test\",\n      \"lastModifiedByDisplayName\":\"Bob User\",\n      \"createdDateTime\":\"2020-05-03T11:05:11.0133549Z\",\n      \"lastModifiedDateTime\":\"2020-05-03T11:05:11.0133549Z\",\n      \"parentFolderId\":\"TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s\",\n      \"_links\":{\n        \"createdBy\":{\n          \"href\":\"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/1140f95b-1ba0-49d9-bbf4-b53e54d80387\"\n        },\n        \"lastModifiedBy\":{\n          \"href\":\"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/1140f95b-1ba0-49d9-bbf4-b53e54d80387\"\n        },\n        \"parentFolder\":{\n          \"href\":\"https://api.bentley.com/storage/folders/TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s\"\n        }\n      }\n    },\n    {\n      \"type\":\"file\",\n      \"id\":\"TYJsPN0xtkWId0yUrXkS5s4FlCroosBMlyDhZZmlzoc\",\n      \"displayName\":\"test.txt\",\n      \"description\":\"test file\",\n      \"path\":\"folderName/test.txt\",\n      \"size\":8,\n      \"lastModifiedByDisplayName\":\"Bob User\",\n      \"createdDateTime\":\"2020-05-03T11:05:11.0133549Z\",\n      \"lastModifiedDateTime\":\"2020-05-03T11:05:11.0133549Z\",\n      \"parentFolderId\":\"TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s\",\n      \"_links\":{\n        \"createdBy\":{\n          \"href\":\"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/1140f95b-1ba0-49d9-bbf4-b53e54d80387\"\n        },\n        \"lastModifiedBy\":{\n          \"href\":\"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/1140f95b-1ba0-49d9-bbf4-b53e54d80387\"\n        },\n        \"parentFolder\":{\n          \"href\":\"https://api.bentley.com/storage/folders/TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s\"\n        }\n      }\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://api.bentley.com/storage/folders/TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s/list?$skip=0&$top=100\"\n    },\n    \"prev\":{\n      \"href\":\"https://api.bentley.com/storage/folders/TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s/list?$skip=0&$top=100\"\n    },\n    \"next\":{\n      \"href\":\"https://api.bentley.com/storage/folders/TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s/list?$skip=100&$top=100\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-get-folders-and-files-in-the-folder"
  }, "6. Get folders and files in the folder"), (0,react_.mdx)("p", null, "Usually for navigating through folders and files request for getting the is send. HTTP GET ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/storage/folders/FOLDER_ID/list"
  }, "https://api.bentley.com/storage/folders/FOLDER_ID/list"), " with root folder id as folder id should be used to retrieve the items of root folder. It is possible to set page size by specifying ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "$skip"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "$top"), " query parameters. ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "$top"), " default is set to 100 if it is not changed."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/storage/operations/get-folders-and-files-in-folder/"
  }, "Get folders and files in folder documentation"), " page, \u201CTry it\u201D section."), (0,react_.mdx)("p", null, "Your created folder and file should be retrieved.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "HTTP request"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "http",
      code: "PATCH https://api.bentley.com/storage/folders/FOLDER_ID HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"displayName\":\"test update\",\n  \"description\":\"test folder update\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"folder\":{\n    \"id\":\"TYJsPN0xtkWId0yUrXkS5pN5AQzuullIkxz5aDnDJSI\",\n    \"displayName\":\"test\",\n    \"description\":\"test folder\",\n    \"path\":\"test\",\n    \"lastModifiedByDisplayName\":\"Bob User\",\n    \"createdDateTime\":\"2020-05-03T11:05:11.0133549Z\",\n    \"lastModifiedDateTime\":\"2020-05-03T11:09:02.0954397Z\",\n    \"parentFolderId\":\"TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s\",\n    \"_links\":{\n      \"createdBy\":{\n        \"href\":\"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/1140f95b-1ba0-49d9-bbf4-b53e54d80387\"\n      },\n      \"lastModifiedBy\":{\n        \"href\":\"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/1140f95b-1ba0-49d9-bbf4-b53e54d80387\"\n      },\n      \"parentFolder\":{\n        \"href\":\"https://api.bentley.com/storage/folders/TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "7-update-folder"
  }, "7. Update folder"), (0,react_.mdx)("p", null, "To update folder\u2019s metadata request with payload should be send to HTTP PATCH ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/storage/files/FOLDER_ID"
  }, "https://api.bentley.com/storage/files/FOLDER_ID"), ". ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "description"), " properties can be updated by sending this request."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/storage/operations/update-folder/"
  }, "Update folder documentation"), " page, \u201CTry it\u201D section."), (0,react_.mdx)("p", null, "Folder\u2019s properties should be updated.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "HTTP request"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "http",
      code: "PATCH https://api.bentley.com/storage/files/FILE_ID HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"displayName\":\"test update.txt\",\n  \"description\":\"test file update\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"folder\":{\n    \"id\":\"TYJsPN0xtkWId0yUrXkS5pN5AQzuullIkxz5aDnDJSI\",\n    \"displayName\":\"test\",\n    \"description\":\"test folder\",\n    \"path\":\"test\",\n    \"lastModifiedByDisplayName\":\"Bob User\",\n    \"createdDateTime\":\"2020-05-03T11:05:11.0133549Z\",\n    \"lastModifiedDateTime\":\"2020-05-03T11:15:02.0954397Z\",\n    \"parentFolderId\":\"TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s\",\n    \"_links\":{\n      \"createdBy\":{\n        \"href\":\"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/1140f95b-1ba0-49d9-bbf4-b53e54d80387\"\n      },\n      \"lastModifiedBy\":{\n        \"href\":\"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/1140f95b-1ba0-49d9-bbf4-b53e54d80387\"\n      },\n      \"parentFolder\":{\n        \"href\":\"https://api.bentley.com/storage/folders/TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "8-update-file"
  }, "8. Update file"), (0,react_.mdx)("p", null, "To update file\u2019s metadata request with payload should be send to HTTP PATCH ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/storage/files/FILE_ID"
  }, "https://api.bentley.com/storage/files/FILE_ID"), ". ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "description"), " properties can be updated by sending this request same as with folder update."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/storage/operations/update-file/"
  }, "Update file documentation"), " page, \u201CTry it\u201D section."), (0,react_.mdx)("p", null, "File\u2019s properties should be updated.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "9-update-files-content"
  }, "9. Update file\u2019s content"), (0,react_.mdx)("p", null, "Update file\u2019s content is three steps operation. Request for initiating update need to be made first then actual file should be uploaded and finally confirmation request needs to be sent.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "HTTP request"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/storage/files/FILE_ID/updateContent HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"_links\":{\n    \"completeUrl\":{\n      \"href\":\"https://api.bentley.com/storage/files/TYJsPN0xtkWId0yUrXkS5s4FlCroosBMlyDhZZmlzoc/complete\"\n    },\n    \"uploadUrl\":{\n      \"href\":\"https://projectshareprodeussa01.blob.core.windows.net/azuresqldbecpluginstorage/ProjectShare/File/b6145b7f-fee9-4a13-b1e4-5d061970373e?sv=2017-04-17&sr=b&sig=4NfdEriAONQhbHGkrTAL4bNMzjW8Qm5l%2FoEPiSQl%2BPo%3D&se=2020-10-19T15:12:51Z&sp=rw&rscd=attachment%3B%20filename%3D%22test.txt%22&userid=b905387c-a685-4d27-aab7-468c9ff0c9a6\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "91-initiate-files-content-update"
  }, "9.1 Initiate file\u2019s content update"), (0,react_.mdx)("p", null, "Use file ID from previous step and execute HTTP POST ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/storage/files/FILE_ID/updateContent"
  }, "https://api.bentley.com/storage/files/FILE_ID/updateContent"), " request."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/storage/operations/update-file-content/"
  }, "Update file\u2019s content documentation"), " page, \u201CTry it\u201D section."), (0,react_.mdx)("p", null, "Hyperlinks will be created, which should be used be used in the further steps to update file\u2019s content.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "HTTP request"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "http",
      code: "PUT https://projectshareprodeussa01.blob.core.windows.net/azuresqldbecpluginstorage/ProjectShare/File/b6145b7f-fee9-4a13-b1e4-5d061970373e?sv=2017-04-17&sr=b&sig=4NfdEriAONQhbHGkrTAL4bNMzjW8Qm5l%2FoEPiSQl%2BPo%3D&se=2020-10-19T15:12:51Z&sp=rw&rscd=attachment%3B%20filename%3D%22test.txt%22&userid=b905387c-a685-4d27-aab7-468c9ff0c9a6 HTTP/1.1\nx-ms-blob-type: BlockBlob",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "json",
      code: "test update",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "92-upload-actual-file"
  }, "9.2 Upload actual file"), (0,react_.mdx)("p", null, "This request is used to upload actual file. A tool such as ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Postman"), " should be used to make http request. Url should be picked from previous request\u2019s response where ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "uploadUrl"), " is specified. The maximum size of the file is ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "256 MiB"), ". If bigger file needs to be uploaded there are possibility to use Azure libraries to upload file via given Azure SAS url or by uploading file with ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://docs.microsoft.com/en-us/rest/api/storageservices/operations-on-block-blobs"
  }, "multiple requests"), "."), (0,react_.mdx)(storage_quick_start_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note: Authorization headers is not required for this request.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "HTTP request"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/storage/files/TYJsPN0xtkWId0yUrXkS5s4FlCroosBMlyDhZZmlzoc/complete HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"file\":{\n    \"id\":\"TYJsPN0xtkWId0yUrXkS5s4FlCroosBMlyDhZZmlzoc\",\n    \"displayName\":\"test.txt\",\n    \"description\":\"test file\",\n    \"path\":\"folderName/test.txt\",\n    \"size\":8,\n    \"lastModifiedByDisplayName\":\"Bob User\",\n    \"createdDateTime\":\"2020-05-03T11:05:11.0133549Z\",\n    \"lastModifiedDateTime\":\"2020-05-03T11:25:46.8659753Z\",\n    \"parentFolderId\":\"TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s\",\n    \"_links\":{\n      \"createdBy\":{\n        \"href\":\"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/1140f95b-1ba0-49d9-bbf4-b53e54d80387\"\n      },\n      \"lastModifiedBy\":{\n        \"href\":\"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/1140f95b-1ba0-49d9-bbf4-b53e54d80387\"\n      },\n      \"parentFolder\":{\n        \"href\":\"https://api.bentley.com/storage/folders/TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s\"\n      }\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "93-complete-files-content-upload"
  }, "9.3 Complete file\u2019s content upload"), (0,react_.mdx)("p", null, "After uploading actual file confirmation is needed. Url should be picked from the first step where ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "completeUrl"), " is specified."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/storage/operations/complete-file-creation/"
  }, "Complete file upload"), " page, \u201CTry it\u201D section."), (0,react_.mdx)("p", null, "File\u2019s content should be updated.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "10-recycle-bin-operations"
  }, "10. Recycle bin operations"), (0,react_.mdx)("p", null, "Files and folders can be deleted and restored. Deleted items can be queried as well because they will be only soft deleted and kept in the recycle bin. Items from recycle bin can be deleted manually if there is no reason to keep them longer otherwise they will be removed automatically after 30 days.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "HTTP request"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "http",
      code: "DELETE https://api.bentley.com/storage/folders/FOLDER_ID HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "101-delete-folder"
  }, "10.1 Delete folder"), (0,react_.mdx)("p", null, "Let\u2019s delete created folder. Execute HTTP DELETE ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/storage/folders/FOLDER_ID"
  }, "https://api.bentley.com/storage/folders/FOLDER_ID"), " request."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/storage/operations/delete-folder/"
  }, "Delete folder"), " page, \u201CTry it\u201D section."), (0,react_.mdx)("p", null, "Folder should be soft deleted.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "HTTP request"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "http",
      code: "DELETE https://api.bentley.com/storage/files/FILE_ID HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "102-delete-file"
  }, "10.2 Delete file"), (0,react_.mdx)("p", null, "Let\u2019s delete created file as well. Execute HTTP DELETE ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/storage/files/FILE_ID"
  }, "https://api.bentley.com/storage/files/FILE_ID"), " request."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/storage/operations/delete-file/"
  }, "Delete file"), " page, \u201CTry it\u201D section."), (0,react_.mdx)("p", null, "File should be soft deleted.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "HTTP request"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/storage/recycleBin?projectId=PROJECT_ID HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "json",
      code: "{\n  \"items\":[\n    {\n      \"type\":\"folder\",\n      \"id\":\"TYJsPN0xtkWId0yUrXkS5pN5AQzuullIkxz5aDnDJSI\",\n      \"displayName\":\"test\",\n      \"description\":\"test folder\",\n      \"path\":\"test\",\n      \"lastModifiedByDisplayName\":\"Bob User\",\n      \"createdDateTime\":\"2020-05-03T11:05:11.0133549Z\",\n      \"lastModifiedDateTime\":\"2020-05-03T11:05:11.0133549Z\",\n      \"parentFolderId\":\"TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s\",\n      \"_links\":{\n        \"createdBy\":{\n          \"href\":\"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/1140f95b-1ba0-49d9-bbf4-b53e54d80387\"\n        },\n        \"lastModifiedBy\":{\n          \"href\":\"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/1140f95b-1ba0-49d9-bbf4-b53e54d80387\"\n        },\n        \"parentFolder\":{\n          \"href\":\"https://api.bentley.com/storage/folders/TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s\"\n        }\n      }\n    },\n    {\n      \"type\":\"file\",\n      \"id\":\"TYJsPN0xtkWId0yUrXkS5s4FlCroosBMlyDhZZmlzoc\",\n      \"displayName\":\"test.txt\",\n      \"description\":\"test file\",\n      \"path\":\"folderName/test.txt\",\n      \"size\":8,\n      \"lastModifiedByDisplayName\":\"Bob User\",\n      \"createdDateTime\":\"2020-05-03T11:05:11.0133549Z\",\n      \"lastModifiedDateTime\":\"2020-05-03T11:25:46.8659753Z\",\n      \"parentFolderId\":\"TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s\",\n      \"_links\":{\n        \"createdBy\":{\n          \"href\":\"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/1140f95b-1ba0-49d9-bbf4-b53e54d80387\"\n        },\n        \"lastModifiedBy\":{\n          \"href\":\"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/1140f95b-1ba0-49d9-bbf4-b53e54d80387\"\n        },\n        \"parentFolder\":{\n          \"href\":\"https://api.bentley.com/storage/folders/TYJsPN0xtkWId0yUrXkS5g0CIYaGZLxEozrWBCOcS_s\"\n        }\n      }\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://api.bentley.com/storage/recycleBin?projectId=PROJECT_ID&$skip=0&$top=100\"\n    },\n    \"prev\":{\n      \"href\":\"https://api.bentley.com/storage/recycleBin?projectId=PROJECT_ID&$skip=0&$top=100\"\n    },\n    \"next\":{\n      \"href\":\"https://api.bentley.com/storage/recycleBin?projectId=PROJECT_ID&$skip=100&$top=100\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "103-get-folders-and-files-in-recycle-bin"
  }, "10.3. Get folders and files in recycle bin"), (0,react_.mdx)("p", null, "To retrieve soft-deleted files and folder, send HTTP GET ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/recycleBin?projectId=PROJECT_ID"
  }, "https://api.bentley.com/recycleBin?projectId=PROJECT_ID"), ". It is possible to set page size by specifying ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "$skip"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "$top"), " query parameters. ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "$top"), " default is set to 100 if it is not changed."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/storage/operations/get-folders-and-files-in-recycle-bin/"
  }, "Get folders and files in recycle bin documentation"), " page, \u201CTry it\u201D section."), (0,react_.mdx)("p", null, "The previously deleted files and folders are displayed.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "HTTP request"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/storage/recycleBin/folders/FOLDER_ID/restore HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "104-restore-folder"
  }, "10.4 Restore folder"), (0,react_.mdx)("p", null, "It is time to restore deleted folder. Execute HTTP POST ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/storage/recycleBin/folders/FOLDER_ID/restore"
  }, "https://api.bentley.com/storage/recycleBin/folders/FOLDER_ID/restore"), " request."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/storage/operations/restore-folder/"
  }, "Restore folder"), " page, \u201CTry it\u201D section."), (0,react_.mdx)("p", null, "Folder should be successfully restored.")), (0,react_.mdx)(storage_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(storage_quick_start_Title, {
      mdxType: "Title"
    }, "HTTP request"), (0,react_.mdx)(storage_quick_start_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/storage/recycleBin/files/FILE_ID/restore HTTP/1.1\nAccept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "105-restore-file"
  }, "10.5 Restore file"), (0,react_.mdx)("p", null, "To restore a file, execute HTTP POST ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/storage/recycleBin/files/FILE_ID/restore"
  }, "https://api.bentley.com/storage/recycleBin/files/FILE_ID/restore"), " request."), (0,react_.mdx)("p", null, "You can execute the request in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/storage/operations/restore-file/"
  }, "Restore file"), " page, \u201CTry it\u201D section."), (0,react_.mdx)("p", null, "File should be successfully restored.")), (0,react_.mdx)(storage_quick_start_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)("p", null, "Congratulation for completing Storage API tutorial! You should be able to manage your securely stored files, which can be integrated to other service."), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(storage_quick_start_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(storage_quick_start_ResourceTile, {
    title: "Storage API",
    href: "/apis/storage/",
    description: "There are more capabilities, which could be used for retrieving files, folders and more.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(storage_quick_start_ResourceTile, {
    title: "Projects API",
    href: "/apis/projects/",
    description: "Project is necessary for using Storage API. You can check its possibilities.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(storage_quick_start_ResourceTile, {
    title: "Synchronization API",
    href: "/api-groups/synchronization/",
    description: "Files can be synchronized to iModel via Synchronization API.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(storage_quick_start_ResourceTile, {
    title: "Export issue",
    href: "/apis/issues-v1/operations/export-issues-to-storage/",
    description: "Issues can be exported as PDF files to Storage.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(storage_quick_start_ResourceTile, {
    title: "Export form",
    href: "/apis/forms/operations/export-form-to-storage/",
    description: "Forms can be exported as PDF files to Storage.",
    mdxType: "ResourceTile"
  }))));
}
;
storage_quick_start_MDXContent.isMDXComponent = true;
var storage_quick_start_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-preparing-to-use-storage-api",
    level: 2,
    title: "1. Preparing to use Storage API",
    children: [{
      id: "11-register-an-application",
      level: 3,
      title: "1.1 Register an Application",
      children: []
    }, {
      id: "12-get-a-token",
      level: 3,
      title: "1.2 Get a token",
      children: []
    }, {
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "13-get-a-link-to-the-storage",
      level: 3,
      title: "1.3 Get a link to the Storage",
      children: []
    }]
  }, {
    id: "2-get-folder",
    level: 2,
    title: "2. Get folder",
    children: []
  }, {
    id: "3-create-folder",
    level: 2,
    title: "3. Create folder",
    children: []
  }, {
    id: "4-create-file",
    level: 2,
    title: "4. Create file",
    children: [{
      id: "41-create-files-metadata",
      level: 3,
      title: "4.1 Create file’s metadata",
      children: []
    }, {
      id: "42-upload-actual-file",
      level: 3,
      title: "4.2 Upload actual file",
      children: []
    }, {
      id: "43-complete-file-creation",
      level: 3,
      title: "4.3 Complete file creation",
      children: []
    }]
  }, {
    id: "5-download-file",
    level: 2,
    title: "5. Download file",
    children: []
  }, {
    id: "6-get-folders-and-files-in-the-folder",
    level: 2,
    title: "6. Get folders and files in the folder",
    children: []
  }, {
    id: "7-update-folder",
    level: 2,
    title: "7. Update folder",
    children: []
  }, {
    id: "8-update-file",
    level: 2,
    title: "8. Update file",
    children: []
  }, {
    id: "9-update-files-content",
    level: 2,
    title: "9. Update file’s content",
    children: [{
      id: "91-initiate-files-content-update",
      level: 3,
      title: "9.1 Initiate file’s content update",
      children: []
    }, {
      id: "92-upload-actual-file",
      level: 3,
      title: "9.2 Upload actual file",
      children: []
    }, {
      id: "93-complete-files-content-upload",
      level: 3,
      title: "9.3 Complete file’s content upload",
      children: []
    }]
  }, {
    id: "10-recycle-bin-operations",
    level: 2,
    title: "10. Recycle bin operations",
    children: [{
      id: "101-delete-folder",
      level: 3,
      title: "10.1 Delete folder",
      children: []
    }, {
      id: "102-delete-file",
      level: 3,
      title: "10.2 Delete file",
      children: []
    }, {
      id: "103-get-folders-and-files-in-recycle-bin",
      level: 3,
      title: "10.3. Get folders and files in recycle bin",
      children: []
    }, {
      id: "104-restore-folder",
      level: 3,
      title: "10.4 Restore folder",
      children: []
    }, {
      id: "105-restore-file",
      level: 3,
      title: "10.5 Restore file",
      children: []
    }]
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var storage_quick_start_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/synchronization-blob-tutorial.mdx


var synchronization_blob_tutorial_excluded = ["components"];
var synchronization_blob_tutorial_jsx = (external_react_default()).createElement;


var synchronization_blob_tutorial_readingTime = {
  "text": "12 min read",
  "minutes": 11.17,
  "time": 670200,
  "words": 2234
};
/* @jsxRuntime classic */
/* @jsx mdx */

var synchronization_blob_tutorial_metadata = {
  title: 'Synchronize a file from Azure Blob Storage',
  tile: {
    name: 'Synchronize a file from Azure Blob Storage',
    description: 'Walk-through how to synchronize a file from Azure Blob Storage to an iModel using Synchronization API.',
    thumbnail: '/images/synchronizationThumbnail.png',
    href: '/tutorials/synchronization-blob-tutorial/',
    durationInMinutes: 30,
    relatedApiIds: ['synchronization', 'imodels']
  }
};
var synchronization_blob_tutorial_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var synchronization_blob_tutorial_Introduction = synchronization_blob_tutorial_makeShortcode("Introduction");
var synchronization_blob_tutorial_TutorialSection = synchronization_blob_tutorial_makeShortcode("TutorialSection");
var CreateServiceAppButton = synchronization_blob_tutorial_makeShortcode("CreateServiceAppButton");
var synchronization_blob_tutorial_Title = synchronization_blob_tutorial_makeShortcode("Title");
var synchronization_blob_tutorial_HttpSample = synchronization_blob_tutorial_makeShortcode("HttpSample");
var synchronization_blob_tutorial_CodeBlock = synchronization_blob_tutorial_makeShortcode("CodeBlock");
var synchronization_blob_tutorial_ContinueLearningSection = synchronization_blob_tutorial_makeShortcode("ContinueLearningSection");
var synchronization_blob_tutorial_TileList = synchronization_blob_tutorial_makeShortcode("TileList");
var synchronization_blob_tutorial_Tile = synchronization_blob_tutorial_makeShortcode("Tile");
var synchronization_blob_tutorial_ResourceTile = synchronization_blob_tutorial_makeShortcode("ResourceTile");
var synchronization_blob_tutorial_layoutProps = {
  metadata: synchronization_blob_tutorial_metadata
};
var synchronization_blob_tutorial_MDXLayout = "wrapper";
function synchronization_blob_tutorial_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, synchronization_blob_tutorial_excluded);
  return (0,react_.mdx)(synchronization_blob_tutorial_MDXLayout, (0,esm_extends/* default */.Z)({}, synchronization_blob_tutorial_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(synchronization_blob_tutorial_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "30",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial guides you through synchronizing a file from Azure Blob Storage to an iModel using the Synchronization API. The Synchronization API works in an iTwin and iModel context. To synchronize a set of files, create a connection between the iModel and files. A Connection is an aggregation of properties such as file metadata, which is needed for synchronization. You can run Connections on-demand converting the specified file to an iModel.")), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    actions: function actions(data) {
      return [(0,react_.mdx)(CreateServiceAppButton, {
        tooltip: "Register a service application for this tutorial",
        allowedScopes: ["synchronization:read", "synchronization:modify", "imodels:read", "imodels:modify"],
        clientName: "Synchronization tutorial client",
        mdxType: "CreateServiceAppButton"
      }, "Register")];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-a-service-application"
  }, "1. Register a Service Application"), (0,react_.mdx)("p", null, "To start the tutorial you will need to register an application to be able to use iTwin Platform APIs.\nTo make your tutorial more interactive please use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register Application"), " button."), (0,react_.mdx)("p", null, "After you click this button it will register a client and will display these settings."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "client_id"), ": the unique identifier for your application. It is displayed on the application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "client_secret"), ": the secret created and displayed when you created the application."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "scope"), ": a list of accesses granted to the application. Displayed on the application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), "."))), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-access-token"
  }, "2. Get Access Token"), (0,react_.mdx)("p", null, "In this tutorial, we are using the Client credentials authentication workflow. This workflow allows a web service (confidential client) to use its own credentials instead of impersonating a user to authenticate when calling a web service. Permissions are granted directly to the application itself by an administrator. When the App presents a token to a resource, the resource ensures the App is authorized to perform the action since there is no user involved in the authentication.")), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    subSection: true,
    actions: function actions(data) {
      var _data$clientId, _data$clientSecret, _data$scope;
      return [(0,react_.mdx)(synchronization_blob_tutorial_Title, {
        mdxType: "Title"
      }, "Request to Token endpoint"), (0,react_.mdx)(synchronization_blob_tutorial_HttpSample, {
        method: "POST",
        url: "".concat(data.authority, "/connect/token"),
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: new URLSearchParams({
          client_id: (_data$clientId = data.clientId) !== null && _data$clientId !== void 0 ? _data$clientId : 'CLIENT_ID',
          client_secret: (_data$clientSecret = data.clientSecret) !== null && _data$clientSecret !== void 0 ? _data$clientSecret : 'CLIENT_SECRET',
          scope: (_data$scope = data.scope) !== null && _data$scope !== void 0 ? _data$scope : 'synchronization:read synchronization:modify imodels:read imodels:modify',
          grant_type: 'client_credentials'
        }).toString(),
        saveResponseTo: "tokenResponse",
        canSendRequest: data.clientId && data.clientSecret && data.scope,
        tooltip: "Send a request to get an access token",
        mdxType: "HttpSample"
      })];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-to-token-endpoint"
  }, "Request to Token endpoint"), (0,react_.mdx)("p", null, "Call the token endpoint with the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "'Content-Type': 'application/x-www-form-urlencoded'"), " header."), (0,react_.mdx)("p", null, "Request body (with ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.w3schools.com/tags/ref_urlencode.ASP"
  }, "url encoded"), " characters):"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "client_id"), ": the unique identifier generated when creating the application; you can find it on the ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/my-apps"
  }, "My Apps"), " page. The ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "client_id"), " is displayed in the last step if the App was created during this tutorial."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "client_secret"), ": the secret created and displayed when you created the application."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "scope"), ": space separated scopes (in this tutorial: ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "synchronization:read synchronization:modify imodels:read imodels:modify"), ")"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "grant_type"), ": ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "client_credentials"), " it indicates a authorization flow for service-to-service communication."))), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    subSection: true,
    actions: function actions(data) {
      return [(0,react_.mdx)(synchronization_blob_tutorial_Title, {
        mdxType: "Title"
      }, "Response from the Token endpoint"), (0,react_.mdx)(synchronization_blob_tutorial_CodeBlock, {
        language: "json",
        code: JSON.stringify(data.tokenResponse || {
          "access_token": "JWT_TOKEN",
          "token_type": "Bearer",
          "expires_in": 3599
        }, undefined, 2),
        mdxType: "CodeBlock"
      })];
    },
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response"
  }, "Response"), (0,react_.mdx)("p", null, "Response contains:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "token_type"), ": ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Bearer"), " - part of Authorization header that is constructed like ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorize: token_type access_token"), ". For more information, see ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://www.oauth.com/oauth2-servers/differences-between-oauth-1-2/bearer-tokens/"
  }, "Difference between OAuth 1.0 and OAuth 2.0"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "access_token"), ": access token itself (in ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://jwt.io"
  }, "JWT"), " format) that will be passed into ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Authorize"), " header for api calls as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Bearer JWT_TOKEN"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "expires_in"), ": lifespan of access token in seconds."))), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-create-an-imodel"
  }, "3. Create an iModel"), (0,react_.mdx)("p", null, "An iModel is a specialized information container for exchanging data associated with the lifecycle of infrastructure assets.\niModels were created to facilitate the sharing and distribution of information regardless of the source and format of the information."), (0,react_.mdx)("p", null, "The iTwin Platform iModels API is based on iModelHub cloud service which enables alignment, accountability, and accessibility of infrastructure digital twins.\nIt is the control center for iModels and is responsible for coordinating concurrent access to iModels as well as changes made to them.")), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_blob_tutorial_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/imodels HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request"
  }, "Request"), (0,react_.mdx)("p", null, "An empty iModel is created by sending a HTTP POST message to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/imodels/"
  }, "https://api.bentley.com/imodels/"), " endpoint with the payload describing the iModel to be created.")), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_blob_tutorial_CodeBlock, {
      language: "json",
      code: "{\n      \"iTwinId\": \"ITWIN_ID\",\n      \"name\": \"Sun City Renewable-energy Plant\",\n      \"description\": \"Overall model of solar farms in Sun City\",\n      \"extent\": {\n          \"southWest\": {\n            \"latitude\": 46.13267702834806,\n            \"longitude\": 7.672120009938448\n          },\n          \"northEast\": {\n            \"latitude\": 46.302763954781234,\n            \"longitude\": 7.835541640797823\n          }\n        }\n    }",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-body"
  }, "Request Body"), (0,react_.mdx)("p", null, "There are two required properties for the create iModel payload."), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "name"), " - iModel name is required which uniquely identifies the iModel within the iTwin. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iTwinId"), " - provides the iTwin identifier that created iModel will belong to. The iTwin identifier is a required property. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "description"), " - free form text field so you could give more information about the iModel. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "extent"), " - iModels usually are placed at some location on the Earth.\nThis property allows to specify the maximum rectangular area on the Earth which encloses the iModel.\nThe maximum extent is used to help keep your iModel clean.\nWhen new elements are imported, those outside the extent will be flagged for further processing.\nThis extent will also help to zoom to the area of interest in web viewers.")), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-get-a-blob-sas-url"
  }, "4. Get a Blob SAS Url"), (0,react_.mdx)("p", null, "This tutorial shows how to synchronize a file stored on Azure blob storage. Files from Azure blob storage can be accessed through preauthenticated SAS urls."), (0,react_.mdx)("p", null, "There are two ways to get a SAS url:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://docs.microsoft.com/en-us/azure/cognitive-services/translator/document-translation/create-sas-tokens?tabs=blobs"
  }, "Create a SAS url for blob manually")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://docs.microsoft.com/en-us/azure/storage/blobs/sas-service-create?tabs=dotnet"
  }, "Create a SAS url for blob programatically")))), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-create-a-connection"
  }, "5. Create a Connection"), (0,react_.mdx)("p", null, "The synchronization process is based on connections that establish links from design files to iModels. There can be multiple connections for an iModel, and those can be executed on-demand multiple times to synchronize changes. In this step, we will be creating such a connection.")), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_blob_tutorial_CodeBlock, {
      language: "http",
      code: "POST\xA0https://api.bentley.com/synchronization/imodels/manifestConnections HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-1"
  }, "Request"), (0,react_.mdx)("p", null, "To create a connection, send a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "POST"), " request to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "synchronization/imodels/manifestConnections"), " endpoint."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Authorization\xA0header with valid Bearer token is required."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "IMODEL_ID of created iModel from step 3."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "FILE_ID is used to uniquelly identify a file in an imodel. Synchronizing same file again same file id should be provided."))), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_blob_tutorial_CodeBlock, {
      language: "json",
      code: "{\n    \"displayName\": \"Connection1\",\n    \"iModelId\": \"IMODEL_ID\",\n    \"sourceFiles\": [{\n        \"sourceFileId\": \"FILE_ID\"\n    }],\n    \"authenticationType\": \"Service\"\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-body-1"
  }, "Request Body"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "displayName"), " - user facing connection name"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "iModelId"), ": - id of the iModel that contains the connection"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "sourceFiles"), " - information about the source files", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "sourceFileId"), " - id of the file from the external document management system"))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "authenticationType"), " - set the property to ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Service"), " to use the API from server application without user context."))), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_blob_tutorial_CodeBlock, {
      language: "json",
      code: "{\n      \"connection\": {\n          \"iModelId\": \"IMODEL_ID\",\n          \"iTwinId\": \"ITWIN_ID\",\n          \"authenticationType\": \"Service\",\n          \"_links\": {\n              \"iModel\": {\n                  \"href\": \"https://api.bentley.com/imodels/IMODEL_ID\"\n              },\n              \"iTwin\": {\n                  \"href\": \"https://api.bentley.com/itwins/ITWIN_ID\"\n              },\n              \"lastRun\": null\n          },\n          \"id\": \"CONNECTION_ID\",\n          \"displayName\": \"Connection to a file\"\n      }\n    }",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response-1"
  }, "Response"), (0,react_.mdx)("p", null, "Note the Id as you will need it in the next step.")), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-run-a-connection"
  }, "6. Run a Connection"), (0,react_.mdx)("p", null, "A Run defines a single connection synchronization process. It can be initialized manually by sending a run start request.")), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_blob_tutorial_CodeBlock, {
      language: "http",
      code: "POST\xA0https://api.bentley.com/synchronization/imodels/manifestConnections/CONNECTION_ID/runs HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-2"
  }, "Request"), (0,react_.mdx)("p", null, "Send a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "POST"), " request to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "synchronization/imodels/manifestConnections/{connectionId}/runs"), "\xA0endpoint with a valid connection ID to run a connection."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Authorization\xA0header with valid Bearer token is required."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "CONNECTION_ID which should be started for processing. Use the value from previous step response."))), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_blob_tutorial_CodeBlock, {
      language: "json",
      code: "{\n        \"sourceFiles\": [{\n        \"id\": \"FILE_ID\",\n        \"name\": \"FileName.dgn\",\n        \"url\": \"https://myaccount.blob.core.windows.net/files/FileName.dgn?sv=2012-02-12&st=2009-02-09&se=2009-02-10&sr=c&sp=r&si=YWJjZGVmZw%3d%3d&sig=dD80ihBh5jfNpymO5Hg1IdiJIEvHcJpCMiCMnN%2fRnbI%3d\",\n        \"connector\": \"MSTN\",\n        \"documentAttribute \":{\n          \"className\":\"SchemaName:ClassName\",\n            \"properties\":{\n               \"Revision\":\"R01\",\n               \"Suitability\":\"S01\",\n               \"CodeValue\":\"89c7f032-6dfb-4a0b-8511-983e2d18728a\"\n            }\n        }\n    }]\n        \"documentAttributeSchemaUrl\":\"\"https://blobstoragelocation/documentAttributeSchema.json\"\"\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-body-2"
  }, "Request Body"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("p", {
    parentName: "li"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "sourceFiles"), " - information about source files"), (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "id"), " - id of the file from external document management system"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "name"), " - name of a file"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "url"), " - valid blob SAS url with read permissions"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "connector"), " - identifier of the connector used to process the file. For more information, see ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/synchronization/supported-formats/"
  }, "Supported formats."))), (0,react_.mdx)("h3", {
    parentName: "li",
    "id": "optional-properties"
  }, "Optional Properties"), (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("p", {
    parentName: "li"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "documentAttribute"), " - A document attribute consists of the following:"), (0,react_.mdx)("pre", {
    parentName: "li"
  }, (0,react_.mdx)("code", {
    parentName: "pre"
  }, "- className - Defines the ECClass in the schema to be used for the associated document. Classes are derived from published BIS schema named documentMetadataClass. The JSON schema for the document metadata is available here (https://cdn.jsdelivr.net/npm/@bentley/document-metadata-schema@1.0.0/DocumentMetadata.ecschema.json)\n- properties - Defines the properties to be set for the associated document. These properties are derived from the above mentioned Class.\n"))))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("p", {
    parentName: "li"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "documentAttributeSchemaUrl"), " - URL contains a JSON file that has document attribute schema as defined in iTwin.js. For more details on ECSchema please see the iTwin.js documentation (", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://www.itwinjs.org/v1/bis/ec/ec-schema/"
  }, "https://www.itwinjs.org/v1/bis/ec/ec-schema/"), "). This schema is typically created by the user or a program. A manifest connection passes this information to the connector which will use this schema to store document attributes inside the iModel.")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("p", {
    parentName: "li"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Additional note"), " - The schema generation happens as a separate process. Once generated the user stores the schema at a BLOB storage location. This API does not support the generation of the schema, but uses it to support the properties user wants to pass during a connection run.")))), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_blob_tutorial_CodeBlock, {
      language: "json",
      code: "{\n  \"$schema\": \"https://dev.bentley.com/json_schemas/ec/32/ecschema\",\n  \"name\": \"BridgeSpatial\",\n  \"version\": \"01.00.00\",\n  \"alias\": \"brsp\",\n  \"description\": \"Schema modeling the spatial breakdown of Bridges.\",\n  \"references\": [\n    {\n      \"name\": \"CoreCustomAttributes\",\n      \"version\": \"01.00.03\"\n    },\n    {\n      \"name\": \"BisCore\",\n      \"version\": \"01.00.13\"\n    },\n    {\n      \"name\": \"SpatialComposition\",\n      \"version\": \"01.00.01\"\n    },\n    {\n      \"name\": \"LinearReferencing\",\n      \"version\": \"02.00.03\"\n    }\n  ],\n  \"customAttributes\": [\n    {\n      \"className\": \"CoreCustomAttributes.ProductionStatus\",\n      \"SupportedUse\": \"NotForProduction\"\n    }\n  ],\n  \"items\": {\n    \"Bridge\": {\n      \"schemaItemType\": \"EntityClass\",\n      \"label\": \"Bridge\",\n      \"description\": \"TODO\",\n      \"baseClass\": \"SpatialComposition.Facility\",\n      \"mixins\": [\n        \"LinearReferencing.ILinearLocationElement\"\n      ]\n    },\n\t\t\"Substructure\": {\n\t\t\t\"schemaItemType\": \"EntityClass\",\n\t\t\t\"label\": \"SubStructure\",\n\t\t\t\"description\": \"TODO\",\n\t\t\t\"baseClass\": \"SpatialComposition.FacilityPart\"\n\t\t},\n\t\t\"Superstructure\": {\n\t\t\t\"schemaItemType\": \"EntityClass\",\n\t\t\t\"label\": \"SuperStructure\",\n\t\t\t\"description\": \"TODO\",\n\t\t\t\"baseClass\": \"SpatialComposition.FacilityPart\"\n\t\t},\n\t\t\"Deck\": {\n\t\t\t\"schemaItemType\": \"EntityClass\",\n\t\t\t\"label\": \"Deck\",\n\t\t\t\"description\": \"TODO\",\n\t\t\t\"baseClass\": \"SpatialComposition.FacilityPart\"\n\t\t},\n\t\t\"Pier\": {\n\t\t\t\"schemaItemType\": \"EntityClass\",\n\t\t\t\"label\": \"Pier\",\n\t\t\t\"description\": \"TODO\",\n\t\t\t\"baseClass\": \"SpatialComposition.FacilityPart\"\n\t\t},\n\t\t\"Abutment\": {\n\t\t\t\"schemaItemType\": \"EntityClass\",\n\t\t\t\"label\": \"Abutment\",\n\t\t\t\"description\": \"TODO\",\n\t\t\t\"baseClass\": \"SpatialComposition.FacilityPart\"\n\t\t}\n\t}\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Schema generation"), " Schema can be generated or edit schemas using ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://imodelschemaeditor.bentley.com/?"
  }, "schema editor tool"), ". This URL can be updated to include the projectId and iModelId query parameters such as ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://imodelschemaeditor.bentley.com/?"
  }, "schema-editor-tool-url"), "projectid=ProjectId&imodelid=iModelId. Following is an example of schema JSON file referenced by the documentAttributeSchemaUrl property."))), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_blob_tutorial_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 202 Accepted",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response-2"
  }, "Response"), (0,react_.mdx)("p", null, "On a successful request, the operation returns http status code 202/accepted - the request is accepted for processing and will be executed in the background.\nIf there is an active run in progress for this connection, a new run is added to the queue. The response includes a location header pointing to the created run.")), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "7-get-runs-statuses"
  }, "7. Get runs statuses"), (0,react_.mdx)("p", null, "A run contains the synchronization process status. To track a run and associated status, make a GET request to a link from previous request response location header.")), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_blob_tutorial_CodeBlock, {
      language: "http",
      code: "GET\xA0https://api.bentley.com/synchronization/imodels/manifestConnections/CONNECTION_ID/runs/RUN_ID HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-3"
  }, "Request"), (0,react_.mdx)("p", null, "To get the status of the Run, send a GET request to the synchronization/imodels/manifestConnections/{connectionId}/runs/{runId}\xA0endpoint with a valid connection and run Id. For convenience take a link from previous request response location header."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Authorization\xA0header with valid Bearer token is required."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "CONNECTION_ID of the run we want to get."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "RUN_ID of the run we want to get."))), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_blob_tutorial_CodeBlock, {
      language: "json",
      code: "{\n    \"run\": {\n        \"id\": \"RUN_ID\",\n        \"startDateTime\": \"02/15/2022 08:24:45\",\n        \"endDateTime\": \"02/15/2022 08:26:50\",\n        \"phase\": \"MasterFile\",\n        \"jobs\": [\n            {\n                \"id\": \"JOB_ID\",\n                \"startDateTime\": \"02/15/2022 08:25:58\",\n                \"endDateTime\": \"02/15/2022 08:26:28\",\n                \"state\": \"Completed\",\n                \"result\": \"Success\",\n                \"connectorType\": \"MSTN\",\n                \"tasks\": [\n                    {\n                        \"id\": \"TASK_ID\",\n                        \"startDateTime\": \"02/15/2022 08:25:58\",\n                        \"endDateTime\": \"02/15/2022 08:26:28\",\n                        \"retryAttempts\": 0,\n                        \"state\": \"Completed\",\n                        \"result\": \"Success\",\n                        \"error\": null\n                    }\n                ]\n            }\n        ],\n        \"state\": \"Completed\",\n        \"result\": \"Success\"\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response-3"
  }, "Response"), (0,react_.mdx)("p", null, "At the end of synchronization, the run state should be \u201CCompleted\u201D and result \u201CSuccess\u201D.")), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "8-synchronize-an-updated-file"
  }, "8. Synchronize an updated file"), (0,react_.mdx)("p", null, "If a file is changed on Azure Blob Storage, it has to be synchronized again for the iModel to be updated. The workflow should be:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "File is updated on Azure Blob Storage."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Run the connection again. (See step 6)"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Get connection run status. (See step 7)"))), (0,react_.mdx)(synchronization_blob_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "9-conclusion"
  }, "9. Conclusion"), (0,react_.mdx)("p", null, "In this tutorial we have gone through a file from Azure Blob Storage synchronization process:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Create an empty iModel"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Create a connection"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Run the connection"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Get run status.")), (0,react_.mdx)("p", null, "After a successful run, the iModel now contains the design file changes.")), (0,react_.mdx)(synchronization_blob_tutorial_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)("p", null, "Congratulations for the completion of your first synchronization! You\u2019ve now know a lot on the subject, but there\u2019s still possibilities to learn more to unleash the platform capabilities."), (0,react_.mdx)(synchronization_blob_tutorial_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(synchronization_blob_tutorial_Tile, {
    name: "Create iModel Named Version",
    description: "This quick start is intended to guide you through the steps to create a new iModel Named Version.",
    href: "/tutorials/create-named-version",
    mdxType: "Tile"
  }), (0,react_.mdx)(synchronization_blob_tutorial_Tile, {
    name: "Synchronization Configuration API",
    description: "This tutorial guides you through synchronizing a file using different configurations with the Synchronization API.",
    href: "/tutorials/synchronization-configurations-api-tutorial",
    mdxType: "Tile"
  })), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(synchronization_blob_tutorial_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(synchronization_blob_tutorial_ResourceTile, {
    title: "Synchronization API documentation",
    href: "/api-groups/synchronization",
    description: "An overview and detailed Synchronization API documentation.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(synchronization_blob_tutorial_ResourceTile, {
    title: "Synchronization API code sample",
    href: "https://github.com/iTwin/synchronization-api-sample-app",
    description: "A working code sample showing how Synchronization API can be integrated into a React application.",
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(synchronization_blob_tutorial_ResourceTile, {
    title: "Data Management API documentation",
    href: "/api-groups/data-management/",
    description: "An overview and detailed Data Management API documentation.",
    mdxType: "ResourceTile"
  }))));
}
;
synchronization_blob_tutorial_MDXContent.isMDXComponent = true;
var synchronization_blob_tutorial_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "1-register-a-service-application",
    level: 2,
    title: "1. Register a Service Application",
    children: []
  }, {
    id: "2-get-access-token",
    level: 2,
    title: "2. Get Access Token",
    children: []
  }, {
    id: "3-create-an-imodel",
    level: 2,
    title: "3. Create an iModel",
    children: []
  }, {
    id: "4-get-a-blob-sas-url",
    level: 2,
    title: "4. Get a Blob SAS Url",
    children: []
  }, {
    id: "5-create-a-connection",
    level: 2,
    title: "5. Create a Connection",
    children: []
  }, {
    id: "6-run-a-connection",
    level: 2,
    title: "6. Run a Connection",
    children: []
  }, {
    id: "7-get-runs-statuses",
    level: 2,
    title: "7. Get runs statuses",
    children: []
  }, {
    id: "8-synchronize-an-updated-file",
    level: 2,
    title: "8. Synchronize an updated file",
    children: []
  }, {
    id: "9-conclusion",
    level: 2,
    title: "9. Conclusion",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var synchronization_blob_tutorial_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/synchronization-configurations-api-tutorial.mdx


var synchronization_configurations_api_tutorial_excluded = ["components"];
var synchronization_configurations_api_tutorial_jsx = (external_react_default()).createElement;


var synchronization_configurations_api_tutorial_readingTime = {
  "text": "6 min read",
  "minutes": 5.095,
  "time": 305700,
  "words": 1019
};
/* @jsxRuntime classic */
/* @jsx mdx */

var synchronization_configurations_api_tutorial_metadata = {
  title: 'Get started with Synchronization Configurations API',
  tile: {
    name: 'Get started with Synchronization Configurations API',
    description: 'An introduction to Synchronization Configurations API explaining main workflows and operations.',
    thumbnail: '/images/synchronizationConfiguration.png',
    href: '/tutorials/synchronization-configurations-api-tutorial/',
    durationInMinutes: 50,
    relatedApiIds: ['synchronization']
  }
};
var synchronization_configurations_api_tutorial_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var synchronization_configurations_api_tutorial_Introduction = synchronization_configurations_api_tutorial_makeShortcode("Introduction");
var synchronization_configurations_api_tutorial_TutorialSection = synchronization_configurations_api_tutorial_makeShortcode("TutorialSection");
var synchronization_configurations_api_tutorial_Title = synchronization_configurations_api_tutorial_makeShortcode("Title");
var synchronization_configurations_api_tutorial_CodeBlock = synchronization_configurations_api_tutorial_makeShortcode("CodeBlock");
var synchronization_configurations_api_tutorial_ContinueLearningSection = synchronization_configurations_api_tutorial_makeShortcode("ContinueLearningSection");
var synchronization_configurations_api_tutorial_TileList = synchronization_configurations_api_tutorial_makeShortcode("TileList");
var synchronization_configurations_api_tutorial_ResourceTile = synchronization_configurations_api_tutorial_makeShortcode("ResourceTile");
var synchronization_configurations_api_tutorial_layoutProps = {
  metadata: synchronization_configurations_api_tutorial_metadata
};
var synchronization_configurations_api_tutorial_MDXLayout = "wrapper";
function synchronization_configurations_api_tutorial_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, synchronization_configurations_api_tutorial_excluded);
  return (0,react_.mdx)(synchronization_configurations_api_tutorial_MDXLayout, (0,esm_extends/* default */.Z)({}, synchronization_configurations_api_tutorial_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(synchronization_configurations_api_tutorial_Introduction, {
    skillLevel: "Intermediate",
    durationInMinutes: "50",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial guides you through synchronizing a file using different configurations with the Synchronization API. Many configurations could be set on three scopes: iTwin, iModel, or Connection. In this example, you will learn how to enable sheets and drawings processing that are not synchronized by default."), (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "Perform all the actions defined in the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/synchronization-blob-tutorial/"
  }, "Synchronize a file from Azure Blob Storage"), " tutorial, which covers all the fundamental steps to a typical synchronization workflow with various data types. As a result, you will have an iTwin, an iModel, and a Connection created with a successful connection run that did not process 2D data."), (0,react_.mdx)("p", null, "In this tutorial, we will only cover the workflow for creating and running a connection with a specific ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "enableSheetsAndDrawings"), " configuration set. A .dgn or .revit file with sheets or drawings is required to follow the steps."), (0,react_.mdx)("h2", {
    "id": "1-guide-to-synchronization-configuration-api"
  }, "1. Guide to Synchronization Configuration API"), (0,react_.mdx)("p", null, "Before diving into the code to apply configurations to your synchronizations, let\u2019s take some time to understand the workflow and the involved API calls."), (0,react_.mdx)("p", null, "Synchronization Configuration API provides multiple flags which apply to different scopes:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "iTwin"), " - all supported iTwin scope flags can be found at ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/synchronization/operations/create-itwin-configuration/"
  }, "Create iTwin configuration")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "iModel"), " - all supported iModel scope flags can be found at ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/synchronization/operations/create-imodel-configuration/"
  }, "Create iModel configuration")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Connection"), " - all supported Connection scope flags can be found at ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/synchronization/operations/create-connection-configuration/"
  }, "Create Connection configuration"))), (0,react_.mdx)("h2", {
    "id": "workflow-for-setting-configurations"
  }, "Workflow for setting configurations"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Identify configurations that require the default value changed per your synchronization workflow."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Create a Connection that establishes links from design files to iModel."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Depending on the supported scope, use Create Connection Configuration, Create iModel Configurations or Create iTwin Configurations, where you specify how data should be processed."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Proceed with synchronization by Running a Connection"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Modify configurations for the next synchronization runs if required.")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, "In this tutorial, enableSheetsAndDrawings will be used as an example, but the workflow patterns are the same for any configuration.")), (0,react_.mdx)("h2", {
    "id": "enablesheetsanddrawings"
  }, "enableSheetsAndDrawings"), (0,react_.mdx)("p", null, "Controls sheets and drawings synchronization. If enabled, all sheet models and\nrelayed drawings will be synchronized to an iModel. The default value is\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "false"), "."), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Typical use case:"), " As you are synchronizing Revit files, there could be sheets with multiple drawings on them. You can choose to synchronize those or not. If a file contains drawings not used in any of the sheets, those will not be processed."))), (0,react_.mdx)(synchronization_configurations_api_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-create-a-configuration-with-the-enablesheetsanddrawings-flag"
  }, "2. Create a configuration with the \u201CenableSheetsAndDrawings\u201D flag"), (0,react_.mdx)("p", null, "To enable 2D data processing, we need to create a configuration for connection with the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "enableSheetsAndDrawings"), " flag.")), (0,react_.mdx)(synchronization_configurations_api_tutorial_TutorialSection, {
    hasTitle: false,
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_configurations_api_tutorial_Title, {
      mdxType: "Title"
    }, "HTTP request"), (0,react_.mdx)(synchronization_configurations_api_tutorial_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/synchronization/configurations/connections/CONNECTION_ID HTTP/1.1\nContentType: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(synchronization_configurations_api_tutorial_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(synchronization_configurations_api_tutorial_CodeBlock, {
      language: "json",
      code: "{\n\"enableSheetsAndDrawings\": \"true\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(synchronization_configurations_api_tutorial_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(synchronization_configurations_api_tutorial_CodeBlock, {
      language: "json",
      code: "{\n  \"configuration\": {\n    \"scopeId\": CONNECTION_ID,\n    \"settings\": { \"enableSheetsAndDrawings\": \"true\" },\n    \"resolvedSettings\": {\n      \"uploadDgnRealityData\": \"true\",\n      \"convertDgnTerrainModels\": \"false\",\n      \"createRvtDrawings\": \"false\",\n      \"squashIntermediateRevisions\": \"false\",\n      \"skipRvtReprojection\": \"false\",\n      \"convertDgnHyperModelingSections\": \"true\",\n      \"clampZExtent\": \"false\",\n      \"overrideRvtReprojectionDistance\": \"0\",\n      \"reclassifyDgnElements\": \"false\",\n      \"ignoreDgnAttachments\": \"true\"\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "request"
  }, "Request"), (0,react_.mdx)("p", null, "A Synchronization connection configuration is created by sending an HTTP POST request to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/synchronization/configurations/connections/CONNECTION_ID"
  }, "https://api.bentley.com/synchronization/configurations/connections/CONNECTION_ID"), " endpoint. Where CONNECTION_ID is a connection id retrieved from prerequisites connection."), (0,react_.mdx)("h3", {
    "id": "request-body"
  }, "Request Body"), (0,react_.mdx)("p", null, "There is one required property for the create configuration payload."), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "enableSheetsAndDrawings: true")), (0,react_.mdx)("h3", {
    "id": "response"
  }, "Response"), (0,react_.mdx)("p", null, "All the applicable flags are set and the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "enableSheetsAndDrawings"), " configuration is set to true.")), (0,react_.mdx)(synchronization_configurations_api_tutorial_TutorialSection, {
    hasTitle: false,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-run-a-configured-connection-with-the-enablesheetsanddrawings-flag-set-to-true"
  }, "3. Run a configured connection with the \u201CenableSheetsAndDrawings\u201D flag set to true"), (0,react_.mdx)("p", null, "Perform connection run steps defined in the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/synchronization-blob-tutorial/"
  }, "Synchronize a file from Azure Blob Storage"), "\nfor the configured connection. The result will be a connection run with 2D data synchronized.")), (0,react_.mdx)(synchronization_configurations_api_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-update-of-configuration-with-enablesheetsanddrawings-flag-to-false-optional"
  }, "4. Update of configuration with \u201CenableSheetsAndDrawings\u201D flag to false (Optional)"), (0,react_.mdx)("p", null, "If you no longer want to synchronize 2D data, update the configured connection configuration setting enableSheetsAndDrawings flag to false. Next time this connection will run 2D data will not be updated, but existing sheets and drawings processed before will remain in an iModel.")), (0,react_.mdx)(synchronization_configurations_api_tutorial_TutorialSection, {
    hasTitle: false,
    actions: [(0,react_.mdx)(synchronization_configurations_api_tutorial_Title, {
      mdxType: "Title"
    }, "HTTP request"), (0,react_.mdx)(synchronization_configurations_api_tutorial_CodeBlock, {
      language: "http",
      code: "PATCH https://api.bentley.com/synchronization/configurations/connections/CONNECTION_ID HTTP/1.1\nContentType: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(synchronization_configurations_api_tutorial_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(synchronization_configurations_api_tutorial_CodeBlock, {
      language: "json",
      code: "{\n\"enableSheetsAndDrawings\": \"false\"\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(synchronization_configurations_api_tutorial_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(synchronization_configurations_api_tutorial_CodeBlock, {
      language: "json",
      code: "{\n  \"configuration\": {\n    \"scopeId\": CONNECTION_ID,\n    \"settings\": { \"enableSheetsAndDrawings\": \"false\" },\n    \"resolvedSettings\": {\n      \"uploadDgnRealityData\": \"true\",\n      \"convertDgnTerrainModels\": \"false\",\n      \"createRvtDrawings\": \"false\",\n      \"squashIntermediateRevisions\": \"false\",\n      \"skipRvtReprojection\": \"false\",\n      \"convertDgnHyperModelingSections\": \"true\",\n      \"clampZExtent\": \"false\",\n      \"overrideRvtReprojectionDistance\": \"0\",\n      \"reclassifyDgnElements\": \"false\",\n      \"ignoreDgnAttachments\": \"true\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "request-1"
  }, "Request"), (0,react_.mdx)("p", null, "Synchronization Connection configuration settings are updated by sending an HTTP PATCH request to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/synchronization/configurations/connections/CONNECTION_ID"
  }, "https://api.bentley.com/synchronization/configurations/connections/CONNECTION_ID"), " endpoint. Where CONNECTION_ID is a connection id retrieved from prerequisites connection."), (0,react_.mdx)("h3", {
    "id": "request-body-1"
  }, "Request Body"), (0,react_.mdx)("p", null, "There is one required property for the create configuration payload."), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "enableSheetsAndDrawings: false")), (0,react_.mdx)("h3", {
    "id": "response-1"
  }, "Response"), (0,react_.mdx)("p", null, "All the applicable flags are set and the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "enableSheetsAndDrawings"), " configuration is set to false.")), (0,react_.mdx)(synchronization_configurations_api_tutorial_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-run-a-configured-connection-with-the-enablesheetsanddrawings-flag-set-to-false-optional"
  }, "5. Run a configured connection with the \u201CenableSheetsAndDrawings\u201D flag set to false (Optional)"), (0,react_.mdx)("p", null, "Perform connection run steps defined in the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/synchronization-blob-tutorial/"
  }, "Synchronize a file from Azure Blob Storage"), " for the configured connection. The result will be a connection run without 2D data changes synchronized. Sheets and drawings synchronized previously will remain in an iModel."), (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)("p", null, "Congratulation on completing the Synchronization Configuration API tutorial! Find more about each ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/synchronization/operations/create-itwin-configuration/"
  }, "iTwin"), ", ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/synchronization/operations/create-imodel-configuration/"
  }, "iModel"), ", and ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/synchronization/operations/create-connection-configuration/"
  }, "connection"), " configuration."), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(synchronization_configurations_api_tutorial_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(synchronization_configurations_api_tutorial_ResourceTile, {
    title: "iTwins API",
    href: "/apis/itwins/",
    description: "The iTwins API provides a full encompassing suite of functionality to manage your digital twins.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(synchronization_configurations_api_tutorial_ResourceTile, {
    title: "Synchronization API",
    href: "/api-groups/synchronization/",
    description: "Files can be synchronized to iModel via Synchronization API.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(synchronization_configurations_api_tutorial_ResourceTile, {
    title: "Changed Elements API",
    href: "/tutorials/changed-elements-api/",
    description: "The Changed Elements API is a REST API that allows the consumer to inspect what elements have changed in an iModel between two versions of the iModel.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(synchronization_configurations_api_tutorial_ResourceTile, {
    title: "Property Validation Basics",
    href: "/tutorials/property-validation-basics/",
    description: "Use Property Validation to check whether property values in an iModel conform to certain rules.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(synchronization_configurations_api_tutorial_ResourceTile, {
    title: "Create iModel Named Version",
    href: "/tutorials/create-named-version/",
    description: "This quick start is intended to guide you through the steps to create a new iModel Named Version.",
    mdxType: "ResourceTile"
  }))));
}
;
synchronization_configurations_api_tutorial_MDXContent.isMDXComponent = true;
var synchronization_configurations_api_tutorial_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-guide-to-synchronization-configuration-api",
    level: 2,
    title: "1. Guide to Synchronization Configuration API",
    children: []
  }, {
    id: "workflow-for-setting-configurations",
    level: 2,
    title: "Workflow for setting configurations",
    children: []
  }, {
    id: "enablesheetsanddrawings",
    level: 2,
    title: "enableSheetsAndDrawings",
    children: []
  }, {
    id: "2-create-a-configuration-with-the-enablesheetsanddrawings-flag",
    level: 2,
    title: "2. Create a configuration with the “enableSheetsAndDrawings” flag",
    children: [{
      id: "request",
      level: 3,
      title: "Request",
      children: []
    }, {
      id: "request-body",
      level: 3,
      title: "Request Body",
      children: []
    }, {
      id: "response",
      level: 3,
      title: "Response",
      children: []
    }]
  }, {
    id: "3-run-a-configured-connection-with-the-enablesheetsanddrawings-flag-set-to-true",
    level: 2,
    title: "3. Run a configured connection with the “enableSheetsAndDrawings” flag set to true",
    children: []
  }, {
    id: "4-update-of-configuration-with-enablesheetsanddrawings-flag-to-false-optional",
    level: 2,
    title: "4. Update of configuration with “enableSheetsAndDrawings” flag to false (Optional)",
    children: [{
      id: "request-1",
      level: 3,
      title: "Request",
      children: []
    }, {
      id: "request-body-1",
      level: 3,
      title: "Request Body",
      children: []
    }, {
      id: "response-1",
      level: 3,
      title: "Response",
      children: []
    }]
  }, {
    id: "5-run-a-configured-connection-with-the-enablesheetsanddrawings-flag-set-to-false-optional",
    level: 2,
    title: "5. Run a configured connection with the “enableSheetsAndDrawings” flag set to false (Optional)",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var synchronization_configurations_api_tutorial_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/synchronization-storage-tutorial.mdx


var synchronization_storage_tutorial_excluded = ["components"];
var synchronization_storage_tutorial_jsx = (external_react_default()).createElement;


var synchronization_storage_tutorial_readingTime = {
  "text": "12 min read",
  "minutes": 11.615,
  "time": 696900,
  "words": 2323
};
/* @jsxRuntime classic */
/* @jsx mdx */

var synchronization_storage_tutorial_metadata = {
  title: 'Synchronize a file from iTwin Storage',
  tile: {
    name: 'Synchronize a file from iTwin Storage',
    description: 'Walk-through how to synchronize a file from iTwin Storage to an iModel using Synchronization API.',
    thumbnail: '/images/synchronizationThumbnail.png',
    href: '/tutorials/synchronization-storage-tutorial/',
    durationInMinutes: 30,
    relatedApiIds: ['synchronization', 'imodels', 'storage']
  }
};
var synchronization_storage_tutorial_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var synchronization_storage_tutorial_Introduction = synchronization_storage_tutorial_makeShortcode("Introduction");
var synchronization_storage_tutorial_TutorialSection = synchronization_storage_tutorial_makeShortcode("TutorialSection");
var synchronization_storage_tutorial_LinkButton = synchronization_storage_tutorial_makeShortcode("LinkButton");
var synchronization_storage_tutorial_PostmanIcon = synchronization_storage_tutorial_makeShortcode("PostmanIcon");
var synchronization_storage_tutorial_Alert = synchronization_storage_tutorial_makeShortcode("Alert");
var synchronization_storage_tutorial_CreateSampleAppButton = synchronization_storage_tutorial_makeShortcode("CreateSampleAppButton");
var synchronization_storage_tutorial_CodeBlock = synchronization_storage_tutorial_makeShortcode("CodeBlock");
var synchronization_storage_tutorial_ContinueLearningSection = synchronization_storage_tutorial_makeShortcode("ContinueLearningSection");
var synchronization_storage_tutorial_TileList = synchronization_storage_tutorial_makeShortcode("TileList");
var synchronization_storage_tutorial_Tile = synchronization_storage_tutorial_makeShortcode("Tile");
var synchronization_storage_tutorial_ResourceTile = synchronization_storage_tutorial_makeShortcode("ResourceTile");
var synchronization_storage_tutorial_layoutProps = {
  metadata: synchronization_storage_tutorial_metadata
};
var synchronization_storage_tutorial_MDXLayout = "wrapper";
function synchronization_storage_tutorial_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, synchronization_storage_tutorial_excluded);
  return (0,react_.mdx)(synchronization_storage_tutorial_MDXLayout, (0,esm_extends/* default */.Z)({}, synchronization_storage_tutorial_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(synchronization_storage_tutorial_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "30",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This is a walk-through of how to synchronize a file from iTwin Storage to an iModel using Synchronization API. Synchronization API works in iTwin and iModel context. To synchronize a set of files a connection has to be created. Connection is an aggregation of properties like file metadata which is needed for synchronization. Connections can be run on demand which starts a file specified in the connection conversion to an iModel.")), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    actions: [(0,react_.mdx)(synchronization_storage_tutorial_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(synchronization_storage_tutorial_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Already have a tool such as ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Postman"), " that can be used to execute HTTP calls. These calls can also be made using the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Try it out"), " button in the API documentation or any other HTTP request tool."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Familiar with concepts of Authorization, iModel, iTwin, Project & Storage."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Have created a iTwin and have its ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "ITWIN_ID"), ". You can create a iTwin using ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/itwins/operations/create-itwin/"
  }, "iTwins API"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Have files uploaded inside the iTwin (or Project) by using previously created ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "ITWIN_ID"), " or ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "PROJECT_ID"), ". If you do not have files in the Storage, follow ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/storage-quick-start/"
  }, "Storage API tutorial"), " or consult with ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/storage/"
  }, "Storage API documentation"), ". You may use generated ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "ITWIN_ID"), " instead of ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "PROJECT_ID"), " in Storage API endpoints.")), (0,react_.mdx)(synchronization_storage_tutorial_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "If you have already created a project with files inside it - you may use PROJECT_ID instead ITWIN_ID in this tutorial.")), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-preparing-to-use-synchronization-api"
  }, "1. Preparing to use Synchronization API"), (0,react_.mdx)("p", null, "There are some actions, which should be completed before starting using Synchronization API.")), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_storage_tutorial_CreateSampleAppButton, {
      clientName: "Synchronization tutorial",
      scopes: ["synchronization:read", "synchronization:modify", "imodels:read", "imodels:modify", "storage:read"],
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "11-register-an-application"
  }, "1.1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Synchronization"), ", ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iModels"), " and ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Storage"), " APIs and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "synchronization:read synchronization:modify imodels:read imodels:modify storage:read"), " scopes enabled."))), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    subSection: true,
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "12-get-a-token"
  }, "1.2. Get a token"), (0,react_.mdx)("p", null, "To make request to API user token is needed. There are several ways to get it."), (0,react_.mdx)("h4", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application."), (0,react_.mdx)("h4", {
    "id": "grab-a-token-from-api-reference-try-it-section"
  }, "Grab a token from Api reference \u201CTry it\u201D Section"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go to ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/synchronization/operations/create-storage-connection/"
  }, "Create Storage Connection")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click \u201CTry it out\u201D button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "On Authorization section select \u201CAuthorizationCode\u201D."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After popup closes Authorization header with token value should be visible."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Save token value for this tutorial."))), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-create-an-imodel"
  }, "2. Create an iModel"), (0,react_.mdx)("p", null, "An iModel is a specialized information container for exchanging data associated with the lifecycle of infrastructure assets.\niModels were created to facilitate the sharing and distribution of information regardless of the source and format of the information."), (0,react_.mdx)("p", null, "iTwin Platform iModels API is based on iModelHub cloud service which enables alignment, accountability and accessibility of infrastructure digital twins.\nIt is the control center for iModels and is responsible for coordinating concurrent access to iModels as well as changes made to them."), (0,react_.mdx)(synchronization_storage_tutorial_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note that this step assumes that You already have a ITWIN_ID from previously created iTwin.")), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_storage_tutorial_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/imodels HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json\nAccept: application/vnd.bentley.itwin-platform.v2+json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request"
  }, "Request"), (0,react_.mdx)("p", null, "An empty iModel is created by sending a HTTP POST message to ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/imodels/"
  }, "https://api.bentley.com/imodels/"), " endpoint with the payload describing the iModel to be created."), (0,react_.mdx)("p", null, "You can execute the request on the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/imodels-v2/operations/create-imodel/"
  }, "iModel API Documentation"), " page, \u201CTry it out\u201D section.")), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_storage_tutorial_CodeBlock, {
      language: "json",
      code: "{\n      \"iTwinId\": \"ITWIN_ID\",\n      \"name\": \"Sun City Renewable-energy Plant\",\n      \"description\": \"Overall model of solar farms in Sun City\",\n      \"extent\": {\n          \"southWest\": {\n            \"latitude\": 46.13267702834806,\n            \"longitude\": 7.672120009938448\n          },\n          \"northEast\": {\n            \"latitude\": 46.302763954781234,\n            \"longitude\": 7.835541640797823\n          }\n        }\n    }",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-body"
  }, "Request Body"), (0,react_.mdx)("p", null, "There are two required properties for the create iModel payload."), (0,react_.mdx)("p", null, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "name"), " - iModel name is required which uniquely identifies the iModel within the Project. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iTwinId"), " - provides iTwin identifier that created iModel will belong to. iTwin identifier is a required property. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "description"), " - free form text field so you could give more information about the iModel. ", (0,react_.mdx)("br", null), "\n", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "extent"), " - iModels usually are placed at some location on the Earth.\nThis property allows the specification of the maximum rectangular area on the Earth which encloses the iModel.\nThe maximum extent is used to help keep your iModel clean.\nWhen new elements are imported, those outside the extent will be flagged for further processing.\nThis extent will also help to zoom into the area of interest in web viewers."), (0,react_.mdx)(synchronization_storage_tutorial_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "If you get a response code 404 with the message \"Requested iTwin is not available.\", Please check if App or User has access to the iTwin."), (0,react_.mdx)(synchronization_storage_tutorial_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note that after completing this step, you will be provided with an IMODEL_ID which will be required in later steps.")), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-get-file_id-from-storage-api"
  }, "3. Get FILE_ID from Storage API"), (0,react_.mdx)("p", null, "iTwin File Storage API store files and folders under some folder. To get root files and folder we can use \u201CGet top level folders and files by project\u201D API.")), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_storage_tutorial_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/storage/?projectId=ITWIN_ID HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-1"
  }, "Request"), (0,react_.mdx)("p", null, "That can be done by sending a GET ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/storage/?projectId=ITWIN_ID"
  }, "https://api.bentley.com/storage/?projectId=ITWIN_ID"), " request."), (0,react_.mdx)("p", null, "You can execute the request on the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/storage/operations/get-top-level-folders-and-files-by-project/"
  }, "Storage API Documentation"), " page, \u201CTry it out\u201D section."), (0,react_.mdx)("p", null, "Requirements:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Authorization header with valid Bearer token is required."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "ITWIN_ID where files and folders are stored."))), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_storage_tutorial_CodeBlock, {
      language: "json",
      code: "{\n    \"items\": [{\n        \"id\": \"FOLDER_ID\",\n        \"type\": \"folder\",\n        \"displayName\": \"1\",\n        \"description\": null,\n        \"path\": \"1\",\n        \"lastModifiedByDisplayName\": \"Joe User\",\n        \"createdDateTime\": \"2019-07-16T08:41:05.6415752Z\",\n        \"lastModifiedDateTime\": \"2020-01-07T08:46:47.5422276Z\",\n        \"parentFolderId\": \"mCbnk2CSr0K4bAkoDGgNEZgm55Ngkq9CuGwJKAxoDRE\",\n        \"_links\": {\n            \"createdBy\": {\n                \"href\": \"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/4ebeaf72-3c42-4734-b41a-485c6c2ecb67\"\n            },\n            \"lastModifiedBy\": {\n                \"href\": \"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/4ebeaf72-3c42-4734-b41a-485c6c2ecb67\"\n            },\n            \"parentFolder\": {\n                \"href\": \"https://api.bentley.com/storage/folders/mCbnk2CSr0K4bAkoDGgNEZgm55Ngkq9CuGwJKAxoDRE\"\n            }\n        }\n    },{\n        \"id\": \"FILE_ID\",\n        \"type\": \"file\",\n        \"displayName\": \"Test.dgn\",\n        \"description\": null,\n        \"path\": \"Test.dgn\",\n        \"size\": \"38400\",\n        \"lastModifiedByDisplayName\": \"Joe User\",\n        \"createdDateTime\": \"2020-06-23T11:13:42.3498148Z\",\n        \"lastModifiedDateTime\": \"2020-07-07T11:46:44.9573652Z\",\n        \"parentFolderId\": \"mCbnk2CSr0K4bAkoDGgNEZgm55Ngkq9CuGwJKAxoDRE\",\n        \"_links\": {\n            \"createdBy\": {\n                \"href\": \"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/4ebeaf72-3c42-4734-b41a-485c6c2ecb67\"\n            },\n            \"lastModifiedBy\": {\n                \"href\": \"https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/4ebeaf72-3c42-4734-b41a-485c6c2ecb67\"\n            },\n            \"parentFolder\": {\n                \"href\": \"https://api.bentley.com/storage/folders/mCbnk2CSr0K4bAkoDGgNEZgm55Ngkq9CuGwJKAxoDRE\"\n            }\n        }\n    }],\n    \"_links\": {\n        \"self\": {\n            \"href\": \"https://api.bentley.com/storage?projectId=PROJECT_ID&$skip=0&$top=100\"\n        },\n        \"prev\": {\n            \"href\": \"https://api.bentley.com/storage?projectId=PROJECT_ID&$skip=0&$top=100\"\n        },\n        \"next\": {\n            \"href\": \"https://api.bentley.com/storage?projectId=PROJECT_ID&$skip=100&$top=100\"\n        },\n        \"folder\": {\n            \"href\": \"https://api.bentley.com/storage/folders/mCbnk2CSr0K4bAkoDGgNEZgm55Ngkq9CuGwJKAxoDRE\"\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response"
  }, "Response"), (0,react_.mdx)("p", null, "The request response contains a FILE_ID which will be used in next step.")), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-create-a-connection"
  }, "4. Create a Connection"), (0,react_.mdx)("p", null, "The synchronization process is based on connections that establish links from design files to iModels. There could be multiple connections for an iModel, and those could be executed on-demand multiple times to synchronize changes. In this step we will be creating such connection.")), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_storage_tutorial_CodeBlock, {
      language: "http",
      code: "POST\xA0https://api.bentley.com/synchronization/imodels/storageConnections HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-2"
  }, "Request"), (0,react_.mdx)("p", null, "To create a connection, send a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "POST"), " request to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "synchronization/imodels/storageConnections"), " endpoint."), (0,react_.mdx)("p", null, "You can execute the request on the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/synchronization/operations/create-storage-connection/"
  }, "Synchronization API Documentation"), " page, \u201CTry it out\u201D section."), (0,react_.mdx)("p", null, "Requirements:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Authorization header with valid Bearer token is required."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "IMODEL_ID of created iModel from step 3."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "We will need to specify what file from File Storage should be mapped to a connection. To do that we will need a FILE_ID from previous step response."))), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_storage_tutorial_CodeBlock, {
      language: "json",
      code: "{\n    \"displayName\": \"Connection1\",\n    \"iModelId\": \"IMODEL_ID\",\n    \"sourceFiles\": [{\n        \"storageFileId\": \"FILE_ID\",\n        \"connectorType\": \"MSTN\"\n    }]\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-body-1"
  }, "Request Body"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "displayName"), " - user facing connection name"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "iModelId"), ": - iModel Id which should contain created connection"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "sourceFiles"), " - information about source files from File Storage", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "storageFileId"), " - id of the file from Storage API"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "connectorType"), " - identifier of the connector used to process the file. For more information, see ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/synchronization/supported-formats/"
  }, "Supported formats.")), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "[Optional]", " ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "authenticationType"), " - defaults to ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "User"), " and uses a refresh token to get an access token for long synchronizations. But it can be set to ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Service"), " when API is used from server application without user context."))))), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_storage_tutorial_CodeBlock, {
      language: "json",
      code: "{\n    \"connection\": {\n        \"id\": \"CONNECTION_ID\",\n        \"displayName\": \"connection1\",\n        \"iModelId\": \"IMODEL_ID\",\n        \"iTwinId\": \"ITWIN_ID\",\n        \"_links\": {\n            \"iModel\": {\n                \"href\": \"https://api.bentley.com/imodels/IMODEL_ID\"\n            },\n            \"iTwin\": {\n                \"href\": \"https://api.bentley.com/itwins/ITWIN_ID\"\n            },\n            \"lastRun\": null\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response-1"
  }, "Response"), (0,react_.mdx)("p", null, "The request response contains created connection properties values. Id is going to be needed in next step")), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-store-refresh-token-for-user"
  }, "5. Store refresh token for user"), (0,react_.mdx)("p", null, "The synchronization process usually takes time and is performed in the background. For that, we need to store the connection owner\u2019s refresh token. You can get it by using Get Authorization Information API. This API will return the current status and a redirect URL where user has to be redirected on the browser if the token has to be renewed."), (0,react_.mdx)(synchronization_storage_tutorial_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note that if connection authenticationType is set to ", (0,react_.mdx)("strong", null, "Service"), ' ', "this step should be skipped.")), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_storage_tutorial_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/synchronization/imodels/connections/authorizationInformation?redirectUrl=REDIRECT_URL HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-3"
  }, "Request"), (0,react_.mdx)("p", null, "That can be done by sending a GET ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://api.bentley.com/synchronization/imodels/connections/authorizationInformation?redirectUrl=REDIRECT_URL"
  }, "https://api.bentley.com/synchronization/imodels/connections/authorizationInformation?redirectUrl=REDIRECT_URL"), " request."), (0,react_.mdx)("p", null, "You can execute the request on the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/synchronization/operations/get-authorization-information/"
  }, "Synchronization API Documentation"), " page, \u201CTry it out\u201D section."), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Authorization\xA0header with valid Bearer token is required."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "REDIRECT_URL a url of where a user should be redirected after successful token renewal."))), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_storage_tutorial_CodeBlock, {
      language: "json",
      code: "{\n    \"authorizationInformation\": {\n        \"isUserAuthorized\": true,\n        \"_links\": {\n            \"authorizationUrl\": {\n                \"href\": null\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response-if-user-has-a-valid-refresh-token"
  }, "Response if user has a valid refresh token"), (0,react_.mdx)("p", null, "isUserAuthorized with value true, means that user has a valid refresh token and can run long running synchronizations.")), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_storage_tutorial_CodeBlock, {
      language: "json",
      code: "{\n    \"authorizationInformation\": {\n        \"isUserAuthorized\": false,\n        \"_links\": {\n            \"authorizationUrl\": {\n                \"href\": \"https://connect-itwinbridgeportal.bentley.com/authenticate?redirect_url=REDIRECT_URL\"\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response-if-user-does-not-have-a-valid-refresh-token"
  }, "Response if user does not have a valid refresh token"), (0,react_.mdx)("p", null, "isUserAuthorized with value false, means that user does not have valid refresh token and cannot run long running synchronizations. To refresh token user has to be redirected to authorizationUrl from response.")), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-run-a-connection"
  }, "6. Run a Connection"), (0,react_.mdx)("p", null, "A Run defines a single Connection synchronization process. It can be initialized manually by sending run start request.")), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_storage_tutorial_CodeBlock, {
      language: "http",
      code: "POST\xA0https://api.bentley.com/synchronization/imodels/storageConnections/CONNECTION_ID/run HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-4"
  }, "Request"), (0,react_.mdx)("p", null, "Send a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "POST"), " request to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "synchronization/imodels/connections/{connectionId}/runs"), " endpoint with valid connectionId to run a connection."), (0,react_.mdx)("p", null, "You can execute the request on the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/synchronization/operations/run-storage-connection/"
  }, "Synchronization API Documentation"), " page, \u201CTry it out\u201D section."), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Authorization header with valid Bearer token is required."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "CONNECTION_ID which should be started for processing. Use the value from previous step response."))), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_storage_tutorial_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 202 Accepted",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response-2"
  }, "Response"), (0,react_.mdx)("p", null, "On successful request, operation returns http status code 202/accepted - the request is accepted for processing and will be executed in the background.\nIf there is already an active run in progress for this connection, new run is being added to the queue.")), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "7-get-runs-statuses"
  }, "7. Get runs statuses"), (0,react_.mdx)("p", null, "A run contains synchronization process status. To get runs history and statuses get request has to be made.")), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_storage_tutorial_CodeBlock, {
      language: "http",
      code: "POST\xA0https://api.bentley.com/synchronization/imodels/storageConnections/CONNECTION_ID/runs HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-5"
  }, "Request"), (0,react_.mdx)("p", null, "Getting Run status requires sending a GET request to the synchronization/imodels/storageConnections/{connectionId}/runs endpoint with valid connectionId."), (0,react_.mdx)("p", null, "You can execute the request on the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/synchronization/operations/get-storage-connection-runs/"
  }, "Synchronization API Documentation"), " page, \u201CTry it out\u201D section."), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Authorization header with valid Bearer token is required."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "CONNECTION_ID which runs we want to get."))), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(synchronization_storage_tutorial_CodeBlock, {
      language: "json",
      code: "{\n  \"runs\":[\n    {\n      \"id\":\"41062244-3e62-42a3-8232-9f2b4d31be16\",\n      \"state\":\"Completed\",\n      \"result\":\"Success\"\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://api.bentley.com/Synchronization/imodels/storageConnections/CONNECTION_ID/runs?$skip=0&$top=100\"\n    },\n    \"prev\":{\n      \"href\":\"https://api.bentley.com/Synchronization/imodels/storageConnections/CONNECTION_ID/runs?$skip=0&$top=100\"\n    },\n    \"next\":{\n      \"href\":\"https://api.bentley.com/Synchronization/imodels/storageConnections/CONNECTION_ID/runs?$skip=100&$top=100\"\n    }\n  }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h5", {
    "id": "response-3"
  }, "Response"), (0,react_.mdx)("p", null, "At the end of synchronization run state should be \u201CCompleted\u201D and result \u201CSuccess\u201D.")), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "8-synchronize-an-updated-file"
  }, "8. Synchronize an updated file"), (0,react_.mdx)("p", null, "If a file is changed on iTwin storage, it has to be synchronized again for the iModel to be updated. The workflow should be:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "File is updated on iTwin Storage."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Run the connection again. (See step 7)"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Get connection run status. (See step 8)"))), (0,react_.mdx)(synchronization_storage_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "8-conclusion"
  }, "8. Conclusion"), (0,react_.mdx)("p", null, "In this tutorial we have gone through a file from iTwin Storage synchronization process:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Create a connection"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Run the connection"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Get run status.")), (0,react_.mdx)("p", null, "After successful run, design file changes should be in an iModel. Next step could be to create a Named Version.")), (0,react_.mdx)(synchronization_storage_tutorial_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)("p", null, "Congratulations for the completion of your first synchronization! You\u2019ve now know a lot on the subject, but there\u2019s still possibilities to learn more to unleash the platform capabilities."), (0,react_.mdx)(synchronization_storage_tutorial_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(synchronization_storage_tutorial_Tile, {
    name: "Create iModel Named Version",
    description: "This quick start is intended to guide you through the steps to create a new iModel Named Version.",
    href: "/tutorials/create-named-version",
    mdxType: "Tile"
  })), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(synchronization_storage_tutorial_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(synchronization_storage_tutorial_ResourceTile, {
    title: "Synchronization API documentation",
    href: "/api-groups/synchronization",
    description: "An overview and detailed Synchronization API documentation.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(synchronization_storage_tutorial_ResourceTile, {
    title: "Synchronization API code sample",
    href: "https://github.com/iTwin/synchronization-api-sample-app",
    description: "A working code sample showing how Synchronization API can be integrated into a React application.",
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(synchronization_storage_tutorial_ResourceTile, {
    title: "Data Management API documentation",
    href: "/api-groups/data-management/",
    description: "An overview and detailed Data Management API documentation.",
    mdxType: "ResourceTile"
  }))));
}
;
synchronization_storage_tutorial_MDXContent.isMDXComponent = true;
var synchronization_storage_tutorial_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-preparing-to-use-synchronization-api",
    level: 2,
    title: "1. Preparing to use Synchronization API",
    children: [{
      id: "11-register-an-application",
      level: 3,
      title: "1.1. Register an Application",
      children: []
    }, {
      id: "12-get-a-token",
      level: 3,
      title: "1.2. Get a token",
      children: []
    }]
  }, {
    id: "2-create-an-imodel",
    level: 2,
    title: "2. Create an iModel",
    children: []
  }, {
    id: "3-get-file_id-from-storage-api",
    level: 2,
    title: "3. Get FILE_ID from Storage API",
    children: []
  }, {
    id: "4-create-a-connection",
    level: 2,
    title: "4. Create a Connection",
    children: []
  }, {
    id: "5-store-refresh-token-for-user",
    level: 2,
    title: "5. Store refresh token for user",
    children: []
  }, {
    id: "6-run-a-connection",
    level: 2,
    title: "6. Run a Connection",
    children: []
  }, {
    id: "7-get-runs-statuses",
    level: 2,
    title: "7. Get runs statuses",
    children: []
  }, {
    id: "8-synchronize-an-updated-file",
    level: 2,
    title: "8. Synchronize an updated file",
    children: []
  }, {
    id: "8-conclusion",
    level: 2,
    title: "8. Conclusion",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var synchronization_storage_tutorial_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/unmap-blob-file-tutorial.mdx


var unmap_blob_file_tutorial_excluded = ["components"];
var unmap_blob_file_tutorial_jsx = (external_react_default()).createElement;


var unmap_blob_file_tutorial_readingTime = {
  "text": "4 min read",
  "minutes": 3.94,
  "time": 236400,
  "words": 788
};
/* @jsxRuntime classic */
/* @jsx mdx */

var unmap_blob_file_tutorial_metadata = {
  title: 'Unmap an Azure Blob Storage file from an iModel',
  tile: {
    name: 'Unmap an Azure Blob Storage file from an iModel',
    description: 'Walk-through how to unmap an Azure Blob Storage file from an iModel using Synchronization API.',
    thumbnail: '/images/synchronizationUnmap.png',
    href: '/tutorials/unmap-blob-file-tutorial/',
    durationInMinutes: 10,
    relatedApiIds: ['synchronization', 'imodels']
  }
};
var unmap_blob_file_tutorial_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var unmap_blob_file_tutorial_Introduction = unmap_blob_file_tutorial_makeShortcode("Introduction");
var unmap_blob_file_tutorial_TutorialSection = unmap_blob_file_tutorial_makeShortcode("TutorialSection");
var unmap_blob_file_tutorial_CodeBlock = unmap_blob_file_tutorial_makeShortcode("CodeBlock");
var unmap_blob_file_tutorial_ContinueLearningSection = unmap_blob_file_tutorial_makeShortcode("ContinueLearningSection");
var unmap_blob_file_tutorial_TileList = unmap_blob_file_tutorial_makeShortcode("TileList");
var unmap_blob_file_tutorial_Tile = unmap_blob_file_tutorial_makeShortcode("Tile");
var unmap_blob_file_tutorial_ResourceTile = unmap_blob_file_tutorial_makeShortcode("ResourceTile");
var unmap_blob_file_tutorial_layoutProps = {
  metadata: unmap_blob_file_tutorial_metadata
};
var unmap_blob_file_tutorial_MDXLayout = "wrapper";
function unmap_blob_file_tutorial_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, unmap_blob_file_tutorial_excluded);
  return (0,react_.mdx)(unmap_blob_file_tutorial_MDXLayout, (0,esm_extends/* default */.Z)({}, unmap_blob_file_tutorial_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(unmap_blob_file_tutorial_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "10",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial guides you through deleting the mapping of an Azure Blob Storage file using the Synchronization API. All changes, made by the file, will be removed from an iModel. To delete the mapping of a file, the connection has to be run again with the action set to unmap. That means you should already have a connection.")), (0,react_.mdx)(unmap_blob_file_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "Since deleting a mapping removes a file from an iModel, the following tasks have to be done before attempting this process:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Create an iModel."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Create a connection."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Run a connection."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "(Optional) Get connection run status - to confirm that the file is successfully mapped to the iModel.")), (0,react_.mdx)("p", null, "For a detailed guide, see ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/synchronization-blob-tutorial/"
  }, "Synchronization tutorial"), ". If you have completed these tasks, the next steps will guide you through the workflow of deleting a mapping.")), (0,react_.mdx)(unmap_blob_file_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-run-the-connection-with-unmap-action"
  }, "1. Run the connection with unmap action"), (0,react_.mdx)("p", null, "This step is similar to simply running the connection for file synchronization, however, the mapping deletion request contains an additional \u201Caction\u201D property.")), (0,react_.mdx)(unmap_blob_file_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(unmap_blob_file_tutorial_CodeBlock, {
      language: "http",
      code: "POST\xA0https://api.bentley.com/synchronization/imodels/manifestConnections/CONNECTION_ID/runs HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request"
  }, "Request"), (0,react_.mdx)("p", null, "To delete a file mapping, send a POST request to the synchronization/imodels/manifestConnections/{connectionId}/runs\xA0endpoint with a valid connection ID."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Authorization\xA0header with valid Bearer token is required."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "CONNECTION_ID which should be started for processing."))), (0,react_.mdx)(unmap_blob_file_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(unmap_blob_file_tutorial_CodeBlock, {
      language: "json",
      code: "{\n    \"sourceFiles\": [{\n        \"id\": \"FILE_ID\",\n        \"action\": \"unmap\",\n        \"connector\": \"MSTN\"\n    }]\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-body"
  }, "Request Body"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "sourceFiles"), " - information about source files", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "id"), " - id of the file"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "action"), " - setting this property to ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "unmap"), " will trigger the connection to run the mapping deletion process instead of synchronization"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "connector"), " - file connector identifier."))))), (0,react_.mdx)(unmap_blob_file_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(unmap_blob_file_tutorial_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 202 Accepted",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response"
  }, "Response"), (0,react_.mdx)("p", null, "On a successful request, the operation returns http status code 202/accepted - the request is accepted for processing and will be executed in the background.\nIf there is an active run in progress for this connection, a new run is added to the queue. The response includes a location header pointing to the created run.")), (0,react_.mdx)(unmap_blob_file_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-run-status"
  }, "2. Get run status"), (0,react_.mdx)("p", null, "The run from the previous step contains the mapping deletion process status. To track a run and associated status, make a GET request to a link from previous request response location header.")), (0,react_.mdx)(unmap_blob_file_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(unmap_blob_file_tutorial_CodeBlock, {
      language: "http",
      code: "GET\xA0https://api.bentley.com/synchronization/imodels/manifestConnections/CONNECTION_ID/runs/RUN_ID HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "request-1"
  }, "Request"), (0,react_.mdx)("p", null, "To get the status of the run, send a GET request to the synchronization/imodels/manifestConnections/{connectionId}/runs/{runId}\xA0endpoint with a valid connection and run ID. For convenience take a link from previous request response location header."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Authorization\xA0header with valid Bearer token is required."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "CONNECTION_ID of the run we want to get."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "RUN_ID of the run we want to get."))), (0,react_.mdx)(unmap_blob_file_tutorial_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(unmap_blob_file_tutorial_CodeBlock, {
      language: "json",
      code: "{\n    \"run\": {\n        \"id\": \"RUN_ID\",\n        \"startDateTime\": \"02/15/2022 08:24:45\",\n        \"endDateTime\": \"02/15/2022 08:26:50\",\n        \"phase\": \"MasterFile\",\n        \"jobs\": [\n            {\n                \"id\": \"JOB_ID\",\n                \"startDateTime\": \"02/15/2022 08:25:58\",\n                \"endDateTime\": \"02/15/2022 08:26:28\",\n                \"state\": \"Completed\",\n                \"result\": \"Success\",\n                \"connectorType\": \"MSTN\",\n                \"tasks\": [\n                    {\n                        \"id\": \"TASK_ID\",\n                        \"startDateTime\": \"02/15/2022 08:25:58\",\n                        \"endDateTime\": \"02/15/2022 08:26:28\",\n                        \"retryAttempts\": 0,\n                        \"state\": \"Completed\",\n                        \"result\": \"Success\",\n                        \"error\": null\n                    }\n                ]\n            }\n        ],\n        \"state\": \"Completed\",\n        \"result\": \"Success\"\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "response-1"
  }, "Response"), (0,react_.mdx)("p", null, "After the mapping deletion process is finished, the run state should be \u201CCompleted\u201D and result \u201CSuccess\u201D.")), (0,react_.mdx)(unmap_blob_file_tutorial_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-conclusion"
  }, "3. Conclusion"), (0,react_.mdx)("p", null, "In this tutorial we have gone through the process of deleting the mapping of an Azure Blob Storage file:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Run the connection with unmap action"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Get run status.")), (0,react_.mdx)("p", null, "After a successful run, the iModel should no longer contain the design file.")), (0,react_.mdx)(unmap_blob_file_tutorial_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)("p", null, "Congratulations on the completion of your first file mapping deletion process! Now you know a lot on the subject, but there are still possibilities to learn more to unlock the platform capabilities."), (0,react_.mdx)(unmap_blob_file_tutorial_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(unmap_blob_file_tutorial_Tile, {
    name: "Create iModel Named Version",
    description: "This quick start is intended to guide you through the steps to create a new iModel Named Version.",
    href: "/tutorials/create-named-version",
    mdxType: "Tile"
  })), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(unmap_blob_file_tutorial_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(unmap_blob_file_tutorial_ResourceTile, {
    title: "Synchronization API documentation",
    href: "/api-groups/synchronization",
    description: "An overview and detailed Synchronization API documentation.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(unmap_blob_file_tutorial_ResourceTile, {
    title: "Synchronization API code sample",
    href: "https://github.com/iTwin/synchronization-api-sample-app",
    description: "A working code sample showing how Synchronization API can be integrated into a React application.",
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(unmap_blob_file_tutorial_ResourceTile, {
    title: "Data Management API documentation",
    href: "/api-groups/data-management/",
    description: "An overview and detailed Data Management API documentation.",
    mdxType: "ResourceTile"
  }))));
}
;
unmap_blob_file_tutorial_MDXContent.isMDXComponent = true;
var unmap_blob_file_tutorial_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-run-the-connection-with-unmap-action",
    level: 2,
    title: "1. Run the connection with unmap action",
    children: []
  }, {
    id: "2-get-run-status",
    level: 2,
    title: "2. Get run status",
    children: []
  }, {
    id: "3-conclusion",
    level: 2,
    title: "3. Conclusion",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var unmap_blob_file_tutorial_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/upload-component-to-catalog.mdx


var upload_component_to_catalog_excluded = ["components"];
var upload_component_to_catalog_jsx = (external_react_default()).createElement;


var upload_component_to_catalog_readingTime = {
  "text": "17 min read",
  "minutes": 16.405,
  "time": 984300,
  "words": 3281
};
/* @jsxRuntime classic */
/* @jsx mdx */

var upload_component_to_catalog_metadata = {
  title: 'Upload Component to a Catalog',
  tile: {
    name: 'Upload Component to a Catalog',
    description: 'This tutorial will guide you through the process of uploading a component to a catalog in an organization.',
    href: '/tutorials/upload-component-to-catalog',
    durationInMinutes: 20,
    relatedApiIds: ['library'],
    showInFirstSteps: false,
    firstStepsSequenceNumber: 3
  }
};
var upload_component_to_catalog_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var upload_component_to_catalog_Introduction = upload_component_to_catalog_makeShortcode("Introduction");
var upload_component_to_catalog_TutorialSection = upload_component_to_catalog_makeShortcode("TutorialSection");
var upload_component_to_catalog_LinkButton = upload_component_to_catalog_makeShortcode("LinkButton");
var upload_component_to_catalog_PostmanIcon = upload_component_to_catalog_makeShortcode("PostmanIcon");
var upload_component_to_catalog_CreateSampleAppButton = upload_component_to_catalog_makeShortcode("CreateSampleAppButton");
var upload_component_to_catalog_Alert = upload_component_to_catalog_makeShortcode("Alert");
var upload_component_to_catalog_Title = upload_component_to_catalog_makeShortcode("Title");
var upload_component_to_catalog_CodeBlock = upload_component_to_catalog_makeShortcode("CodeBlock");
var upload_component_to_catalog_ContinueLearningSection = upload_component_to_catalog_makeShortcode("ContinueLearningSection");
var upload_component_to_catalog_TileList = upload_component_to_catalog_makeShortcode("TileList");
var upload_component_to_catalog_Tile = upload_component_to_catalog_makeShortcode("Tile");
var upload_component_to_catalog_ResourceTile = upload_component_to_catalog_makeShortcode("ResourceTile");
var upload_component_to_catalog_layoutProps = {
  metadata: upload_component_to_catalog_metadata
};
var upload_component_to_catalog_MDXLayout = "wrapper";
function upload_component_to_catalog_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, upload_component_to_catalog_excluded);
  return (0,react_.mdx)(upload_component_to_catalog_MDXLayout, (0,esm_extends/* default */.Z)({}, upload_component_to_catalog_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(upload_component_to_catalog_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "20",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial will take you through the process of uploading a component to a catalog in an organization."), (0,react_.mdx)("p", null, "By the end of this walk-through, you will be able to utilize the API endpoints in order to upload components to a catalog and associate additional documents to the uploaded component.")), (0,react_.mdx)(upload_component_to_catalog_TutorialSection, {
    actions: [(0,react_.mdx)(upload_component_to_catalog_LinkButton, {
      href: "https://www.postman.com/downloads/",
      target: "_blank",
      title: "Postman",
      icon: (0,react_.mdx)(upload_component_to_catalog_PostmanIcon, {
        mdxType: "PostmanIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A tool such as ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Postman"), " that can be used to execute http calls. These calls can also be made using the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "TryIt"), " button in the API documentation."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "User must be affiliated with an Organization and should either be an Organization Administrator or have \u201CUpload\u201D and \u201CRead\u201D permission at Organization level to upload components to catalog."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "For more information about User Management please visit our Bentley Communities ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0"
  }, "Licensing, Cloud, and Web Services"), " wiki page."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "A design file is required to upload a component. Design file is a CAD file, used in CAD applications i.e. MicroStation, Revit etc. Library API supports three types of files to upload a component i.e. rfa, dgn and cel."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "In this example we will upload a component from rfa file, though dgn and cell files can also be used to upload the component with same steps. You should have one of these files to upload a component."))), (0,react_.mdx)(upload_component_to_catalog_TutorialSection, {
    actions: [(0,react_.mdx)(upload_component_to_catalog_CreateSampleAppButton, {
      tooltip: "Register a basic SPA App for this tutorial",
      scopes: ['realitydata:read', 'imodels:read', 'imodels:modify', 'library:read', 'library:modify', 'storage:read', 'storage:modify'],
      clientName: "Upload component to catalog tutorial",
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-register-an-application"
  }, "1. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to configure ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"
  }, "Authorization Code Flow for your SPA application"), " and get the correct access token."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iModels"), ", ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Library"), ", ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "RealityData"), " and ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Storage"), " APIs and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "realitydata:read imodels:read imodels:modify library:read library:modify storage:read storage:modify"), " scopes enabled."))), (0,react_.mdx)(upload_component_to_catalog_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-a-token"
  }, "2. Get a token"), (0,react_.mdx)("p", null, "Before you can make a request to the APIs, a user token is needed. There are several ways to get it."), (0,react_.mdx)("h3", {
    "id": "implement-authorization-code-flow-in-the-application"
  }, "Implement Authorization Code Flow in the application"), (0,react_.mdx)("p", null, "Follow this ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/overview/authorization/"
  }, "article"), " to implement Authorization code workflow in your application."), (0,react_.mdx)(upload_component_to_catalog_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Here you can use Client ID generated from previous registration step."), (0,react_.mdx)("h3", {
    "id": "grab-a-user-token-from-api-reference-try-it-section"
  }, "Grab a user token from Api reference \u201CTry it\u201D Section"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/apis/library/operations/upload-component/"
  }, "here")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Try it"), " button."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Under the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " section, select ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "authorizationCode"), " from the dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "After the sign in popup closes, the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " header with token value should be visible beneath the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "HTTP request"), " dropdown."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Copy & paste the ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "Authorization"), " value for this tutorial.")), (0,react_.mdx)(upload_component_to_catalog_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")), (0,react_.mdx)(upload_component_to_catalog_TutorialSection, {
    actions: [(0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/library/catalogs HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "json",
      code: "{\n    \"displayName\": \"Tutorial Sample Catalog\",\n    \"description\": \"Tutorial Sample Description\",\n    \"region\": \"US\",\n    \"hashtags\": [\"SampleHashtag1\", \"SampleHashtag2\"]\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\ncontent-length: 937\ncontent-type: application/json\ndate: Thu, 24 Jun 2021 14:44:18 GMT\nrequest-context: appId=cid-v1:7a353d36-9a8b-423e-965e-9d7f51324584\nx-correlation-id: 5262b13f-394e-49b8-95ea-a5361d2513a3\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "json",
      code: "{\n    \"catalog\": {\n      \"id\": \"7f427c30-8dce-4803-81dc-e8681a3bd757\",\n      \"displayName\": \"Tutorial Sample Catalog\",\n      \"description\": \"Tutorial Sample Description\",\n      \"region\": \"US\",\n      \"createdDateTime\": \"2021-09-06T06:03:56.1923267Z\",\n      \"lastModifiedDateTime\": \"2021-09-06T06:03:56.1923267Z\",\n      \"hashtags\": [\"SampleHashtag1\", \"SampleHashtag2\"]\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-create-a-new-catalog"
  }, "3. Create a new Catalog"), (0,react_.mdx)("p", null, "The Library API is used to create and manage catalogs. A POST call to the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/library/catalogs"), " endpoint will create a new catalog. Only ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), " is required for creating a new catalog. It must be unique\nso if you get a Conflict error then you will need to replace displayName with unique value. See the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/library/operations/create-catalog"
  }, "Library API documentation"), " for descriptions of the different properties."), (0,react_.mdx)("p", null, "The POST call will return a new catalog instance. The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " can be used to upload component to the catalog. The catalog Id is also used in other Library API endpoints. You may want to save this Id to use in other endpoints."), (0,react_.mdx)("p", null, "In case you already have ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " of an existing catalog, it can be used to upload the component, instead of creating a new catalog.")), (0,react_.mdx)(upload_component_to_catalog_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-referenced-entities"
  }, "4. Referenced Entities"), (0,react_.mdx)("p", null, "A component can have referenced entities i.e. Category, Application and Manufacturer. These are optional properties of a component to be uploaded, in case this information is not provided with request body, upload process will try extract the same from\nthe design file, provided design file contains this information."), (0,react_.mdx)("p", null, "The Library API provides endpoints to create and manage these referenced entities. For this example, we will not use referenced entities in the upload and instead make use of information provided in the design file."), (0,react_.mdx)("p", null, "You can use following TryIt options in the Library API documentation to create these entities."), (0,react_.mdx)("p", null, (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/library/operations/create-category"
  }, "Library API documentation to create Category")), (0,react_.mdx)("p", null, (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/library/operations/create-application"
  }, "Library API documentation to create Application")), (0,react_.mdx)("p", null, (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/library/operations/create-manufacturer"
  }, "Library API documentation to create Manufacturer"))), (0,react_.mdx)(upload_component_to_catalog_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-upload-component"
  }, "5. Upload Component"), (0,react_.mdx)("p", null, "A component can be uploaded using rfa, dgn or cel file. In this example we will use rfa file to upload component to the catalog.\nUpload component is a multi-step process. Make an upload request with upload request body, then upload the design file and/or TypeCatalog file and after that you can optionally add any additional reference documents to the newly uploaded component.\nTypeCatalog files are only used optionally with rfa files, so this will not be required in case of dgn or cel files.")), (0,react_.mdx)(upload_component_to_catalog_TutorialSection, {
    actions: [(0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/library/upload-component HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "json",
      code: "{\n    \"fileName\": \"TutorialSampleFile.rfa\",\n    \"componentName\": \"Tutorial Sample Component\",\n    \"description\": \"Tutorial Sample Description\",\n    \"searchTags\": [\n        \"SampleTag1\",\n        \"SampleTag2\"\n    ],\n    \"catalogs\": [\n        \"7f427c30-8dce-4803-81dc-e8681a3bd757\"\n    ],\n    \"category\": null,\n    \"application\": null,\n    \"manufacturer\": null,\n    \"isTypeCatalog\": true\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 202 Accepted\ncontent-length: 973\ndate: Mon, 06 Sep 2021 15:05:38 GMT\nlocation: https://api.bentley.com/library/jobs/2517713600604274285_b4ac4d02-bc16-48a3-a468-b277ea74a7cb\nrequest-context: appId=cid-v1:6ee7c246-23f0-43be-ac34-bbbb36da72e9\nx-correlation-id: 2d4f3784-74c9-4e8d-bf81-939a27b16f54\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "json",
      code: "{\n    \"uploadComponent\": {\n        \"fileName\": \"TutorialSampleFile.rfa\",\n        \"componentName\": \"Tutorial Sample Component\",\n        \"description\": \"Tutorial Sample Description\",\n        \"sessionId\": \"70f72644-ef2f-4673-a327-ff0140b448a8\",\n        \"searchTags\": [\"SampleTag1\", \"SampleTag2\"],\n        \"isTypeCatalog\": true,\n        \"_links\": {\n            \"catalogs\": [{\n                \"href\": \"https://api.bentley.com/library/catalogs/7f427c30-8dce-4803-81dc-e8681a3bd757\"\n            }],\n            \"typeCatalogUploadUrl\": {\n                \"href\": \"https://componentscenprodeussa01.blob.core.windows.net/private-temporary-type-catalog-files/2517713594778387339_a1e3bf29-de93-4fd5-933f-da02078b0288.typecatalog?sv=2018-03-28&sr=b&sig=cpt24N23osjV3be6KmAHU2T%2FweVO0%2Fb%2FcRLFS3nQYW0%3D&se=2021-09-06T16%3A15%3A22Z&sp=rcw\"\n            },\n            \"designFileUploadUrl\": {\n                \"href\": \"https://componentscenprodeussa01.blob.core.windows.net/private-temporary-design-files/2517713594778387339_a1e3bf29-de93-4fd5-933f-da02078b0288.design?sv=2018-03-28&sr=b&sig=xJGhNSl5Ti0VHvIdhcqqRws6d7zgxMyK05xAwgrSrx4%3D&se=2021-09-06T16%3A15%3A22Z&sp=rcw\"\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "51-make-upload-component-request"
  }, "5.1 Make Upload Component Request"), (0,react_.mdx)("p", null, "In the first step, create upload component request body and make a POST call to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/library/upload-component"), " endpoint. There is an option to make component a \u201CTypeCatalog\u201D component by setting ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "isTypeCatalog"), " property to true. A TypeCatalog Component expects to upload a text file (must have txt extension) as well along with the design file."), (0,react_.mdx)("p", null, "In this example we will use TypeCatalog component. Only ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "fileName"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "catalogIds"), " is required to upload a component to a catalog, in case ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "catalogIds"), " not provided, component will be uploaded to user organization and won\u2019t belong to any catalog. Provide catalog Id (retrieved in previous steps) to catalogIds field,\nthis field expects a collection of catalogIds, in case a component should be uploaded to multiple catalogs, you can provide multiple catalog Ids in this field."), (0,react_.mdx)("p", null, "Upload is a long running activity and response contains location header value, this will be used to track the progress. You may want to save this header value, which will be used in next steps."), (0,react_.mdx)("p", null, "See the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/library/operations/upload-component"
  }, "Library API documentation"), " for descriptions of the different properties.")), (0,react_.mdx)(upload_component_to_catalog_TutorialSection, {
    actions: [(0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "PUT https://componentscenprodeussa01.blob.core.windows.net/private-temporary-type-catalog-files/2517713594778387339_a1e3bf29-de93-4fd5-933f-da02078b0288.typecatalog?sv=2018-03-28&sr=b&sig=cpt24N23osjV3be6KmAHU2T%2FweVO0%2Fb%2FcRLFS3nQYW0%3D&se=2021-09-06T16%3A15%3A22Z&sp=rcw HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "x-ms-blob-type: BlockBlob",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "TypeCatalog File Binary Content",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "PUT https://componentscenprodeussa01.blob.core.windows.net/private-temporary-design-files/2517713594778387339_a1e3bf29-de93-4fd5-933f-da02078b0288.design?sv=2018-03-28&sr=b&sig=xJGhNSl5Ti0VHvIdhcqqRws6d7zgxMyK05xAwgrSrx4%3D&se=2021-09-06T16%3A15%3A22Z&sp=rcw HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "x-ms-blob-type: BlockBlob",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "Design File Binary Content",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "52-upload-files"
  }, "5.2 Upload Files"), (0,react_.mdx)("p", null, "Response from upload request contains temporary urls to upload files under ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "_links"), " property value. Please note in this case there are two urls. ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "_links->designFileUploadUrl"), " to upload the design file and since this is a TypeCatalog Component, there is another url ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "_links->typeCatalogUploadUrl"), " to upload TypeCatalog text file. In case ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "isTypeCatalog"), " property is set to false in upload request, response will have only one file upload url ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "_links->designFileUploadUrl"), ". TypeCatalog text file must be uploaded before uploading the design file."), (0,react_.mdx)("p", null, "File upload can be done by making a Http PUT request on the provided url via tool such as ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Postman"), " or programmatically use Azure libraries to upload file (", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://docs.microsoft.com/en-us/rest/api/storageservices/put-blob"
  }, "https://docs.microsoft.com/en-us/rest/api/storageservices/put-blob"), ").")), (0,react_.mdx)(upload_component_to_catalog_TutorialSection, {
    actions: [(0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/library/jobs/2517713594778387339_a1e3bf29-de93-4fd5-933f-da02078b0288 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK \ncache-control: no-cache\ncontent-encoding: gzip\ncontent-type: application/json\ndate: Mon, 06 Sep 2021 15:26:28 GMT\nrequest-context: appId=cid-v1:6ee7c246-23f0-43be-ac34-bbbb36da72e9\nvary: Accept-Encoding\nx-content-type-options: nosniff\nx-correlation-id: 2aadd82c-527e-4761-80d7-c8fc8191242c\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US\nx-ms-request-id: 2e67c236-b002-0069-7133-a37573000000\nx-ms-version: 2017-04-17",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "json",
      code: "{\n    \"job\": {\n        \"id\": \"2517713594778387339_a1e3bf29-de93-4fd5-933f-da02078b0288\",\n        \"displayName\": \"TutorialSampleFile.rfa\",\n        \"jobSize\": 749568,\n        \"progress\": 0,\n        \"status\": \"Success\",\n        \"type\": \"Upload\",\n        \"error\": null,\n        \"_links\": {\n            \"component\": {\n                \"href\": \"https://api.bentley.com/library/components/57fefe11-df1d-40c7-ae1a-02e233b9a7c7\"\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "52-get-upload-job-status"
  }, "5.2 Get Upload Job Status"), (0,react_.mdx)("p", null, "Upload component is a long running activity and runs in background, It starts once design file upload is complete. Response of upload request contains location header containing jobs endpoint with current upload job id, this is used to track the status of the background upload activity.\nMake a GET call to location header value (", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/library/jobs/2517713594778387339_a1e3bf29-de93-4fd5-933f-da02078b0288"), ") to get the upload job status. Once upload activity is successfully complete, response of jobs endpoint \u201Cstatus\u201D property value will be 'Success\u2019.\nAt this point, upload component is complete and a new component has been created. Response also provides link to this newly created component under ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "_links->component->href"), " property, which can be used to retrieve the component from repository.")), (0,react_.mdx)(upload_component_to_catalog_TutorialSection, {
    actions: [(0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/library/components/57fefe11-df1d-40c7-ae1a-02e233b9a7c7 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK \ncontent-encoding: gzip\ncontent-type: application/json\ndate: Mon, 06 Sep 2021 15:30:11 GMT\nodata-version: 4.0\nrequest-context: appId=cid-v1:6ee7c246-23f0-43be-ac34-bbbb36da72e9\nvary: Accept-Encoding\nx-correlation-id: 007f78fc-200d-4b80-8f9d-3594e685a674\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "json",
      code: "{\n    \"component\": {\n        \"id\": \"57fefe11-df1d-40c7-ae1a-02e233b9a7c7\",\n        \"displayName\": \"Tutorial Sample Component\",\n        \"description\": \"Tutorial Sample Description\",\n        \"state\": \"Draft\",\n        \"createdDateTime\": \"2021-09-06T15:17:45.8834641Z\",\n        \"lastModifiedDateTime\": \"2021-09-06T15:17:46.4509552Z\",\n        \"supportedFileTypes\": [\"RFA\"],\n        \"hashtags\": [\"SampleTag1\", \"SampleTag2\"],\n        \"_links\": {\n            \"catalogs\": [{\n                \"href\": \"https://api.bentley.com/library/catalogs/7f427c30-8dce-4803-81dc-e8681a3bd757\"\n            }],\n            \"application\": {\n                \"href\": \"https://api.bentley.com/library/applications/1418693a-8f60-4719-af0b-ceee1ad41e33\"\n            },\n            \"manufacturer\": {\n                \"href\": \"https://api.bentley.com/library/manufacturers/d4485150-ad6d-4d76-a3e2-50a0f690afc9\"\n            },\n            \"category\": {\n                \"href\": \"https://api.bentley.com/library/categories/63b7d70a-a426-4530-8c0f-3efd6a6c0da7\"\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "53-get-component"
  }, "5.3 Get Component"), (0,react_.mdx)("p", null, "Property ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "_links->component->href"), " from the jobs response in the previous step, provides endpoint for the component created during upload activity. Make GET call to this endpoint (", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/library/components/57fefe11-df1d-40c7-ae1a-02e233b9a7c7"), ") to retrieve the component.\nResponse contains the component, you can note under ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "_links"), " property in the response, there is information/links about referenced entities of the component i.e. application, manufacturer and category. This is extracted from the design file during the upload activity. This information\ncan only be extracted if design file used in the upload process contains information about referenced entities.")), (0,react_.mdx)(upload_component_to_catalog_TutorialSection, {
    actions: [(0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "PUT https://api.bentley.com/library/components/57fefe11-df1d-40c7-ae1a-02e233b9a7c7 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "json",
      code: "{\n    \"displayName\": \"Tutorial Sample Component\",\n    \"description\": \"Tutorial Sample Description\",\n    \"state\": \"Published\",\n    \"catalogs\": [\n        \"7f427c30-8dce-4803-81dc-e8681a3bd757\"\n    ],\n    \"category\": \"63b7d70a-a426-4530-8c0f-3efd6a6c0da7\",\n    \"application\": \"1418693a-8f60-4719-af0b-ceee1ad41e33\",\n    \"manufacturer\": \"d4485150-ad6d-4d76-a3e2-50a0f690afc9\",\n    \"hashtags\": [\"SampleTag1\", \"SampleTag2\"]\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\ncontent-encoding: gzip\ncontent-type: application/json\ndate: Fri, 06 Sep 2021 15:37:05 GMT\nodata-version: 4.0\nrequest-context: appId=cid-v1:6ee7c246-23f0-43be-ac34-bbbb36da72e9\nvary: Accept-Encoding\nx-correlation-id: 95bf368d-0d16-4913-b4ce-05caf4653c30\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "json",
      code: "{\n    \"component\": {\n        \"id\": \"57fefe11-df1d-40c7-ae1a-02e233b9a7c7\",\n        \"displayName\": \"Tutorial Sample Component\",\n        \"description\": \"Tutorial Sample Description\",\n        \"state\": \"Published\",\n        \"createdDateTime\": \"2021-09-06T15:17:45.8834641Z\",\n        \"lastModifiedDateTime\": \"2021-09-06T15:37:06.1378844Z\",\n        \"supportedFileTypes\": [\"RFA\"],\n        \"hashtags\": [\"SampleTag1\", \"SampleTag2\"],\n        \"_links\": {\n            \"catalogs\": [{\n                \"href\": \"https://api.bentley.com/library/catalogs/7f427c30-8dce-4803-81dc-e8681a3bd757\"\n            }],\n            \"application\": {\n                \"href\": \"https://api.bentley.com/library/applications/1418693a-8f60-4719-af0b-ceee1ad41e33\"\n            },\n            \"manufacturer\": {\n                \"href\": \"https://api.bentley.com/library/manufacturers/d4485150-ad6d-4d76-a3e2-50a0f690afc9\"\n            },\n            \"category\": {\n                \"href\": \"https://api.bentley.com/library/categories/63b7d70a-a426-4530-8c0f-3efd6a6c0da7\"\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "54-modify-component"
  }, "5.4 Modify Component"), (0,react_.mdx)("p", null, "After the component is uploaded, next step can be to make changes in the component. A PUT call to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/library/components/57fefe11-df1d-40c7-ae1a-02e233b9a7c7"), " endpoint updates the component. Let\u2019s change the \u201Cstate\u201D property of the component. By default on upload, a component \u201Cstate\u201D property is set to\n'Draft\u2019. This property can have enum values Draft, Published, Checked, Approved and Archived. Let\u2019s set the value to 'Published\u2019. Also note Update Component request expects request body must contain all the desired properties since this will replace existing component with current component definition."), (0,react_.mdx)("p", null, "See the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/library/operations/update-component"
  }, "Library API documentation"), " for descriptions of the different properties.")), (0,react_.mdx)(upload_component_to_catalog_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "6-add-documents"
  }, "6 Add Documents"), (0,react_.mdx)("p", null, "Upload Component activity associate few documents to the component during the process. Design file and TypeCatalog file uploaded in previous steps are associated to the component as component design and typeCatalog documents respectively. Upload process also gets\nthumbnail image from the design file and associates it as thumbnail document. You can also associate additional documents after component is created. You can associate reference documents, images or even additional design files to the component. In this example we will associate a reference document\nto the component, other documents can also be associated with same steps, the only difference is setting the value of \u201Cpurpose\u201D property in document request body."), (0,react_.mdx)("p", null, "See the ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/library/operations/create-component-document"
  }, "Library API documentation"), " for descriptions of the different properties."), (0,react_.mdx)("p", null, "Adding document is a multi-step process, we will go through these steps next.")), (0,react_.mdx)(upload_component_to_catalog_TutorialSection, {
    actions: [(0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "POST https://api.bentley.com/library/components/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/documents HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "json",
      code: "{\n    \"displayName\": \"Tutorial Sample Document\",\n    \"extension\": \"pdf\",\n    \"purpose\": \"Reference\",\n    \"available\": false,\n    \"isActive\": true,\n    \"version\": null,\n    \"previousVersionId\": null,\n    \"associatedDesignDocument\": null\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 201 Created\ncontent-length: 704\ncontent-type: application/json\ndate: Mon, 06 Sep 2021 15:46:51 GMT\nlocation: https://api.bentley.com/library/components/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/documents/bf15e508-3b59-49d5-a1b5-ea9ef9d66515\nodata-version: 4.0\nrequest-context: appId=cid-v1:6ee7c246-23f0-43be-ac34-bbbb36da72e9\nx-correlation-id: 63ca0126-3234-4bf4-846c-27c7e8e16458\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "json",
      code: "{\n    \"document\": {\n        \"id\": \"bf15e508-3b59-49d5-a1b5-ea9ef9d66515\",\n        \"displayName\": \"Tutorial Sample Document\",\n        \"extension\": \"pdf\",\n        \"version\": null,\n        \"previousVersionId\": null,\n        \"purpose\": \"Reference\",\n        \"size\": -1,\n        \"available\": false,\n        \"isActive\": true,\n        \"createdDateTime\": \"2021-09-06T15:46:51.5524663Z\",\n        \"lastModifiedDateTime\": \"2021-09-06T15:46:51.5524663Z\",\n        \"_links\": {\n            \"fileUrl\": {\n                \"href\": \"https://componentscenprodeussa01.blob.core.windows.net/private-5a7b3c7c-03af-49f0-b1df-115ddc0e0048/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/bf15e508-3b59-49d5-a1b5-ea9ef9d66515.pdf?sv=2018-03-28&sr=b&sig=SeVWEiO2L83DOiSbpBBauY4OhnZaF3QqSIcZOvc6uC8%3D&se=2021-09-06T16%3A46%3A51Z&sp=rcw&rscd=attachment%3B%20filename%3DTutorial%2BSample%2BDocument.pdf\"\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "61-create-document-instance"
  }, "6.1 Create Document Instance"), (0,react_.mdx)("p", null, "A POST call to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/library/components/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/documents"), " endpoint will create a new document instance for the component. ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "displayName"), ", ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "purpose"), " and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "extension"), " are required properties. ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "purpose"), " can have enum values Design, Thumbnail, Reference, GalleryImage and TypeCatalog, depending upon which type of document you want to associate to a component. As we are associating a reference document, ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "purpose"), " should be set to 'Reference\u2019.\nThe POST call will return a new document instance. The ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "id"), " will be used in next steps, you may want to save this Id. At this moment a document instance has been associated\nto the component but there is no actual file attached to this document. We will do that in the next step.")), (0,react_.mdx)(upload_component_to_catalog_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "PUT https://componentscenprodeussa01.blob.core.windows.net/private-5a7b3c7c-03af-49f0-b1df-115ddc0e0048/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/bf15e508-3b59-49d5-a1b5-ea9ef9d66515.pdf?sv=2018-03-28&sr=b&sig=oft6xWrKourfRl5Nemd03duMS9pmi8zkiaPSE8Pynzw%3D&se=2021-09-08T10%3A51%3A03Z&sp=r&rscd=attachment%3B%20filename%3DTutorial%2BSample%2BDocument.pdf HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "x-ms-blob-type: BlockBlob",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "File Binary Content",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "62-upload-document-file"
  }, "6.2 Upload Document File"), (0,react_.mdx)("p", null, "Create Document response from the previous step contains a url in ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "_links->fileUrl->href"), " property. File upload can be done by making a Http PUT request on the provided url via tool such as ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "Postman"), " or programmatically use Azure libraries to upload file (", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://docs.microsoft.com/en-us/rest/api/storageservices/put-blob"
  }, "https://docs.microsoft.com/en-us/rest/api/storageservices/put-blob"), ").")), (0,react_.mdx)(upload_component_to_catalog_TutorialSection, {
    actions: [(0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "PUT https://api.bentley.com/library/components/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/documents/bf15e508-3b59-49d5-a1b5-ea9ef9d66515 HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Body"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "json",
      code: "{\n    \"displayName\": \"Tutorial Sample Document\",\n    \"extension\": \"pdf\",\n    \"version\": null,\n    \"previousVersionId\": null,\n    \"purpose\": \"Reference\",\n    \"available\": true,\n    \"isActive\": true\n}",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK\ncontent-encoding: gzip\ncontent-type: application/json\ndate: Mon, 6 Sep 2021 15:46:51 GMT\nodata-version: 4.0\nrequest-context: appId=cid-v1:6ee7c246-23f0-43be-ac34-bbbb36da72e9\nvary: Accept-Encoding\nx-correlation-id: 3b4b2e41-3ea6-4597-bda0-6db60a038320\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "json",
      code: "{\n    \"document\": {\n        \"id\": \"bf15e508-3b59-49d5-a1b5-ea9ef9d66515\",\n        \"displayName\": \"Tutorial Sample Document\",\n        \"extension\": \"pdf\",\n        \"version\": null,\n        \"previousVersionId\": null,\n        \"purpose\": \"Reference\",\n        \"size\": -1,\n        \"available\": true,\n        \"isActive\": true,\n        \"createdDateTime\": \"2021-09-06T15:46:51.5524663Z\",\n        \"lastModifiedDateTime\": \"2021-09-06T15:54:47.206787Z\",\n        \"_links\": {\n            \"fileUrl\": {\n                \"href\": \"https://componentscenprodeussa01.blob.core.windows.net/private-5a7b3c7c-03af-49f0-b1df-115ddc0e0048/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/bf15e508-3b59-49d5-a1b5-ea9ef9d66515.pdf?sv=2018-03-28&sr=b&sig=SeVWEiO2L83DOiSbpBBauY4OhnZaF3QqSIcZOvc6uC8%3D&se=2021-09-06T16%3A46%3A51Z&sp=rcw&rscd=attachment%3B%20filename%3DTutorial%2BSample%2BDocument.pdf\"\n            }\n        }\n    }\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "63-update-document-instance"
  }, "6.3 Update Document Instance"), (0,react_.mdx)("p", null, "The last step in associating a document to component is to notify the system that file has been uploaded. This is achieved by setting \u201Cavailable\u201D property of the document instance to true.\nMake a PUT call to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/library/components/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/documents/bf15e508-3b59-49d5-a1b5-ea9ef9d66515"), " endpoint to update the document. Update request expects\nrequest body must contain all the desired properties since this will replace existing document with current document definition.")), (0,react_.mdx)(upload_component_to_catalog_TutorialSection, {
    actions: [(0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Syntax"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "GET https://api.bentley.com/library/components/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/documents HTTP/1.1",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Request Headers"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "Accept: application/vnd.bentley.itwin-platform.v1+json\nContent-Type: application/json\nAuthorization: Bearer JWT_TOKEN",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Response Headers"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "http",
      code: "HTTP/1.1 200 OK \ncontent-encoding: gzip\ncontent-type: application/json\ndate: Wed, 08 Sep 2021 09:51:02 GMT\nodata-version: 4.0\nrequest-context: appId=cid-v1:6ee7c246-23f0-43be-ac34-bbbb36da72e9\nvary: Accept-Encoding\nx-correlation-id: 2c094e5a-b770-4240-9aeb-67bca189263a\nx-itwinplatform-media-type: bentley.itwin-platform.v1\nx-itwinplatform-region: East US",
      mdxType: "CodeBlock"
    }), (0,react_.mdx)(upload_component_to_catalog_Title, {
      mdxType: "Title"
    }, "Response Body"), (0,react_.mdx)(upload_component_to_catalog_CodeBlock, {
      language: "json",
      code: "{\n    \"documents\": [{\n        \"id\": \"3938de7f-ebf2-470f-b41a-d314fdb90ec7\",\n        \"displayName\": \"TutorialSampleFile\",\n        \"extension\": \"rfa\",\n        \"version\": \"1\",\n        \"previousVersionId\": null,\n        \"purpose\": \"Design\",\n        \"size\": 749568,\n        \"available\": true,\n        \"isActive\": true,\n        \"createdDateTime\": \"2021-09-06T15:17:46.0180736Z\",\n        \"lastModifiedDateTime\": \"2021-09-06T15:17:46.1465969Z\",\n        \"_links\": {\n            \"associatedDesignDocument\": {\n                \"href\": null\n            },\n            \"fileUrl\": {\n                \"href\": \"https://componentscenprodeussa01.blob.core.windows.net/private-5a7b3c7c-03af-49f0-b1df-115ddc0e0048/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/3938de7f-ebf2-470f-b41a-d314fdb90ec7.rfa?sv=2018-03-28&sr=b&sig=Smec6HJrZCKZGXYARrGkU1RWJuaO3jqmXKs3%2B5irnak%3D&se=2021-09-08T10%3A51%3A03Z&sp=r&rscd=attachment%3B%20filename%3DTutorialSampleFile.rfa\"\n            }\n        }\n    }, {\n        \"id\": \"4f618030-ba8c-4144-872e-c61842c3d90e\",\n        \"displayName\": \"TutorialSampleFile.png\",\n        \"extension\": \"png\",\n        \"version\": null,\n        \"previousVersionId\": null,\n        \"purpose\": \"Thumbnail\",\n        \"size\": 0,\n        \"available\": true,\n        \"isActive\": true,\n        \"createdDateTime\": \"2021-09-06T15:17:46.2226747Z\",\n        \"lastModifiedDateTime\": \"2021-09-06T15:17:46.3093526Z\",\n        \"_links\": {\n            \"associatedDesignDocument\": {\n                \"href\": \"https://api.bentley.com/library/components/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/documents/3938de7f-ebf2-470f-b41a-d314fdb90ec7\"\n            },\n            \"fileUrl\": {\n                \"href\": \"https://componentscenprodeussa01.blob.core.windows.net/public-5a7b3c7c-03af-49f0-b1df-115ddc0e0048/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/4f618030-ba8c-4144-872e-c61842c3d90e.png\"\n            }\n        }\n    }, {\n        \"id\": \"f9d9f7ce-a014-4b54-b0a6-e351482ec3a5\",\n        \"displayName\": \"TutorialSampleFile\",\n        \"extension\": \"txt\",\n        \"version\": null,\n        \"previousVersionId\": null,\n        \"purpose\": \"TypeCatalog\",\n        \"size\": 760,\n        \"available\": true,\n        \"isActive\": true,\n        \"createdDateTime\": \"2021-09-06T15:17:46.4256707Z\",\n        \"lastModifiedDateTime\": \"2021-09-06T15:17:46.510613Z\",\n        \"_links\": {\n            \"associatedDesignDocument\": {\n                \"href\": \"https://api.bentley.com/library/components/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/documents/3938de7f-ebf2-470f-b41a-d314fdb90ec7\"\n            },\n            \"fileUrl\": {\n                \"href\": \"https://componentscenprodeussa01.blob.core.windows.net/private-5a7b3c7c-03af-49f0-b1df-115ddc0e0048/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/f9d9f7ce-a014-4b54-b0a6-e351482ec3a5.txt?sv=2018-03-28&sr=b&sig=1yb19XFDPtuEl6rYiFDLuCjz%2FO8a3r7h89KAHdFwvw8%3D&se=2021-09-08T10%3A51%3A03Z&sp=r&rscd=attachment%3B%20filename%3DTutorialSampleFile.txt\"\n            }\n        }\n    }, {\n        \"id\": \"bf15e508-3b59-49d5-a1b5-ea9ef9d66515\",\n        \"displayName\": \"Tutorial Sample Document\",\n        \"extension\": \"pdf\",\n        \"version\": \"1\",\n        \"previousVersionId\": null,\n        \"purpose\": \"Reference\",\n        \"size\": 388077,\n        \"available\": true,\n        \"isActive\": true,\n        \"createdDateTime\": \"2021-09-06T15:46:51.5524663Z\",\n        \"lastModifiedDateTime\": \"2021-09-06T15:54:47.206787Z\",\n        \"_links\": {\n            \"associatedDesignDocument\": {\n                \"href\": null\n            },\n            \"fileUrl\": {\n                \"href\": \"https://componentscenprodeussa01.blob.core.windows.net/private-5a7b3c7c-03af-49f0-b1df-115ddc0e0048/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/bf15e508-3b59-49d5-a1b5-ea9ef9d66515.pdf?sv=2018-03-28&sr=b&sig=oft6xWrKourfRl5Nemd03duMS9pmi8zkiaPSE8Pynzw%3D&se=2021-09-08T10%3A51%3A03Z&sp=r&rscd=attachment%3B%20filename%3DTutorial%2BSample%2BDocument.pdf\"\n            }\n        }\n    }]\n}",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "64-get-component-documents"
  }, "6.4 Get Component Documents"), (0,react_.mdx)("p", null, "Make a GET call to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "https://api.bentley.com/library/components/57fefe11-df1d-40c7-ae1a-02e233b9a7c7/documents"), " endpoint to get all the documents associated to the component. In this example we will get the documents from the component uploaded in the previous steps. Please note, response contains\nfour document instances. Three of these documents Design, Thumbnail and TypeCatalog were created and associated to the component during upload activity, while we associated Reference document separately after component is created. You can\ndownload actual files from the url provided in ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "_links->fileUrl-href"), " property value in each document instance in the response. You can also use following API to get a particular document by it\u2019s Id."), (0,react_.mdx)("p", null, (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/apis/library/operations/get-component-document"
  }, "Library API documentation to get document by Id"))), (0,react_.mdx)(upload_component_to_catalog_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)("p", null, "Congratulation for completing Upload Component to Catalog tutorial! You should be able to upload components to catalogs and associate additional documents to the components."), (0,react_.mdx)(upload_component_to_catalog_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(upload_component_to_catalog_Tile, {
    name: "Query and Download Component from a Catalog",
    description: "Guide on querying and downloading components from a catalog.",
    href: "/tutorials/query-and-download-component-from-catalog/",
    mdxType: "Tile"
  }), (0,react_.mdx)(upload_component_to_catalog_Tile, {
    name: "Create a Component",
    description: "Guide on creating a new component in an organization.",
    href: "/tutorials/create-a-component/",
    mdxType: "Tile"
  })), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(upload_component_to_catalog_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(upload_component_to_catalog_ResourceTile, {
    title: "Library API",
    href: "/apis/library/",
    description: "There are more capabilities, which could be used for managing components in library.",
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(upload_component_to_catalog_ResourceTile, {
    title: "iTwin Library Sample App",
    href: "https://github.com/iTwin/library-api-sample-app",
    description: "Sample application that uses the Library API to create, upload and query components.",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
upload_component_to_catalog_MDXContent.isMDXComponent = true;
var upload_component_to_catalog_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-register-an-application",
    level: 2,
    title: "1. Register an Application",
    children: []
  }, {
    id: "2-get-a-token",
    level: 2,
    title: "2. Get a token",
    children: [{
      id: "implement-authorization-code-flow-in-the-application",
      level: 3,
      title: "Implement Authorization Code Flow in the application",
      children: []
    }, {
      id: "grab-a-user-token-from-api-reference-try-it-section",
      level: 3,
      title: "Grab a user token from Api reference “Try it” Section",
      children: []
    }]
  }, {
    id: "3-create-a-new-catalog",
    level: 2,
    title: "3. Create a new Catalog",
    children: []
  }, {
    id: "4-referenced-entities",
    level: 2,
    title: "4. Referenced Entities",
    children: []
  }, {
    id: "5-upload-component",
    level: 2,
    title: "5. Upload Component",
    children: [{
      id: "51-make-upload-component-request",
      level: 3,
      title: "5.1 Make Upload Component Request",
      children: []
    }, {
      id: "52-upload-files",
      level: 3,
      title: "5.2 Upload Files",
      children: []
    }, {
      id: "52-get-upload-job-status",
      level: 3,
      title: "5.2 Get Upload Job Status",
      children: []
    }, {
      id: "53-get-component",
      level: 3,
      title: "5.3 Get Component",
      children: []
    }, {
      id: "54-modify-component",
      level: 3,
      title: "5.4 Modify Component",
      children: []
    }]
  }, {
    id: "6-add-documents",
    level: 2,
    title: "6 Add Documents",
    children: [{
      id: "61-create-document-instance",
      level: 3,
      title: "6.1 Create Document Instance",
      children: []
    }, {
      id: "62-upload-document-file",
      level: 3,
      title: "6.2 Upload Document File",
      children: []
    }, {
      id: "63-update-document-instance",
      level: 3,
      title: "6.3 Update Document Instance",
      children: []
    }, {
      id: "64-get-component-documents",
      level: 3,
      title: "6.4 Get Component Documents",
      children: []
    }]
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var upload_component_to_catalog_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/using-thematic-display-mode.mdx


var using_thematic_display_mode_excluded = ["components"];
var using_thematic_display_mode_jsx = (external_react_default()).createElement;


var using_thematic_display_mode_readingTime = {
  "text": "5 min read",
  "minutes": 4.215,
  "time": 252900,
  "words": 843
};
/* @jsxRuntime classic */
/* @jsx mdx */

var using_thematic_display_mode_metadata = {
  title: 'Using Thematic Display Mode in Your iTwin Viewer',
  tile: {
    name: 'Using Thematic Display Mode in Your iTwin Viewer',
    description: 'This tutorial explains how to enable and customize thematic display mode.',
    thumbnail: '/images/tutorials/using-thematic-display-mode/using-thematic-display-3-sm.png',
    href: '/tutorials/using-thematic-display/',
    durationInMinutes: 15,
    relatedApiIds: ['visualization']
  }
};
var using_thematic_display_mode_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var using_thematic_display_mode_Introduction = using_thematic_display_mode_makeShortcode("Introduction");
var using_thematic_display_mode_TutorialSection = using_thematic_display_mode_makeShortcode("TutorialSection");
var using_thematic_display_mode_Title = using_thematic_display_mode_makeShortcode("Title");
var using_thematic_display_mode_CodeBlock = using_thematic_display_mode_makeShortcode("CodeBlock");
var using_thematic_display_mode_ContinueLearningSection = using_thematic_display_mode_makeShortcode("ContinueLearningSection");
var using_thematic_display_mode_TileList = using_thematic_display_mode_makeShortcode("TileList");
var using_thematic_display_mode_ResourceTile = using_thematic_display_mode_makeShortcode("ResourceTile");
var using_thematic_display_mode_layoutProps = {
  metadata: using_thematic_display_mode_metadata
};
var using_thematic_display_mode_MDXLayout = "wrapper";
function using_thematic_display_mode_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, using_thematic_display_mode_excluded);
  return (0,react_.mdx)(using_thematic_display_mode_MDXLayout, (0,esm_extends/* default */.Z)({}, using_thematic_display_mode_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(using_thematic_display_mode_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: "15",
    summaryImageSrc: "/unreal-docs-site/static/images/tutorials/using-thematic-display-mode/using-thematic-display-sample.png",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This tutorial is about thematic display mode, a mode of display style that uses a color gradient to show certain attributes of the geometry. We will first explain what thematic display is and when it might be useful. Then, we will look at how to apply it in your iTwin Viewer application and customize its settings.")), (0,react_.mdx)(using_thematic_display_mode_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "prerequisites"
  }, "Prerequisites"), (0,react_.mdx)("p", null, "This tutorial assumes that you already have:"), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Your own local source for the iTwin Web Viewer based on the template @itwin/web-viewer", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Instructions for that can be found ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "/tutorials/web-application-quick-start"
  }, "here")))), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "Configured your local source to open a sample iModel."))), (0,react_.mdx)(using_thematic_display_mode_TutorialSection, {
    actions: [(0,react_.mdx)(using_thematic_display_mode_Title, {
      mdxType: "Title"
    }, "Creating a new view state"), (0,react_.mdx)(using_thematic_display_mode_CodeBlock, {
      language: "typescript",
      code: "const viewportOptionsThematic = {\n  viewState: async (iModel: IModelConnection) => {\n    const viewState = await iModel.views.load(await iModel.views.queryDefaultViewId());\n    viewState.viewFlags = viewState.viewFlags.copy({\n      thematicDisplay: true,\n      grid: false,\n      renderMode: RenderMode.SmoothShade\n    });\n    return viewState;\n  }\n};",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-turning-on-thematic-display"
  }, "1. Turning on Thematic Display"), (0,react_.mdx)("p", null, "Thematic display mode is a type of display style that uses a customizeable color gradient to highlight attributes of the geometry in an iModel such as height, surface slope, position of surfaces relative to a sun position, or geometric position relative to a list of sensors. The first step to using it to enhance your iTwin viewer is turning it on in your viewport\u2019s display style settings."), (0,react_.mdx)("p", null, "The Viewer React component that was created by the template web viewer has a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "viewportOptions"), " property that allows you to affect its view state. This is the best place to change its view flags and turn on thematic display."), (0,react_.mdx)("p", null, "We can do this by creating a variable ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "viewportOptionsThematic"), " that returns a promise to a ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ViewState"), " with adjusted settings. We can start out by retrieving the iModel\u2019s default view state by getting its default view ID with ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iModel.views.queryDefaultViewId()"), ", then passing the result into ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "iModel.views.load()"), ". We can then turn on thematic display by setting the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "thematicDisplay"), " flag to true. We will also adjust some other settings that make thematic display easier to see, by setting ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "grid"), " to false and ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "renderMode"), " to ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "RenderMode.SmoothShade"), ".")), (0,react_.mdx)(using_thematic_display_mode_TutorialSection, {
    hasTitle: false,
    actions: [(0,react_.mdx)(using_thematic_display_mode_Title, {
      mdxType: "Title"
    }, "Setting the viewport options"), (0,react_.mdx)(using_thematic_display_mode_CodeBlock, {
      language: "typescript",
      code: "<Viewer\n  iTwinId={iTwinId ?? \"\"}\n  iModelId={iModelId ?? \"\"}\n  authClient={authClient}\n  enablePerformanceMonitors={true} // see description in the README (https://www.npmjs.com/package/@itwin/web-viewer-react)\n  onIModelAppInit={onIModelAppInit}\n  uiProviders={[\n    new ViewerNavigationToolsProvider(),\n    new ViewerContentToolsProvider({\n      vertical: {\n        measureGroup: false,\n      },\n    }),\n    new ViewerStatusbarItemsProvider(),\n    new TreeWidgetUiItemsProvider(),\n    new PropertyGridUiItemsProvider({\n      enableCopyingPropertyText: true,\n    }),\n    new MeasureToolsUiItemsProvider(),\n  ]}\n  viewportOptions={viewportOptionsThematic}\n/>",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "Now for this change to take effect, we just have to set the Viewer\u2019s ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "viewportOptions"), " property to our new view state promise. The code snippet shows what the Viewer component should look like after this change, with ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "viewportOptions"), " added at the end.\nWe will also remove the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "viewCreatorOptions"), " property, as it is unnecessary with the view options already being defined by ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "viewportOptions"), ".")), (0,react_.mdx)(using_thematic_display_mode_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "11-before"
  }, "1.1 Before"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/tutorials/using-thematic-display-mode/using-thematic-display-1-sm.png",
    "alt": "Without thematic display mode",
    "title": "Without thematic display mode"
  })), (0,react_.mdx)("p", null, "The iModel without thematic display."), (0,react_.mdx)("h4", {
    "id": "12-after"
  }, "1.2 After"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/tutorials/using-thematic-display-mode/using-thematic-display-2-sm.png",
    "alt": "With thematic display mode",
    "title": "With thematic display mode"
  })), (0,react_.mdx)("p", null, "The iModel after thematic display is turned on. It appears mostly one color because the range and color scheme have not been adjusted yet.")), (0,react_.mdx)(using_thematic_display_mode_TutorialSection, {
    actions: [(0,react_.mdx)(using_thematic_display_mode_Title, {
      mdxType: "Title"
    }, "Creating new ThematicDisplayProps"), (0,react_.mdx)(using_thematic_display_mode_CodeBlock, {
      language: "typescript",
      code: "const props: ThematicDisplayProps = {\n    axis: [0.0, 0.0, 1.0],\n    gradientSettings: {\n      colorScheme: ThematicGradientColorScheme.BlueRed,\n      marginColor: ColorDef.white.toJSON(), \n      mode: ThematicGradientMode.SteppedWithDelimiter,\n      stepCount: 10,\n    },\n    displayMode: ThematicDisplayMode.Height,\n    range: [-5, 127],\n};",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-changing-thematic-display-settings"
  }, "2. Changing Thematic Display Settings"), (0,react_.mdx)("p", null, "Thematic display mode can be customized by creating a new ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ThematicDisplayProps"), " object and updating the viewport\u2019s thematic display settings. First, create the new object and set different properties like the axis and range to apply the gradient to, and details like the gradient\u2019s colors and number of steps. We used a pre-existing color scheme ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ThematicGradientColorScheme.BlueRed"), ", but it\u2019s also possible to set this to use a custom scheme and specify key colors with the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "customKeys"), " property.")), (0,react_.mdx)(using_thematic_display_mode_TutorialSection, {
    actions: [(0,react_.mdx)(using_thematic_display_mode_Title, {
      mdxType: "Title"
    }, "Adjusting the thematic display settings"), (0,react_.mdx)(using_thematic_display_mode_CodeBlock, {
      language: "typescript",
      code: "const viewportOptionsThematic = {\n    viewState: async (iModel: IModelConnection) => {\n      const viewState = await iModel.views.load(await iModel.views.queryDefaultViewId());\n      viewState.viewFlags = viewState.viewFlags.copy({\n        thematicDisplay: true,\n        grid: false,\n        renderMode: RenderMode.SmoothShade\n      });\n      if (viewState.is3d()) {\n        const displayStyle = viewState.getDisplayStyle3d();\n        displayStyle.settings.thematic = ThematicDisplay.fromJSON(props);\n      }\n      return viewState;\n    }\n  };",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("p", null, "To apply the new settings we can first make sure the view state is 3D, which is required for thematic display and allows us to adjust the ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "settings.thematic"), " property. Finally, we can set this property to a new ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "ThematicDisplay"), " object created from our ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "props"), " object so the settings are visible in our viewer.")), (0,react_.mdx)(using_thematic_display_mode_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h4", {
    "id": "21-result"
  }, "2.1 Result"), (0,react_.mdx)("p", null, (0,react_.mdx)("img", {
    parentName: "p",
    "src": "/unreal-docs-site/static/images/tutorials/using-thematic-display-mode/using-thematic-display-3-sm.png",
    "alt": "Customized thematic display mode",
    "title": "Customized thematic display mode"
  }))), (0,react_.mdx)(using_thematic_display_mode_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(using_thematic_display_mode_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(using_thematic_display_mode_ResourceTile, {
    title: "Thematic Display",
    href: "https://www.itwinjs.org/learning/display/thematicdisplay/",
    description: "Learn more about thematic display and view examples of the different modes.",
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(using_thematic_display_mode_ResourceTile, {
    title: "Thematic Display Sample App",
    href: "https://www.itwinjs.org/sandboxes/iTwinPlatform/Thematic%20Display",
    description: "A sample sandbox that demonstrates thematic display settings with a UI.",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
using_thematic_display_mode_MDXContent.isMDXComponent = true;
var using_thematic_display_mode_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "prerequisites",
    level: 2,
    title: "Prerequisites",
    children: []
  }, {
    id: "1-turning-on-thematic-display",
    level: 2,
    title: "1. Turning on Thematic Display",
    children: []
  }, {
    id: "2-changing-thematic-display-settings",
    level: 2,
    title: "2. Changing Thematic Display Settings",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var using_thematic_display_mode_frontMatter = {};
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/mdx-loader/index.js!./public/tutorials/web-application-quick-start.mdx


var web_application_quick_start_excluded = ["components"];
var web_application_quick_start_jsx = (external_react_default()).createElement;


var web_application_quick_start_readingTime = {
  "text": "7 min read",
  "minutes": 6.925,
  "time": 415500,
  "words": 1385
};
/* @jsxRuntime classic */
/* @jsx mdx */

var web_application_quick_start_metadata = {
  title: 'Get Started!',
  tile: {
    name: 'Start building a Viewer App',
    description: 'This quick start is intended to help you get started with using iTwin Platform visualization components. By the end of this walk-through, you will be able to build and run a web application for viewing an infrastructure digital twin (iTwin).',
    thumbnail: '/images/retail-tutorial-sample-small.png',
    href: '/tutorials/web-application-quick-start/',
    durationInMinutes: 30,
    relatedApiIds: ['visualization'],
    showInFirstSteps: true,
    firstStepsSequenceNumber: 1
  }
};
var web_application_quick_start_makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");
    return (0,react_.mdx)("div", props);
  };
};
var web_application_quick_start_Introduction = web_application_quick_start_makeShortcode("Introduction");
var web_application_quick_start_TutorialSection = web_application_quick_start_makeShortcode("TutorialSection");
var web_application_quick_start_LinkButton = web_application_quick_start_makeShortcode("LinkButton");
var web_application_quick_start_NodeJsIcon = web_application_quick_start_makeShortcode("NodeJsIcon");
var web_application_quick_start_GitIcon = web_application_quick_start_makeShortcode("GitIcon");
var web_application_quick_start_GoogleChromeIcon = web_application_quick_start_makeShortcode("GoogleChromeIcon");
var web_application_quick_start_VSCodeIcon = web_application_quick_start_makeShortcode("VSCodeIcon");
var web_application_quick_start_CodeBlock = web_application_quick_start_makeShortcode("CodeBlock");
var web_application_quick_start_CreateSampleAppButton = web_application_quick_start_makeShortcode("CreateSampleAppButton");
var web_application_quick_start_Alert = web_application_quick_start_makeShortcode("Alert");
var web_application_quick_start_ContinueLearningSection = web_application_quick_start_makeShortcode("ContinueLearningSection");
var web_application_quick_start_TileList = web_application_quick_start_makeShortcode("TileList");
var web_application_quick_start_Tile = web_application_quick_start_makeShortcode("Tile");
var web_application_quick_start_ResourceTile = web_application_quick_start_makeShortcode("ResourceTile");
var web_application_quick_start_layoutProps = {
  metadata: web_application_quick_start_metadata
};
var web_application_quick_start_MDXLayout = "wrapper";
function web_application_quick_start_MDXContent(_ref) {
  var components = _ref.components,
    props = (0,objectWithoutProperties/* default */.Z)(_ref, web_application_quick_start_excluded);
  return (0,react_.mdx)(web_application_quick_start_MDXLayout, (0,esm_extends/* default */.Z)({}, web_application_quick_start_layoutProps, props, {
    components: components,
    mdxType: "MDXLayout"
  }), (0,react_.mdx)(web_application_quick_start_Introduction, {
    skillLevel: "Basic",
    durationInMinutes: web_application_quick_start_metadata.tile.durationInMinutes,
    summaryImageSrc: "/unreal-docs-site/static/images/retail-tutorial-sample.png",
    mdxType: "Introduction"
  }, (0,react_.mdx)("h2", {
    "id": "introduction"
  }, "Introduction"), (0,react_.mdx)("p", null, "This quick start is intended to help you get started with using iTwin Platform visualization components. In this walk-through, you will be introduced to the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "iTwin Viewer"), ", a customizable viewer that offers basic tooling and widgets for viewing an infrastructure digital twin and can be further extended with iTwin.js extensions."), (0,react_.mdx)("p", null, "By the end of this walk-through, you will be able to build and run a web application for viewing an infrastructure digital twin (iTwin).")), (0,react_.mdx)(web_application_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "1-set-up-your-environment"
  }, "1. Set up your environment"), (0,react_.mdx)("p", null, "Before you start this walk-through, you will need to download and install the following software on your machine.")), (0,react_.mdx)(web_application_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(web_application_quick_start_LinkButton, {
      href: "https://nodejs.org",
      target: "_blank",
      title: "Node.js",
      icon: (0,react_.mdx)(web_application_quick_start_NodeJsIcon, {
        mdxType: "NodeJsIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(web_application_quick_start_LinkButton, {
      href: "https://git-scm.com/downloads",
      target: "_blank",
      title: "Git",
      icon: (0,react_.mdx)(web_application_quick_start_GitIcon, {
        mdxType: "GitIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "11-required-materials"
  }, "1.1 Required materials"), (0,react_.mdx)("h5", {
    "id": "nodejs-lts-version"
  }, (0,react_.mdx)("a", {
    parentName: "h5",
    "href": "https://nodejs.org"
  }, "Node.js (LTS version)")), (0,react_.mdx)("p", null, "This tool provides the backend JavaScript runtime necessary for your computer to read and render code appropriately. It also allows you to run NPM command line (required for every iTwin project)."), (0,react_.mdx)("h5", {
    "id": "git"
  }, (0,react_.mdx)("a", {
    parentName: "h5",
    "href": "https://git-scm.com/downloads"
  }, "Git")), (0,react_.mdx)("p", null, "This is the source code control system for the iTwin repositories.")), (0,react_.mdx)(web_application_quick_start_TutorialSection, {
    subSection: true,
    actions: [(0,react_.mdx)(web_application_quick_start_LinkButton, {
      href: "https://www.google.com/chrome/",
      target: "_blank",
      title: "Google Chrome",
      icon: (0,react_.mdx)(web_application_quick_start_GoogleChromeIcon, {
        mdxType: "GoogleChromeIcon"
      }),
      mdxType: "LinkButton"
    }), (0,react_.mdx)(web_application_quick_start_LinkButton, {
      href: "https://code.visualstudio.com/",
      target: "_blank",
      title: "Visual Studio Code",
      icon: (0,react_.mdx)(web_application_quick_start_VSCodeIcon, {
        mdxType: "VSCodeIcon"
      }),
      mdxType: "LinkButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h3", {
    "id": "12-suggested-materials"
  }, "1.2 Suggested materials"), (0,react_.mdx)("h5", {
    "id": "google-chrome"
  }, (0,react_.mdx)("a", {
    parentName: "h5",
    "href": "https://www.google.com/chrome/"
  }, "Google Chrome")), (0,react_.mdx)("p", null, "This software can help you to develop and debug frontend JavaScript problems."), (0,react_.mdx)("h5", {
    "id": "visual-studio-code"
  }, (0,react_.mdx)("a", {
    parentName: "h5",
    "href": "https://code.visualstudio.com/"
  }, "Visual Studio Code")), (0,react_.mdx)("p", null, "This is our recommended editor and debugger tool for developing iTwin.js applications. It is free, open source and includes a GUI for working with GIT.")), (0,react_.mdx)(web_application_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(web_application_quick_start_CodeBlock, {
      language: "bash",
      code: "npx create-react-app your-app-name --template @itwin/web-viewer --scripts-version @bentley/react-scripts",
      mdxType: "CodeBlock"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "2-get-the-code"
  }, "2. Get the code"), (0,react_.mdx)("p", null, "The iTwin Viewer is available on GitHub at ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://github.com/iTwin/viewer/tree/master/packages/modules/web-viewer-react"
  }, "link"), ". To download the iTwin Viewer code:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Open Terminal or a Command Prompt."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "In the terminal, run the following command:\n", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "npx create-react-app your-app-name --template @itwin/web-viewer --scripts-version @bentley/react-scripts"), (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "This will generate a new application based on the iTwin Viewer React component."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, "By default, the viewer will be stored in a directory called ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "your-app-name")))))), (0,react_.mdx)(web_application_quick_start_TutorialSection, {
    actions: [(0,react_.mdx)(web_application_quick_start_CreateSampleAppButton, {
      clientName: "Web Application Quick Start tutorial",
      scopes: ['imodelaccess:read', 'imodels:read', 'realitydata:read'],
      mdxType: "CreateSampleAppButton"
    })],
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "3-register-an-application"
  }, "3. Register an Application"), (0,react_.mdx)("p", null, "You will need to register an application to use the iTwin Platform APIs. You can use the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Register"), " button to automatically create your first single page application (SPA). This will allow you to use the iTwin Viewer with the iModel you will generate next."), (0,react_.mdx)("p", null, "Once generated, you will be shown a few lines of code under the button. You will need to copy them in the ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, ".env"), " file from the application folder downloaded in the previous step."), (0,react_.mdx)("ul", null, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), " - this is the unique identifier for your application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Client ID"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), " - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), " - specifies where users can be returned to after logging out. Displayed on application details page as one of ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Post logout redirect URIs"), "."), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("strong", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), " - list of accesses granted to the application. Displayed on application details page as ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Scopes"), ".")), (0,react_.mdx)("blockquote", null, (0,react_.mdx)("p", {
    parentName: "blockquote"
  }, (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Or optionally:"), " Register and configure your application manually following instructions in ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/tutorials/register-and-modify-application/"
  }, "Register and modify an Application"), " tutorial.\nMake sure that your application is associated with ", (0,react_.mdx)("strong", {
    parentName: "p"
  }, "Visualization API"), " and has ", (0,react_.mdx)("inlineCode", {
    parentName: "p"
  }, "imodelaccess:read imodels:read realitydata:read"), " scopes enabled."))), (0,react_.mdx)(web_application_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "4-create-an-imodel"
  }, "4. Create an iModel"), (0,react_.mdx)("p", null, "To view your engineering design content, you will first need to synchronize your design files into an iModel. An iModel is a distributed relational database holding information about an infrastructure asset defined in a common schema. To learn more, click ", (0,react_.mdx)("a", {
    href: "https://www.itwinjs.org/learning/imodel-connectors/?term=connectors",
    target: "_blank"
  }, "here"), "."), (0,react_.mdx)("h3", {
    "id": "imodel-creation-process"
  }, "iModel creation process"), (0,react_.mdx)("p", null, "To create a Test iTwin and iModel:"), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Go to ", (0,react_.mdx)("a", {
    parentName: "li",
    "href": "https://developer.bentley.com"
  }, "https://developer.bentley.com")), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Sign In"), " button and sign-in using your Bentley account credentials", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "If you have not already registered, click ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Register now"), " and complete the registration process."))), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click on your user icon and navigate to the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "My iTwins"), " page"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Create"), " button"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Give your iModel a name"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Select ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Create iModel from Bentley Sample"), " and choose the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Retail Building Sample"), " template", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, "If you have your own engineering design files, you can select ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Empty"), " and then choose the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "File Synchronization"), " tile from iModel Home. From there you will be able to synchronize your design files."))), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Save"), " button and wait until your iModel is created")), (0,react_.mdx)(web_application_quick_start_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note that after completing this step, you will be provided with both an iTwinId and an iModelID which will be required in a later step.")), (0,react_.mdx)(web_application_quick_start_TutorialSection, {
    mdxType: "TutorialSection"
  }, (0,react_.mdx)("h2", {
    "id": "5-run-the-code"
  }, "5. Run the code"), (0,react_.mdx)("p", null, "After you have successfully downloaded the code, you are ready to run the sample. To run the sample:"), (0,react_.mdx)(web_application_quick_start_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note: the following instructions show how to run the code using VS Code, but the same commands can be completed in a terminal."), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Launch Visual Studio Code"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Click File > Open Folder and open the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "your-app-name"), " directory that was created in the previous step.")), (0,react_.mdx)("p", null, "Next, you will need to configure the application with the client and iModel information that you created in the previous steps or any other SPA ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/my-apps"
  }, "app"), " and ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "/my-itwins"
  }, "iModel"), " from your account."), (0,react_.mdx)("ol", null, (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Open the .env file"), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Enter the appropriate values for:", (0,react_.mdx)("ul", {
    parentName: "li"
  }, (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_CLIENT_ID"), ": Enter the ClientID for the client you registered during the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Register a Client"), " step"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_REDIRECT_URI"), ": Enter the Redirect URI for the client you registered during the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Register a Client"), " step"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_LOGOUT_URI"), ": Enter the Post Logout Redirect URI for the client you registered during the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Register a Client"), " step"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "IMJS_AUTH_CLIENT_SCOPES"), ": Enter the Scopes for the client you registered during the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Register a Client"), " step"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "IMJS_ITWIN_ID"), ": Enter the iTwinId that was generated during the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Create an iModel"), " step"), (0,react_.mdx)("li", {
    parentName: "ul"
  }, (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "IMJS_IMODEL_ID"), ": Enter the iModelID that was generated during the ", (0,react_.mdx)("strong", {
    parentName: "li"
  }, "Create an iModel"), " step"))), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "Open a terminal from the menu bar View > Terminal."), (0,react_.mdx)("li", {
    parentName: "ol"
  }, "In the terminal window, enter ", (0,react_.mdx)("inlineCode", {
    parentName: "li"
  }, "npm start"), ". This will serve the application with live reloading.")), (0,react_.mdx)(web_application_quick_start_Alert, {
    type: "informational",
    mdxType: "Alert"
  }, "Note: You can add/update/remove files as needed. If running `npm start` while making changes, your application will automatically recompile and reload."), (0,react_.mdx)("p", null, "Congratulations, running npm start should launch a web browser and display your iModel in the iTwin Viewer Starter App. If you use your own file, this may take a few minutes to load depending on the file size you used."), (0,react_.mdx)("p", null, "If the iTwin Viewer does not automatically open, you can open a browser and load the URL ", (0,react_.mdx)("a", {
    parentName: "p",
    "href": "https://localhost:3000"
  }, "https://localhost:3000"), ".")), (0,react_.mdx)(web_application_quick_start_ContinueLearningSection, {
    mdxType: "ContinueLearningSection"
  }, (0,react_.mdx)("h2", {
    "id": "continue-learning"
  }, "Continue learning"), (0,react_.mdx)("p", null, "Congratulations for the completion of your first viewer app! You\u2019ve now know a lot on the subject, but there\u2019s still possibilities to learn more to unleash the platform capabilities."), (0,react_.mdx)(web_application_quick_start_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(web_application_quick_start_Tile, {
    name: "Customizing the iTwin Viewer - \"The Basics\"",
    thumbnail: "/unreal-docs-site/static/images/itwin-viewer-hello-world-sample-small.png",
    description: "This tutorial will take you through the first steps of customizing your iTwin Web Viewer. First you will learn how to add a new user interface component. Later you will customize that component to change the background color of your viewer.",
    href: "/tutorials/itwin-viewer-hello-world",
    mdxType: "Tile"
  }), (0,react_.mdx)(web_application_quick_start_Tile, {
    name: "Adding showcase widgets to your iTwin Viewer",
    thumbnail: "/unreal-docs-site/static/images/view_attributes_ported_results.png",
    description: "This tutorial will take widgets from the sample showcase and add them into your iTwin Viewer using the `uiProviders` prop.",
    href: "/tutorials/adding-showcase-widgets-to-your-itwin-viewer/",
    mdxType: "Tile"
  })), (0,react_.mdx)("h2", {
    "id": "more-resources-that-you-may-like"
  }, "More resources that you may like"), (0,react_.mdx)(web_application_quick_start_TileList, {
    mdxType: "TileList"
  }, (0,react_.mdx)(web_application_quick_start_ResourceTile, {
    title: "Create React App",
    href: "https://create-react-app.dev",
    description: "Set up a modern web app by running one command.",
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(web_application_quick_start_ResourceTile, {
    title: "iTwin Viewer React",
    href: "https://www.npmjs.com/package/@itwin/web-viewer-react",
    description: (0,react_.mdx)((external_react_default()).Fragment, null, "The iTwin Viewer is a configurable iTwin.js viewer that offers basic tooling and widgets out-of-the-box and can be further extended through the use of ", (0,react_.mdx)("a", {
      href: "https://github.com/imodeljs/extension-sample",
      target: "_blank"
    }, "iTwin.js extensions"), ". This package contains the Viewer as a React component and some additional Typescript APIs."),
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(web_application_quick_start_ResourceTile, {
    title: "iTwin Viewer Create React App Template",
    href: "https://www.npmjs.com/package/@itwin/cra-template-web-viewer",
    description: (0,react_.mdx)((external_react_default()).Fragment, null, "This is a template for applications that are based on the ", (0,react_.mdx)("a", {
      href: "https://github.com/iTwin/viewer/tree/master/packages/modules/web-viewer-react",
      target: "_blank"
    }, "iTwin Viewer"), " for ", (0,react_.mdx)("a", {
      href: "https://github.com/facebook/create-react-app",
      target: "_blank"
    }, "Create React App"), "."),
    isExternal: true,
    mdxType: "ResourceTile"
  }), (0,react_.mdx)(web_application_quick_start_ResourceTile, {
    title: "Bentley React Scripts",
    href: "https://www.npmjs.com/package/@bentley/react-scripts",
    description: "This is the iTwin.js fork of react-scripts.",
    isExternal: true,
    mdxType: "ResourceTile"
  }))));
}
;
web_application_quick_start_MDXContent.isMDXComponent = true;
var web_application_quick_start_tableOfContents = function tableOfContents() {
  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return [{
    id: "introduction",
    level: 2,
    title: "Introduction",
    children: []
  }, {
    id: "1-set-up-your-environment",
    level: 2,
    title: "1. Set up your environment",
    children: [{
      id: "11-required-materials",
      level: 3,
      title: "1.1 Required materials",
      children: []
    }, {
      id: "12-suggested-materials",
      level: 3,
      title: "1.2 Suggested materials",
      children: []
    }]
  }, {
    id: "2-get-the-code",
    level: 2,
    title: "2. Get the code",
    children: []
  }, {
    id: "3-register-an-application",
    level: 2,
    title: "3. Register an Application",
    children: []
  }, {
    id: "4-create-an-imodel",
    level: 2,
    title: "4. Create an iModel",
    children: [{
      id: "imodel-creation-process",
      level: 3,
      title: "iModel creation process",
      children: []
    }]
  }, {
    id: "5-run-the-code",
    level: 2,
    title: "5. Run the code",
    children: []
  }, {
    id: "continue-learning",
    level: 2,
    title: "Continue learning",
    children: []
  }, {
    id: "more-resources-that-you-may-like",
    level: 2,
    title: "More resources that you may like",
    children: []
  }];
};
var web_application_quick_start_frontMatter = {};
;// CONCATENATED MODULE: ./src/contracts/tutorials.ts
/* eslint-disable import/no-webpack-loader-syntax */
//import tutorials
































































const tutorials_allTutorialMetadata = [adding_decorators_and_markers_metadata, metadata, adding_showcase_widgets_to_your_itwin_viewer_metadata, changed_elements_api_metadata, copy_project_team_members_and_roles_to_another_project_metadata, create_and_query_projects_guide_metadata, create_and_query_itwins_guide_metadata, manage_itwin_owners_guide_metadata, create_empty_imodel_metadata, create_named_version_metadata, create_test_imodel_sample_metadata, creating_your_first_issue_metadata, import_users_to_project_metadata, itwin_viewer_hello_world_metadata, manage_project_team_members_guide_metadata, react_to_events_using_webhooks_metadata, react_to_events_using_webhooks_v2_metadata, register_and_modify_application_metadata, stepping_through_an_issue_workflow_metadata, storage_quick_start_metadata, synchronization_storage_tutorial_metadata, synchronization_configurations_api_tutorial_metadata, synchronization_blob_tutorial_metadata, unmap_blob_file_tutorial_metadata, export_data_from_imodel_metadata, web_application_quick_start_metadata, contextcapture_api_quick_start_metadata, contextcapture_api_how_to_use_cache_metadata, contextcapture_api_better_calibration_metadata, contextcapture_api_better_production_metadata, realitydata_api_quick_start_metadata, realitydataanalysis_api_quick_start_metadata, realitymanagement_api_quick_start_metadata, reality_management_essentials_metadata, property_validation_basics_metadata, create_multi_property_validation_rule_metadata, clash_suppression_rules_basics_metadata, clash_test_basics_metadata, retrieve_validation_model_data_metadata, creating_a_carbon_report_using_imodel_data_metadata, creating_an_insights_report_using_imodel_data_metadata, running_the_pnid_pipeline_metadata, filter_by_view_definition_transformation_metadata, combine_physical_models_v2_transformation_metadata, upload_component_to_catalog_metadata, query_and_download_component_from_catalog_metadata, create_a_component_metadata, authorize_spa_metadata, authorize_native_metadata, authorize_service_metadata, authorize_webapp_metadata, itwin_unreal_export_combined_meshes_metadata, itwin_unreal_export_filtering_metadata, itwin_unreal_dataprep_metadata, itwin_unreal_controlling_your_imodel_metadata, mobile_sdk_ios_gettingstarted_metadata, create_application_with_reports_config_widget_metadata, using_thematic_display_mode_metadata, create_and_merge_forked_imodel_metadata, create_and_query_itwin_roles_guide_metadata, create_and_query_itwin_groups_guide_metadata, manage_user_members_on_itwins_guide_metadata, manage_group_members_on_itwins_guide_metadata, create_and_query_itwin_entities_metadata];
;// CONCATENATED MODULE: ./src/services/mdxService.ts

async function getAllTutorialMetadata() {
  const firstStepTutorials = allTutorialMetadata.filter(metadata => metadata.tile.showInFirstSteps).map(metadata => {
    metadata.tile.name = `${metadata.tile.firstStepsSequenceNumber} - ${metadata.tile.name}`;
    return metadata;
  });
  const metadataArray = allTutorialMetadata.filter(metadata => !metadata.tile.showInFirstSteps);
  return {
    metadataArray: metadataArray,
    firstStepTutorials: firstStepTutorials
  };
}
function getTutorialMetadataByApi(apiName) {
  return tutorials_allTutorialMetadata.filter(metadata => metadata.tile && metadata.tile.relatedApiIds?.includes(apiName));
}

/***/ }),

/***/ 28160:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export OAuthService */
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52167);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var client_oauth2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14464);
/* harmony import */ var client_oauth2__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(client_oauth2__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(85217);
/* harmony import */ var itwinui_v1__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(itwinui_v1__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2599);
/* harmony import */ var _constants_grantTypes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(36740);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_3__]);
_client_env__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }







class OAuthService {
  get defaultParams() {
    const params = new URLSearchParams();
    params.append('api-version', this.apiVersion);
    return params;
  }

  get headers() {
    return {
      Authorization: `Bearer ${this.sasToken}`
    };
  }

  constructor(sasToken) {
    this.sasToken = sasToken;

    _defineProperty(this, "baseUrl", void 0);

    _defineProperty(this, "apiVersion", '2021-08-01');

    this.baseUrl = env.APIM_MANAGEMENT_URL;
  }

  async getOAuthServers() {
    try {
      const {
        data
      } = await axios.get('/authorizationServers', {
        baseURL: this.baseUrl,
        params: this.defaultParams,
        headers: this.headers
      });
      return data.value.map(authServer => new AuthorizationServer(authServer));
    } catch (error) {
      throw new Error(`Unable to fetch configured authorization servers.`);
    }
  }

  async authenticate(grantType, authorizationServer) {
    let accessToken;

    switch (grantType) {
      case GrantTypes.implicit:
        accessToken = await this.authenticateImplicit(authorizationServer);
        break;

      case GrantTypes.authorizationCode:
        accessToken = await this.authenticateCode(authorizationServer).catch(err => {
          toaster.negative(err.errorDescription || err.console.error);
          return '';
        });
        break;

      case GrantTypes.clientCredentials:
        accessToken = await this.authenticateClientCredentials(authorizationServer);
        break;

      default:
        throw new Error(`Unsupported grant type: ${grantType}`);
    }

    return accessToken;
  }

  authenticateImplicit(authorizationServer) {
    const redirectUri = `${window ? window.location.origin : ''}/signin-oauth/implicit/callback`;
    const oauthClient = new ClientOAuth2({
      clientId: authorizationServer.clientId,
      accessTokenUri: authorizationServer.tokenEndpoint,
      authorizationUri: authorizationServer.authorizationEndpoint,
      redirectUri: redirectUri,
      scopes: authorizationServer.scopes
    });
    return new Promise(resolve => {
      if (!window) {
        resolve('');
      }

      const popup = window.open(oauthClient.token.getUri(), '_blank', 'width=400,height=500');

      const receiveMessage = async event => {
        const tokenHash = event.data['uri'];

        if (!tokenHash) {
          return;
        }

        const oauthToken = await oauthClient.token.getToken(redirectUri + tokenHash);
        popup?.close();
        resolve(`${oauthToken.tokenType} ${oauthToken.accessToken}`);
      };

      window.addEventListener('message', receiveMessage, false);
    });
  }

  async authenticateCode(authorizationServer) {
    const redirectUri = `${window ? window.location.origin : ''}/signin-oauth/code/callback/${authorizationServer.id}`;
    const oauthClient = new ClientOAuth2({
      clientId: authorizationServer.clientId,
      accessTokenUri: authorizationServer.tokenEndpoint,
      authorizationUri: authorizationServer.authorizationEndpoint,
      redirectUri: redirectUri,
      scopes: authorizationServer.scopes
    });
    return new Promise((resolve, reject) => {
      if (!window) {
        reject();
      }

      const popup = window.open(this.removeEmptyState(oauthClient.code.getUri()), '_blank', 'width=400,height=500');

      const receiveMessage = async event => {
        const data = event.data;

        if (data.errorDescription || data.error) {
          popup?.close();
          reject(data);
        }

        if (!data.accessToken) {
          return;
        }

        const accessToken = data.accessToken;
        const accessTokenType = data.accessTokenType;
        popup?.close();
        resolve(`${accessTokenType} ${accessToken}`);
      };

      window.addEventListener('message', receiveMessage, false);
    });
  }

  async authenticateClientCredentials(authorizationServer) {
    if (!window) {
      return '';
    }

    const uri = `https://${window.location.hostname}/signin-oauth/credentials/${authorizationServer.id}`;
    return new Promise(resolve => {
      const authWindow = window.open(uri, '_blank', 'width=400,height=500');

      const receiveMessage = async event => {
        if (!event.data['accessToken']) {
          return;
        }

        const accessToken = event.data['accessToken'];
        const accessTokenType = event.data['accessTokenType'];
        resolve(`${accessTokenType} ${accessToken}`);

        if (authWindow && !authWindow.closed) {
          authWindow.close();
        }
      };

      window.addEventListener('message', receiveMessage, false);
    });
  }

  removeEmptyState(authUrl) {
    const [host, query] = authUrl.split('?');
    const urlParams = new URLSearchParams(query);
    const stateParam = urlParams.get('state');

    if (stateParam === '') {
      urlParams.delete('state');
      return `${host}?${urlParams.toString()}`;
    }

    return authUrl;
  }

}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 65459:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export sampleService */
/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(44354);
/* harmony import */ var _samples_sampleManifest__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(17469);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_api__WEBPACK_IMPORTED_MODULE_0__, _samples_sampleManifest__WEBPACK_IMPORTED_MODULE_1__]);
([_api__WEBPACK_IMPORTED_MODULE_0__, _samples_sampleManifest__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




class SampleService {
  constructor() {
    _defineProperty(this, "samples", void 0);
  }

  async getSamples(preloadedSamples = undefined) {
    if (this.samples) return Promise.resolve(this.samples);
    return _api__WEBPACK_IMPORTED_MODULE_0__/* .iTwinSandboxApi.getOfficialSamples */ .DU.getOfficialSamples().then(sampleGroups => {
      for (const group of _samples_sampleManifest__WEBPACK_IMPORTED_MODULE_1__/* .sampleManifest */ .l) {
        const result = sampleGroups.find(s => s.id === group.id);
        if (result) result.samples = [...result.samples, ...group.samples];else sampleGroups.push(group);
      }

      return this.samples = sampleGroups;
    }).catch(() => {
      if (!preloadedSamples) return [];
      return preloadedSamples;
    });
  }

  getSampleGroupsByApiPath(apiPath, samples) {
    return samples.map(sg => {
      return _objectSpread(_objectSpread({}, sg), {}, {
        samples: sg.samples.filter(sample => sample.relatedApiPaths && sample.relatedApiPaths.includes(apiPath))
      });
    }).filter(sg => sg.samples.length > 0);
  }

}

const sampleService = new SampleService();

__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 98106:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export SessionService */
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52167);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _client_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2599);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_client_env__WEBPACK_IMPORTED_MODULE_1__]);
_client_env__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];


class SessionService {
  constructor(accessToken) {
    this.accessToken = accessToken;
  }

  async getSession() {
    try {
      const response = await axios.post('/session', {}, {
        baseURL: env.DEVELOPER_PORTAL_API_URL,
        headers: {
          Authorization: `Bearer ${this.accessToken}`
        }
      });
      const session = response.data;
      return session;
    } catch (e) {
      console.warn('Error while trying to create a session', e);
      return;
    }
  }

}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 93332:
/***/ (function() {

"use strict";

// UNUSED EXPORTS: TemplatingService

;// CONCATENATED MODULE: external "liquidjs"
var external_liquidjs_namespaceObject = require("liquidjs");
;// CONCATENATED MODULE: external "prismjs"
var external_prismjs_namespaceObject = require("prismjs");
;// CONCATENATED MODULE: external "prismjs/components/prism-bash"
var prism_bash_namespaceObject = require("prismjs/components/prism-bash");
;// CONCATENATED MODULE: external "prismjs/components/prism-c"
var prism_c_namespaceObject = require("prismjs/components/prism-c");
;// CONCATENATED MODULE: external "prismjs/components/prism-csharp"
var prism_csharp_namespaceObject = require("prismjs/components/prism-csharp");
;// CONCATENATED MODULE: external "prismjs/components/prism-http"
var prism_http_namespaceObject = require("prismjs/components/prism-http");
;// CONCATENATED MODULE: external "prismjs/components/prism-java"
var prism_java_namespaceObject = require("prismjs/components/prism-java");
;// CONCATENATED MODULE: external "prismjs/components/prism-javascript"
var prism_javascript_namespaceObject = require("prismjs/components/prism-javascript");
;// CONCATENATED MODULE: external "prismjs/components/prism-json"
var prism_json_namespaceObject = require("prismjs/components/prism-json");
;// CONCATENATED MODULE: external "prismjs/components/prism-markup"
var prism_markup_namespaceObject = require("prismjs/components/prism-markup");
;// CONCATENATED MODULE: external "prismjs/components/prism-python"
var prism_python_namespaceObject = require("prismjs/components/prism-python");
;// CONCATENATED MODULE: external "prismjs/components/prism-ruby"
var prism_ruby_namespaceObject = require("prismjs/components/prism-ruby");
;// CONCATENATED MODULE: ./node_modules/raw-loader/dist/cjs.js!./src/assets/liquidTemplates/curl.liquid
/* harmony default export */ var curl_liquid = ("@ECHO OFF\n\ncurl -v -X {{method}} \"{{requestUrl}}\"\n{% for header in request.meaningfulHeaders -%}\n-H \"{{ header.name }}: {{ header.value }}\"\n{% endfor -%}\n{% if request.body != blank and request.bodyFormat == \"raw\" -%}\n--data-ascii \"{{ request.body | replace:'\"','^\"' }}\"\n{% endif -%}\n{% if request.binary != blank and request.bodyFormat == \"binary\" -%}\n--data-binary \"@path/to/{{request.binary.name}}\"\n{% endif -%}");
;// CONCATENATED MODULE: ./node_modules/raw-loader/dist/cjs.js!./src/assets/liquidTemplates/csharp.liquid
/* harmony default export */ var csharp_liquid = ("using System;\nusing System.Net.Http.Headers;\nusing System.Text;\nusing System.Net.Http;\nusing System.Web;\n\nnamespace CSHttpClientSample\n{\n    static class Program\n    {\n        static void Main()\n        {\n            MakeRequest();\n            Console.WriteLine(\"Hit ENTER to exit...\");\n            Console.ReadLine();\n        }\n        \n        static async void MakeRequest()\n        {\n            var client = new HttpClient();\n            var queryString = HttpUtility.ParseQueryString(string.Empty);\n\n{% if meaningfulHeaders.size > 0 -%}\n            // Request headers\n{% for header in request.meaningfulHeaders -%}\n{% case header.Name -%}\n{% when \"Accept\"%}\n            client.DefaultRequestHeaders.Accept.Add(MediaTypeWithQualityHeaderValue.Parse(\"{{header.value}}\"));\n{% when \"Accept-Charset\" -%}\n            client.DefaultRequestHeaders.AcceptCharset.Add(StringWithQualityHeaderValue.Parse(\"{{header.value}}\"));\n{% when \"Accept-Encoding\" -%}\n            client.DefaultRequestHeaders.AcceptEncoding.Add(StringWithQualityHeaderValue.Parse(\"{{header.value}}\"));\n{% when \"Accept-Language\" -%}\n            client.DefaultRequestHeaders.AcceptLanguage.Add(StringWithQualityHeaderValue.Parse(\"{{header.value}}\"));\n{% when \"Cache-Control\" -%}\n            client.DefaultRequestHeaders.CacheControl = CacheControlHeaderValue.Parse(\"{{header.value}}\");\n{% when \"Connection\" -%}\n            client.DefaultRequestHeaders.Connection.Add(\"{{header.value}}\");\n{% when \"Date\" -%}\n            client.DefaultRequestHeaders.Date = DateTimeOffset.Parse(\"{{header.value}}\");\n{% when \"Expect\" -%}\n            client.DefaultRequestHeaders.Expect.Add(NameValueWithParametersHeaderValue.Parse(\"{{header.value}}\"));\n{% when \"If-Match\" -%}\n            client.DefaultRequestHeaders.IfMatch.Add(EntityTagHeaderValue.Parse(\"{{header.value}}\"));\n{% when \"If-Modified-Since\" -%}\n            client.DefaultRequestHeaders.IfModifiedSince = DateTimeOffset.Parse(\"{{header.value}}\");\n{% when \"If-None-Match\" -%}\n            client.DefaultRequestHeaders.IfNoneMatch.Add(EntityTagHeaderValue.Parse(\"{{header.value}}\"));\n{% when \"If-Range\" -%}\n            client.DefaultRequestHeaders.IfRange = RangeConditionHeaderValue.Parse(\"{{header.value}}\");\n{% when \"If-Unmodified-Since\" -%}\n            client.DefaultRequestHeaders.IfUnmodifiedSince = DateTimeOffset.Parse(\"{{header.value}}\");\n{% when \"Max-Forwards\" -%}\n            client.DefaultRequestHeaders.MaxForwards = int.Parse(\"{{header.value}}\");\n{% when \"Pragma\" -%}\n            client.DefaultRequestHeaders.Pragma.Add(NameValueHeaderValue.Parse(\"{{header.value}}\"));\n{% when \"Range\" -%}\n            client.DefaultRequestHeaders.Range = RangeHeaderValue.Parse(\"{{header.value}}\");\n{% when \"Referer\" -%}\n            client.DefaultRequestHeaders.Referrer = new Uri(\"{{header.value}}\");\n{% when \"TE\" -%}\n            client.DefaultRequestHeaders.TE.Add(TransferCodingWithQualityHeaderValue.Parse(\"{{header.value}}\"));\n{% when \"Transfer-Encoding\" -%}\n            client.DefaultRequestHeaders.TransferEncoding.Add(TransferCodingHeaderValue.Parse(\"{{header.value}}\"));\n{% when \"Upgrade\" -%}\n            client.DefaultRequestHeaders.Upgrade.Add(ProductHeaderValue.Parse(\"{{header.value}}\"));\n{% when \"User-Agent\" -%}\n            client.DefaultRequestHeaders.UserAgent.Add(ProductInfoHeaderValue.Parse(\"{{header.value}}\"));\n{% when \"Via\" -%}              \n            client.DefaultRequestHeaders.Via.Add(ViaHeaderValue.Parse(\"{{header.value}}\"));\n{% when \"Warning\" -%}\n            client.DefaultRequestHeaders.Warning.Add(WarningHeaderValue.Parse(\"{{header.value}}\"));\n{% when \"Content-Type\" -%}\n{% else -%}\n            client.DefaultRequestHeaders.Add(\"{{header.Name}}\", \"{{header.value}}\");\n{% endcase -%}\n{% endfor -%}\n{% endif -%}\n\n{% if request.parameters.size > 0 -%}\n            // Request parameters\n{% for parameter in request.parameters -%}\n            queryString[\"{{parameter.Name}}\"] = \"{{parameter.Value}}\";\n{% endfor -%}\n{% endif -%}\n            var uri = \"{{requestUrl}}{% if path contains '?' %}&{% else %}?{% endif %}\" + queryString;\n\n{% case method -%}\n\n{% when \"POST\" -%}\n            HttpResponseMessage response;\n\n            // Request body\n            byte[] byteData = Encoding.UTF8.GetBytes(\"{{ body | replace:'\"','\\\"'}}\");\n\n            using (var content = new ByteArrayContent(byteData))\n            {\n{% if body -%}\n               content.Headers.ContentType = new MediaTypeHeaderValue(\"< your content type, i.e. application/json >\");\n{% endif -%}\n               response = await client.PostAsync(uri, content);\n            }\n\n{% when \"GET\" -%}\n            var response = await client.GetAsync(uri);\n{% when \"DELETE\" -%}\n            var response = await client.DeleteAsync(uri);\n{% when \"PUT\" -%}\n            HttpResponseMessage response;\n\n            // Request body\n            byte[] byteData = Encoding.UTF8.GetBytes(\"{{ body | replace:'\"','\\\"'}}\");\n\n            using (var content = new ByteArrayContent(byteData))\n            {\n{% if body -%}\n                content.Headers.ContentType = new MediaTypeHeaderValue(\"< your content type, i.e. application/json >\");\n{% endif -%}\n                response = await client.PutAsync(uri, content);\n            }\n{% when \"HEAD\" -%}\n            var response = await client.SendAsync(new HttpRequestMessage(HttpMethod.Head, uri));\n{% when \"OPTIONS\" -%}\n            var response = await client.SendAsync(new HttpRequestMessage(HttpMethod.Options, uri));\n{% when \"TRACE\" -%}\n            var response = await client.SendAsync(new HttpRequestMessage(HttpMethod.Trace, uri));\n\n            if (response.Content != null)\n            {\n                var responseString = await response.Content.ReadAsStringAsync();\n                Console.WriteLine(responseString);    \n            }\n{% endcase -%}\n        }\n    }\n}\t");
;// CONCATENATED MODULE: ./node_modules/raw-loader/dist/cjs.js!./src/assets/liquidTemplates/http.liquid
/* harmony default export */ var http_liquid = ("{% if response == blank -%}\n\n{{method}} {{requestUrl}} HTTP/1.1 \n{% for header in request.meaningfulHeaders -%}\n{{ header.name }}: {{ header.value }}\n{% endfor -%}\n \n{% if request.body != blank and request.bodyFormat == \"raw\" %}\n{{ request.body }}\n{% endif -%}\n{% if request.binary != blank and request.bodyFormat == \"binary\" -%}\n[ {{ request.binary.name }} ]\n{% endif -%}\n\n{% else -%}\n\nHTTP/1.1 {{response.status}} {{response.statusText}}\n{% for header in response.meaningfulHeaders -%}\n{{ header.name }}: {{ header.value }}\n{% endfor -%}\n{% if response.body != blank and response.bodyFormat == \"raw\" %}\n{{ response.body }}\n{% endif -%}\n{% if response.binary != blank and response.bodyFormat == \"binary\" -%}\n[ {{ response.binary.name }} ]\n{% endif -%}\n\n{% endif -%}");
;// CONCATENATED MODULE: ./node_modules/raw-loader/dist/cjs.js!./src/assets/liquidTemplates/java.liquid
/* harmony default export */ var java_liquid = ("// // This sample uses the Apache HTTP client from HTTP Components (http://hc.apache.org/httpcomponents-client-ga/)\nimport java.net.URI;\nimport org.apache.http.HttpEntity;\nimport org.apache.http.HttpResponse;\nimport org.apache.http.client.HttpClient;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.utils.URIBuilder;\nimport org.apache.http.impl.client.HttpClients;\nimport org.apache.http.util.EntityUtils;\n\npublic class JavaSample \n{\n    public static void main(String[] args) \n    {\n        HttpClient httpclient = HttpClients.createDefault();\n\n        try\n        {\n            URIBuilder builder = new URIBuilder(\"{{requestUrl}}\");\n\n{% if request.parameters.size > 0 -%}\n{% for parameter in request.parameters -%}\n            builder.setParameter(\"{{parameter.name}}\", \"{{parameter.value}}\");\n{% endfor -%}\n{% endif -%}\n\n            URI uri = builder.build();\n            Http{{ method | downcase | capitalize }} request = new Http{{ method | downcase | capitalize }}(uri);\n{% for header in request.meaningfulHeaders -%}\n            request.setHeader(\"{{header.name}}\", \"{{header.value}}\");\n{% endfor %}\n\n{% if request.body -%}\n            // Request body\n            StringEntity reqEntity = new StringEntity(\"{{ request.body | replace:'\"','\\\"' }}\");\n            request.setEntity(reqEntity);\n{% endif -%}\n\n            HttpResponse response = httpclient.execute(request);\n            HttpEntity entity = response.getEntity();\n\n            if (entity != null) \n            {\n                System.out.println(EntityUtils.toString(entity));\n            }\n        }\n        catch (Exception e)\n        {\n            System.out.println(e.getMessage());\n        }\n    }\n}");
;// CONCATENATED MODULE: ./node_modules/raw-loader/dist/cjs.js!./src/assets/liquidTemplates/javascript.liquid
/* harmony default export */ var javascript_liquid = ("$.ajax({\n    type: \"{{method}}\",\n    url: \"{{requestUrl}}\",\n\n    {% if request.meaningfulHeaders.size > 0 -%}\n    // Request headers\n    beforeSend: function(xhrObj) {\n        {% for header in request.meaningfulHeaders -%}\n        xhrObj.setRequestHeader(\"{{header.name}}\", \"{{header.value}}\");\n        {% endfor -%}\n    },\n    {% endif -%}\n    {% if request.body -%}\n\n    // Request body\n    data: \"{{ request.body | replace:'\"','\\\"' }}\",\n    {% endif -%}\n})\n.done(function (data) {\n    alert(\"success\");\n})\n.fail(function () {\n    alert(\"error\");\n});");
;// CONCATENATED MODULE: ./node_modules/raw-loader/dist/cjs.js!./src/assets/liquidTemplates/php.liquid
/* harmony default export */ var php_liquid = ("<?php\n// This sample uses the Apache HTTP client from HTTP Components (http://hc.apache.org/httpcomponents-client-ga/)\nrequire_once 'HTTP/Request2.php';\n\n$request = new Http_Request2('{{requestUrl}}');\n$url = $request->getUrl();\n\n{% if meaningfulHeaders.size > 0 -%}\n$headers = array(\n    // Request headers\n{% for header in request.meaningfulHeaders -%}\n    '{{header.name}}' => '{{header.value}}',\n{% endfor -%}\n);\n\n$request->setHeader($headers);\n{% endif -%}\n\n{% if request.parameters.size > 0 -%}\n$parameters = array(\n    // Request parameters\n{% for parameter in request.parameters -%}\n    '{{parameter.name}}' => '{{parameter.value}}',\n{% endfor -%}\n);\n\n$url->setQueryVariables($parameters);\n{% endif -%}\n\n$request->setMethod(HTTP_Request2::METHOD_{{method}});\n\n{% if request.body -%}\n// Request body\n$request->setBody(\"{{ request.body | replace:'\"','\\\"' }}\");\n{% endif -%}\n\ntry\n{\n    $response = $request->send();\n    echo $response->getBody();\n}\ncatch (HttpException $ex)\n{\n    echo $ex;\n}\n\n?>");
;// CONCATENATED MODULE: ./node_modules/raw-loader/dist/cjs.js!./src/assets/liquidTemplates/objc.liquid
/* harmony default export */ var objc_liquid = ("#import <Foundation/Foundation.h>\n\nint main(int argc, const char * argv[])\n{\n    NSAutoreleasePool * pool = [[NSAutoreleasePool alloc] init];\n    \n    NSString* path = @\"{{requestUrl}}\";\n    NSArray* array = @[\n                         // Request parameters\n                         @\"entities=true\",\n{% if request.parameters.size > 0 -%}\n{% for parameter in request.parameters -%}\n                         @\"{{parameter.name}}={{parameter.value}}\",\n{% endfor -%}\n{% endif -%}\n                      ];\n    \n    NSString* string = [array componentsJoinedByString:@\"&\"];\n    path = [path stringByAppendingFormat:@\"?%@\", string];\n\n    NSLog(@\"%@\", path);\n\n    NSMutableURLRequest* _request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:path]];\n    [_request setHTTPMethod:@\"{{method}}\"];\n{% if meaningfulHeaders.size > 0 -%}\n    // Request headers\n{% for header in request.meaningfulHeaders -%}\n    [_request setValue:@\"{{header.value}}\" forHTTPHeaderField:@\"{{header.name}}\"];\n{% endfor -%}\n{% endif -%}\n{% if request.body -%}\n    // Request body\n    [_request setHTTPBody:[@\"{{ request.body | replace:'\"','\\\"' }}\" dataUsingEncoding:NSUTF8StringEncoding]];\n{% endif -%}\n    \n    NSURLResponse *response = nil;\n    NSError *error = nil;\n    NSData* _connectionData = [NSURLConnection sendSynchronousRequest:_request returningResponse:&response error:&error];\n\n    if (nil != error)\n    {\n        NSLog(@\"Error: %@\", error);\n    }\n    else\n    {\n        NSError* error = nil;\n        NSMutableDictionary* json = nil;\n        NSString* dataString = [[NSString alloc] initWithData:_connectionData encoding:NSUTF8StringEncoding];\n        NSLog(@\"%@\", dataString);\n        \n        if (nil != _connectionData)\n        {\n            json = [NSJSONSerialization JSONObjectWithData:_connectionData options:NSJSONReadingMutableContainers error:&error];\n        }\n        \n        if (error || !json)\n        {\n            NSLog(@\"Could not parse loaded json with error:%@\", error);\n        }\n        \n        NSLog(@\"%@\", json);\n        _connectionData = nil;\n    }\n    \n    [pool drain];\n\n    return 0;\n}\n");
;// CONCATENATED MODULE: ./node_modules/raw-loader/dist/cjs.js!./src/assets/liquidTemplates/python.liquid
/* harmony default export */ var python_liquid = ("########### Python 2.7 #############\nimport httplib, urllib, base64\n\nheaders = {\n{% if request.meaningfulHeaders.size > 0 -%}\n    # Request headers\n{% for header in request.meaningfulHeaders -%}\n    '{{header.name}}': '{{header.value}}',\n{% endfor -%}\n{% endif -%}\n}\n\nparams = urllib.urlencode({\n{% if request.parameters.size > 0 -%}\n    # Request parameters\n{% for parameter in request.parameters -%}\n    '{{parameter.name}}': '{{parameter.value}}',\n{% endfor -%}\n{% endif -%}\n})\n\ntry:\n{% case scheme -%}\n{% when \"http\" -%}\n    conn = httplib.HTTPConnection('{{host}}')\n{% when \"https\" -%}\n    conn = httplib.HTTPSConnection('{{host}}')\n{% endcase -%}\n    conn.request(\"{{method}}\", \"{{path}}{% if path contains '?' %}&{% else %}?{% endif %}%s\" % params{% if request.body %}, \"{{ request.body | replace:'\"','\\\"' }}\"{% endif %}, headers)\n    response = conn.getresponse()\n    data = response.read()\n    print(data)\n    conn.close()\nexcept Exception as e:\n    print(\"[Errno {0}] {1}\".format(e.errno, e.strerror))\n\n####################################\n\n########### Python 3.2 #############\nimport http.client, urllib.request, urllib.parse, urllib.error, base64\n\nheaders = {\n{% if request.meaningfulHeaders.size > 0 -%}\n    # Request headers\n{% for header in request.meaningfulHeaders -%}\n    '{{header.name}}': '{{header.value}}',\n{% endfor -%}\n{% endif -%}\n}\n\nparams = urllib.parse.urlencode({\n{% if parameters.size > 0 -%}\n    # Request parameters\n{% for parameter in request.parameters -%}\n    '{{parameter.name}}': '{{parameter.value}}',\n{% endfor -%}\n{% endif -%}\n})\n\ntry:\n{% case scheme -%}\n{% when \"http\" -%}\n    conn = http.client.HTTPConnection('{{host}}')\n{% when \"https\" -%}\n    conn = http.client.HTTPSConnection('{{host}}')\n{% endcase -%}\n    conn.request(\"{{method}}\", \"{{path}}{% if path contains '?' %}&{% else %}?{% endif %}%s\" % params{% if request.body %}, \"{{ request.body | replace:'\"','\\\"' }}\"{% endif %}, headers)\n    response = conn.getresponse()\n    data = response.read()\n    print(data)\n    conn.close()\nexcept Exception as e:\n    print(\"[Errno {0}] {1}\".format(e.errno, e.strerror))\n\n####################################");
;// CONCATENATED MODULE: ./node_modules/raw-loader/dist/cjs.js!./src/assets/liquidTemplates/ruby.liquid
/* harmony default export */ var ruby_liquid = ("require 'net/http'\n\nuri = URI('{{requestUrl}}')\n\n{% if parameters.size > 0 -%}\nquery = URI.encode_www_form({\n# Request parameters\n{% for parameter in request.parameters -%}\n    '{{parameter.name}}' => '{{parameter.value}}'{% unless forloop.last %},{% endunless %}\n{% endfor -%}\n})\nif query.length > 0\n  if uri.query && uri.query.length > 0\n    uri.query += '&' + query\n  else\n    uri.query = query\n  end\nend\n{% endif -%}\n\nrequest = Net::HTTP::{{ method | downcase | capitalize }}.new(uri.request_uri)\n# Request headers\n{% for header in request.meaningfulHeaders -%}\nrequest['{{header.name}}'] = '{{header.value}}'\n{% endfor -%}\n{% if request.body -%}\n# Request body\nrequest.body = \"{{ request.body | replace:'\"','\\\"' }}\"\n{% endif -%}\n\nresponse = Net::HTTP.start(uri.host, uri.port, :use_ssl => uri.scheme == 'https') do |http|\n    http.request(request)\nend\n\nputs response.body\n");
;// CONCATENATED MODULE: ./src/assets/liquidTemplates/templates.ts
/* eslint-disable import/no-webpack-loader-syntax */









const templates = {
  curl: curl_liquid,
  csharp: csharp_liquid,
  http: http_liquid,
  java: java_liquid,
  javascript: javascript_liquid,
  php: php_liquid,
  objc: objc_liquid,
  python: python_liquid,
  ruby: ruby_liquid
};
;// CONCATENATED MODULE: ./src/services/templatingService.ts
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }














class TemplatingService {
  static get availableLanguages() {
    return {
      csharp: 'C#',
      curl: 'Curl',
      http: 'HTTP',
      java: 'Java',
      javascript: 'JavaScript',
      objc: 'Objective C',
      php: 'PHP',
      python: 'Python',
      ruby: 'Ruby'
    };
  }

  static get supportedLanguages() {
    return ['csharp', 'curl', 'http', 'java', 'javascript', 'objc', 'php', 'python', 'ruby', 'xml', 'json'];
  }

  static get liquidToPrism() {
    return {
      curl: 'bash',
      javascript: 'js',
      objc: 'c',
      php: 'ruby' // php is broken

    };
  }

  static async renderSampleHtml(language, model) {
    const template = templates[language];
    const sample = await this.render(template, model);
    return this.makeItBeautiful(sample, language);
  }

  static async renderSample(language, model) {
    const template = templates[language];
    const sample = await this.render(template, model);
    return sample;
  }

  static async render(template, model) {
    const engine = new external_liquidjs_namespaceObject.Liquid();
    const result = await engine.parseAndRender(template, model);
    return result;
  }

  static makeItBeautiful(code, language) {
    if (!code) {
      return '';
    }

    const highlightLanguage = this.supportedLanguages.indexOf(language) === -1 ? this.defaultLanguage : this.liquidToPrism[language] || language;
    const codeToHighlight = code;
    codeToHighlight.replaceAll('/', 'fwdslsh'); // workaround for PrismJS bug.

    const html = external_prismjs_namespaceObject.highlight(codeToHighlight, external_prismjs_namespaceObject.languages[highlightLanguage], highlightLanguage);
    html.replaceAll('fwdslsh', '/'); // workaround for PrismJS bug.

    return html;
  }

}

_defineProperty(TemplatingService, "defaultLanguage", 'plain');

/***/ }),

/***/ 56825:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export useUser */
/* harmony import */ var _services_authService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13417);
/* harmony import */ var _loginStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(34981);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_services_authService__WEBPACK_IMPORTED_MODULE_0__, _loginStore__WEBPACK_IMPORTED_MODULE_1__]);
([_services_authService__WEBPACK_IMPORTED_MODULE_0__, _loginStore__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);


const useUser = () => {
  const {
    user
  } = useAuthService();
  const isLoggedIn = useIsLoggedIn();
  if (!isLoggedIn) console.warn('useUser is called when user is not logged in');
  return user;
};
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 68032:
/***/ (function(module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* harmony import */ var _authStore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(56825);
/* harmony import */ var _loginStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(34981);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_authStore__WEBPACK_IMPORTED_MODULE_0__, _loginStore__WEBPACK_IMPORTED_MODULE_1__]);
([_authStore__WEBPACK_IMPORTED_MODULE_0__, _loginStore__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);


__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 34981:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
/* unused harmony export useIsLoggedIn */
/* harmony import */ var _services_authService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13417);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_services_authService__WEBPACK_IMPORTED_MODULE_0__]);
_services_authService__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];

const useIsLoggedIn = () => {
  const {
    isLoggedIn
  } = useAuthService();
  return isLoggedIn;
};
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 87901:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "c": function() { return /* binding */ nextCache; }
/* harmony export */ });
/* unused harmony export NextCache */
/* harmony import */ var _constants_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(75767);
/* harmony import */ var _next_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(50743);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




/**
 * During pre-rendering it will use in memory dictionary,
 * During runtime it will use browsers local storage.
 */
class NextCache {
  constructor() {
    _defineProperty(this, "memoryCache", {});
  }

  put(key, value, expiration = _constants_constants__WEBPACK_IMPORTED_MODULE_0__/* .CACHE_REVALIDATION_PERIOD_IN_MILLISECONDS */ .JV) {
    const entry = {
      value: value,
      expire: Date.now() + expiration
    };

    if (_next_utils__WEBPACK_IMPORTED_MODULE_1__/* .NextUtils.isPreloading */ .l.isPreloading) {
      this.memoryCache[key] = JSON.stringify(entry);
      return;
    }

    try {
      window.localStorage.setItem(key, JSON.stringify(entry));
    } catch {
      /* empty */
    }
  }

  get(key) {
    const value = _next_utils__WEBPACK_IMPORTED_MODULE_1__/* .NextUtils.isPreloading */ .l.isPreloading ? this.memoryCache[key] : window.localStorage.getItem(key);

    if (!value) {
      return null;
    }

    const entry = JSON.parse(value);

    if (entry.expire < Date.now()) {
      return null;
    }

    return entry.value;
  }

  getAs(key) {
    const string = this.get(key);
    return string ? JSON.parse(string) : null;
  }

  remove(key) {
    if (_next_utils__WEBPACK_IMPORTED_MODULE_1__/* .NextUtils.isPreloading */ .l.isPreloading) {
      delete this.memoryCache[key];
      return;
    }

    window.localStorage.removeItem(key);
  }

  removeAllFromLocalStorageByPatterns(patterns) {
    if (_next_utils__WEBPACK_IMPORTED_MODULE_1__/* .NextUtils.isRuntime */ .l.isRuntime) {
      const regex = new RegExp(patterns.join('|'));
      const keysToRemove = Object.keys(window.localStorage).filter(key => regex.test(key));

      for (const key of keysToRemove) {
        window.localStorage.removeItem(key);
      }
    }
  }

  async getOrCreate(key, factory) {
    let cachedValue = this.get(key);

    if (!cachedValue) {
      const result = await factory(); // Don't cache or serialize if result is undefined/null.

      if (!result) return result;
      cachedValue = JSON.stringify(result);
      this.put(key, cachedValue);
    }

    return JSON.parse(cachedValue);
  }

}
/**
 * During pre-rendering it will use in memory dictionary,
 * No data caching during pre-rendering. Server side stores rendered data and revalidate it depending on static prop settings.
 */

const nextCache = new NextCache();

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
var __webpack_exports__ = __webpack_require__.X(0, [1505,1232,2196,5217,6227,222], function() { return __webpack_exec__(59714); });
module.exports = __webpack_exports__;

})();