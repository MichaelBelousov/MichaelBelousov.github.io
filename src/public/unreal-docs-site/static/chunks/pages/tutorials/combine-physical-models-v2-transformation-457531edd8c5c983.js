(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5766],{58149:function(e,t,n){"use strict";n.d(t,{Jt:function(){return w},Pu:function(){return l},ZP:function(){return b}});var o=n(36864),a=n(4730),i=n(67294),r=n(3905),s=["components"],l=(i.createElement,{title:"Transforming an iModel - Combining physical models v2",tile:{name:"Transforming an iModel - Combining physical models",description:"This tutorial will demonstrate how to combine physical models in second version using iModel Transformations API.",thumbnail:"/images/Metro_Station.png",href:"/tutorials/combine-physical-models-v2-transformation/",durationInMinutes:20,relatedApiIds:["transformations"]}}),p=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)}},d=p("Introduction"),u=p("TutorialSection"),c=p("LinkButton"),m=p("VSCodeIcon"),h=p("PostmanIcon"),f=p("CreateSampleAppButton"),k=p("Alert"),g=p("Title"),y=p("CodeBlock"),T={metadata:l};function b(e){var t=e.components,n=(0,a.Z)(e,s);return(0,r.kt)("wrapper",(0,o.Z)({},T,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(d,{skillLevel:"Intermediate",durationInMinutes:"20",summaryImageSrc:"/images/Metro_Station.png",mdxType:"Introduction"},(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"This quick start is intended to help you create a ",(0,r.kt)("inlineCode",{parentName:"p"},"CombinePhysicalModelsV2")," transformation.\nIn this walk-through you will configure a transformation, run it, and wait for it to complete and then view the result.")),(0,r.kt)(u,{subSection:!0,actions:[(0,r.kt)(c,{href:"https://code.visualstudio.com/",target:"_blank",title:"Visual Studio Code",icon:(0,r.kt)(m,{mdxType:"VSCodeIcon"}),mdxType:"LinkButton"}),(0,r.kt)(c,{href:"https://www.postman.com/downloads/",target:"_blank",title:"Postman",icon:(0,r.kt)(h,{mdxType:"PostmanIcon"}),mdxType:"LinkButton"})],mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"This tutorial assumes that you already have:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A tool such as ",(0,r.kt)("inlineCode",{parentName:"li"},"Postman")," that can be used to execute HTTP calls. These calls can also be made using the ",(0,r.kt)("strong",{parentName:"li"},"Try it out")," button in the API documentation or any other http request tool."),(0,r.kt)("li",{parentName:"ul"},"A created and connected project. You can create a project by following instructions at ",(0,r.kt)("a",{parentName:"li",href:"/tutorials/create-and-query-projects-guide/"},"Create a new iTwin Project"),"."),(0,r.kt)("li",{parentName:"ul"},"A source iModel with some data for the transformation. You can create an iModel from Bentley Sample by following instructions at ",(0,r.kt)("a",{parentName:"li",href:"/tutorials/web-application-quick-start/"},"Create an iModel"),"."),(0,r.kt)("li",{parentName:"ul"},"An empty target iModel for the transformation. You can create an empty iModel by following instructions at ",(0,r.kt)("a",{parentName:"li",href:"/tutorials/web-application-quick-start/"},"Create an iModel"),"."))),(0,r.kt)(u,{actions:[(0,r.kt)(f,{scopes:["transformations:modify","transformations:read"],clientName:"Combine physical models v2",mdxType:"CreateSampleAppButton"})],mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"1-register-an-application"},"1. Register an Application"),(0,r.kt)("p",null,"You will need to register an application to use the iTwin Platform APIs. You can use the ",(0,r.kt)("strong",{parentName:"p"},"Register")," button to automatically create your first single page application (SPA). This will allow you to configure ",(0,r.kt)("a",{parentName:"p",href:"/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"},"Authorization Code Flow for your SPA application")," and get the correct access token."),(0,r.kt)("p",null,"Once generated, you will be shown a few lines of code under the button."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"IMJS_AUTH_CLIENT_CLIENT_ID")," - this is the unique identifier for your application. Displayed on application details page as ",(0,r.kt)("strong",{parentName:"li"},"Client ID"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"IMJS_AUTH_CLIENT_REDIRECT_URI")," - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ",(0,r.kt)("strong",{parentName:"li"},"Redirect URIs"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"IMJS_AUTH_CLIENT_LOGOUT_URI")," - specifies where users can be returned to after logging out. Displayed on application details page as one of ",(0,r.kt)("strong",{parentName:"li"},"Post logout redirect URIs"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"IMJS_AUTH_CLIENT_SCOPES")," - list of accesses granted to the application. Displayed on application details page as ",(0,r.kt)("strong",{parentName:"li"},"Scopes"),".")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Or optionally:")," Register and configure your application manually following instructions in ",(0,r.kt)("a",{parentName:"p",href:"/tutorials/register-and-modify-application/"},"Register and modify an Application")," tutorial.\nMake sure that your application is associated with ",(0,r.kt)("strong",{parentName:"p"},"Transformations API")," and has ",(0,r.kt)("inlineCode",{parentName:"p"},"transformations:modify transformations:read")," scopes enabled."))),(0,r.kt)(u,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"2-get-a-token"},"2. Get a token"),(0,r.kt)("p",null,"To make requests to the API, a user token is needed. There are several ways to get it."),(0,r.kt)("h3",{id:"implement-authorization-code-flow-in-the-application"},"Implement Authorization Code Flow in the application"),(0,r.kt)("p",null,"Follow this ",(0,r.kt)("a",{parentName:"p",href:"/apis/overview/authorization/"},"article")," to implement Authorization code workflow in your application."),(0,r.kt)(k,{type:"informational",mdxType:"Alert"},"Here you can use Client ID generated from previous registration step."),(0,r.kt)("h3",{id:"grab-a-user-token-from-api-reference-try-it-out-section"},"Grab a user token from Api reference \u201cTry it out\u201d Section"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Go to ",(0,r.kt)("a",{parentName:"li",href:"/apis/transformations/operations/combinephysicalmodelsv2/"},"Create Configuration")),(0,r.kt)("li",{parentName:"ol"},"Click \u201cTry it out\u201d button."),(0,r.kt)("li",{parentName:"ol"},"On Authorization section select \u201cAuthorizationCode\u201d."),(0,r.kt)("li",{parentName:"ol"},"After popup closes Authorization header with your user token value should be visible."),(0,r.kt)("li",{parentName:"ol"},"Save user token value for this tutorial.")),(0,r.kt)(k,{type:"informational",mdxType:"Alert"},"Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")),(0,r.kt)(u,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"3-decide-which-models-in-source-imodel-to-transform"},"3. Decide which models in source iModel to transform."),(0,r.kt)("p",null,"Open a source iModel and pick models that you want to group. In order to group models, you will need to specify an ECSQL query."),(0,r.kt)("p",null,"Easiest way to query for iModel data is by using an iModel Console web application. Open your source iModel by replacing values in this link:\n",(0,r.kt)("a",{parentName:"p",href:"https://imodelconsole.bentley.com/?projectid=%7ByourSourceProjectId%7D&imodelid=%7ByourSourceIModelId%7D&changesetid=%7ByourChangeSetId%7D"},"https://imodelconsole.bentley.com/?projectid={yourSourceProjectId}&imodelid={yourSourceIModelId}&changesetid={yourChangeSetId}")),(0,r.kt)("h3",{id:"31-transform-parameters-peculiarities"},"3.1 Transform parameters peculiarities:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Each model group must have name and source query."),(0,r.kt)("li",{parentName:"ul"},"Source model queries must select ECInstanceId by using ",(0,r.kt)("inlineCode",{parentName:"li"},"*")," or explicitly selecting that column."),(0,r.kt)("li",{parentName:"ul"},"If you want to combine all models that were left unselected, you should set ",(0,r.kt)("strong",{parentName:"li"},"groupUnselectedModels")," parameter to true (it is set to false by default) and specify the name in ",(0,r.kt)("strong",{parentName:"li"},"unselectedModelsGroupName")," parameter.")),(0,r.kt)(k,{type:"informational",mdxType:"Alert"},"Note: You should only select models that are sub-modeling PhysicalPartition ECClassID."),(0,r.kt)("h3",{id:"32-query-for-all-elements-that-sub-model-physical-partition"},"3.2 Query for all elements that sub-model Physical Partition"),(0,r.kt)("p",null,"Run ECSQL query:\n",(0,r.kt)("inlineCode",{parentName:"p"},"SELECT ECInstanceId, CodeValue, UserLabel from bis.PhysicalPartition"),".\nTo learn more about ECSQL follow ",(0,r.kt)("a",{parentName:"p",href:"https://www.itwinjs.org/learning/ecsql"},"this")," link."),(0,r.kt)("p",null,"This ECSQL query returns a list of all elements inside an iModel that can be used in transformation. To learn more about iModel internals, follow ",(0,r.kt)("a",{parentName:"p",href:"https://www.itwinjs.org/bis/guide/data-organization/information-hierarchy/#example-information-hierarchy"},"this")," link.")),(0,r.kt)(u,{actions:[(0,r.kt)(g,{mdxType:"Title"},"Request Syntax"),(0,r.kt)(y,{language:"http",code:"POST https://api.bentley.com/transformations/configurations/combinephysicalmodelsv2 HTTP/1.1",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Request Headers"),(0,r.kt)(y,{language:"http",code:"Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Request Body"),(0,r.kt)(y,{language:"json",code:'{\n  "transformName":"Combine physical models v2",\n  "sourceProjectId":"SourceProjectId",\n  "sourceIModelId":"SourceIModelId",\n  "targetProjectId":"TargetProjectId",\n  "targetIModelId":"TargetIModelId",\n  "comment":"Example comment",\n  "transformParameters":{\n    "modelGroups":[{\n        "targetModelName": "Your specified name for the first group",\n        "sourceModelQuery": "Your specified query (you can use example query that was shown in section 3.2)"\n    },{\n        "targetModelName": "Your specified name for second group",\n        "sourceModelQuery": "Your specified query (you can use example query that was shown in section 3.2)"\n    }],\n    "groupUnselectedModels": true,\n    "unselectedModelsGroupName": "Your specified name for ungrouped models"\n  }\n}',mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Response Headers"),(0,r.kt)(y,{language:"http",code:"Content-Type: application/json",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Response Body"),(0,r.kt)(y,{language:"json",code:'{\n  "configuration":{\n    "transformParameters": {\n      "modelGroups":[{\n        "targetModelName": "Your specified name for the first group",\n        "sourceModelQuery": "Your specified query (you can use example query that was shown in section 3.2)"\n      },{\n        "targetModelName": "Your specified name for second group",\n        "sourceModelQuery": "Your specified query (you can use example query that was shown in section 3.2)"\n      }],\n      "groupUnselectedModels": true,\n      "unselectedModelsGroupName": "Your specified name for ungrouped models"\n    },\n    "comment": "Example comment",\n    "createdDateTime": "0000-00-00T00:00:00.0000000Z",\n    "modifiedDateTime": "0000-00-00T00:00:00.0000000Z",\n    "_links": {\n      "sourceIModel": {\n        "href": "https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000"\n      },\n      "targetIModel": {\n        "href": "https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000"\n      },\n      "sourceProject": {\n        "href": "https://api.bentley.com/projects/00000000-0000-0000-0000-000000000000"\n      },\n      "targetProject": {\n        "href": "https://api.bentley.com/projects/00000000-0000-0000-0000-000000000000"\n      }\n    },\n    "id": "00000000-0000-0000-0000-000000000000",\n    "transformName": "Combine physical models v2"\n  }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"4-create-a-configuration"},"4. Create a configuration"),(0,r.kt)("p",null,"A transformation configuration is needed to create an association between source and target iModels with some additional metadata to successfully carry out the transformation.\nCreating a configuration does not start the transformation process itself."),(0,r.kt)("p",null,"A configuration is created by sending a request to ",(0,r.kt)("a",{parentName:"p",href:"https://api.bentley.com/transformations/configurations/combinephysicalmodelsv2"},"https://api.bentley.com/transformations/configurations/combinephysicalmodelsv2")," endpoint with the payload describing the source and target iModel association."),(0,r.kt)("p",null,"These are the required properties for the endpoint:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"transformName")," - free form text field so you could name your configuration. ",(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"sourceProjectId")," - source projectId. ",(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"sourceIModelId")," - iModelId of an iModal that is going to be used as a source of the transformation. ",(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"targetProjectId")," - target projectId. ",(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"targetIModelId")," - iModelId of an iModal that is going to be used as a target of the transformation. Initial transformation should always run on an empty target iModel. ",(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"comment")," - a comment of the transformation. ",(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"transformParameters")," - parameters that were mentioned in section 3."),(0,r.kt)("p",null,"You can execute the request in ",(0,r.kt)("a",{parentName:"p",href:"/apis/transformations/operations/combinephysicalmodelsv2/"},"CombinePhysicalModelsV2")," page, \u201cTry it out\u201d section."),(0,r.kt)("p",null,"After executing the request, save returned Id from the response.")),(0,r.kt)(u,{actions:[(0,r.kt)(g,{mdxType:"Title"},"Request Syntax"),(0,r.kt)(y,{language:"http",code:"POST https://api.bentley.com/transformations HTTP/1.1",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Request Headers"),(0,r.kt)(y,{language:"http",code:"Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Request Body"),(0,r.kt)(y,{language:"json",code:'{\n  "configurationId":"Your saved configurationId from step number 3."\n}',mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Response Headers"),(0,r.kt)(y,{language:"http",code:"Content-Type: application/json",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Response Body"),(0,r.kt)(y,{language:"json",code:'{\n  "transformation": {\n    "errorMessage": "",\n    "processedElementCount": 0,\n    "totalElementCount": 0,\n    "_links": {\n      "configuration": {\n        "href": "https://dev-api.bentley.com/transformations/configurations/00000000-0000-0000-0000-000000000000"\n      }\n    },\n    "id": "00000000-0000-0000-0000-000000000000",\n    "status": "Created"\n  }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"5-create-a-transformation"},"5. Create a transformation"),(0,r.kt)("p",null,"A transformation is created by sending a request to ",(0,r.kt)("a",{parentName:"p",href:"https://api.bentley.com/transformations"},"https://api.bentley.com/transformations")," endpoint with the payload indicating which configuration should be used.\nThe request is submitting a transformation job based on the configuration Id value that was provided."),(0,r.kt)("p",null,"You can execute the request in ",(0,r.kt)("a",{parentName:"p",href:"/apis/transformations/operations/create-transformation/"},"Create transformation")," page, \u201cTry it out\u201d section."),(0,r.kt)("p",null,"Response indicates the current status of the transformation. After submitting a transformation the status is \u201cCreated\u201d which means that the transformation is enqueued and waiting to start.\nPossible status messages:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Created")," - transformation is created and waiting to be started. The transformation should start automatically, no additional actions are needed. ",(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"Started")," - transformation is started and waiting to finish. ",(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"Succeeded")," - transformation succeeded. You can open target iModel and inspect the results. ",(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"Failed")," - transformation failed. Check the errorMessage node for more information on what happened. ",(0,r.kt)("br",null)),(0,r.kt)("p",null,"After executing the request, save returned transformation Id from the response.")),(0,r.kt)(u,{actions:[(0,r.kt)(g,{mdxType:"Title"},"Request Syntax"),(0,r.kt)(y,{language:"http",code:"GET https://api.bentley.com/transformations/{savedTransformationId} HTTP/1.1",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Request Headers"),(0,r.kt)(y,{language:"http",code:"Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Response Headers"),(0,r.kt)(y,{language:"http",code:"Content-Type: application/json",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Response Body"),(0,r.kt)(y,{language:"json",code:'{\n  "transformation": {\n    "errorMessage": "",\n    "processedElementCount": 428,\n    "totalElementCount": 428,\n    "startedDateTime": "0000-00-00T00:00:00.0000000Z",\n    "finishedDateTime": "0000-00-00T00:00:00.0000000Z",\n    "sourceChangeSetId": "0",\n    "lastTargetChangesetPushed": "0",\n    "_links": {\n      "configuration": {\n        "href": "https://dev-api.bentley.com/transformations/configurations/00000000-0000-0000-0000-000000000000"\n      }\n    },\n    "id": "00000000-0000-0000-0000-000000000000",\n    "status": "Succeeded"\n  }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"6-waiting-for-transformation-to-finish"},"6. Waiting for transformation to finish"),(0,r.kt)("p",null,"Send a GET request to ",(0,r.kt)("a",{parentName:"p",href:"https://api.bentley.com/transformations/%7ByourTransformationId%7D"},"https://api.bentley.com/transformations/{yourTransformationId}")," endpoint to get an updated transformation status.\nYou can execute the request in ",(0,r.kt)("a",{parentName:"p",href:"/apis/transformations/operations/get-transformation/"},"Get transformation")," page, \u201cTry it out\u201d section."),(0,r.kt)("p",null,"Query for the transformation multiple times until the ",(0,r.kt)("strong",{parentName:"p"},"status")," changes from ",(0,r.kt)("strong",{parentName:"p"},"Created")," to ",(0,r.kt)("strong",{parentName:"p"},"Started")," and eventually to ",(0,r.kt)("strong",{parentName:"p"},"Succeeded"),"."),(0,r.kt)("p",null,"Go to ",(0,r.kt)("a",{parentName:"p",href:"/my-itwins/"},"My iTwins")," and view the target iModel."),(0,r.kt)("h2",{id:"7-conclusion"},"7. Conclusion"),(0,r.kt)("p",null,"We have successfully created a configuration, ran a transformation that combined models, waited for the transformation to be completed and inspected the results.")))}b.isMDXComponent=!0;var w=function(){return[{id:"introduction",level:2,title:"Introduction",children:[]},{id:"prerequisites",level:2,title:"Prerequisites",children:[]},{id:"1-register-an-application",level:2,title:"1. Register an Application",children:[]},{id:"2-get-a-token",level:2,title:"2. Get a token",children:[{id:"implement-authorization-code-flow-in-the-application",level:3,title:"Implement Authorization Code Flow in the application",children:[]},{id:"grab-a-user-token-from-api-reference-try-it-out-section",level:3,title:"Grab a user token from Api reference \u201cTry it out\u201d Section",children:[]}]},{id:"3-decide-which-models-in-source-imodel-to-transform",level:2,title:"3. Decide which models in source iModel to transform.",children:[{id:"31-transform-parameters-peculiarities",level:3,title:"3.1 Transform parameters peculiarities:",children:[]},{id:"32-query-for-all-elements-that-sub-model-physical-partition",level:3,title:"3.2 Query for all elements that sub-model Physical Partition",children:[]}]},{id:"4-create-a-configuration",level:2,title:"4. Create a configuration",children:[]},{id:"5-create-a-transformation",level:2,title:"5. Create a transformation",children:[]},{id:"6-waiting-for-transformation-to-finish",level:2,title:"6. Waiting for transformation to finish",children:[]},{id:"7-conclusion",level:2,title:"7. Conclusion",children:[]}]}},59064:function(e,t,n){"use strict";n.r(t);var o=n(3905),a=n(1176),i=n(58822),r=n(58149),s=(n(67294),n(80989)),l=n(85893);n(14473),t.default=function(){var e={headline:r.Pu.title,navigationItems:(0,r.Jt)(),tutorialSteps:(0,l.jsx)(o.Zo,{components:i.d,children:(0,l.jsx)(r.ZP,{})})};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.d,{title:"".concat(r.Pu.title," - Tutorials | iTwin Platform")}),(0,l.jsx)(a.Z,{tutorial:e})]})}},87631:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tutorials/combine-physical-models-v2-transformation",function(){return n(59064)}])}},function(e){e.O(0,[3714,8670,9734,9102,8764,1706,4009,1610,6638,9774,2888,179],(function(){return t=87631,e(e.s=t);var t}));var t=e.O();_N_E=t}]);