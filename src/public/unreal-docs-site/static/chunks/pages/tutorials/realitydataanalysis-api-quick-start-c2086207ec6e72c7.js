(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7800],{18808:function(e,t,n){"use strict";n.d(t,{Jt:function(){return I},Pu:function(){return r},ZP:function(){return f}});var a=n(36864),o=n(4730),i=n(67294),s=n(3905),l=["components"],r=(i.createElement,{title:"Get started with the Reality Analysis API",tile:{name:"Get started with the Reality Analysis API",description:"This tutorial is an introduction to Reality Analysis API, explaining the basic workflows.",thumbnail:"/unreal-docs-site/static/images/rda/quick-start-thumb.jpg",href:"/tutorials/realitydataanalysis-api-quick-start/",durationInMinutes:60,relatedApiIds:["realitydataanalysis"]}}),d=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.kt)("div",t)}},p=d("Introduction"),c=d("TutorialSection"),u=d("LinkButton"),m=d("PostmanIcon"),h=d("CreateSampleAppButton"),y=d("CodeBlock"),b=d("ContinueLearningSection"),k=d("TileList"),T=d("ResourceTile"),g={metadata:r};function f(e){var t=e.components,n=(0,o.Z)(e,l);return(0,s.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)(p,{skillLevel:"Basic",durationInMinutes:"60",summaryImageSrc:"/unreal-docs-site/static/images/rda/quick-start-header.jpg",mdxType:"Introduction"},(0,s.kt)("h2",{id:"important-notice"},"Important notice"),(0,s.kt)("p",null,"The following tutorial is a step by step detailed description of the low level calls needed for an analysis.\nIt involves using other services, understanding authorizations and creating different json files. It might not be the best way to discover Reality Analysis.\nWe encourage using our Python or TypeScript ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/iTwin/reality-capture/"},"iTwin Capture SDKs")," and the included examples\nif you plan to develop a Python or TypeScript application or for a first discovery even if you plan to use a different language."),(0,s.kt)("h2",{id:"introduction"},"Introduction"),(0,s.kt)("p",null,"This quick start tutorial is going to help you work with Reality Analysis."),(0,s.kt)("p",null,"In this tutorial, you will submit a simple job to detect objects in images."),(0,s.kt)("p",null,"It is assumed that you already have:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Knowledge of the ",(0,s.kt)("a",{parentName:"li",href:"/apis/reality-management"},"Reality Management API"),"."),(0,s.kt)("li",{parentName:"ul"},"Knowledge of the ",(0,s.kt)("em",{parentName:"li"},"Reality Analysis")," concepts. Check ",(0,s.kt)("a",{parentName:"li",href:"/apis/realitydataanalysis/"},"Reality Analysis")," and read the ",(0,s.kt)("em",{parentName:"li"},"Overview"),", ",(0,s.kt)("em",{parentName:"li"},"Context Scenes"),", ",(0,s.kt)("em",{parentName:"li"},"Context Detectors")," and ",(0,s.kt)("em",{parentName:"li"},"Job Types")," sections."))),(0,s.kt)(c,{mdxType:"TutorialSection"},(0,s.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"A small set of photos to analyse."),(0,s.kt)("li",{parentName:"ul"},"A ",(0,s.kt)("em",{parentName:"li"},"photo object detector"),". You may download the Coco 2D object detector of the ",(0,s.kt)("a",{parentName:"li",href:"https://communities.bentley.com/products/3d_imaging_and_point_cloud_software/w/wiki/54656/context-insights-detectors-download-page"},"library page")),(0,s.kt)("li",{parentName:"ul"},"An iTwin and its ID. For instance you can create a project of ID \u201cProjectID\u201d. Check the ",(0,s.kt)("a",{parentName:"li",href:"/tutorials/create-and-query-projects-guide/"},"create and query projects guide"),"."))),(0,s.kt)(c,{subSection:!0,actions:[(0,s.kt)(u,{href:"https://www.postman.com/downloads/",target:"_blank",title:"Postman",icon:(0,s.kt)(m,{mdxType:"PostmanIcon"}),mdxType:"LinkButton"})],mdxType:"TutorialSection"},(0,s.kt)("h3",{id:"suggested-tools"},"Suggested Tools"),(0,s.kt)("h5",{id:"a-hrefhttpswwwpostmancomdownloads-target_blankpostmana"},(0,s.kt)("a",{href:"https://www.postman.com/downloads/",target:"_blank"},"Postman")),(0,s.kt)("p",null,"If you want to test the REST API calls directly, you can use ",(0,s.kt)("a",{parentName:"p",href:"https://www.postman.com/downloads/"},"Postman")," or any other solution capable of sending HTTP requests. If you do it this way, you will require an authorization token for the requests to work. This is covered in the \u201cGet a token\u201d section below.")),(0,s.kt)(c,{actions:[(0,s.kt)(h,{clientName:"Reality Analysis basic tutorial",scopes:["realitydataanalysis:read","realitydataanalysis:modify","realitydata:modify","realitydata:read"],mdxType:"CreateSampleAppButton"})],mdxType:"TutorialSection"},(0,s.kt)("h2",{id:"1-register-an-application"},"1. Register an Application"),(0,s.kt)("p",null,"You will need to register an application to use the iTwin Platform APIs. You can use the ",(0,s.kt)("strong",{parentName:"p"},"Register")," button to automatically create your first single page application (SPA). This will allow you to configure ",(0,s.kt)("a",{parentName:"p",href:"/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"},"Authorization Code Flow for your SPA application")," and get the correct access token."),(0,s.kt)("p",null,"Once generated, you will be shown a few lines of code under the button."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"IMJS_AUTH_CLIENT_CLIENT_ID")," - this is the unique identifier for your application. Displayed on application details page as ",(0,s.kt)("strong",{parentName:"li"},"Client ID"),"."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"IMJS_AUTH_CLIENT_REDIRECT_URI")," - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ",(0,s.kt)("strong",{parentName:"li"},"Redirect URIs"),"."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"IMJS_AUTH_CLIENT_LOGOUT_URI")," - specifies where users can be returned to after logging out. Displayed on application details page as one of ",(0,s.kt)("strong",{parentName:"li"},"Post logout redirect URIs"),"."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"IMJS_AUTH_CLIENT_SCOPES")," - list of accesses granted to the application. Displayed on application details page as ",(0,s.kt)("strong",{parentName:"li"},"Scopes"),".")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("strong",{parentName:"p"},"Or optionally:")," Register and configure your application manually following instructions in ",(0,s.kt)("a",{parentName:"p",href:"/tutorials/register-and-modify-application/"},"Register and modify an Application")," tutorial.\nMake sure that your application is associated with ",(0,s.kt)("strong",{parentName:"p"},"Reality Modeling API")," and has ",(0,s.kt)("inlineCode",{parentName:"p"},"realitydataanalysis:read, realitydataanalysis:modify, realitydata:modify, realitydata:read")," scopes enabled."))),(0,s.kt)(c,{mdxType:"TutorialSection"},(0,s.kt)("h2",{id:"2-get-a-token"},"2. Get a token"),(0,s.kt)("p",null,"To make a request to the API, you need a user token. There are several ways to get it. You can consult the\n",(0,s.kt)("a",{parentName:"p",href:"/apis/overview/authorization/"},"Authorization API documentation"),"\nor you can use a ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/iTwin/platform-api-samples/tree/main/Authorization"},"sample powershell script")," to use in your app."),(0,s.kt)("p",null,"In the following, JWT_TOKEN will stand for this token.")),(0,s.kt)(c,{mdxType:"TutorialSection"},(0,s.kt)("h2",{id:"3-upload-data"},"3. Upload data"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Upload your photos to Reality Management API as ",(0,s.kt)("em",{parentName:"li"},"CCImageCollection")," attached to your iTwin project using the ",(0,s.kt)("a",{parentName:"li",href:"/apis/reality-management"},"Reality Management API"),"."),(0,s.kt)("li",{parentName:"ul"},"Upload your detector to Reality Management API as ",(0,s.kt)("em",{parentName:"li"},"ContextDetector")," attached to your iTwin project using the ",(0,s.kt)("a",{parentName:"li",href:"/apis/reality-management"},"Reality Management API"),".")),(0,s.kt)("p",null,"In the following, ",(0,s.kt)("em",{parentName:"p"},"ProjectID")," stands for the iTwin project id, ",(0,s.kt)("em",{parentName:"p"},"ImageCollectionID")," for the CCImageCollection entry id and ",(0,s.kt)("em",{parentName:"p"},"DetectorID")," for the ContextDetector entry id."),(0,s.kt)("p",null,"Note that your iTwin project will usually store some detectors and all your ",(0,s.kt)("em",{parentName:"p"},"raw")," reality data (photos, point clouds, etc.).\nThey are not intended to be uploaded for each Reality Analysis jobs. In many cases, they will have been uploaded previously and probably by someone else.")),(0,s.kt)(c,{actions:[(0,s.kt)(y,{language:"json",code:'{\n    "version" : "5.0",\n    "PhotoCollection" : {\n        "Photos" : {\n            "0" : {\n                "ImagePath" : "0:IMAGE_1059.JPG",\n            },\n            "1" : {\n                "ImagePath" : "0:IMAGE_1060.JPG",\n            },\n            "2" : {\n                "ImagePath" : "0:IMAGE_1061.JPG",\n            }\n        }\n    },\n    "References" : {\n        "0" : {\n            "Path" : "rds:ImageCollectionID"\n        }\n    }\n  }',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,s.kt)("h2",{id:"4-prepare-job-input"},"4. Prepare job input"),(0,s.kt)("p",null,"You will now chose on which reality data the job will be applied, creating the ",(0,s.kt)("em",{parentName:"p"},"ContextScene")," pointing to them.\nIt will be very simple in our case, a few photos in a CCImageCollection but remember it could be more complex: pointing to several Reality Management API entries, adding metadata like orientation, etc."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Create ContextScene file pointing to the photos your want to analyze. It should look like the file besides."),(0,s.kt)("li",{parentName:"ul"},"Upload it to Reality Management API as ",(0,s.kt)("em",{parentName:"li"},"ContextScene")," entry. Remember to name the file ",(0,s.kt)("inlineCode",{parentName:"li"},"ContextScene.json")," as should be any ContextScene uploaded on Reality Management API. In the following, ",(0,s.kt)("em",{parentName:"li"},"PhotosID")," stands for its id."))),(0,s.kt)(c,{mdxType:"TutorialSection"},(0,s.kt)("h2",{id:"5-create-job"},"5. Create job"),(0,s.kt)("p",null,"Your next step will be to create the job.")),(0,s.kt)(c,{subSection:!0,actions:[(0,s.kt)(y,{language:"http",code:"POST https://api.bentley.com/realitydataanalysis/jobs HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,s.kt)("h3",{id:"request"},"Request"),(0,s.kt)("p",null,"The job is created sending an HTTP POST message to ",(0,s.kt)("a",{parentName:"p",href:"https://api.bentley.com/realitydataanalysis/jobs"},"https://api.bentley.com/realitydataanalysis/jobs")," endpoint with the payload describing the job. Be sure to replace JWT_TOKEN by its value.")),(0,s.kt)(c,{subSection:!0,actions:[(0,s.kt)(y,{language:"json",code:'{\n  "type": "objects2D",\n  "name": "O2D job sample",\n  "iTwinId": "ProjectID",\n  "settings": {\n    "inputs": [\n      {\n        "name": "photos",\n        "realityDataId": "PhotosID"\n      },\n      {\n        "name": "photoObjectDetector",\n        "realityDataId": "DetectorID"\n      }\n    ],\n    "outputs": [\n      "objects2D"\n    ]\n  }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,s.kt)("h3",{id:"request-body"},"Request Body"),(0,s.kt)("p",null,"The request body define the job settings. Be sure to replace ProjectID, PhotosID and DetectorID by their values.")),(0,s.kt)(c,{subSection:!0,actions:[(0,s.kt)(y,{language:"json",code:'{\n  "settings": {\n    "outputs": [\n      {\n        "name": "objects2D"\n      }\n    ],\n    "inputs": [\n      {\n        "name": "photos",\n        "realityDataId": "PhotosID"\n      },\n      {\n        "name": "photoObjectDetector",\n        "realityDataId": "DetectorID"\n      }\n    ]\n  },\n  "state": "unsubmitted",\n  "dataCenter": "EastUs",\n  "createdDateTime": "2022-03-08T10: 55: 24Z",\n  "lastModifiedDateTime": "2022-03-08T10: 55: 24Z",\n  "id": "JobID",\n  "email": "name@bentley.com",\n  "costEstimation": {\n    "estimatedCost": -1.0\n  },\n  "type": "objects2D",\n  "name": "O2D job sample",\n  "iTwinId": "ProjectID"\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,s.kt)("h3",{id:"response-body"},"Response body"),(0,s.kt)("p",null,"The API will respond with a ",(0,s.kt)("inlineCode",{parentName:"p"},"201 Created")," status code if the call is successful.\nThe most important entry of this response is the \u201cid\u201d which you will use to refer to the job in following steps.")),(0,s.kt)(c,{mdxType:"TutorialSection"},(0,s.kt)("h2",{id:"6-estimate-job-cost"},"6. Estimate job cost"),(0,s.kt)("p",null,"You can optionally provide relevant quantities about the input to get an estimation of the job cost before deciding to submit it.")),(0,s.kt)(c,{subSection:!0,actions:[(0,s.kt)(y,{language:"http",code:"PATCH https://api.bentley.com/realitydataanalysis/jobs/JobID HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,s.kt)("h3",{id:"request-1"},"Request"),(0,s.kt)("p",null,"Send an HTTP PATCH message to ",(0,s.kt)("a",{parentName:"p",href:"https://api.bentley.com/realitydataanalysis/jobs/JobID"},"https://api.bentley.com/realitydataanalysis/jobs/JobID")," endpoint with the payload describing the quantities.\nBe sure to replace JWT_TOKEN and JobID by their values.")),(0,s.kt)(c,{subSection:!0,actions:[(0,s.kt)(y,{language:"json",code:'{\n  "costEstimation": {\n    "numberOfPhotos": 3,\n    "gigaPixels": 12\n  }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,s.kt)("h3",{id:"request-body-1"},"Request Body"),(0,s.kt)("p",null,"For an 2D object detection job type, these quantities are the number of photos and the total number of gigapixels that will be analyzed.")),(0,s.kt)(c,{subSection:!0,actions:[(0,s.kt)(y,{language:"json",code:'{\n  "settings": {\n    "outputs": [\n      {\n        "name": "objects2D"\n      }\n    ],\n    "inputs": [\n      {\n        "name": "photos",\n        "realityDataId": "PhotosID"\n      },\n      {\n        "name": "photoObjectDetector",\n        "realityDataId": "DetectorID"\n      }\n    ]\n  },\n  "state": "unsubmitted",\n  "dataCenter": "EastUs",\n  "createdDateTime": "2022-03-08T10: 55: 24Z",\n  "lastModifiedDateTime": "2022-03-08T13: 55: 24Z",\n  "id": "JobID",\n  "email": "name@bentley.com",\n  "costEstimation": {\n    "estimatedCost": 2.4\n  },\n  "type": "objects2D",\n  "name": "O2D job sample",\n  "iTwinId": "ProjectID"\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,s.kt)("h3",{id:"response-body-1"},"Response body"),(0,s.kt)("p",null,"The API will respond with a ",(0,s.kt)("inlineCode",{parentName:"p"},"201 Created")," status code if the call is successful.\nThe estimatedCost is now set.")),(0,s.kt)(c,{mdxType:"TutorialSection"},(0,s.kt)("h2",{id:"7-submit-job"},"7. Submit job"),(0,s.kt)("p",null,"To submit your job, simply change its state to ",(0,s.kt)("em",{parentName:"p"},"active"),".")),(0,s.kt)(c,{subSection:!0,actions:[(0,s.kt)(y,{language:"http",code:"PATCH https://api.bentley.com/realitydataanalysis/jobs/JobID HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,s.kt)("h3",{id:"request-2"},"Request"),(0,s.kt)("p",null,"Send an HTTP PATCH message to ",(0,s.kt)("a",{parentName:"p",href:"https://api.bentley.com/realitydataanalysis/jobs/JobID"},"https://api.bentley.com/realitydataanalysis/jobs/JobID")," endpoint with the payload to change its state to ",(0,s.kt)("em",{parentName:"p"},"active"),".\nBe sure to replace JWT_TOKEN and JobID by their values.")),(0,s.kt)(c,{subSection:!0,actions:[(0,s.kt)(y,{language:"json",code:'{\n  "state": "active"\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,s.kt)("h3",{id:"request-body-2"},"Request Body"),(0,s.kt)("p",null,"The only entry to patch is the state of the job.")),(0,s.kt)(c,{subSection:!0,actions:[(0,s.kt)(y,{language:"json",code:'{\n  "settings": {\n    "outputs": [\n      {\n        "name": "objects2D"\n      }\n    ],\n    "inputs": [\n      {\n        "name": "photos",\n        "realityDataId": "PhotosID"\n      },\n      {\n        "name": "photoObjectDetector",\n        "realityDataId": "DetectorID"\n      }\n    ]\n  },\n  "state": "active",\n  "executionInformation": {\n    "submissionDateTime": "2022-03-08T13:23:52Z"\n  },\n  "dataCenter": "EastUs",\n  "createdDateTime": "2022-03-08T10: 55: 24Z",\n  "lastModifiedDateTime": "2022-03-08T10: 55: 24Z",\n  "id": "JobID",\n  "email": "name@bentley.com",\n  "costEstimation": {\n    "estimatedCost": 2.4\n  },\n  "type": "objects2D",\n  "name": "O2D job sample",\n  "iTwinId": "ProjectID"\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,s.kt)("h3",{id:"response-body-2"},"Response body"),(0,s.kt)("p",null,"The API will respond with a ",(0,s.kt)("inlineCode",{parentName:"p"},"200 OK")," status code if the call is successful.\nThe response indicates that the state has changed to active and adds an ",(0,s.kt)("em",{parentName:"p"},"executionInformation")," section, filled so far with a submission time.")),(0,s.kt)(c,{mdxType:"TutorialSection"},(0,s.kt)("h2",{id:"8-monitor-job"},"8. Monitor job"),(0,s.kt)("p",null,"You will probably want to monitor your job to check its state and advancement.")),(0,s.kt)(c,{subSection:!0,actions:[(0,s.kt)(y,{language:"http",code:"PATCH https://api.bentley.com/realitydataanalysis/jobs/JobID/progress HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,s.kt)("h3",{id:"request-3"},"Request"),(0,s.kt)("p",null,"To monitor the job, send an HTTP GET message to ",(0,s.kt)("a",{parentName:"p",href:"https://api.bentley.com/realitydataanalysis/jobs/JobID/progress"},"https://api.bentley.com/realitydataanalysis/jobs/JobID/progress")," endpoint.\nBe sure to replace JWT_TOKEN and JobID by their values.")),(0,s.kt)(c,{subSection:!0,actions:[(0,s.kt)(y,{language:"json",code:'{\n  "progress": {\n    "percentage": 25,\n    "state": "active",\n    "step": "Run_Production"\n  }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,s.kt)("h3",{id:"response-body-3"},"Response body"),(0,s.kt)("p",null,"The response give you the job advancement, state and a step name.")),(0,s.kt)(c,{mdxType:"TutorialSection"},(0,s.kt)("h2",{id:"9-get-results"},"9. Get results")),(0,s.kt)(c,{subSection:!0,actions:[(0,s.kt)(y,{language:"http",code:"PATCH https://api.bentley.com/realitydataanalysis/jobs/JobID HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,s.kt)("h3",{id:"request-4"},"Request"),(0,s.kt)("p",null,"At any time, you can get all job information sending an HTTP GET message to ",(0,s.kt)("a",{parentName:"p",href:"https://api.bentley.com/realitydataanalysis/jobs/JobID"},"https://api.bentley.com/realitydataanalysis/jobs/JobID")," endpoint.")),(0,s.kt)(c,{subSection:!0,actions:[(0,s.kt)(y,{language:"json",code:'{\n  "settings": {\n    "outputs": [\n      {\n        "name": "objects2D",\n        "realityDataId": "SomeIDProvidedByTheService"\n      }\n    ],\n    "inputs": [\n      {\n        "name": "photos",\n        "realityDataId": "PhotosID"\n      },\n      {\n        "name": "photoObjectDetector",\n        "realityDataId": "DetectorID"\n      }\n    ]\n  },\n  "state": "success",\n  "executionInformation": {\n    "exitCode": 0,\n    "estimatedUnits": 3.0,\n    "startedDateTime": "2022-03-08T14:20:44Z",\n    "endedDateTime": "2022-03-08T14:27:31Z",\n    "submissionDateTime": "2022-03-08T13:23:52Z"\n  },\n  "dataCenter": "EastUs",\n  "createdDateTime": "2022-03-08T10: 55: 24Z",\n  "lastModifiedDateTime": "2022-03-08T10: 55: 24Z",\n  "id": "JobID",\n  "email": "name@bentley.com",\n  "costEstimation": {\n    "estimatedCost": 2.4\n  },\n  "type": "objects2D",\n  "name": "O2D job sample",\n  "iTwinId": "ProjectID"\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,s.kt)("h3",{id:"response-body-4"},"Response body"),(0,s.kt)("p",null,"Once the job is over, your can get its final state and check success.\nThe executionInformation section is also filled with more useful data.\nYour will also get an id in Reality Management API for every output entry. This will allow you to download the results using the ",(0,s.kt)("a",{parentName:"p",href:"/apis/reality-management"},"Reality Management API"),".")),(0,s.kt)(c,{subSection:!0,actions:[(0,s.kt)(y,{language:"json",code:'{\n    "version" : "5.0",\n    "PhotoCollection" : {\n        "Photos" : {\n            "0" : {\n                "ImagePath" : "0:IMAGE_1059.JPG"\n            },\n            "1" : {\n                "ImagePath" : "0:IMAGE_1060.JPG"\n            },\n            "2" : {\n                "ImagePath" : "0:IMAGE_1061.JPG"\n            }\n        }\n    },\n    "Annotations" : {\n        "Labels" : {\n            "3" : {\n                "Name" : "car"\n            },\n            "4" : {\n                "Name" : "motorcycle"\n            }\n        },\n        "Objects2D" : {\n            "0" : {\n                "e256276a-d478-476d-a654-195dbc23d1d9" : {\n                    "LabelInfo" : {\n                        "Confidence" : 0.998534977436066,\n                        "LabelId" : 3\n                    },\n                    "Box2D" : {\n                        "xmin" : 0.0319100245833397,\n                        "ymin" : 0.537032723426819,\n                        "xmax" : 0.374318659305573,\n                        "ymax" : 0.66499537229538\n                    }\n                },\n                "03f2b2e5-5df5-49a0-8515-62d6df7739bd" : {\n                    "LabelInfo" : {\n                        "Confidence" : 0.996562480926514,\n                        "LabelId" : 3\n                    },\n                    "Box2D" : {\n                        "xmin" : 0.877566039562225,\n                        "ymin" : 0.4940065741539,\n                        "xmax" : 1,\n                        "ymax" : 0.62068098783493\n                    }\n                }\n            },\n            "1" : {\n                "b61c36dd-98d2-4a2a-902e-9d12d9472f15" : {\n                    "LabelInfo" : {\n                        "Confidence" : 0.983914494514465,\n                        "LabelId" : 3\n                    },\n                    "Box2D" : {\n                        "xmin" : 0.854629874229431,\n                        "ymin" : 0.483299434185028,\n                        "xmax" : 0.938638925552368,\n                        "ymax" : 0.547508895397186\n                    }\n                },\n                ...',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,s.kt)("h3",{id:"output-file"},"Output file"),(0,s.kt)("p",null,"You should obtain a ContextScene file with 2D objects.")),(0,s.kt)(c,{mdxType:"TutorialSection"},(0,s.kt)("h2",{id:"10-other-requests"},"10. Other requests"),(0,s.kt)("p",null,"In this tutorial, you have seen almost all the API requests except two:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"deleting a job: this is only possible if the job has not been submitted yet. The job will be deleted from the service database."),(0,s.kt)("li",{parentName:"ul"},"canceling a job: it can be done while active. The job will stay in the service database but will not be processed anymore.\nPlease refer to the ",(0,s.kt)("a",{parentName:"li",href:"/apis/realitydataanalysis/operations/"},"API Reference"),".")),(0,s.kt)("p",null,"As mentioned in the documentation, Reality Analysis API is batch oriented to allow concurrent analysis on large datasets.\nThis is why the input and output ContextScenes go through an upload/download to/from Reality Management API.\nTo simplify use cases where these files are light enough to go be transferred via the API requests,\nfuture versions will allow direct json transfers as a possible choice.")),(0,s.kt)(b,{mdxType:"ContinueLearningSection"},(0,s.kt)("h2",{id:"continue-learning"},"Continue learning"),(0,s.kt)("p",null,"Congratulations for completing the Get started with the Reality Analysis API tutorial! You should now be able to detect 2D objects in a set of photos.\nStay tuned for more tutorials. Meanwhile, you might want to try photo segmentation jobs."),(0,s.kt)("h2",{id:"more-resources-that-you-may-like"},"More resources that you may like"),(0,s.kt)(k,{mdxType:"TileList"},(0,s.kt)(T,{title:"iTwin Capture SDKs",href:"https://github.com/iTwin/reality-capture/",description:"Python and Typescript SDKs to use iTwin Capture services.",isExternal:!0,mdxType:"ResourceTile"}),(0,s.kt)(T,{title:"Reality Data API",href:"/apis/realitydata/",description:"Reality Data API is necessary for uploading inputs for Reality Modeling, and downloading outputs.",mdxType:"ResourceTile"}),(0,s.kt)(T,{title:"Detector library",href:"https://communities.bentley.com/products/3d_imaging_and_point_cloud_software/w/wiki/54656/context-insights-detectors-download-page",description:"Library of available Context Detectors.",isExternal:!0,mdxType:"ResourceTile"}),(0,s.kt)(T,{title:"Reality Management API",href:"/apis/reality-management/",description:"Reality Management API is necessary for uploading inputs for Reality Modeling, and downloading outputs.",mdxType:"ResourceTile"}))))}f.isMDXComponent=!0;var I=function(){return[{id:"important-notice",level:2,title:"Important notice",children:[]},{id:"introduction",level:2,title:"Introduction",children:[]},{id:"prerequisites",level:2,title:"Prerequisites",children:[{id:"suggested-tools",level:3,title:"Suggested Tools",children:[]}]},{id:"1-register-an-application",level:2,title:"1. Register an Application",children:[]},{id:"2-get-a-token",level:2,title:"2. Get a token",children:[]},{id:"3-upload-data",level:2,title:"3. Upload data",children:[]},{id:"4-prepare-job-input",level:2,title:"4. Prepare job input",children:[]},{id:"5-create-job",level:2,title:"5. Create job",children:[{id:"request",level:3,title:"Request",children:[]},{id:"request-body",level:3,title:"Request Body",children:[]},{id:"response-body",level:3,title:"Response body",children:[]}]},{id:"6-estimate-job-cost",level:2,title:"6. Estimate job cost",children:[{id:"request-1",level:3,title:"Request",children:[]},{id:"request-body-1",level:3,title:"Request Body",children:[]},{id:"response-body-1",level:3,title:"Response body",children:[]}]},{id:"7-submit-job",level:2,title:"7. Submit job",children:[{id:"request-2",level:3,title:"Request",children:[]},{id:"request-body-2",level:3,title:"Request Body",children:[]},{id:"response-body-2",level:3,title:"Response body",children:[]}]},{id:"8-monitor-job",level:2,title:"8. Monitor job",children:[{id:"request-3",level:3,title:"Request",children:[]},{id:"response-body-3",level:3,title:"Response body",children:[]}]},{id:"9-get-results",level:2,title:"9. Get results",children:[{id:"request-4",level:3,title:"Request",children:[]},{id:"response-body-4",level:3,title:"Response body",children:[]},{id:"output-file",level:3,title:"Output file",children:[]}]},{id:"10-other-requests",level:2,title:"10. Other requests",children:[]},{id:"continue-learning",level:2,title:"Continue learning",children:[]},{id:"more-resources-that-you-may-like",level:2,title:"More resources that you may like",children:[]}]}},78012:function(e,t,n){"use strict";n.r(t);var a=n(3905),o=n(1176),i=n(58822),s=n(18808),l=(n(67294),n(80989)),r=n(85893);n(14473),t.default=function(){var e={headline:s.Pu.title,navigationItems:(0,s.Jt)(),tutorialSteps:(0,r.jsx)(a.Zo,{components:i.d,children:(0,r.jsx)(s.ZP,{})})};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(l.d,{title:"".concat(s.Pu.title," - Tutorials | iTwin Platform")}),(0,r.jsx)(o.Z,{tutorial:e})]})}},53426:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tutorials/realitydataanalysis-api-quick-start",function(){return n(78012)}])}},function(e){e.O(0,[3714,8670,9734,9102,8764,1706,4009,1610,6638,9774,2888,179],(function(){return t=53426,e(e.s=t);var t}));var t=e.O();_N_E=t}]);