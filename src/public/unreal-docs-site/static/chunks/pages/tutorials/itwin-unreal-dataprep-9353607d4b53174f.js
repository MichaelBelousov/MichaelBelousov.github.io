(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2813],{55010:function(e,t,a){"use strict";a.d(t,{Jt:function(){return b},Pu:function(){return l},ZP:function(){return f}});var i=a(36864),n=a(4730),r=a(67294),o=a(3905),s=["components"],l=(r.createElement,{title:"Processing iModel metadata in Unreal Visual Dataprep",tile:{name:"Processing iModel metadata in Unreal Visual Dataprep",description:"Create Unreal Dataprep scripts that use your iTwin data",thumbnail:"/images/unreal-export-dataprep-cover-thumb.jpg",href:"/tutorials/itwin-unreal-dataprep",durationInMinutes:10,relatedApiIds:["itwin-unreal"],showInFirstSteps:!1}}),p=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)}},u=p("Introduction"),m=p("TutorialSection"),d=p("WebMLoop"),h=p("TitledImage"),c=p("Alert"),g=p("ContinueLearningSection"),k=p("TileList"),w=p("ResourceTile"),y={metadata:l};function f(e){var t=e.components,a=(0,n.Z)(e,s);return(0,o.kt)("wrapper",(0,i.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(u,{skillLevel:"Basic",durationInMinutes:"10",summaryImageSrc:"/images/unreal-export-dataprep-cover.png",mdxType:"Introduction"},(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"This tutorial guides you through the basics of using Visual Dataprep with iTwin metadata exported using the iTwin Exporter for Datasmith.")),(0,o.kt)(m,{mdxType:"TutorialSection"},(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"This tutorial assumes that you have:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.unrealengine.com/download"},"Unreal Engine 4.26.1")," and the ",(0,o.kt)("a",{parentName:"li",href:"https://developer.bentley.com/unreal/"},"iTwin Exporter for Datasmith")," installed.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"The full list of prerequisites can be found in the prerequisites section of ",(0,o.kt)("a",{parentName:"li",href:"/tutorials/itwin-unreal-export-combined-meshes/#prerequisites"},"Exporting iModel to Unreal Datasmith as a combined mesh"),"."))),(0,o.kt)("li",{parentName:"ul"},"An existing Datasmith export made with the iTwin Exporter for Datasmith. If you need one, you may complete one of the following tutorials:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/tutorials/itwin-unreal-export-combined-meshes/"},"Exporting iModel to Unreal Datasmith as a combined mesh")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/tutorials/itwin-unreal-export-filtering/"},"Exporting an iModel to Unreal with filters")))),(0,o.kt)("li",{parentName:"ul"},"An existing Unreal Engine project with the ",(0,o.kt)("a",{parentName:"li",href:"/tutorials/itwin-unreal-export-combined-meshes/#3-install-the-itwin-unreal-datasmith-plugin-in-your-unreal-project"},"iTwin Unreal Datasmith Plugin")," installed.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Depending on your Unreal Engine version, this may require Visual Studio to be installed. The prerequisites section of ",(0,o.kt)("a",{parentName:"li",href:"/tutorials/itwin-unreal-export-combined-meshes/#prerequisites"},"Exporting iModel to Unreal Datasmith as a combined mesh"),"\nhas instructions for recompiling the plugin."))))),(0,o.kt)(m,{mdxType:"TutorialSection"},(0,o.kt)("h2",{id:"1-import-your-datasmith-content-into-a-new-dataprep-recipe"},"1. Import your Datasmith content into a new Dataprep recipe"),(0,o.kt)("p",null,"Create a new Dataprep recipe. Right-click within the content browser. Under ",(0,o.kt)("strong",{parentName:"p"},"Create Advanced Asset"),", select\nthe ",(0,o.kt)("strong",{parentName:"p"},"Dataprep")," asset category, then the ",(0,o.kt)("strong",{parentName:"p"},"Dataprep Asset")," type."),(0,o.kt)(d,{src:"/images/unreal-export-create-dataprep-asset.webm",mdxType:"WebMLoop"}),(0,o.kt)("p",null,"Double-click the new asset in the content browser to open it in the ",(0,o.kt)("strong",{parentName:"p"},"Dataprep Recipe Editor"),".\nAt the top right in the ",(0,o.kt)("strong",{parentName:"p"},"Inputs")," section, press the plus button, then browse for the ",(0,o.kt)("inlineCode",{parentName:"p"},".udatasmith")," file created during your export.\nThis adds your Datasmith content to the Recipe editor."),(0,o.kt)(d,{src:"/images/unreal-export-dataprep-add-import-provider.webm",mdxType:"WebMLoop"}),(0,o.kt)("p",null,"When the import is complete, select any actor in the viewport.\nIn the Property Pane on the right side, scroll down to ",(0,o.kt)("strong",{parentName:"p"},"Asset User Data > Datasmith User Data")," to inspect fields that are available to match\non, as well as compare those values on different objects."),(0,o.kt)(h,{src:"/images/unreal-export-dataprep-metadata-view.png",alt:"inspect metadata properties in the dataprep editor",mdxType:"TitledImage"}),(0,o.kt)("p",null,"It may be helpful to read the text in read-only entries using the tooltips. To do so, hover over them, or even\nright-click to be able to copy the text. For clarity, the above image has a few sample labels annotated."),(0,o.kt)("p",null,"Alternatively, inspect your element properties in the iTwin Exporter for Datasmith in the ",(0,o.kt)("strong",{parentName:"p"},"Properties")," tab.\nBe aware that names here will not be the same as names in the metadata in Unreal.\nTo avoid name collisions and because Datasmith has specific rules for metadata entry names, we have added prefixes to the names in Unreal.\nBecause of this, it is recommended to find the entry name in Unreal once you have the metadata you intend to match on."),(0,o.kt)(h,{src:"/images/unreal-export-app-property-tab.png",alt:"inspect metadata properties in the itwin exporter for Datasmith app",className:"sample-img-xl",mdxType:"TitledImage"})),(0,o.kt)(m,{mdxType:"TutorialSection"},(0,o.kt)("h2",{id:"2-substitute-a-material"},"2. Substitute a material"),(0,o.kt)("p",null,"Dateprep recipes allow you to programmatically modify your scene.\nFor example, quickly substituting pieces of an imported scene, such as the materials used or placed actors.\nFor demonstration purposes, let\u2019s substitute a default material with one of Unreal\u2019s high-quality starter content materials."),(0,o.kt)("p",null,"Search through your iTwin\u2019s imported metadata for something you want to match on.\nIn our iTwin we found the ",(0,o.kt)("inlineCode",{parentName:"p"},"objectStructualUsage_StructuralMaterial")," metadata property, and see that it has a value of ",(0,o.kt)("inlineCode",{parentName:"p"},"Timber")," for our inspected\nactor, which we will filter on to make sure all \u201cTimber\u201d items use a high-quality wood material.\nAdd a ",(0,o.kt)("em",{parentName:"p"},"Metadata Value")," filter and set the match type to ",(0,o.kt)("em",{parentName:"p"},"Exact Match"),". Then, add a ",(0,o.kt)("em",{parentName:"p"},"Set Material")," operator and choose from any material in your\nproject."),(0,o.kt)(d,{src:"/images/unreal-export-dataprep-set-mat.webm",mdxType:"WebMLoop"}),(0,o.kt)(c,{type:"informational",mdxType:"Alert"},"Your metadata will not necessarily match the properties we use here. The metadata in your iTwin is entirely dependent on the source files synchronized to it. If you expect to see specific metadata in your iTwin but do not see it in the viewer's ",(0,o.kt)("strong",null,"Properties")," tab, please ask why at the iTwin.js"," ",(0,o.kt)("a",{href:"https://github.com/iTwin/itwinjs-core/discussions/"},"Github Discussions")," ","page."),(0,o.kt)("p",null,"When you are satisifed with your changes to the Dataprep recipe, press the ",(0,o.kt)("strong",{parentName:"p"},"Execute")," button to run the operator graph and\nmake your material substitution visible in the viewport."),(0,o.kt)(h,{src:"/images/unreal-export-dataprep-exec-button.png",alt:"The execute button in the dataprep editor",mdxType:"TitledImage"})),(0,o.kt)(m,{mdxType:"TutorialSection"},(0,o.kt)("h2",{id:"3-substituting-materials-with-a-table"},"3. Substituting materials with a table"),(0,o.kt)("p",null,"For managing substitution of many materials, it may be useful to use Dataprep\u2019s ",(0,o.kt)("em",{parentName:"p"},"Substitute Material By Table")," operator.\nAdd the operator and in its parameters click the ",(0,o.kt)("strong",{parentName:"p"},"Material Data Table")," parameter\u2019s asset selection.\nUnder the ",(0,o.kt)("strong",{parentName:"p"},"Create New Asset")," section at the top, click ",(0,o.kt)("strong",{parentName:"p"},"Data Table"),".\nIn the ",(0,o.kt)("strong",{parentName:"p"},"Pick Row Structure")," dialog, pick ",(0,o.kt)("em",{parentName:"p"},"MaterialSubstitutionDataTable")," and choose the folder to create the new asset in.\nDouble-click the asset\u2019s thumbnail in the operator parameters to quickly open your new table in the data table editor.\nClick the ",(0,o.kt)("strong",{parentName:"p"},"Add Row")," button to add a material substitution which consists of a search string, search match type, and the target material.\nUnreal also supports loading table rows from CSV and JSON data from the ",(0,o.kt)("strong",{parentName:"p"},"Details Pane")," in the data table editor."),(0,o.kt)(d,{src:"/images/unreal-export-mat-sub-table.webm",controls:"",mdxType:"WebMLoop"}),(0,o.kt)("p",null,"This concludes our demonstration of using iTwin metadata in Dataprep.\nDataprep has many more operators for common processes like simplifying, decimating, and merging geometry, or populating surfaces with high-quality assets\nsuch as animated foliage assets. You can also create your own Dataprep operators with Unreal\u2019s Blueprints.\nThe full Dataprep documentation from Unreal can be found ",(0,o.kt)("a",{parentName:"p",href:"https://docs.unrealengine.com/WorkingWithContent/Importing/Dataprep/"},"here"),".")),(0,o.kt)(g,{mdxType:"ContinueLearningSection"},(0,o.kt)("h2",{id:"more-resources-that-you-may-like"},"More resources that you may like"),(0,o.kt)(k,{mdxType:"TileList"},(0,o.kt)(w,{title:"iTwin Exporter for Datasmith documentation",href:"/unreal/integration/documentation/",description:"Extended functionality and workflow descriptions in iTwin Exporter for Datasmith",mdxType:"ResourceTile"}),(0,o.kt)(w,{title:"Exporting iModel to Unreal Datasmith as a combined mesh",href:"/tutorials/itwin-unreal-export-combined-meshes/",description:"Follow this tutorial to get iModel data into the Datasmith format as a combined mesh.",mdxType:"ResourceTile"}),(0,o.kt)(w,{title:"Using Unreal Visual Dataprep",href:"https://docs.unrealengine.com/WorkingWithContent/Importing/Dataprep/",description:"Unreal's documentation on Visual Dataprep",isExternal:!0,mdxType:"ResourceTile"}))))}f.isMDXComponent=!0;var b=function(){return[{id:"introduction",level:2,title:"Introduction",children:[]},{id:"prerequisites",level:2,title:"Prerequisites",children:[]},{id:"1-import-your-datasmith-content-into-a-new-dataprep-recipe",level:2,title:"1. Import your Datasmith content into a new Dataprep recipe",children:[]},{id:"2-substitute-a-material",level:2,title:"2. Substitute a material",children:[]},{id:"3-substituting-materials-with-a-table",level:2,title:"3. Substituting materials with a table",children:[]},{id:"more-resources-that-you-may-like",level:2,title:"More resources that you may like",children:[]}]}},73530:function(e,t,a){"use strict";a.r(t);var i=a(3905),n=a(1176),r=a(58822),o=a(55010),s=(a(67294),a(80989)),l=a(85893);a(14473),t.default=function(){var e={headline:o.Pu.title,navigationItems:(0,o.Jt)(),tutorialSteps:(0,l.jsx)("div",{className:"disable-actions-section",children:(0,l.jsx)(i.Zo,{components:r.d,children:(0,l.jsx)(o.ZP,{})})})};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.d,{title:"".concat(o.Pu.title," | iTwin for Game Engines")}),(0,l.jsx)(n.Z,{tutorial:e})]})}},12370:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tutorials/itwin-unreal-dataprep",function(){return a(73530)}])}},function(e){e.O(0,[3714,8670,9734,9102,8764,1706,4009,1610,6638,9774,2888,179],(function(){return t=12370,e(e.s=t);var t}));var t=e.O();_N_E=t}]);