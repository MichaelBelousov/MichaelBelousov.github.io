(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7833],{33846:function(e,t,n){"use strict";n.d(t,{Jt:function(){return S},Pu:function(){return l},ZP:function(){return N}});var i=n(36864),o=n(4730),a=n(67294),r=n(3905),s=["components"],l=(a.createElement,{title:"Synchronize a file from Azure Blob Storage",tile:{name:"Synchronize a file from Azure Blob Storage",description:"Walk-through how to synchronize a file from Azure Blob Storage to an iModel using Synchronization API.",thumbnail:"/unreal-docs-site/static/images/synchronizationThumbnail.png",href:"/tutorials/synchronization-blob-tutorial/",durationInMinutes:30,relatedApiIds:["synchronization","imodels"]}}),c=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)}},d=c("Introduction"),u=c("TutorialSection"),p=c("CreateServiceAppButton"),m=c("Title"),h=c("HttpSample"),k=c("CodeBlock"),y=c("ContinueLearningSection"),f=c("TileList"),g=c("Tile"),T=c("ResourceTile"),b={metadata:l};function N(e){var t=e.components,n=(0,o.Z)(e,s);return(0,r.kt)("wrapper",(0,i.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(d,{skillLevel:"Basic",durationInMinutes:"30",mdxType:"Introduction"},(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"This tutorial guides you through synchronizing a file from Azure Blob Storage to an iModel using the Synchronization API. The Synchronization API works in an iTwin and iModel context. To synchronize a set of files, create a connection between the iModel and files. A Connection is an aggregation of properties such as file metadata, which is needed for synchronization. You can run Connections on-demand converting the specified file to an iModel.")),(0,r.kt)(u,{actions:function(e){return[(0,r.kt)(p,{tooltip:"Register a service application for this tutorial",allowedScopes:["synchronization:read","synchronization:modify","imodels:read","imodels:modify"],clientName:"Synchronization tutorial client",mdxType:"CreateServiceAppButton"},"Register")]},mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"1-register-a-service-application"},"1. Register a Service Application"),(0,r.kt)("p",null,"To start the tutorial you will need to register an application to be able to use iTwin Platform APIs.\nTo make your tutorial more interactive please use the ",(0,r.kt)("strong",{parentName:"p"},"Register Application")," button."),(0,r.kt)("p",null,"After you click this button it will register a client and will display these settings."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"client_id"),": the unique identifier for your application. It is displayed on the application details page as ",(0,r.kt)("strong",{parentName:"li"},"Client ID"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"client_secret"),": the secret created and displayed when you created the application."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"scope"),": a list of accesses granted to the application. Displayed on the application details page as ",(0,r.kt)("strong",{parentName:"li"},"Scopes"),"."))),(0,r.kt)(u,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"2-get-access-token"},"2. Get Access Token"),(0,r.kt)("p",null,"In this tutorial, we are using the Client credentials authentication workflow. This workflow allows a web service (confidential client) to use its own credentials instead of impersonating a user to authenticate when calling a web service. Permissions are granted directly to the application itself by an administrator. When the App presents a token to a resource, the resource ensures the App is authorized to perform the action since there is no user involved in the authentication.")),(0,r.kt)(u,{subSection:!0,actions:function(e){var t,n,i;return[(0,r.kt)(m,{mdxType:"Title"},"Request to Token endpoint"),(0,r.kt)(h,{method:"POST",url:"".concat(e.authority,"/connect/token"),headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({client_id:null!==(t=e.clientId)&&void 0!==t?t:"CLIENT_ID",client_secret:null!==(n=e.clientSecret)&&void 0!==n?n:"CLIENT_SECRET",scope:null!==(i=e.scope)&&void 0!==i?i:"synchronization:read synchronization:modify imodels:read imodels:modify",grant_type:"client_credentials"}).toString(),saveResponseTo:"tokenResponse",canSendRequest:e.clientId&&e.clientSecret&&e.scope,tooltip:"Send a request to get an access token",mdxType:"HttpSample"})]},mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"request-to-token-endpoint"},"Request to Token endpoint"),(0,r.kt)("p",null,"Call the token endpoint with the ",(0,r.kt)("inlineCode",{parentName:"p"},"'Content-Type': 'application/x-www-form-urlencoded'")," header."),(0,r.kt)("p",null,"Request body (with ",(0,r.kt)("a",{parentName:"p",href:"https://www.w3schools.com/tags/ref_urlencode.ASP"},"url encoded")," characters):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"client_id"),": the unique identifier generated when creating the application; you can find it on the ",(0,r.kt)("a",{parentName:"li",href:"/my-apps"},"My Apps")," page. The ",(0,r.kt)("strong",{parentName:"li"},"client_id")," is displayed in the last step if the App was created during this tutorial."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"client_secret"),": the secret created and displayed when you created the application."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"scope"),": space separated scopes (in this tutorial: ",(0,r.kt)("inlineCode",{parentName:"li"},"synchronization:read synchronization:modify imodels:read imodels:modify"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"grant_type"),": ",(0,r.kt)("strong",{parentName:"li"},"client_credentials")," it indicates a authorization flow for service-to-service communication."))),(0,r.kt)(u,{subSection:!0,actions:function(e){return[(0,r.kt)(m,{mdxType:"Title"},"Response from the Token endpoint"),(0,r.kt)(k,{language:"json",code:JSON.stringify(e.tokenResponse||{access_token:"JWT_TOKEN",token_type:"Bearer",expires_in:3599},void 0,2),mdxType:"CodeBlock"})]},mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"response"},"Response"),(0,r.kt)("p",null,"Response contains:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"token_type"),": ",(0,r.kt)("strong",{parentName:"li"},"Bearer")," - part of Authorization header that is constructed like ",(0,r.kt)("inlineCode",{parentName:"li"},"Authorize: token_type access_token"),". For more information, see ",(0,r.kt)("a",{parentName:"li",href:"https://www.oauth.com/oauth2-servers/differences-between-oauth-1-2/bearer-tokens/"},"Difference between OAuth 1.0 and OAuth 2.0"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"access_token"),": access token itself (in ",(0,r.kt)("a",{parentName:"li",href:"https://jwt.io"},"JWT")," format) that will be passed into ",(0,r.kt)("strong",{parentName:"li"},"Authorize")," header for api calls as ",(0,r.kt)("strong",{parentName:"li"},"Bearer JWT_TOKEN"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"expires_in"),": lifespan of access token in seconds."))),(0,r.kt)(u,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"3-create-an-imodel"},"3. Create an iModel"),(0,r.kt)("p",null,"An iModel is a specialized information container for exchanging data associated with the lifecycle of infrastructure assets.\niModels were created to facilitate the sharing and distribution of information regardless of the source and format of the information."),(0,r.kt)("p",null,"The iTwin Platform iModels API is based on iModelHub cloud service which enables alignment, accountability, and accessibility of infrastructure digital twins.\nIt is the control center for iModels and is responsible for coordinating concurrent access to iModels as well as changes made to them.")),(0,r.kt)(u,{subSection:!0,actions:[(0,r.kt)(k,{language:"http",code:"POST https://api.bentley.com/imodels HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"request"},"Request"),(0,r.kt)("p",null,"An empty iModel is created by sending a HTTP POST message to ",(0,r.kt)("a",{parentName:"p",href:"https://api.bentley.com/imodels/"},"https://api.bentley.com/imodels/")," endpoint with the payload describing the iModel to be created.")),(0,r.kt)(u,{subSection:!0,actions:[(0,r.kt)(k,{language:"json",code:'{\n      "iTwinId": "ITWIN_ID",\n      "name": "Sun City Renewable-energy Plant",\n      "description": "Overall model of solar farms in Sun City",\n      "extent": {\n          "southWest": {\n            "latitude": 46.13267702834806,\n            "longitude": 7.672120009938448\n          },\n          "northEast": {\n            "latitude": 46.302763954781234,\n            "longitude": 7.835541640797823\n          }\n        }\n    }',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"request-body"},"Request Body"),(0,r.kt)("p",null,"There are two required properties for the create iModel payload."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"name")," - iModel name is required which uniquely identifies the iModel within the iTwin. ",(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"iTwinId")," - provides the iTwin identifier that created iModel will belong to. The iTwin identifier is a required property. ",(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"description")," - free form text field so you could give more information about the iModel. ",(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"extent")," - iModels usually are placed at some location on the Earth.\nThis property allows to specify the maximum rectangular area on the Earth which encloses the iModel.\nThe maximum extent is used to help keep your iModel clean.\nWhen new elements are imported, those outside the extent will be flagged for further processing.\nThis extent will also help to zoom to the area of interest in web viewers.")),(0,r.kt)(u,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"4-get-a-blob-sas-url"},"4. Get a Blob SAS Url"),(0,r.kt)("p",null,"This tutorial shows how to synchronize a file stored on Azure blob storage. Files from Azure blob storage can be accessed through preauthenticated SAS urls."),(0,r.kt)("p",null,"There are two ways to get a SAS url:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/azure/cognitive-services/translator/document-translation/create-sas-tokens?tabs=blobs"},"Create a SAS url for blob manually")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/azure/storage/blobs/sas-service-create?tabs=dotnet"},"Create a SAS url for blob programatically")))),(0,r.kt)(u,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"5-create-a-connection"},"5. Create a Connection"),(0,r.kt)("p",null,"The synchronization process is based on connections that establish links from design files to iModels. There can be multiple connections for an iModel, and those can be executed on-demand multiple times to synchronize changes. In this step, we will be creating such a connection.")),(0,r.kt)(u,{subSection:!0,actions:[(0,r.kt)(k,{language:"http",code:"POST\xa0https://api.bentley.com/synchronization/imodels/manifestConnections HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"request-1"},"Request"),(0,r.kt)("p",null,"To create a connection, send a ",(0,r.kt)("inlineCode",{parentName:"p"},"POST")," request to the ",(0,r.kt)("inlineCode",{parentName:"p"},"synchronization/imodels/manifestConnections")," endpoint."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Authorization\xa0header with valid Bearer token is required."),(0,r.kt)("li",{parentName:"ul"},"IMODEL_ID of created iModel from step 3."),(0,r.kt)("li",{parentName:"ul"},"FILE_ID is used to uniquelly identify a file in an imodel. Synchronizing same file again same file id should be provided."))),(0,r.kt)(u,{subSection:!0,actions:[(0,r.kt)(k,{language:"json",code:'{\n    "displayName": "Connection1",\n    "iModelId": "IMODEL_ID",\n    "sourceFiles": [{\n        "sourceFileId": "FILE_ID"\n    }],\n    "authenticationType": "Service"\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"request-body-1"},"Request Body"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"displayName")," - user facing connection name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"iModelId"),": - id of the iModel that contains the connection"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"sourceFiles")," - information about the source files",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"sourceFileId")," - id of the file from the external document management system"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"authenticationType")," - set the property to ",(0,r.kt)("strong",{parentName:"li"},"Service")," to use the API from server application without user context."))),(0,r.kt)(u,{subSection:!0,actions:[(0,r.kt)(k,{language:"json",code:'{\n      "connection": {\n          "iModelId": "IMODEL_ID",\n          "iTwinId": "ITWIN_ID",\n          "authenticationType": "Service",\n          "_links": {\n              "iModel": {\n                  "href": "https://api.bentley.com/imodels/IMODEL_ID"\n              },\n              "iTwin": {\n                  "href": "https://api.bentley.com/itwins/ITWIN_ID"\n              },\n              "lastRun": null\n          },\n          "id": "CONNECTION_ID",\n          "displayName": "Connection to a file"\n      }\n    }',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"response-1"},"Response"),(0,r.kt)("p",null,"Note the Id as you will need it in the next step.")),(0,r.kt)(u,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"6-run-a-connection"},"6. Run a Connection"),(0,r.kt)("p",null,"A Run defines a single connection synchronization process. It can be initialized manually by sending a run start request.")),(0,r.kt)(u,{subSection:!0,actions:[(0,r.kt)(k,{language:"http",code:"POST\xa0https://api.bentley.com/synchronization/imodels/manifestConnections/CONNECTION_ID/runs HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"request-2"},"Request"),(0,r.kt)("p",null,"Send a ",(0,r.kt)("inlineCode",{parentName:"p"},"POST")," request to the ",(0,r.kt)("inlineCode",{parentName:"p"},"synchronization/imodels/manifestConnections/{connectionId}/runs"),"\xa0endpoint with a valid connection ID to run a connection."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Authorization\xa0header with valid Bearer token is required."),(0,r.kt)("li",{parentName:"ul"},"CONNECTION_ID which should be started for processing. Use the value from previous step response."))),(0,r.kt)(u,{subSection:!0,actions:[(0,r.kt)(k,{language:"json",code:'{\n        "sourceFiles": [{\n        "id": "FILE_ID",\n        "name": "FileName.dgn",\n        "url": "https://myaccount.blob.core.windows.net/files/FileName.dgn?sv=2012-02-12&st=2009-02-09&se=2009-02-10&sr=c&sp=r&si=YWJjZGVmZw%3d%3d&sig=dD80ihBh5jfNpymO5Hg1IdiJIEvHcJpCMiCMnN%2fRnbI%3d",\n        "connector": "MSTN",\n        "documentAttribute ":{\n          "className":"SchemaName:ClassName",\n            "properties":{\n               "Revision":"R01",\n               "Suitability":"S01",\n               "CodeValue":"89c7f032-6dfb-4a0b-8511-983e2d18728a"\n            }\n        }\n    }]\n        "documentAttributeSchemaUrl":""https://blobstoragelocation/documentAttributeSchema.json""\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"request-body-2"},"Request Body"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"sourceFiles")," - information about source files"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"id")," - id of the file from external document management system"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"name")," - name of a file"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"url")," - valid blob SAS url with read permissions"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"connector")," - identifier of the connector used to process the file. For more information, see ",(0,r.kt)("a",{parentName:"li",href:"/apis/synchronization/supported-formats/"},"Supported formats."))),(0,r.kt)("h3",{parentName:"li",id:"optional-properties"},"Optional Properties"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"documentAttribute")," - A document attribute consists of the following:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"- className - Defines the ECClass in the schema to be used for the associated document. Classes are derived from published BIS schema named documentMetadataClass. The JSON schema for the document metadata is available here (https://cdn.jsdelivr.net/npm/@bentley/document-metadata-schema@1.0.0/DocumentMetadata.ecschema.json)\n- properties - Defines the properties to be set for the associated document. These properties are derived from the above mentioned Class.\n"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"documentAttributeSchemaUrl")," - URL contains a JSON file that has document attribute schema as defined in iTwin.js. For more details on ECSchema please see the iTwin.js documentation (",(0,r.kt)("a",{parentName:"p",href:"https://www.itwinjs.org/v1/bis/ec/ec-schema/"},"https://www.itwinjs.org/v1/bis/ec/ec-schema/"),"). This schema is typically created by the user or a program. A manifest connection passes this information to the connector which will use this schema to store document attributes inside the iModel.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Additional note")," - The schema generation happens as a separate process. Once generated the user stores the schema at a BLOB storage location. This API does not support the generation of the schema, but uses it to support the properties user wants to pass during a connection run.")))),(0,r.kt)(u,{subSection:!0,actions:[(0,r.kt)(k,{language:"json",code:'{\n  "$schema": "https://dev.bentley.com/json_schemas/ec/32/ecschema",\n  "name": "BridgeSpatial",\n  "version": "01.00.00",\n  "alias": "brsp",\n  "description": "Schema modeling the spatial breakdown of Bridges.",\n  "references": [\n    {\n      "name": "CoreCustomAttributes",\n      "version": "01.00.03"\n    },\n    {\n      "name": "BisCore",\n      "version": "01.00.13"\n    },\n    {\n      "name": "SpatialComposition",\n      "version": "01.00.01"\n    },\n    {\n      "name": "LinearReferencing",\n      "version": "02.00.03"\n    }\n  ],\n  "customAttributes": [\n    {\n      "className": "CoreCustomAttributes.ProductionStatus",\n      "SupportedUse": "NotForProduction"\n    }\n  ],\n  "items": {\n    "Bridge": {\n      "schemaItemType": "EntityClass",\n      "label": "Bridge",\n      "description": "TODO",\n      "baseClass": "SpatialComposition.Facility",\n      "mixins": [\n        "LinearReferencing.ILinearLocationElement"\n      ]\n    },\n\t\t"Substructure": {\n\t\t\t"schemaItemType": "EntityClass",\n\t\t\t"label": "SubStructure",\n\t\t\t"description": "TODO",\n\t\t\t"baseClass": "SpatialComposition.FacilityPart"\n\t\t},\n\t\t"Superstructure": {\n\t\t\t"schemaItemType": "EntityClass",\n\t\t\t"label": "SuperStructure",\n\t\t\t"description": "TODO",\n\t\t\t"baseClass": "SpatialComposition.FacilityPart"\n\t\t},\n\t\t"Deck": {\n\t\t\t"schemaItemType": "EntityClass",\n\t\t\t"label": "Deck",\n\t\t\t"description": "TODO",\n\t\t\t"baseClass": "SpatialComposition.FacilityPart"\n\t\t},\n\t\t"Pier": {\n\t\t\t"schemaItemType": "EntityClass",\n\t\t\t"label": "Pier",\n\t\t\t"description": "TODO",\n\t\t\t"baseClass": "SpatialComposition.FacilityPart"\n\t\t},\n\t\t"Abutment": {\n\t\t\t"schemaItemType": "EntityClass",\n\t\t\t"label": "Abutment",\n\t\t\t"description": "TODO",\n\t\t\t"baseClass": "SpatialComposition.FacilityPart"\n\t\t}\n\t}\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Schema generation")," Schema can be generated or edit schemas using ",(0,r.kt)("a",{parentName:"li",href:"https://imodelschemaeditor.bentley.com/?"},"schema editor tool"),". This URL can be updated to include the projectId and iModelId query parameters such as ",(0,r.kt)("a",{parentName:"li",href:"https://imodelschemaeditor.bentley.com/?"},"schema-editor-tool-url"),"projectid=ProjectId&imodelid=iModelId. Following is an example of schema JSON file referenced by the documentAttributeSchemaUrl property."))),(0,r.kt)(u,{subSection:!0,actions:[(0,r.kt)(k,{language:"http",code:"HTTP/1.1 202 Accepted",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"response-2"},"Response"),(0,r.kt)("p",null,"On a successful request, the operation returns http status code 202/accepted - the request is accepted for processing and will be executed in the background.\nIf there is an active run in progress for this connection, a new run is added to the queue. The response includes a location header pointing to the created run.")),(0,r.kt)(u,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"7-get-runs-statuses"},"7. Get runs statuses"),(0,r.kt)("p",null,"A run contains the synchronization process status. To track a run and associated status, make a GET request to a link from previous request response location header.")),(0,r.kt)(u,{subSection:!0,actions:[(0,r.kt)(k,{language:"http",code:"GET\xa0https://api.bentley.com/synchronization/imodels/manifestConnections/CONNECTION_ID/runs/RUN_ID HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"request-3"},"Request"),(0,r.kt)("p",null,"To get the status of the Run, send a GET request to the synchronization/imodels/manifestConnections/{connectionId}/runs/{runId}\xa0endpoint with a valid connection and run Id. For convenience take a link from previous request response location header."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Authorization\xa0header with valid Bearer token is required."),(0,r.kt)("li",{parentName:"ul"},"CONNECTION_ID of the run we want to get."),(0,r.kt)("li",{parentName:"ul"},"RUN_ID of the run we want to get."))),(0,r.kt)(u,{subSection:!0,actions:[(0,r.kt)(k,{language:"json",code:'{\n    "run": {\n        "id": "RUN_ID",\n        "startDateTime": "02/15/2022 08:24:45",\n        "endDateTime": "02/15/2022 08:26:50",\n        "phase": "MasterFile",\n        "jobs": [\n            {\n                "id": "JOB_ID",\n                "startDateTime": "02/15/2022 08:25:58",\n                "endDateTime": "02/15/2022 08:26:28",\n                "state": "Completed",\n                "result": "Success",\n                "connectorType": "MSTN",\n                "tasks": [\n                    {\n                        "id": "TASK_ID",\n                        "startDateTime": "02/15/2022 08:25:58",\n                        "endDateTime": "02/15/2022 08:26:28",\n                        "retryAttempts": 0,\n                        "state": "Completed",\n                        "result": "Success",\n                        "error": null\n                    }\n                ]\n            }\n        ],\n        "state": "Completed",\n        "result": "Success"\n    }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"response-3"},"Response"),(0,r.kt)("p",null,"At the end of synchronization, the run state should be \u201cCompleted\u201d and result \u201cSuccess\u201d.")),(0,r.kt)(u,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"8-synchronize-an-updated-file"},"8. Synchronize an updated file"),(0,r.kt)("p",null,"If a file is changed on Azure Blob Storage, it has to be synchronized again for the iModel to be updated. The workflow should be:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"File is updated on Azure Blob Storage."),(0,r.kt)("li",{parentName:"ol"},"Run the connection again. (See step 6)"),(0,r.kt)("li",{parentName:"ol"},"Get connection run status. (See step 7)"))),(0,r.kt)(u,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"9-conclusion"},"9. Conclusion"),(0,r.kt)("p",null,"In this tutorial we have gone through a file from Azure Blob Storage synchronization process:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create an empty iModel"),(0,r.kt)("li",{parentName:"ul"},"Create a connection"),(0,r.kt)("li",{parentName:"ul"},"Run the connection"),(0,r.kt)("li",{parentName:"ul"},"Get run status.")),(0,r.kt)("p",null,"After a successful run, the iModel now contains the design file changes.")),(0,r.kt)(y,{mdxType:"ContinueLearningSection"},(0,r.kt)("h2",{id:"continue-learning"},"Continue learning"),(0,r.kt)("p",null,"Congratulations for the completion of your first synchronization! You\u2019ve now know a lot on the subject, but there\u2019s still possibilities to learn more to unleash the platform capabilities."),(0,r.kt)(f,{mdxType:"TileList"},(0,r.kt)(g,{name:"Create iModel Named Version",description:"This quick start is intended to guide you through the steps to create a new iModel Named Version.",href:"/tutorials/create-named-version",mdxType:"Tile"}),(0,r.kt)(g,{name:"Synchronization Configuration API",description:"This tutorial guides you through synchronizing a file using different configurations with the Synchronization API.",href:"/tutorials/synchronization-configurations-api-tutorial",mdxType:"Tile"})),(0,r.kt)("h2",{id:"more-resources-that-you-may-like"},"More resources that you may like"),(0,r.kt)(f,{mdxType:"TileList"},(0,r.kt)(T,{title:"Synchronization API documentation",href:"/api-groups/synchronization",description:"An overview and detailed Synchronization API documentation.",mdxType:"ResourceTile"}),(0,r.kt)(T,{title:"Synchronization API code sample",href:"https://github.com/iTwin/synchronization-api-sample-app",description:"A working code sample showing how Synchronization API can be integrated into a React application.",isExternal:!0,mdxType:"ResourceTile"}),(0,r.kt)(T,{title:"Data Management API documentation",href:"/api-groups/data-management/",description:"An overview and detailed Data Management API documentation.",mdxType:"ResourceTile"}))))}N.isMDXComponent=!0;var S=function(){return[{id:"introduction",level:2,title:"Introduction",children:[]},{id:"1-register-a-service-application",level:2,title:"1. Register a Service Application",children:[]},{id:"2-get-access-token",level:2,title:"2. Get Access Token",children:[]},{id:"3-create-an-imodel",level:2,title:"3. Create an iModel",children:[]},{id:"4-get-a-blob-sas-url",level:2,title:"4. Get a Blob SAS Url",children:[]},{id:"5-create-a-connection",level:2,title:"5. Create a Connection",children:[]},{id:"6-run-a-connection",level:2,title:"6. Run a Connection",children:[]},{id:"7-get-runs-statuses",level:2,title:"7. Get runs statuses",children:[]},{id:"8-synchronize-an-updated-file",level:2,title:"8. Synchronize an updated file",children:[]},{id:"9-conclusion",level:2,title:"9. Conclusion",children:[]},{id:"continue-learning",level:2,title:"Continue learning",children:[]},{id:"more-resources-that-you-may-like",level:2,title:"More resources that you may like",children:[]}]}},31928:function(e,t,n){"use strict";n.r(t);var i=n(3905),o=n(1176),a=n(58822),r=n(33846),s=(n(67294),n(80989)),l=n(85893);n(14473),t.default=function(){var e={headline:r.Pu.title,navigationItems:(0,r.Jt)(),tutorialSteps:(0,l.jsx)(i.Zo,{components:a.d,children:(0,l.jsx)(r.ZP,{})})};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.d,{title:"".concat(r.Pu.title," - Tutorials | iTwin Platform")}),(0,l.jsx)(o.Z,{tutorial:e})]})}},86925:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tutorials/synchronization-blob-tutorial",function(){return n(31928)}])}},function(e){e.O(0,[3714,8670,9734,9102,8764,1706,4009,1610,6638,9774,2888,179],(function(){return t=86925,e(e.s=t);var t}));var t=e.O();_N_E=t}]);