(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5343],{12888:function(e,t,n){"use strict";n.d(t,{Jt:function(){return S},Pu:function(){return l},ZP:function(){return N}});var o=n(36864),a=n(4730),i=n(67294),r=n(3905),s=["components"],l=(i.createElement,{title:"React to events using Webhooks V2 API",tile:{name:"React to events using Webhooks V2 API",description:"This tutorial will teach you how to use Webhooks API to subscribe to iModel events and introduce basic event handling workflows.",href:"/tutorials/react-to-events-using-webhooks-v2/",durationInMinutes:45,relatedApiIds:["webhooks"]}}),d=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)}},p=d("Introduction"),c=d("TutorialSection"),u=d("LinkButton"),h=d("NodeJsIcon"),k=d("GitIcon"),m=d("VSCodeIcon"),y=d("PostmanIcon"),g=d("Title"),v=d("CodeBlock"),w=d("Alert"),b=d("ContinueLearningSection"),f=d("TileList"),T=d("ResourceTile"),x={metadata:l};function N(e){var t=e.components,n=(0,a.Z)(e,s);return(0,r.kt)("wrapper",(0,o.Z)({},x,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(p,{skillLevel:"Intermediate",durationInMinutes:"45",mdxType:"Introduction"},(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"In this tutorial, you will learn how to use the Webhooks V2 API to create and manage your webhooks. Also you will learn how to validate the webhook signature and process received event messages in your application.")),(0,r.kt)(c,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"This tutorial assumes that you already have:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Basic knowledge on ",(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Webhook"},"webhooks")," and how they work."),(0,r.kt)("li",{parentName:"ul"},"Knowledge on web application deployment or experience using ",(0,r.kt)("a",{parentName:"li",href:"https://www.heroku.com/about"},"Heroku"),"/",(0,r.kt)("a",{parentName:"li",href:"https://www.netlify.com/"},"Netlify"),"."),(0,r.kt)("li",{parentName:"ul"},"Already registered your own Service Application on the iTwin Platform.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Steps to follow for registering an Service Application can be found ",(0,r.kt)("a",{parentName:"li",href:"/tutorials/authorize-service/"},"here"),"."),(0,r.kt)("li",{parentName:"ul"},"Make sure that your Service Application is associated with ",(0,r.kt)("strong",{parentName:"li"},"Webhooks API")," and has ",(0,r.kt)("inlineCode",{parentName:"li"},"webhooks:read")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"webhooks:modify")," scopes enabled."),(0,r.kt)("li",{parentName:"ul"},"The Webhooks API V2 can only be called by Service Applications."))))),(0,r.kt)(c,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"1-set-up-your-environment"},"1. Set up your environment")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(u,{href:"https://nodejs.org",target:"_blank",title:"Node.js",icon:(0,r.kt)(h,{mdxType:"NodeJsIcon"}),mdxType:"LinkButton"}),(0,r.kt)(u,{href:"https://git-scm.com/downloads",target:"_blank",title:"Git",icon:(0,r.kt)(k,{mdxType:"GitIcon"}),mdxType:"LinkButton"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"11-required-materials"},"1.1 Required materials"),(0,r.kt)("h5",{id:"a-hrefhttpsnodejsorg-target_blanknodejs-14x-lts-versiona"},(0,r.kt)("a",{href:"https://nodejs.org",target:"_blank"},"Node.js (14.x LTS version)")),(0,r.kt)("p",null,"This tool provides the backend JavaScript runtime necessary for your computer to read and render code appropriately. It also allows you to run NPM command line."),(0,r.kt)("h5",{id:"a-hrefhttpsgit-scmcomdownloads-target_blankgita"},(0,r.kt)("a",{href:"https://git-scm.com/downloads",target:"_blank"},"Git")),(0,r.kt)("p",null,"This is the common source code control system.")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(u,{href:"https://code.visualstudio.com/",target:"_blank",title:"VS Code",icon:(0,r.kt)(m,{mdxType:"VSCodeIcon"}),mdxType:"LinkButton"}),(0,r.kt)(u,{href:"https://www.postman.com/downloads/",target:"_blank",title:"Postman",icon:(0,r.kt)(y,{mdxType:"PostmanIcon"}),mdxType:"LinkButton"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"12-suggested-materials"},"1.2 Suggested materials"),(0,r.kt)("h5",{id:"a-hrefhttpscodevisualstudiocom-target_blankvisual-studio-codea"},(0,r.kt)("a",{href:"https://code.visualstudio.com/",target:"_blank"},"Visual Studio Code")),(0,r.kt)("p",null,"This is our recommended editor and debugger tool for developing iTwin.js applications. It is free, open source and includes a GUI for working with GIT."),(0,r.kt)("h5",{id:"a-hrefhttpswwwpostmancomdownloads-target_blankpostmana"},(0,r.kt)("a",{href:"https://www.postman.com/downloads/",target:"_blank"},"Postman")),(0,r.kt)("p",null,"If you want to test the REST API calls directly, you can use ",(0,r.kt)("a",{parentName:"p",href:"https://www.postman.com/downloads/"},"Postman")," or any other solution capable of sending HTTP requests. If you do it this way, you will require an authorization token for the requests to work."),(0,r.kt)("h5",{id:"a-hrefhttpssignupherokucom-target_blankheroku-accounta"},(0,r.kt)("a",{href:"https://signup.heroku.com/",target:"_blank"},"Heroku account")),(0,r.kt)("p",null,"Heroku will be used to deploy the test application during this tutorial.")),(0,r.kt)(c,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"2-create-your-application"},"2. Create your application"),(0,r.kt)("p",null,"Since webhooks are sending the events via HTTP requests you need to have an application running that exposes a public HTTP endpoint - callback URL. In this tutorial we are going to use ",(0,r.kt)("a",{parentName:"p",href:"https://nodejs.org/en"},"Node.js")," together with ",(0,r.kt)("a",{parentName:"p",href:"https://expressjs.com/"},"Express")," for test application.")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(g,{mdxType:"Title"},"Project initialization"),(0,r.kt)(v,{language:"bash",code:"cd your-project\nnpm init -y\nnpm install express\nnpm install -D typescript @types/express\ntsc --init",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"tsconfig.json"),(0,r.kt)(v,{language:"json",code:'"outDir":"dist"',mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"package.json"),(0,r.kt)(v,{language:"json",code:'"main":"dist/index.js"',mdxType:"CodeBlock"}),(0,r.kt)(v,{language:"json",code:'"scripts":{\n  "start":"tsc && node dist/index.js"\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"21-initialize-the-project"},"2.1 Initialize the project"),(0,r.kt)("p",null,"To start off, create new directory for your application and execute the following initialization commands. These commands will initialize new npm project, install required dependencies and configure typescript. After initialization, update freshly generated ",(0,r.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," file by setting ",(0,r.kt)("inlineCode",{parentName:"p"},"outDir")," property to ",(0,r.kt)("inlineCode",{parentName:"p"},'"dist"'),". Next step will be updating ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json")," file to update the application entry point and ",(0,r.kt)("inlineCode",{parentName:"p"},"start")," script. After that is done, the project is ready for the next step."),(0,r.kt)(w,{type:"informational",mdxType:"Alert"},'If you are running into "tsc is not recognized" problems, try installing typescript globally "npm install typescript -g".')),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(g,{mdxType:"Title"},"src/index.ts"),(0,r.kt)(v,{language:"typescript",code:'import express from "express";\n\nconst app = express();\napp.use(express.text({ type: "application/json" }));\n\napp.post("/events", () => {\n  // Handle the event\n});\n\nconst port = 5000;\napp.listen(port, () => {\n  console.log("Application was started.");\n});',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"22-create-express-server"},"2.2 Create express server"),(0,r.kt)("p",null,"Now let\u2019s start implementing the application. At first, create a new file in your project directory ",(0,r.kt)("inlineCode",{parentName:"p"},"src/index.ts"),". This is going to be the application starting point. From example on the side you can see that we are going to have a public HTTP endpoint that will be accepting POST requests ",(0,r.kt)("inlineCode",{parentName:"p"},'app.post("/events", () => {})'),". This is because event messages are sent using POST method. Note that above there is a line ",(0,r.kt)("inlineCode",{parentName:"p"},'app.use(express.text({ type: "application/json" }))')," that makes the server treat the requests with json content as text and not deserialize them initially because raw payload will be required for event authorization in one of the upcoming steps.")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(g,{mdxType:"Title"},"src/index.ts"),(0,r.kt)(v,{language:"typescript",code:'import crypto from "crypto";',mdxType:"CodeBlock"}),(0,r.kt)(v,{language:"typescript",code:'function validateSignature(payload: string, signatureHeader: string): boolean {\n  // Replace with your own webhook secret later\n  const secret = "4eb25d308ef2a9722ffbd7a2b7e5026f9d1f2feaca5999611d4ef8692b1ad70d";\n\n  const [algorithm, signature] = signatureHeader.split("=");\n  const generated_sig = crypto.createHmac(algorithm, secret).update(payload, "utf-8").digest("hex");\n\n  return generated_sig.toLowerCase() === signature.toLowerCase();\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"23-add-event-authorization"},"2.3 Add event authorization"),(0,r.kt)("p",null,"In order to authorize the event source, we need to add event signature validation. Event signature is ",(0,r.kt)("inlineCode",{parentName:"p"},"HMAC-SHA256")," string that is included in the request ",(0,r.kt)("inlineCode",{parentName:"p"},"Signature")," header. For validation we will be using Node.js ",(0,r.kt)("inlineCode",{parentName:"p"},"crypto")," utility which basically lets us to generate the same type of signature in our end. Generated signature and the signature included in the request should match to pass the authorization. Let\u2019s start adding validation by creating a new function ",(0,r.kt)("inlineCode",{parentName:"p"},"function validateSignature(payload: string, signatureHeader: string)"),". As a first parameter it will to expect raw request payload and as a second parameter it will expect signature header value. This function will also need the webhook ",(0,r.kt)("inlineCode",{parentName:"p"},"secret")," which we are going to add later on we create a webhook. Since, the signature header value also contains the cryptographic algorithm name and the signature value separated by ",(0,r.kt)("inlineCode",{parentName:"p"},"="),", we need to extract these values into separate variables ",(0,r.kt)("inlineCode",{parentName:"p"},'const [algorithm, signature] = signatureHeader.split("=")'),". Then at this point, using all the existing variables we can generate a signature ",(0,r.kt)("inlineCode",{parentName:"p"},'crypto.createHmac(algorithm, secret).update(payload, "utf-8").digest("hex")'),". Lastly, we need to check if both signatures match and return the result.")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(g,{mdxType:"Title"},"src/models.ts"),(0,r.kt)(v,{language:"typescript",code:"export type Event = {\n  content: iModelDeletedEvent | NamedVersionCreatedEvent;\n  eventType: string;\n  enqueuedDateTime: string;\n  messageId: string;\n  webhookId: string;\n  iTwinId: string;\n};\n\nexport type iModelDeletedEvent = {\n  imodelId: string;\n  userId: string;\n};\n\nexport type MemberAddedEvent = {\n  memberId: string;\n  eventCreatedBy: string;\n  memberType: string;\n  roleId: string;\n  roleName: string;\n}",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"24-define-data-models"},"2.4 Define data models"),(0,r.kt)("p",null,"Before we can start receiving the events, we need to prepare the models for expected data. You can find the schema for the base event and all other available events ",(0,r.kt)("a",{parentName:"p",href:"/apis/webhooks-v2/events"},"here"),". Create a new file ",(0,r.kt)("inlineCode",{parentName:"p"},"src/models.ts")," and create event types by matching the schema. For this example we will create two event types, ",(0,r.kt)("inlineCode",{parentName:"p"},"iModels.iModelDeleted.v1")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"accessControl.memberAdded.v1"))),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(g,{mdxType:"Title"},"src/index.ts"),(0,r.kt)(v,{language:"typescript",code:'import { Event, NamedVersionCreatedEvent } from "./models";',mdxType:"CodeBlock"}),(0,r.kt)(v,{language:"typescript",code:'app.post("/events", (req, res) => {\n  const signatureHeader = req.headers["signature"] as string;\n  if (!signatureHeader || !req.body) res.sendStatus(401);\n\n  if (!validateSignature(req.body, signatureHeader)) {\n    res.sendStatus(401);\n  } else {\n    const event = JSON.parse(req.body) as Event;\n    switch (event.eventType) {\n      case "accessControl.memberAdded.v1": {\n        const content = event.content as MemberAddedEvent;\n        console.log(`Member (Id:${content.memberId}) was added to iTwin (${event.iTwinId})!  Member was granted the ${content.roleName} role (Id: ${content.roleId}).`);\n        break;\n      }\n      default:\n        res.sendStatus(400); //Unexpected event type\n    }\n  }\n  res.sendStatus(200);\n});',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"25-event-handling"},"2.5 Event handling"),(0,r.kt)("p",null,"Now that we have everything ready for event handling, we can start implementing it. First we want to validate the request you receive came from our Webhooks Service. You can do this be checking the signature header. If the request either does not contain a signature header or a request body, you can go ahead and return '401 Unauthorized\" ",(0,r.kt)("inlineCode",{parentName:"p"},"if (!signatureHeader || !req.body) res.sendStatus(401)"),". If request does have these components then we can proceed with further processing logic and try to validate the event signature using the function we defined in step 2.3 ",(0,r.kt)("inlineCode",{parentName:"p"},"if (!validateSignature(req.body, signatureHeader)) res.sendStatus(401)"),". If validation fails, we can assume that the event was sent from unexpected source and safely return ",(0,r.kt)("inlineCode",{parentName:"p"},"401 Unauthorized")," as well."),(0,r.kt)("p",null,"If we do not receive a response within 5 seconds we will count that request as failed and start the retry procedure. To avoid any inadvertent timeouts we suggest validating the request, putting any work you will be doing in reaction to the event on a seperate thread, and then return '200 Ok\u2019. More information about the retry procedure can be found ",(0,r.kt)("a",{parentName:"p",href:"/apis/webhooks-v2/overview/#RetryProcedure"},"here"),".")),(0,r.kt)(c,{subSection:!0,mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"26-deploy"},"2.6 Deploy"),(0,r.kt)("p",null,"For this application to work, you have to deploy it to be publicly accessible. If you have any preferences for the deployment, go ahead and use your own deployment method and platform. If not, you can keep following the tutorial and deploy the application using ",(0,r.kt)("a",{parentName:"p",href:"https://www.heroku.com/about"},"Heroku"),":"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create new Heroku application and empty Heroku Git repository ",(0,r.kt)("a",{parentName:"li",href:"https://devcenter.heroku.com/articles/git#for-a-new-heroku-app"},"https://devcenter.heroku.com/articles/git#for-a-new-heroku-app"),"."),(0,r.kt)("li",{parentName:"ol"},"Deploy by pushing the code ",(0,r.kt)("a",{parentName:"li",href:"https://devcenter.heroku.com/articles/git#deploying-code"},"https://devcenter.heroku.com/articles/git#deploying-code"),"."),(0,r.kt)("li",{parentName:"ol"},"Use ",(0,r.kt)("inlineCode",{parentName:"li"},"heroku logs --tail")," for monitoring the behavior of the application.")),(0,r.kt)("p",null,"Once you have the application deployed and running, we can move on to the webhook creation.")),(0,r.kt)(c,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"3-create-a-webhook"},"3. Create a webhook"),(0,r.kt)("p",null,"Webhooks allows you to subscribe to events happening in iTwin Platform. Webhooks are an easy way to automate workflows inside of the iTwin Platform.")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(g,{mdxType:"Title"},'Example HTTP request for "Create webhook" operation'),(0,r.kt)(v,{language:"http",code:"POST https://api.bentley.com/webhooks HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"31-request"},"3.1 Request"),(0,r.kt)("p",null,"A webhook for iModel events is created by sending a POST request to ",(0,r.kt)("a",{parentName:"p",href:"https://api.bentley.com/webhooks/"},"https://api.bentley.com/webhooks/"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"Authorization")," header with valid Bearer access token is required."),(0,r.kt)("p",null,"The Webhooks API V2 can only be called by Service Applications. This request requires an ",(0,r.kt)("inlineCode",{parentName:"p"},"Authorization")," header with a valid Bearer token with the ",(0,r.kt)("inlineCode",{parentName:"p"},"{scope}")," scope. For more information on Service Applications and how to obtain an access token can be found ",(0,r.kt)("a",{parentName:"p",href:"/tutorials/authorize-service/"},"here"),". A list of your Service Applications can be found ",(0,r.kt)("a",{parentName:"p",href:"/my-apps"},"here"),".")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(g,{mdxType:"Title"},"Example request body"),(0,r.kt)(v,{language:"json",code:'{  \n  "callbackUrl":"https://HOSTNAME/events",\n  "scope": "account",\n  "secret": "optional-32-character-value"\n  "eventTypes":[\n    "iModels.iModelDeleted.v1",\n    "accessControl.memberAdded.v1"\n  ]\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"32-request-body"},"3.2 Request body"),(0,r.kt)("p",null,"Webhook creation properties:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"callbackUrl")," - a public endpoint of your application where you expect the event to be sent."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"eventTypes")," - a list of event types you want to subscribe to. A full list can be found ",(0,r.kt)("a",{parentName:"li",href:"/apis/webhooks-v2/events"},"here")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"secret")," - (optional) At least 32 character string value. Used to validate the request to the callback url. If no value is given a secret will be generate and returned. For more information, see ",(0,r.kt)("a",{parentName:"li",href:"/apis/webhooks-v2/overview/#Webhooksecret"},"here"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"scope")," - Scope of the events that will be received. Only \u201cAccount\u201d is the accepted value.")),(0,r.kt)("p",null,"For more information see the ",(0,r.kt)("a",{parentName:"p",href:"/apis/webhooks/operations/create-webhook"},"documentation"),"."),(0,r.kt)(w,{type:"informational",mdxType:"Alert"},'Don\'t forget to replace the "HOSTNAME" placeholder value with your deployed application hostname.')),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(g,{mdxType:"Title"},"Example response result"),(0,r.kt)(v,{language:"json",code:'{\n  "webhook":{\n    "id": "00000000-0000-0000-0000-000000000000",\n    "scope": "Account",\n    "scopeId": "00000000-0000-0000-0000-000000000000",\n    "active": false,\n    "callbackUrl":"https://HOSTNAME/events",\n    "secret": "1de62d1611b20e00245c0db2b0805e9f60021b104702a3c227cf6e216f1f153b",\n    "eventTypes": [\n      "iModels.iModelDeleted.v1",\n      "accessControl.memberAdded.v1"\n    ]\n  }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"33-response"},"3.3 Response"),(0,r.kt)("p",null,"On the successful response you will get returned the webhook secret if you did not provided one in the request. We will be need it later to validate received events. You will need to store the secret in your application storage in order to prepare for receiving events, but for this tutorial just use it to replace the ",(0,r.kt)("inlineCode",{parentName:"p"},"const secret")," value in ",(0,r.kt)("inlineCode",{parentName:"p"},"function validateSignature")," from step 2.3."),(0,r.kt)(w,{type:"informational",mdxType:"Alert"},"Note that the webhook secret should not be shared with anyone and treated as a private key.")),(0,r.kt)(c,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"4-activate-a-webhook"},"4. Activate a webhook"),(0,r.kt)("p",null,"For your webhooks to start receiving events it must first be activated. By default webhooks are created as inactivate. These steps can also be used to reactivate a webhook after a failed retry procedure. More information about the retry procedure can be found ",(0,r.kt)("a",{parentName:"p",href:"/apis/webhooks-v2/overview/#RetryProcedure"},"here"),".")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(g,{mdxType:"Title"},'Example HTTP request for "Update webhook" operation'),(0,r.kt)(v,{language:"http",code:"PATCH https://api.bentley.com/webhooks/{webhookId} HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"41-request"},"4.1 Request"),(0,r.kt)("p",null,"A webhook can be updated by sending a PATCH request to ",(0,r.kt)("a",{parentName:"p",href:"https://api.bentley.com/webhooks/%7BwebhookId%7D"},"https://api.bentley.com/webhooks/{webhookId}"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"Authorization")," header with valid Bearer access token is required."),(0,r.kt)("p",null,"The Webhooks API V2 can only be called by Service Applications. This request requires an ",(0,r.kt)("inlineCode",{parentName:"p"},"Authorization")," header with a valid Bearer token with the ",(0,r.kt)("inlineCode",{parentName:"p"},"{scope}")," scope. For more information on Service Applications and how to obtain an access token can be found ",(0,r.kt)("a",{parentName:"p",href:"/tutorials/authorize-service/"},"here"),". A list of your Service Applications can be found ",(0,r.kt)("a",{parentName:"p",href:"/my-apps"},"here"),".")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(g,{mdxType:"Title"},"Example request body"),(0,r.kt)(v,{language:"json",code:'{  \n  "active": true\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"42-request-body"},"4.2 Request body"),(0,r.kt)("p",null,"To activate a webhook you will need to set the \u201cactive\u201d field to 'true\u2019. You can also use the PATCH request to update the following properties:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"active"),(0,r.kt)("li",{parentName:"ul"},"callbackUrl"),(0,r.kt)("li",{parentName:"ul"},"eventTypes"),(0,r.kt)("li",{parentName:"ul"},"secret")),(0,r.kt)("p",null,"For more information see the ",(0,r.kt)("a",{parentName:"p",href:"/apis/webhooks/operations/update-webhook"},"documentation"),"."),(0,r.kt)(w,{type:"informational",mdxType:"Alert"},"Note that the webhook secret will not be return in the response. We will only return the secret in the response of the webhook creation.")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(g,{mdxType:"Title"},"Example response result"),(0,r.kt)(v,{language:"json",code:'{\n  "webhook":{\n    "id": "00000000-0000-0000-0000-000000000000",\n    "scope": "Account",\n    "scopeId": "00000000-0000-0000-0000-000000000000",\n    "active": true,\n    "callbackUrl":"https://HOSTNAME/events",\n    "eventTypes": [\n      "iModels.iModelDeleted.v1",\n      "accessControl.memberAdded.v1"\n    ]\n  }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"43-response"},"4.3 Response"),(0,r.kt)("p",null,"On the successful response you will get returned the webhook with the updated values. For this example only the \u201cactive\u201d field is updated."),(0,r.kt)("p",null,"Your webhook is now active. Your application setup in Step 2 will now start to receive events.")),(0,r.kt)(b,{mdxType:"ContinueLearningSection"},(0,r.kt)("h2",{id:"more-resources-that-you-may-like"},"More resources that you may like"),(0,r.kt)(f,{mdxType:"TileList"},(0,r.kt)(T,{title:"Workflow Automation API group documentation",href:"/api-groups/workflow-automation",description:"An overview and detailed Workflow Automation API group documentation.",mdxType:"ResourceTile"}),(0,r.kt)(T,{title:"Data Management API group documentation",href:"/api-groups/data-management",description:"An overview and detailed Data Management API group documentation.",mdxType:"ResourceTile"}))))}N.isMDXComponent=!0;var S=function(){return[{id:"introduction",level:2,title:"Introduction",children:[]},{id:"prerequisites",level:2,title:"Prerequisites",children:[]},{id:"1-set-up-your-environment",level:2,title:"1. Set up your environment",children:[{id:"11-required-materials",level:3,title:"1.1 Required materials",children:[]},{id:"12-suggested-materials",level:3,title:"1.2 Suggested materials",children:[]}]},{id:"2-create-your-application",level:2,title:"2. Create your application",children:[{id:"21-initialize-the-project",level:3,title:"2.1 Initialize the project",children:[]},{id:"22-create-express-server",level:3,title:"2.2 Create express server",children:[]},{id:"23-add-event-authorization",level:3,title:"2.3 Add event authorization",children:[]},{id:"24-define-data-models",level:3,title:"2.4 Define data models",children:[]},{id:"25-event-handling",level:3,title:"2.5 Event handling",children:[]},{id:"26-deploy",level:3,title:"2.6 Deploy",children:[]}]},{id:"3-create-a-webhook",level:2,title:"3. Create a webhook",children:[{id:"31-request",level:3,title:"3.1 Request",children:[]},{id:"32-request-body",level:3,title:"3.2 Request body",children:[]},{id:"33-response",level:3,title:"3.3 Response",children:[]}]},{id:"4-activate-a-webhook",level:2,title:"4. Activate a webhook",children:[{id:"41-request",level:3,title:"4.1 Request",children:[]},{id:"42-request-body",level:3,title:"4.2 Request body",children:[]},{id:"43-response",level:3,title:"4.3 Response",children:[]}]},{id:"more-resources-that-you-may-like",level:2,title:"More resources that you may like",children:[]}]}},85027:function(e,t,n){"use strict";n.r(t);var o=n(3905),a=n(1176),i=n(58822),r=n(12888),s=(n(67294),n(80989)),l=n(85893);n(14473),t.default=function(){var e={headline:r.Pu.title,navigationItems:(0,r.Jt)(),tutorialSteps:(0,l.jsx)(o.Zo,{components:i.d,children:(0,l.jsx)(r.ZP,{})})};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.d,{title:"".concat(r.Pu.title," - Tutorials | iTwin Platform")}),(0,l.jsx)(a.Z,{tutorial:e})]})}},4535:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tutorials/react-to-events-using-webhooks-v2",function(){return n(85027)}])}},function(e){e.O(0,[3714,8670,9734,9102,8764,1706,4009,1610,6638,9774,2888,179],(function(){return t=4535,e(e.s=t);var t}));var t=e.O();_N_E=t}]);