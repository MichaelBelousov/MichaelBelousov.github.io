(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3899],{50372:function(e,t,a){"use strict";a.d(t,{Jt:function(){return f},Pu:function(){return p},ZP:function(){return g}});var n=a(36864),i=a(4730),o=a(67294),l=a(3905),r=["components"],p=(o.createElement,{title:"Property Validation Basics",tile:{name:"Property Validation Basics",description:"Walk-through to create property validation rules and tests and then run them and get the results.",href:"/tutorials/property-validation-basics/",thumbnail:"/unreal-docs-site/static/images/property-validation-thumbnail.png",durationInMinutes:20,relatedApiIds:["validation/propertyValue"]}}),s=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",t)}},d=s("Introduction"),u=s("TutorialSection"),h=s("Title"),c=s("CodeBlock"),y=s("Alert"),m=s("ContinueLearningSection"),k=s("TileList"),T=s("ResourceTile"),v={metadata:p};function g(e){var t=e.components,a=(0,i.Z)(e,r);return(0,l.kt)("wrapper",(0,n.Z)({},v,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(d,{skillLevel:"Basic",durationInMinutes:"20",mdxType:"Introduction"},(0,l.kt)("h2",{id:"introduction"},"Introduction"),(0,l.kt)("p",null,"Use Property Validation to check whether property values in an iModel conform to certain rules. The validation is run on user-defined rules for specified property values."),(0,l.kt)("p",null,"In this tutorial, you will learn how to:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Get property value rule templates"),(0,l.kt)("li",{parentName:"ul"},"Create/Update/Delete a property validation rule, test, and run"),(0,l.kt)("li",{parentName:"ul"},"Run the property validation test against a specific iModel version"),(0,l.kt)("li",{parentName:"ul"},"Retrieve the property validation test run results"))),(0,l.kt)(u,{mdxType:"TutorialSection"},(0,l.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("p",null,"This tutorial assumes that you already have:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/tutorials/web-application-quick-start/#3-create-an-imodel"},"Access to an iModel")," and the associated project ID and iModel ID for that iModel, along with the ",(0,l.kt)("a",{parentName:"li",href:"/apis/imodels/operations/get-imodel-named-version-details/"},"named version ID")," for the version you want to run the test against."),(0,l.kt)("li",{parentName:"ul"},"Property and schema information for the rules you want to implement.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"For instructions on retrieving schemas for a specific iModel, see ",(0,l.kt)("a",{parentName:"li",href:"/tutorials/retrieve-validation-model-data"},"Retrieve Validation Model Data"),"."))))),(0,l.kt)(u,{mdxType:"TutorialSection"},(0,l.kt)("h2",{id:"1-request-an-authorization-token-using-one-of-the-methods-below"},"1. Request an authorization token using one of the methods below"),(0,l.kt)("h3",{id:"implement-the-authorization-code-flow-in-the-application"},"Implement the Authorization Code Flow in the application"),(0,l.kt)("p",null,"Use the ",(0,l.kt)("a",{parentName:"p",href:"/apis/overview/authorization/"},"OAuth2 Authorization")," article to implement an Authorization code workflow in your application. Include the scopes \u201cvalidation:read\u201d and 'validation:modify\u2019."),(0,l.kt)("h3",{id:"grab-a-user-token-from-api-reference-try-it-out-section"},"Grab a user token from API reference \u201cTry it out\u201d Section"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Open ",(0,l.kt)("a",{parentName:"li",href:"/apis/validation/operations/get-validation-propertyvalue-rule-templates/"},"Get property value validation rule templates")),(0,l.kt)("li",{parentName:"ol"},"Click the ",(0,l.kt)("strong",{parentName:"li"},"Try it out")," button."),(0,l.kt)("li",{parentName:"ol"},"In the Authorization section, select ",(0,l.kt)("strong",{parentName:"li"},"AuthorizationCode"),"."),(0,l.kt)("li",{parentName:"ol"},"Copy the Authorization token in the Header section for use in this tutorial. It will replace the JWT_TOKEN dynamic parameter in the following steps."))),(0,l.kt)(u,{actions:[(0,l.kt)(h,{mdxType:"Title"},"Request Syntax"),(0,l.kt)(c,{language:"http",code:"GET https://api.bentley.com/validation/propertyValue/ruleTemplates?projectId=00000000-0000-0000-0000-000000000000 HTTP/1.1",mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Request Headers"),(0,l.kt)(c,{language:"http",code:"Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Response Headers"),(0,l.kt)(c,{language:"http",code:"Content-Type: application/json",mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Response Body"),(0,l.kt)(c,{language:"json",code:'{\n  "ruleTemplates":{\n    "id":"0000000000000000000000000000000000000000000",\n    "displayName":"PropertyValuePattern",\n    "description":"Checks if the property confirms to the provided pattern",\n    "prompt":"Looks for given pattern in iModel",\n    "templateExpression":{\n      "propertyName": "LastMod",\n      "pattern": "west"\n    }\n  },\n  "_links":{\n    "next":{\n      "href":"https://api.bentley.com/validation/propertyValue/ruleTemplates?projectId=00000000-0000-0000-0000-000000000000"\n    }\n  }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,l.kt)("h2",{id:"2-get-property-validation-rule-templates"},"2. Get property validation rule templates"),(0,l.kt)("p",null,"A property validation rule is used as a basis for verifying the value of a property. A rule checks if the value of a property is defined, within a range of values, matches a pattern, etc."),(0,l.kt)("p",null,"We have provided a variety of property validation rule templates to get you started. The ",(0,l.kt)("code",null,"HTTP GET ",(0,l.kt)("a",{parentName:"p",href:"https://api.bentley.com/validation/propertyValue/ruleTemplates?projectId%5B&continuationToken%5D%5B&$top%5D"},"https://api.bentley.com/validation/propertyValue/ruleTemplates?projectId[&continuationToken][&$top]"))," request returns all property validation rule templates for the given project ID. Choose the template that is best suited for your goals based on the description."),(0,l.kt)("p",null,"In this tutorial, we demonstrate using the PropertyValuePattern template.")),(0,l.kt)(u,{actions:[(0,l.kt)(h,{mdxType:"Title"},"Request Syntax"),(0,l.kt)(c,{language:"http",code:"POST https://api.bentley.com/validation/propertyValue/rules HTTP/1.1",mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Request Headers"),(0,l.kt)(c,{language:"http",code:"Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Request Body"),(0,l.kt)(c,{language:"json",code:'{\n  "displayName":"TestRule1",\n  "description":"test rule",\n  "templateId":"0000000000000000000000000000000000000000000",\n  "severity":"high",\n  "ecSchema":"ProcessPhysical",\n  "ecClass":"PUMP",\n  "whereClause":"",\n  "dataType":"property",\n  "functionParameters":{\n    "propertyName":"COMPONENT_NAME",\n    "pattern":"pmp",\n    "flags":"i"\n  }\n}',mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Response Headers"),(0,l.kt)(c,{language:"http",code:"Content-Type: application/json",mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Response Body"),(0,l.kt)(c,{language:"json",code:'{\n  "rule":{\n    "id": "0000000000000000000000000000000000000000000",\n    "displayName": "PropertyValuePatternRule",\n    "description": "property value pattern rule",\n    "templateId": "0000000000000000000000000000000000000000000",\n    "severity": "high",\n    "ecSchema": "ProcessPhysical",\n    "ecClass": "PUMP",\n    "whereClause": null,\n    "functionParameters": {\n      "propertyName": "COMPONENT_NAME",\n      "pattern": "pmp",\n      "flags": "i"\n    },\n    "dataType": "property",\n    "_links": {\n      "self": {\n          "href": "https://api.bentley.com/validation/propertyValue/rules/0000000000000000000000000000000000000000000"\n      }\n    }\n  }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,l.kt)("h2",{id:"3-creating-a-property-validation-rule"},"3. Creating a property validation rule"),(0,l.kt)("p",null,"Configuring the validation rules is the biggest part of creating a property validation test."),(0,l.kt)("p",null,"To create a property validation rule, you need the template ID of a property validation template, a name for the rule, a description, the severity of the rule, and the ",(0,l.kt)("inlineCode",{parentName:"p"},"dataType"),". You will also need a project ID as well as an EC schema and class. Optionally, you can include a conditional ",(0,l.kt)("inlineCode",{parentName:"p"},"whereClause"),". Depending on the template used, you may also need to provide ",(0,l.kt)("inlineCode",{parentName:"p"},"functionParameters"),"."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"severity"),": One of four values: \u201cveryHigh\u2019, 'high\u2019, 'medium\u2019, 'low\u201d"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"dataType"),": One of three values: \u201cproperty\u2019, 'aspect\u2019, 'typeDefinition\u201d"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"functionParameters"),": These are the parameters listed in the templateExpression object of a retrieved template."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"whereClause"),": Syntax for the where clause is as follows: ","[propertyName][comparison operator]"," ","[value]",", ie USER_LABEL = 'Door\u2019, for multiple properties connectors such as AND/OR can be used as well.")),(0,l.kt)("p",null,"In the example on the right, a rule is created to match all PUMP elements with a ",(0,l.kt)("inlineCode",{parentName:"p"},"COMPONENT_NAME")," property containg the pattern \u201cpmp\u201d with the case-insensitive flag specified. The template ID is set to use the PropertyValuePattern template."),(0,l.kt)("p",null,"If your rule is created successfully, it will return the rule metadata and a rule ID. This will be used in the following steps to associate the rule with a test."),(0,l.kt)("h3",{id:"updating-a-property-validation-rule"},"Updating a property validation rule"),(0,l.kt)("p",null,"To update a rule, the request body format is the same, but requires calling the ",(0,l.kt)("code",null,"HTTP PUT ",(0,l.kt)("a",{parentName:"p",href:"https://api.bentley.com/validation/propertyValue/rules/%7Bid%7D"},"https://api.bentley.com/validation/propertyValue/rules/{id}"))," request with the rule ID. Currently, ",(0,l.kt)("inlineCode",{parentName:"p"},"functionParameters")," cannot be updated. If a change is needed, you must delete the rule and create a new one."),(0,l.kt)("h3",{id:"deleting-a-property-validation-rule"},"Deleting a property validation rule"),(0,l.kt)("p",null,"Deleting a property validation rule requires calling the ",(0,l.kt)("code",null,"HTTP DELETE ",(0,l.kt)("a",{parentName:"p",href:"https://api.bentley.com/validation/propertyValue/rules/%7Bid%7D"},"https://api.bentley.com/validation/propertyValue/rules/{id}"))," request with the rule ID."),(0,l.kt)(y,{type:"informational",mdxType:"Alert"},"Note: At this time, deleting a property validation rule does not automatically delete them from associated tests. Make sure to update the tests in conjunction with the rule deletion to keep things consistent.")),(0,l.kt)(u,{actions:[(0,l.kt)(h,{mdxType:"Title"},"Request Syntax"),(0,l.kt)(c,{language:"http",code:"POST https://api.bentley.com/validation/propertyValue/tests HTTP/1.1",mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Request Headers"),(0,l.kt)(c,{language:"http",code:"Accept: application/vnd.bentley.itwin-platform.v1+json\nPrefer: return=representation\nAuthorization: Bearer JWT_TOKEN",mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Request Body"),(0,l.kt)(c,{language:"json",code:'{\n  "projectId":"00000000-0000-0000-0000-000000000000",\n  "displayName":"PV test1",\n  "description":"PV test1",\n  "rules":[\n    "0000000000000000000000000000000000000000000"\n  ],\n  "stopExecutionOnFailure":true\n}',mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Response Headers"),(0,l.kt)(c,{language:"http",code:"Content-Type: application/json",mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Response Body"),(0,l.kt)(c,{language:"json",code:'{\n  "test":{\n    "id":"0000000000000000000000000000000000000000000",\n    "_links":{\n      "self":{\n        "href":"https://api.bentley.com/validation/propertyValue/tests/0000000000000000000000000000000000000000000"\n      }\n    }\n  }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,l.kt)("h2",{id:"4-creating-a-property-validation-test"},"4. Creating a Property Validation Test"),(0,l.kt)("p",null,"The process of creating a property validation test is very basic as the majority of the configuration happens during rule creation."),(0,l.kt)("p",null,"To create a property validation test, you need the ID of the project, a name and description for the test, as well as an array of rule IDs to associate with the test."),(0,l.kt)("p",null,"To get a list of rules and rule IDs created and available for a specific project requires calling the ",(0,l.kt)("code",null,"HTTP GET ",(0,l.kt)("a",{parentName:"p",href:"https://api.bentley.com/validation/propertyValue/rules?projectId%5B&continuationToken%5D%5B&$top%5D"},"https://api.bentley.com/validation/propertyValue/rules?projectId[&continuationToken][&$top]"))," request. The ",(0,l.kt)("inlineCode",{parentName:"p"},"Prefer")," parameter to the header can be used to get a condensed or more detailed list of rules. For more details, see ",(0,l.kt)("a",{parentName:"p",href:"/apis/validation/operations/get-validation-propertyvalue-rules/"},"Get validation PropertyValue rules"),"."),(0,l.kt)("p",null,"For this tutorial, simply set the rules array in the given example request body to the ID of the newly created rule from the previous step. Optionally, call the GET request and add some of the rule IDs that are returned."),(0,l.kt)("h3",{id:"updating-a-property-validation-test"},"Updating a property validation test"),(0,l.kt)("p",null,"To update a test, the request body format remains the same but requires calling the ",(0,l.kt)("code",null,"HTTP PUT ",(0,l.kt)("a",{parentName:"p",href:"https://api.bentley.com/validation/propertyValue/tests/%7Bid%7D"},"https://api.bentley.com/validation/propertyValue/tests/{id}"))," request with the test ID."),(0,l.kt)(y,{type:"informational",mdxType:"Alert"},"Note: This will replace everything. If you are adding new rules, make sure to pass in the full list of rule IDs rather than just the new rule."),(0,l.kt)("h3",{id:"deleting-a-property-validation-test"},"Deleting a property validation test"),(0,l.kt)("p",null,"Deleting a property validation requires calling the ",(0,l.kt)("code",null,"HTTP DELETE ",(0,l.kt)("a",{parentName:"p",href:"https://api.bentley.com/validation/propertyValue/tests/%7Bid%7D"},"https://api.bentley.com/validation/propertyValue/tests/{id}"))," request with the test ID."),(0,l.kt)(y,{type:"informational",mdxType:"Alert"},"Note: Deleting a property validation test does not automatically delete associated test runs.")),(0,l.kt)(u,{actions:[(0,l.kt)(h,{mdxType:"Title"},"Request Syntax"),(0,l.kt)(c,{language:"http",code:"POST https://api.bentley.com/propertyValue/runs HTTP/1.1",mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Request Headers"),(0,l.kt)(c,{language:"http",code:"Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Request Body"),(0,l.kt)(c,{language:"json",code:'{\n  "testId":"0000000000000000000000000000000000000000000",\n  "iModelId":"00000000-0000-0000-0000-000000000000",\n  "namedVersionId":"0000000000000000000000000000000000000000"\n}',mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Response Headers"),(0,l.kt)(c,{language:"http",code:"Content-Type: application/json",mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Response Body"),(0,l.kt)(c,{language:"json",code:'{\n  "run":{\n    "id":"0000000000000000000000000000000000000000000",\n    "_links":{\n      "run":{\n        "href":"https://api.bentley.com/validation/propertyValue/runs/0000000000000000000000000000000000000000000"\n      }\n    }\n  }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,l.kt)("h2",{id:"5-run-a-property-validation-test"},"5. Run a Property Validation Test"),(0,l.kt)("p",null,"Triggering a property validation test run requires the test ID from the created test, as well as the iModel ID and Named Version ID of the iModel on which the test is being run."),(0,l.kt)("p",null,"If a test is successfully triggered, the POST request will return the ID of the run triggered with the associated test. The given run ID can be used in the ",(0,l.kt)("code",null,"HTTP GET ",(0,l.kt)("a",{parentName:"p",href:"https://api.bentley.com/validation/propertyValue/runs/%7Bid%7D"},"https://api.bentley.com/validation/propertyValue/runs/{id}"))," request to check the status of the run as well as retrieve the test results, which are detailed in the next step.")),(0,l.kt)(u,{actions:[(0,l.kt)(h,{mdxType:"Title"},"Request Syntax"),(0,l.kt)(c,{language:"http",code:"GET https://api.bentley.com/validation/propertyValue/runs/C3LRQU_ILkmFYQVClhDuxow-EXGyYdJHrgH5zpcUQ8U HTTP/1.1",mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Request Headers"),(0,l.kt)(c,{language:"http",code:"Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Response Headers"),(0,l.kt)(c,{language:"http",code:"Content-Type: application/json",mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Response Body"),(0,l.kt)(c,{language:"json",code:'{\n  "run":{\n    "id":"0000000000000000000000000000000000000000000",\n    "displayName":"PropertyValueTest1-10/21/2020 4:07:28 PM",\n    "executedDateTime":"12/1/2020 5:12:50 PM",\n    "count":"27",\n    "userName":"John Johnson",\n    "status":"queued",\n    "_links":{\n      "result":{\n        "href":"https://api.bentley.com/validation/propertyValue/results/0000000000000000000000000000000000000000000000000000000000000000"\n      },\n      "test":{\n        "href":"https://api.bentley.com/validation/propertyValue/tests/0000000000000000000000000000000000000000000"\n      }\n    }\n  }\n}',mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Request Syntax"),(0,l.kt)(c,{language:"http",code:"GET https://api.bentley.com/validation/propertyValue/results/0000000000000000000000000000000000000000000000000000000000000000 HTTP/1.1",mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Request Headers"),(0,l.kt)(c,{language:"http",code:"Accept: application/vnd.bentley.itwin-platform.v1+json\nAuthorization: Bearer JWT_TOKEN",mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Response Headers"),(0,l.kt)(c,{language:"http",code:"Content-Type: application/json",mdxType:"CodeBlock"}),(0,l.kt)(h,{mdxType:"Title"},"Response Body"),(0,l.kt)(c,{language:"json",code:'{\n  "result":[\n    {\n      "elementId":"0x3000000000d",\n      "elementLabel":" [3-D] ",\n      "ruleIndex":0,\n      "badValue":"Undefined"\n    },\n    {\n      "elementId":"0x3000000000f",\n      "elementLabel":" [3-F] ",\n      "ruleIndex":0,\n      "badValue":"Undefined"\n    },\n    {\n      "elementId":"0x30000000010",\n      "elementLabel":" [3-G] ",\n      "ruleIndex":0,\n      "badValue":"Undefined"\n    }\n  ],\n  "ruleList":[\n    {\n      "id":"0000000000000000000000000000000000000000000",\n      "displayName":"TestRule1"\n    }\n  ]\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,l.kt)("h2",{id:"6-getting-property-validation-test-results"},"6. Getting Property Validation Test Results"),(0,l.kt)("p",null,"A results link is provided in the response body of the ",(0,l.kt)("code",null,"HTTP GET ",(0,l.kt)("a",{parentName:"p",href:"https://api.bentley.com/validation/propertyValue/runs/%7Bid%7D"},"https://api.bentley.com/validation/propertyValue/runs/{id}"))," request. Retrieving the results can be done by making a GET request using said link which points to the ",(0,l.kt)("code",null,"HTTP GET ",(0,l.kt)("a",{parentName:"p",href:"https://api.bentley.com/validation/propertyValue/results/%7Bid%7D"},"https://api.bentley.com/validation/propertyValue/results/{id}"))," request."),(0,l.kt)(y,{type:"informational",mdxType:"Alert"},"Note: While the results link will always appear in the response body, you will not be able to actually retrieve the results until the status is shown as complete."),(0,l.kt)("p",null,"The property validation results are formatted with a ",(0,l.kt)("inlineCode",{parentName:"p"},"result")," array that holds all the invalid property values as well as a ",(0,l.kt)("inlineCode",{parentName:"p"},"ruleList")," array that holds all of the rules associated with the test run."),(0,l.kt)("p",null,"Within each object in the ",(0,l.kt)("inlineCode",{parentName:"p"},"result")," array:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"elementId"),": the element id of the invalid property"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"elementLabel"),": the element label of the invalid property"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"ruleIndex"),": the index of the rule within ",(0,l.kt)("inlineCode",{parentName:"li"},"ruleList")," that this property failed to pass"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"badValue"),": the invalid property value")),(0,l.kt)("p",null,"Within each object in the ",(0,l.kt)("inlineCode",{parentName:"p"},"ruleList")," array:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"id"),": the rule ID"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"displayName"),": the rule name")),(0,l.kt)("p",null,"The given example response body to the right shows what might be returned."),(0,l.kt)("h3",{id:"delete-a-property-validation-test-run"},"Delete a property validation test run"),(0,l.kt)("p",null,"Deleting a property validation test run requires calling the ",(0,l.kt)("code",null,"HTTP DELETE ",(0,l.kt)("a",{parentName:"p",href:"https://api.bentley.com/validation/propertyValue/runs/%7Bid%7D"},"https://api.bentley.com/validation/propertyValue/runs/{id}"))," request with the run ID.")),(0,l.kt)(u,{mdxType:"TutorialSection"},(0,l.kt)("h2",{id:"conclusion"},"Conclusion"),(0,l.kt)("p",null,"In this tutorial, you learned how to create, update and delete property validation rules and tests. You also learned how to run a property validation test and fetch the results.")),(0,l.kt)(m,{mdxType:"ContinueLearningSection"},(0,l.kt)("h2",{id:"more-resources-that-you-may-like"},"More resources that you may like"),(0,l.kt)(k,{mdxType:"TileList"},(0,l.kt)(T,{title:"iTwin Validation",href:"/api-groups/validation/",description:"An overview of Validation APIs.",mdxType:"ResourceTile"}),(0,l.kt)(T,{title:"Property Validation Showcase",href:"https://www.itwinjs.org/sample-showcase/?group=iTwin+Platform+APIs&sample=property-validation-sample&imodel=Bay+Town+Process+Plant",description:"This sample demonstrates calling Property Validation APIs to retrieve validation rules and the elements that violate them and present it for review in a viewer app.",isExternal:!0,mdxType:"ResourceTile"}))))}g.isMDXComponent=!0;var f=function(){return[{id:"introduction",level:2,title:"Introduction",children:[]},{id:"prerequisites",level:2,title:"Prerequisites",children:[]},{id:"1-request-an-authorization-token-using-one-of-the-methods-below",level:2,title:"1. Request an authorization token using one of the methods below",children:[{id:"implement-the-authorization-code-flow-in-the-application",level:3,title:"Implement the Authorization Code Flow in the application",children:[]},{id:"grab-a-user-token-from-api-reference-try-it-out-section",level:3,title:"Grab a user token from API reference \u201cTry it out\u201d Section",children:[]}]},{id:"2-get-property-validation-rule-templates",level:2,title:"2. Get property validation rule templates",children:[]},{id:"3-creating-a-property-validation-rule",level:2,title:"3. Creating a property validation rule",children:[{id:"updating-a-property-validation-rule",level:3,title:"Updating a property validation rule",children:[]},{id:"deleting-a-property-validation-rule",level:3,title:"Deleting a property validation rule",children:[]}]},{id:"4-creating-a-property-validation-test",level:2,title:"4. Creating a Property Validation Test",children:[{id:"updating-a-property-validation-test",level:3,title:"Updating a property validation test",children:[]},{id:"deleting-a-property-validation-test",level:3,title:"Deleting a property validation test",children:[]}]},{id:"5-run-a-property-validation-test",level:2,title:"5. Run a Property Validation Test",children:[]},{id:"6-getting-property-validation-test-results",level:2,title:"6. Getting Property Validation Test Results",children:[{id:"delete-a-property-validation-test-run",level:3,title:"Delete a property validation test run",children:[]}]},{id:"conclusion",level:2,title:"Conclusion",children:[]},{id:"more-resources-that-you-may-like",level:2,title:"More resources that you may like",children:[]}]}},41468:function(e,t,a){"use strict";a.r(t);var n=a(3905),i=a(1176),o=a(58822),l=a(50372),r=(a(67294),a(80989)),p=a(85893);a(14473),t.default=function(){var e={headline:l.Pu.title,navigationItems:(0,l.Jt)(),tutorialSteps:(0,p.jsx)(n.Zo,{components:o.d,children:(0,p.jsx)(l.ZP,{})})};return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(r.d,{title:"".concat(l.Pu.title," - Tutorials | iTwin Platform")}),(0,p.jsx)(i.Z,{tutorial:e})]})}},94785:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tutorials/property-validation-basics",function(){return a(41468)}])}},function(e){e.O(0,[3714,8670,9734,9102,8764,1706,4009,1610,6638,9774,2888,179],(function(){return t=94785,e(e.s=t);var t}));var t=e.O();_N_E=t}]);