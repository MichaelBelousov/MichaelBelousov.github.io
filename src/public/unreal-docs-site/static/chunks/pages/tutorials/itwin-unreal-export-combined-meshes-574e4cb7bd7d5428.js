(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3857],{84514:function(e,t,n){"use strict";n.d(t,{Jt:function(){return f},Pu:function(){return s},ZP:function(){return k}});var i=n(36864),a=n(4730),o=n(67294),r=n(3905),l=["components"],s=(o.createElement,{title:"Exporting an iModel to Unreal Datasmith as a combined mesh",tile:{name:"Exporting an iModel to Unreal Datasmith as a combined mesh",description:"Follow this tutorial to get iModel data into the Datasmith format as a combined mesh.",thumbnail:"/images/unreal-export-app-fullscreen.png",href:"/tutorials/itwin-unreal-export-combined-meshes",durationInMinutes:20,relatedApiIds:["itwin-unreal"],showInFirstSteps:!1}}),p=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)}},u=p("Introduction"),m=p("TutorialSection"),d=p("TitledImage"),c=p("ContinueLearningSection"),h=p("TileList"),g=p("ResourceTile"),y={metadata:s};function k(e){var t=e.components,n=(0,a.Z)(e,l);return(0,r.kt)("wrapper",(0,i.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(u,{skillLevel:"Basic",durationInMinutes:"20",summaryImageSrc:"/images/unreal-export-app-fullscreen-wide.png",mdxType:"Introduction"},(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"This tutorial will guide you through exporting your iTwin into the Datasmith format, and then importing that file directly\ninto Unreal Engine.")),(0,r.kt)(m,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"This tutorial assumes that you already have:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.unrealengine.com/download"},"Unreal Engine 4.26.1")," or later installed.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"It is recommended to install Unreal before the iTwin Exporter for Datasmith app because\nthe app requires some components that Unreal will install for you. If you want to install\nthe exporter first anyway, the application will direct you to manually install the\ncomponents that Unreal would install."))),(0,r.kt)("li",{parentName:"ul"},"the iTwin Exporter for Datasmith application installed.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The installer can be downloaded by clicking \u201cDownload now\u201d ",(0,r.kt)("a",{parentName:"li",href:"https://developer.bentley.com/unreal/"},"here"),", and then running the installer will complete the installation."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://visualstudio.microsoft.com/downloads"},"Visual Studio")," installed, and the \u201cGame Development with C++\u201d and \u201c.NET desktop development\u201d workloads installed.\nYou must also have the additional ",(0,r.kt)("inlineCode",{parentName:"li"},"Microsoft.NETCore.App"),", version 3.1.0 component installed, and your Visual Studio build tools must be up to date.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"If Visual Studio\u2019s build tools are not up to date, the plugin may fail to compile on later Unreal Engine versions. Be sure to open the Visual Studio installer and update."))),(0,r.kt)("li",{parentName:"ul"},"an Unreal project set up, you can follow Epic\u2019s\n",(0,r.kt)("a",{parentName:"li",href:"https://docs.unrealengine.com/Basics/Projects/Browser/"},"Creating a New Project")," guide if you don\u2019t have one.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"We recommend using the ",(0,r.kt)("em",{parentName:"li"},"Architecture, Engineering ","&"," Construction")," template so the required Datasmith importer plugin is enabled.\nIf you choose not to do this, you will need to enable that plugin yourself in your project\u2019s settings.")))),(0,r.kt)("p",null,"Make sure you install both ",(0,r.kt)("strong",{parentName:"p"},"C++ Game Development")," and ",(0,r.kt)("strong",{parentName:"p"},".NET desktop development")," workloads for Visual Studio, and have recently updated Visual Studio."),(0,r.kt)(d,{src:"/images/unreal-export-vs-workloads.png",alt:"visual studio required workloads",mdxType:"TitledImage"})),(0,r.kt)(m,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"1-select-your-imodel"},"1. Select your iModel"),(0,r.kt)("p",null,"The iTwin Exporter for Datasmith opens to the sign in page. Hit the ",(0,r.kt)("strong",{parentName:"p"},"Sign In button")," to be prompted to log in through your\ndefault browser. This will bring you to the ",(0,r.kt)("strong",{parentName:"p"},"iModel Select Screen")," of your most recent project."),(0,r.kt)("p",null,"To access other projects, select the project dropdown in the header and choose one of the recent projects or click\n",(0,r.kt)("strong",{parentName:"p"},"See all my projects")," to open the ",(0,r.kt)("strong",{parentName:"p"},"Project Select Screen"),"."),(0,r.kt)("p",null,"Upon entering either of the select screens, the search box in the top-right is focused, so you can immediately type to filter\nby name and find your iModel or project if you have several."),(0,r.kt)("p",null,"To see not only your most recent project\u2019s models, click the ",(0,r.kt)("strong",{parentName:"p"},"See all your projects")," option in the project dropdown"),(0,r.kt)(d,{src:"/images/unreal-export-see-all-projects.png",alt:"see all projects button placement",mdxType:"TitledImage"})),(0,r.kt)(m,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"2-export-your-imodel-as-a-combined-mesh"},"2. Export your iModel as a combined-mesh"),(0,r.kt)("p",null,"Once you\u2019ve selected your project and found your iModel, you can perform an export immediately by clicking the ",(0,r.kt)("strong",{parentName:"p"},"Export Button"),"."),(0,r.kt)(d,{src:"/images/unreal-export-imodel-tile-quick-export.png",alt:"quick 'export' button on the tile",mdxType:"TitledImage"}),(0,r.kt)("p",null,"This will bring up the ",(0,r.kt)("strong",{parentName:"p"},"Advanced Export Dialog"),", from which you can toggle on the ",(0,r.kt)("strong",{parentName:"p"},"Combine All Meshes Toggle"),", and then\npress the ",(0,r.kt)("strong",{parentName:"p"},"Confirm Export Button")," at the bottom of the dialog."),(0,r.kt)(d,{src:"/images/unreal-export-advanced-dialog-combined.png",alt:"the advanced export dialog as it appears after using the quick export button",mdxType:"TitledImage"})),(0,r.kt)(m,{mdxType:"TutorialSection"},(0,r.kt)("p",null,"Simply press the button and use your system\u2019s save file dialog to choose under what name and where to save the resulting datasmith\ncontent. Then wait for the export to complete, which is signified by a green success message appearing."),(0,r.kt)("p",null,"You may also click on your iModel card\u2019s image or its ",(0,r.kt)("strong",{parentName:"p"},"View Button"),"\nto enter the viewer, and can run a combined-mesh export with the left-most button in the top-left horizontal toolbar."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"/images/unreal-export-in-viewer-combined-export-button.png",alt:"in-viewer button"}))),(0,r.kt)(m,{subSection:!0,mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"21-export-result"},"2.1. Export Result"),(0,r.kt)("p",null,"Once the export has completed,\nyou should have a file as you named it, like ",(0,r.kt)("inlineCode",{parentName:"p"},"myIModelName.udatasmith")," and an ",(0,r.kt)("inlineCode",{parentName:"p"},"_Assets")," folder with the same name as a prefix, for example ",(0,r.kt)("inlineCode",{parentName:"p"},"myIModelName_Assets"),",\nin your chosen export location. You should be able to find them in your file browser."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"/images/unreal-export-result-files-windows.png",alt:"Resulting Datasmith Files"}))),(0,r.kt)(m,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"3-install-the-itwin-unreal-datasmith-plugin-in-your-unreal-project"},"3. Install the iTwin Unreal Datasmith Plugin in your Unreal project"),(0,r.kt)("p",null,"Now we can navigate back to the select screen and use the plugin installer button to install the iTwin Unreal Datasmith Plugin to our Unreal project.\nHit the ",(0,r.kt)("strong",{parentName:"p"},"Home Button")," in the top left, or use the project dropdown and press the ",(0,r.kt)("strong",{parentName:"p"},"See all my projects")," option to navigate back to the ",(0,r.kt)("strong",{parentName:"p"},"Project Select Screen"),"."),(0,r.kt)(d,{src:"/images/unreal-export-nav-home.png",alt:"navigate home button placement",mdxType:"TitledImage"})),(0,r.kt)(m,{mdxType:"TutorialSection"},(0,r.kt)("p",null,"From the select screen, you can press the blue ",(0,r.kt)("strong",{parentName:"p"},"Install Plugin Button")," at the bottom of the application, and in the file dialog find the ",(0,r.kt)("inlineCode",{parentName:"p"},".uproject")," file belonging\nto your Unreal project you created. Just choose that ",(0,r.kt)("inlineCode",{parentName:"p"},".uproject")," file and the plugin will be installed to that project."),(0,r.kt)(d,{src:"/images/unreal-export-install-plugin-button.png",alt:"install plugin button placement",mdxType:"TitledImage"}),(0,r.kt)("p",null,"Make sure to close and reopen the Unreal project if it is open. Upon opening the project for the first time since the installation,\nit may prompt to rebuild the plugin. This is normal, and you should just allow it and wait for it to finish.\nIt may also say that it was designed for a different engine version, but you can ignore this and tell it to continue building,\nthe plugin has been tested in Unreal Engine versions 4.26.0 through 5.0.1 as of writing.\nIf the rebuild fails, make sure you\u2019ve met all of the ",(0,r.kt)("a",{parentName:"p",href:"#prerequisites"},"Prerequisites"),"."),(0,r.kt)("img",{alt:"rebuild prompt",src:"/images/unreal-export-rebuild-prompt.png",class:"sample-img-m"})),(0,r.kt)(m,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"4-import-your-imodel"},"4. Import your iModel"),(0,r.kt)("p",null,"In the Unreal Engine editor, use the Datasmith import button to open a file system dialog and select your ",(0,r.kt)("inlineCode",{parentName:"p"},".udatasmith")," file\nto import it into the scene."),(0,r.kt)(d,{src:"/images/unreal-export-editor-import-button.png",alt:"unreal editor's datasmith import button placement",mdxType:"TitledImage"}),(0,r.kt)("p",null,"Choose a folder to place the content imported from Datasmith into in your content browser, then change any other import settings you need,\nsuch as disabling lightmap UV generation if you will only be using dynamic lights to light your scene in Unreal.\nThen just wait for the import process to finish.")),(0,r.kt)(m,{subSection:!0,mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"41-enable-transformation-animations-if-your-scene-is-animated"},"4.1. Enable transformation animations if your scene is animated"),(0,r.kt)("p",null,"If your scene has a schedule script or other animations, a Level Sequence\nasset will have been created to control the objects with transform animations. Due to limitations in the Datasmith API, you must manually add\nthe level sequence to the scene. Consult Unreal Engine\u2019s ",(0,r.kt)("a",{parentName:"p",href:"https://docs.unrealengine.com/AnimatingObjects/Sequencer/Overview/"},"Sequencer Overview"),"\nfor more information on level sequences."),(0,r.kt)("p",null,"Open the ",(0,r.kt)("inlineCode",{parentName:"p"},"Animations")," subfolder in the folder where you chose to import. The folder will only exist if you have transformation animations. You can drag and drop\nthe animation asset into the viewport to add it to the scene."),(0,r.kt)(d,{src:"/images/unreal-export-anim-drag-drop.png",alt:"drag-and-drop-level-sequence",mdxType:"TitledImage"})),(0,r.kt)(m,{subSection:!0,mdxType:"TutorialSection"},(0,r.kt)("p",null,"Then, in the properties of the newly spawned Level Sequence Actor, toggle the ",(0,r.kt)("strong",{parentName:"p"},"Auto Play")," checkbox so that it is checked, which matches the default auto play\nset for the ",(0,r.kt)("a",{parentName:"p",href:"/unreal/integration/blueprint-api-reference#AScheduledActor"},"ScheduledActor")," in your combined-mesh scene that controls the non-transformation animations."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"/images/unreal-export-set-autoplay.png",alt:"auto play"}))),(0,r.kt)(m,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"5-use-a-realistic-material"},"5. Use a realistic material"),(0,r.kt)("p",null,"Unreal\u2019s starter content comes with a few high-fidelity materials that we can use to test realistic materials on our iModel.\nFor a simple start to applying materials, open ",(0,r.kt)("inlineCode",{parentName:"p"},"StarterContent/Materials")," in the content browser and drag and drop materials\nonto your static meshes."),(0,r.kt)(d,{src:"/images/unreal-export-start-materials.png",alt:"starter content materials from unreal engine",mdxType:"TitledImage"})),(0,r.kt)(m,{mdxType:"TutorialSection"},(0,r.kt)("p",null,"We dragged and dropped some glass, concrete, metal, grass, wood, and cobblestone into our scene to see some high-fidelity materials."),(0,r.kt)("p",null,"Our sample scene would particularly have benefited from filtering out the tree and grass models and replacing them with more realistic or\nanimated ones, but that is something to explore in your Unreal project."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"/images/unreal-export-high-quality-materials.png",alt:"scene after drag and drop"}))),(0,r.kt)(m,{subSection:!0,mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"51-opt-in-to-visibility-animation"},"5.1. Opt-in to visibility animation"),(0,r.kt)("p",null,"Materials must opt-in to visibility animation if using the combined-mesh export. You can edit materials attached to your\nmesh by double clicking the material in the material slots of your static mesh actor\u2019s properties."),(0,r.kt)(d,{src:"/images/unreal-export-material-slots.png",alt:"material slots of combined mesh",mdxType:"TitledImage"})),(0,r.kt)(m,{subSection:!0,mdxType:"TutorialSection"},(0,r.kt)("p",null,"Then select the material result node, if it is not already automatically selected as you open the editor, and set your\nmaterial\u2019s blend mode in the details panel to \u201cmasked\u201d, unless it is already \u201ctranslucent\u201d in which case leave it as is.\nFor more information on material blend modes in Unreal, see the documentation article\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.unrealengine.com/RenderingAndGraphics/Materials/MaterialProperties/BlendModes/"},"Material Blend Modes"),"."),(0,r.kt)(d,{src:"/images/unreal-export-set-material-blend-mode.png",alt:"material editor blend mode dropdown",mdxType:"TitledImage"}),(0,r.kt)("p",null,"Finally, right click in open space to the left of the result node and use the search to place a ",(0,r.kt)("inlineCode",{parentName:"p"},"MaterialFunctionCall")," node. In the details\npanel, you can select a Material Function to use for this node, use ",(0,r.kt)("inlineCode",{parentName:"p"},"MF_SynchroVisibilityAnimate")," which comes with the plugin.\nDrag the output pin of the function to the ",(0,r.kt)("strong",{parentName:"p"},"Opacity Mask")," result pin (or ",(0,r.kt)("strong",{parentName:"p"},"Opacity")," if the material was translucent)."),(0,r.kt)("p",null,"Now save and apply your material in the top left of the material editor, and your material will animate correctly with the visibility of the scene.")),(0,r.kt)(c,{mdxType:"ContinueLearningSection"},(0,r.kt)("h2",{id:"more-resources-that-you-may-like"},"More resources that you may like"),(0,r.kt)(h,{mdxType:"TileList"},(0,r.kt)(g,{title:"iTwin Exporter for Datasmith documentation",href:"/unreal/integration/documentation/",description:"Extended functionality and workflow descriptions in iTwin Exporter for Datasmith",mdxType:"ResourceTile"}),(0,r.kt)(g,{title:"Importing Datasmith content into Unreal",href:"https://docs.unrealengine.com/WorkingWithContent/Importing/Datasmith/HowTo/ImportingContent/",description:"Unreal's documentation on importing datasmith content",isExternal:!0,mdxType:"ResourceTile"}),(0,r.kt)(g,{title:"Processing iModel metadata in Unreal's Visual Dataprep",href:"/tutorials/itwin-unreal-dataprep/",description:"Create Unreal Dataprep scripts that use your iTwin data",mdxType:"ResourceTile"}))))}k.isMDXComponent=!0;var f=function(){return[{id:"introduction",level:2,title:"Introduction",children:[]},{id:"prerequisites",level:2,title:"Prerequisites",children:[]},{id:"1-select-your-imodel",level:2,title:"1. Select your iModel",children:[]},{id:"2-export-your-imodel-as-a-combined-mesh",level:2,title:"2. Export your iModel as a combined-mesh",children:[{id:"21-export-result",level:3,title:"2.1. Export Result",children:[]}]},{id:"3-install-the-itwin-unreal-datasmith-plugin-in-your-unreal-project",level:2,title:"3. Install the iTwin Unreal Datasmith Plugin in your Unreal project",children:[]},{id:"4-import-your-imodel",level:2,title:"4. Import your iModel",children:[{id:"41-enable-transformation-animations-if-your-scene-is-animated",level:3,title:"4.1. Enable transformation animations if your scene is animated",children:[]}]},{id:"5-use-a-realistic-material",level:2,title:"5. Use a realistic material",children:[{id:"51-opt-in-to-visibility-animation",level:3,title:"5.1. Opt-in to visibility animation",children:[]}]},{id:"more-resources-that-you-may-like",level:2,title:"More resources that you may like",children:[]}]}},47165:function(e,t,n){"use strict";n.r(t);var i=n(3905),a=n(1176),o=n(58822),r=n(84514),l=(n(67294),n(80989)),s=n(85893);n(14473),t.default=function(){var e={headline:r.Pu.title,navigationItems:(0,r.Jt)(),tutorialSteps:(0,s.jsx)("div",{className:"disable-actions-section",children:(0,s.jsx)(i.Zo,{components:o.d,children:(0,s.jsx)(r.ZP,{})})})};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(l.d,{title:"".concat(r.Pu.title," | iTwin for Game Engines")}),(0,s.jsx)(a.Z,{tutorial:e})]})}},59955:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tutorials/itwin-unreal-export-combined-meshes",function(){return n(47165)}])}},function(e){e.O(0,[3714,8670,9734,9102,8764,1706,4009,1610,6638,9774,2888,179],(function(){return t=59955,e(e.s=t);var t}));var t=e.O();_N_E=t}]);