(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9298],{8964:function(e,t,n){"use strict";n.d(t,{Jt:function(){return w},Pu:function(){return p},ZP:function(){return b}});var o=n(36864),i=n(4730),a=n(67294),r=n(3905),l=["components"],p=(a.createElement,{title:"Get started with the iTwin Mobile SDK for iOS",tile:{name:"Get started with the iTwin Mobile SDK for iOS",description:"This tutorial will get you up and running with the iTwin sample app for iOS.",href:"/tutorials/mobile-sdk-ios-gettingstarted/",thumbnail:"/unreal-docs-site/static/images/tutorials/mobile-sdk-ios-getting-started/banner.png",durationInMinutes:30}}),s=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)}},d=s("Introduction"),c=s("TutorialSection"),u=s("LinkButton"),m=s("XcodeIcon"),h=s("NodeJsIcon"),k=s("GitIcon"),g=s("VSCodeIcon"),f=s("SignInButton"),y=s("CreateNativeAppButton"),N=s("CodeBlock"),S={metadata:p};function b(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,o.Z)({},S,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(d,{skillLevel:"Basic",durationInMinutes:"30",summaryImageSrc:"/unreal-docs-site/static/images/tutorials/mobile-sdk-ios-getting-started/banner.png",mdxType:"Introduction"},(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"This tutorial guides you through creating a new iOS app using the iTwin Mobile SDK for iOS. In this walk-through you will be introduced to the ",(0,r.kt)("strong",{parentName:"p"},"iTwin Mobile SDK for iOS")," using ",(0,r.kt)("strong",{parentName:"p"},"Swift Package Manager")," and the ",(0,r.kt)("strong",{parentName:"p"},"SwiftUI")," sample app."),(0,r.kt)("p",null,"By the end of this tutorial, you will have the ",(0,r.kt)("strong",{parentName:"p"},"iTwin sample app for iOS")," running on your iPad or iPhone."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note:"),"\nYou must use a Mac capable of running Xcode 13 to complete this tutorial.\nIf using an Intel Mac, you have the option to run the sample app in the Simulator.\nIf using an Apple Silicon Mac, use a physical device to run the sample app."))),(0,r.kt)(c,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"1-set-up-your-environment"},"1. Set up your environment"),(0,r.kt)("p",null,"Before you start this walk-through, download and install the following software on your Mac.")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(u,{href:"https://apps.apple.com/us/app/xcode/id497799835?mt=12",target:"_blank",title:"Xcode",icon:(0,r.kt)(m,{mdxType:"XcodeIcon"}),mdxType:"LinkButton"}),(0,r.kt)(u,{href:"https://nodejs.org",target:"_blank",title:"Node.js",icon:(0,r.kt)(h,{mdxType:"NodeJsIcon"}),mdxType:"LinkButton"}),(0,r.kt)(u,{href:"https://git-scm.com/downloads",target:"_blank",title:"Git",icon:(0,r.kt)(k,{mdxType:"GitIcon"}),mdxType:"LinkButton"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"11-required-materials"},"1.1 Required materials"),(0,r.kt)("h5",{id:"xcode-13"},(0,r.kt)("a",{parentName:"h5",href:"https://apps.apple.com/us/app/xcode/id497799835?mt=12"},"Xcode 13")),(0,r.kt)("p",null,"Xcode is the development environment you will use for building iOS and macOS apps. Download it from the AppStore. Start Xcode after you install it and allow it to install additional components."),(0,r.kt)("h5",{id:"nodejs-lts-version"},(0,r.kt)("a",{parentName:"h5",href:"https://nodejs.org"},"Node.js (LTS version)")),(0,r.kt)("p",null,"This tool provides the backend JavaScript runtime necessary for your computer to read and render code appropriately. It also allows you to run ",(0,r.kt)("inlineCode",{parentName:"p"},"NPM")," commands at the terminal."),(0,r.kt)("h5",{id:"git"},(0,r.kt)("a",{parentName:"h5",href:"https://git-scm.com/downloads"},"Git")),(0,r.kt)("p",null,"This is the source code control system for the ",(0,r.kt)("inlineCode",{parentName:"p"},"iTwin Mobile SDK sample")," repository.")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(u,{href:"https://code.visualstudio.com/",target:"_blank",title:"Visual Studio Code",icon:(0,r.kt)(g,{mdxType:"VSCodeIcon"}),mdxType:"LinkButton"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"12-suggested-tools"},"1.2 Suggested tools"),(0,r.kt)("h5",{id:"visual-studio-code"},(0,r.kt)("a",{parentName:"h5",href:"https://code.visualstudio.com/"},"Visual Studio Code")),(0,r.kt)("p",null,"This is our recommended editor and debugger tool for developing iTwin.js applications. It is free, open source and includes a GUI for working with GIT."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note:")," Optionally, install the ",(0,r.kt)("inlineCode",{parentName:"p"},"code")," command in your ",(0,r.kt)("inlineCode",{parentName:"p"},"PATH")," by running the ",(0,r.kt)("inlineCode",{parentName:"p"},"install 'code' command in PATH")," command at the command palette in ",(0,r.kt)("strong",{parentName:"p"},"VSCode"),"."))),(0,r.kt)(c,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"2-register-an-application"},"2. Register an application"),(0,r.kt)("p",null,"To begin, register a new client on the iTwin platform developer portal. Once the new client is registered, you are ready to start building your app.")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(f,{mdxType:"SignInButton"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"sign-in"},"Sign in"),(0,r.kt)("p",null,"To register an application you need to be signed in.\nIf you are not already, you can do that by clicking the ",(0,r.kt)("strong",{parentName:"p"},"Sign In")," button in the action pane or in the top right corner of the page.")),(0,r.kt)(c,{subSection:!0,actions:function(e){return[(0,r.kt)(y,{tooltip:"Register a basic Native Application for this tutorial",clientName:"Mobile SDK getting started with iOS",allowedScopes:["projects:read","savedviews:modify","realitydata:read","savedviews:read","imodelaccess:read","itwinjs","imodels:read"],redirectUri:"imodeljs://app/signin-callback",postLogoutRedirectUris:["imodeljs://app/signout-callback"],mdxType:"CreateNativeAppButton"},"Register application"),(0,r.kt)(N,{language:"xcconfig",code:e.clientId&&e.redirectUris&&e.scope?"ITMAPPLICATION_CLIENT_ID = ".concat(e.clientId,"\nITMAPPLICATION_SCOPE = ").concat(e.scope):void 0,mdxType:"CodeBlock"})]},mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"register-a-native-application"},"Register a Native Application"),(0,r.kt)("p",null,"All apps connecting to and sending data through the platform must be registered on your account.\nUse the ",(0,r.kt)("strong",{parentName:"p"},"Register application")," button to automatically create your first Native Application.\nThis allows you to configure authentication for your app. For more information, see ",(0,r.kt)("a",{parentName:"p",href:"/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"},"Authorization Code Flow for your Native Application"),"."),(0,r.kt)("p",null,"Once the client is generated, a few lines of code are displayed; note these lines. You will add these to the Xcode config file in a later step."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ITMAPPLICATION_CLIENT_ID")," - This is the unique identifier for your application. It is displayed on the application details page as ",(0,r.kt)("strong",{parentName:"li"},"Client ID"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ITMAPPLICATION_SCOPE")," - List of accesses granted to the application. Displayed on the application details page as ",(0,r.kt)("strong",{parentName:"li"},"Scopes"),".")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"For future reference:")," Register and configure your application manually following the instructions in the ",(0,r.kt)("a",{parentName:"p",href:"/tutorials/register-and-modify-application/"},"Register and modify an Application")," tutorial. Ensure that you select an ",(0,r.kt)("em",{parentName:"p"},"Application type")," of ",(0,r.kt)("strong",{parentName:"p"},"Desktop/Mobile"),"."))),(0,r.kt)(c,{actions:[(0,r.kt)(N,{language:"bash",code:"git clone https://github.com/iTwin/mobile-samples.git",mdxType:"CodeBlock"}),(0,r.kt)(N,{language:"bash",code:"code mobile-samples",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"3-clone-the-sample-repository"},"3. Clone the sample repository"),(0,r.kt)("p",null,"Clone the repository to follow along with this tutorial. In your Terminal, enter ",(0,r.kt)("inlineCode",{parentName:"p"},"cd ~/Desktop"),", then run ",(0,r.kt)("inlineCode",{parentName:"p"},"git clone https://github.com/iTwin/mobile-samples.git"),"."),(0,r.kt)("p",null,"Next, open the ",(0,r.kt)("strong",{parentName:"p"},"mobile-samples")," folder in ",(0,r.kt)("strong",{parentName:"p"},"VS Code"),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note:")," If you have the ",(0,r.kt)("inlineCode",{parentName:"p"},"code")," command installed in your path, you can enter ",(0,r.kt)("inlineCode",{parentName:"p"},"code mobile-samples")," in your Terminal."))),(0,r.kt)(c,{subSection:!0,mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"31-directory-structure"},"3.1 Directory structure"),(0,r.kt)("p",null,"This section gives a high-level description of the top-level folders in the sample app."),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"iOS")," directory contains all of the code that is specific to the iOS platform. This includes Xcode projects for the Getting Started samples based on SwiftUI (",(0,r.kt)("strong",{parentName:"p"},"SwiftUIStarter"),") and UIKit (",(0,r.kt)("strong",{parentName:"p"},"MobileStarter"),"), and variations that can target local builds of the SDK that can be used for SDK development (PRs are very welcome). The ",(0,r.kt)("strong",{parentName:"p"},"Shared")," directory contains utility files that are used in multiple sample apps. Finally, there are additional sample apps to help you get up and running."),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"cross-platform")," directory contains the ",(0,r.kt)("strong",{parentName:"p"},"react-app")," containing all of the user interface code in the sample app. The other directories in ",(0,r.kt)("strong",{parentName:"p"},"cross-platform")," are not used in this sample."),(0,r.kt)("p",null,"Finally, the ",(0,r.kt)("strong",{parentName:"p"},"Snapshot iModels")," directory contains an iModel that you can use when running your sample."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"/unreal-docs-site/static/images/tutorials/mobile-sdk-ios-getting-started/file-structure.png",alt:"file-structure"}))),(0,r.kt)(c,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"4-xcode"},"4. Xcode"),(0,r.kt)("p",null,"Finally, we\u2019re ready to start diving into the code!")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(N,{language:"bash",code:"open iOS/MobileStarter/MobileStarter.xcodeproj",mdxType:"CodeBlock"}),(0,r.kt)(N,{language:"bash",code:"open iOS/SwiftUIStarter/SwiftUIStarter.xcodeproj",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"41-ui-framework"},"4.1 UI framework"),(0,r.kt)("p",null,"Feel free to choose the project for the UI framework that you prefer. We will be using the SwiftUI starter in this tutorial. If you chose to use UIKit, substitute MobileStarter in all cases throughout the rest of the tutorial."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note:")," All of the app UI in this sample project is written in React, but the iTwin Model Viewer runs in a ",(0,r.kt)("inlineCode",{parentName:"p"},"WKWebView")," and can be integrated into any app.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"UIKit")),(0,r.kt)("p",null,"If you prefer to work with UIKit, open ",(0,r.kt)("inlineCode",{parentName:"p"},"iOS/MobileStarter/MobileStarter.xcodeproj")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"SwiftUI")),(0,r.kt)("p",null,"If you prefer to work with SwiftUI, open ",(0,r.kt)("inlineCode",{parentName:"p"},"iOS/SwiftUIStarter/SwiftUIStarter.xcodeproj"))),(0,r.kt)(c,{subSection:!0,mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"42-swift-package-manager"},"4.2 Swift Package Manager"),(0,r.kt)("p",null,"Swift Package Manager (SPM) downloads several packages as soon as you open the sample. This should only take a couple of minutes, depending on your network speed. Wait for this to finish, then click the project name in the Project navigator."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"/unreal-docs-site/static/images/tutorials/mobile-sdk-ios-getting-started/swiftpackages.png",alt:"SPM"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"NOTE"),": You might encounter an error during Swift Package installation or later when you try to run the app. If so, choose ",(0,r.kt)("strong",{parentName:"p"},"File > Packages > Reset Package Caches")," in the Xcode menu."))),(0,r.kt)(c,{subSection:!0,mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"43-target-configuration"},"4.3 Target configuration"),(0,r.kt)("p",null,"Select ",(0,r.kt)("inlineCode",{parentName:"p"},"SwiftUIStarter")," in the Project Navigator, then select the ",(0,r.kt)("inlineCode",{parentName:"p"},"SwiftUIStarter")," target in the Targets section. Change the Bundle Identifier to ",(0,r.kt)("inlineCode",{parentName:"p"},"com.<myteam>.SwiftUIStarter"),", replacing ",(0,r.kt)("inlineCode",{parentName:"p"},"<myteam>")," with your actual team name."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"/unreal-docs-site/static/images/tutorials/mobile-sdk-ios-getting-started/targetconfig-general.png",alt:"target-general"})),(0,r.kt)("p",null,"Next, switch to the ",(0,r.kt)("inlineCode",{parentName:"p"},"Signing & Capabilities")," tab and select your development team from the dropdown."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"/unreal-docs-site/static/images/tutorials/mobile-sdk-ios-getting-started/targetconfig-signing.png",alt:"target-signing"}))),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(N,{language:"bash",code:"touch iOS/ITMApplication.xcconfig",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"44-xcconfig"},"4.4 Xcconfig"),(0,r.kt)("p",null,"The last thing to do before switching over to VSCode is to create a file called ",(0,r.kt)("inlineCode",{parentName:"p"},"ITMApplication.xcconfig")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"iOS/")," directory. Copy the ",(0,r.kt)("inlineCode",{parentName:"p"},"ITMAPPLICATION_CLIENT_ID")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"ITMAPPLICATION_SCOPE")," code block from the ",(0,r.kt)("inlineCode",{parentName:"p"},"Register a Native Application")," section above and paste it into this file.")),(0,r.kt)(c,{actions:[(0,r.kt)(N,{language:"bash",code:"cd cross-platform/react-app\nnpm install\nnpm run build\nnpm start",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"5-npm-install"},"5. NPM Install"),(0,r.kt)("p",null,"iTwin.js apps are built using JavaScript, and in order to build and run that side of the codebase, you\u2019ll need to install some dependencies. You should have installed the latest LTS version of Node.js back when you were setting up your environment. Go back and do that now if you skipped that step."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note:")," If you\u2019re using an Apple Silicon Mac, you\u2019ll need to use a Rosetta 2 terminal for this step. Once the install is done you don\u2019t need Rosetta again.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cd")," into ",(0,r.kt)("inlineCode",{parentName:"li"},"cross-platform/react-app")),(0,r.kt)("li",{parentName:"ul"},"Run ",(0,r.kt)("inlineCode",{parentName:"li"},"npm install")),(0,r.kt)("li",{parentName:"ul"},"Run ",(0,r.kt)("inlineCode",{parentName:"li"},"npm run build")),(0,r.kt)("li",{parentName:"ul"},"Run ",(0,r.kt)("inlineCode",{parentName:"li"},"npm start"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note:")," The ",(0,r.kt)("inlineCode",{parentName:"p"},"npm start")," command starts a debug server on your Mac that the iOS app will communicate with. This allows you to debug the JavaScript code using Safari\u2019s Web Inspector. This means that your device needs to be on the same local network as your Mac, and your Mac must not block incoming connections from the local network. In order to run a production-like build, uncomment ",(0,r.kt)("inlineCode",{parentName:"p"},"ITMAPPLICATION_NO_DEBUG_SERVER = YES")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"iOSSamples.xcconfig"),". Note that if you do this you will not be able to use Safari to debug the JavaScript code."))),(0,r.kt)(c,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"6-run-the-app"},"6. Run the app"),(0,r.kt)("p",null,"Now that the React app is built and the debug server is running, or you\u2019ve uncommented ",(0,r.kt)("inlineCode",{parentName:"p"},"ITMAPPLICATION_NO_DEBUG_SERVER = YES")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"iOSSamples.xcconfig"),", it\u2019s time to go back to Xcode."),(0,r.kt)("p",null,"If you\u2019ve followed along with the steps in Section 4, you should be able to simply select your device from the Devices dropdown and run the app (\u2318 R)."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Reminder:")," If you see errors that mention Package resolution, choose ",(0,r.kt)("strong",{parentName:"p"},"File > Packages > Reset Package Caches")," then try to run the app again.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note:")," You may encounter an error dialog that says ",(0,r.kt)("inlineCode",{parentName:"p"},"Could not connect to React debug server.")," If you see this error, uncomment ",(0,r.kt)("inlineCode",{parentName:"p"},"ITMAPPLICATION_USE_IP = YES")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"iOSSamples.xcconfig")," and try launching the app again.")),(0,r.kt)("p",null,"Once the app is running, you have two ways to open and view an iModel."),(0,r.kt)("p",null,"The first, and easiest, way is to tap ",(0,r.kt)("inlineCode",{parentName:"p"},"Hub iModels")," and open an iModel directly from the iModel Hub. However, this ",(0,r.kt)("em",{parentName:"p"},"does")," require that you have access to a project with an iModel."),(0,r.kt)("p",null,"The other way is to open a snapshot iModel that is loaded onto your device. A simple snapshot iModel is included in the repository at ",(0,r.kt)("inlineCode",{parentName:"p"},"Snapshot iModels/Building Blocks.bim"),". You can copy this onto your device using Finder and then use the ",(0,r.kt)("strong",{parentName:"p"},"Snapshot iModels")," button to open it in the iTwin Sample app."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"/unreal-docs-site/static/images/tutorials/mobile-sdk-ios-getting-started/building_blocks.png",alt:"Building blocks iModel"}))),(0,r.kt)(c,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"conclusion"},"Conclusion"),(0,r.kt)("p",null,"In this tutorial, you learned how to create a new iTwin mobile client, how an iTwin mobile app is divided between native code and React code, and how to load and view an iModel on your device.")))}b.isMDXComponent=!0;var w=function(){return[{id:"introduction",level:2,title:"Introduction",children:[]},{id:"1-set-up-your-environment",level:2,title:"1. Set up your environment",children:[{id:"11-required-materials",level:3,title:"1.1 Required materials",children:[]},{id:"12-suggested-tools",level:3,title:"1.2 Suggested tools",children:[]}]},{id:"2-register-an-application",level:2,title:"2. Register an application",children:[]},{id:"3-clone-the-sample-repository",level:2,title:"3. Clone the sample repository",children:[{id:"31-directory-structure",level:3,title:"3.1 Directory structure",children:[]}]},{id:"4-xcode",level:2,title:"4. Xcode",children:[{id:"41-ui-framework",level:3,title:"4.1 UI framework",children:[]},{id:"42-swift-package-manager",level:3,title:"4.2 Swift Package Manager",children:[]},{id:"43-target-configuration",level:3,title:"4.3 Target configuration",children:[]},{id:"44-xcconfig",level:3,title:"4.4 Xcconfig",children:[]}]},{id:"5-npm-install",level:2,title:"5. NPM Install",children:[]},{id:"6-run-the-app",level:2,title:"6. Run the app",children:[]},{id:"conclusion",level:2,title:"Conclusion",children:[]}]}},95240:function(e,t,n){"use strict";n.r(t);var o=n(8964),i=(n(67294),n(3905)),a=n(1176),r=n(80989),l=n(58822),p=n(85893);n(14473);t.default=function(){var e={headline:o.Pu.title,navigationItems:(0,o.Jt)(),tutorialSteps:(0,p.jsx)(i.Zo,{components:l.d,children:(0,p.jsx)(o.ZP,{})})};return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(r.d,{title:"".concat(o.Pu.title," - Tutorials | iTwin Platform")}),(0,p.jsx)(a.Z,{tutorial:e})]})}},20327:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tutorials/mobile-sdk-ios-gettingstarted",function(){return n(95240)}])}},function(e){e.O(0,[3714,8670,9734,9102,8764,1706,4009,1610,6638,9774,2888,179],(function(){return t=20327,e(e.s=t);var t}));var t=e.O();_N_E=t}]);