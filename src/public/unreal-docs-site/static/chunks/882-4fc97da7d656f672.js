"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[882],{882:function(e,t,n){n.d(t,{Jt:function(){return S},Pu:function(){return l},ZP:function(){return w}});var o=n(36864),a=n(4730),i=n(67294),r=n(3905),s=["components"],l=(i.createElement,{title:"Create and Merge Forked iModel",tile:{name:"Create Forked iModel and Merge it Back to the Main iModel",description:"This tutorial will create a forked iModel and merge it back into the main iModel",thumbnail:"/images/fork-and-merge-thumbnail.svg",href:"/tutorials/create-and-merge-forked-imodel/",durationInMinutes:40,relatedApiIds:["transformations"]}}),d=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)}},p=d("Introduction"),c=d("TutorialSection"),m=d("LinkButton"),u=d("VSCodeIcon"),h=d("PostmanIcon"),f=d("CreateSampleAppButton"),k=d("Alert"),g=d("Title"),T=d("CodeBlock"),y=d("ActionLinkButton"),M=d("ITwinPlatformIcon"),N=d("ContinueLearningSection"),I=d("TileList"),b=d("Tile"),x=d("ResourceTile"),C={metadata:l};function w(e){var t=e.components,n=(0,a.Z)(e,s);return(0,r.kt)("wrapper",(0,o.Z)({},C,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(p,{skillLevel:"Intermediate",durationInMinutes:"40",mdxType:"Introduction"},(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"This quick start is intended to help you get started with forking and merging workflow using Transformations API. In this walk-through you will\ncreate a forked iModel and after modifying it, merge it back to the main iModel.")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(m,{href:"https://code.visualstudio.com/",target:"_blank",title:"Visual Studio Code",icon:(0,r.kt)(u,{mdxType:"VSCodeIcon"}),mdxType:"LinkButton"}),(0,r.kt)(m,{href:"https://www.postman.com/downloads/",target:"_blank",title:"Postman",icon:(0,r.kt)(h,{mdxType:"PostmanIcon"}),mdxType:"LinkButton"})],mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"This tutorial assumes that you already have:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A tool such as ",(0,r.kt)("inlineCode",{parentName:"li"},"Postman")," that can be used to execute HTTP calls. These calls can also be made using the ",(0,r.kt)("strong",{parentName:"li"},"Try it out")," button in the API documentation or\nany other http request tool."),(0,r.kt)("li",{parentName:"ul"},"A created and connected project. You can create a project by following instructions at ",(0,r.kt)("a",{parentName:"li",href:"/tutorials/create-and-query-projects-guide/"},"Create a new iTwin Project"),"."),(0,r.kt)("li",{parentName:"ul"},"A source iModel with some data for the transformation. You can create an iModel from Bentley Sample by following instructions at ",(0,r.kt)("a",{parentName:"li",href:"/tutorials/web-application-quick-start/"},"Create an iModel"),"."),(0,r.kt)("li",{parentName:"ul"},"A way to modify an existing iModel. This can be achieved by using any existing application or by using Synchronization API. You can modify iModel using\nSynchronization API by following instructions at ",(0,r.kt)("a",{parentName:"li",href:"/tutorials/synchronization-storage-tutorial/"},"Synchronize a file from iTwin Storage"),"."))),(0,r.kt)(c,{subSection:!0,mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"understanding-imodel-forking-and-merging"},"Understanding iModel Forking and Merging"),(0,r.kt)("p",null,"First we should understand how forking and merging workflow works."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"/images/fork-and-merge-explanation.png",alt:"Diagram iliustrating fork and merge "})),(0,r.kt)("p",null,"As you can see in the diagram, this workflow involves 2 iModels. The first iModel is the main one and is treated as the source of truth. The second iModel is\nthe forked iModel. This is a separate iModel, which is a duplicate of the first iModel."),(0,r.kt)("p",null,"The workflow starts by connecting this duplicate iModel to the main iModel. This is achieved by CreateFork transformation."),(0,r.kt)("p",null,"Once iModels are connected, you can work with the forked iModel and modify it as needed."),(0,r.kt)("p",null,"Once all changes are ready, you can transfer those changes to the main iModel by using MergeFork transformation."),(0,r.kt)("p",null,"After all of this, the main iModel has all the changes which were made in the forked iModel, but it doesn\u2019t have intermediate changesets, which might not be approved or\nshouldn\u2019t be in the main iModel.")),(0,r.kt)(c,{actions:[(0,r.kt)(f,{scopes:["imodels:modify","transformations:modify","transformations:read"],clientName:"Fork and Merge",mdxType:"CreateSampleAppButton"})],mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"1-register-an-application"},"1. Register an Application"),(0,r.kt)("p",null,"You will need to register an application to use the iTwin Platform APIs. You can use the ",(0,r.kt)("strong",{parentName:"p"},"Register")," button to automatically create your first single page application (SPA). This will allow you to configure ",(0,r.kt)("a",{parentName:"p",href:"/apis/overview/authorization/#authorize-single-page-applications-spa-and-desktopmobile-applications-native"},"Authorization Code Flow for your SPA application")," and get the correct access token."),(0,r.kt)("p",null,"Once generated, you will be shown a few lines of code under the button."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"IMJS_AUTH_CLIENT_CLIENT_ID")," - this is the unique identifier for your application. Displayed on application details page as ",(0,r.kt)("strong",{parentName:"li"},"Client ID"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"IMJS_AUTH_CLIENT_REDIRECT_URI")," - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ",(0,r.kt)("strong",{parentName:"li"},"Redirect URIs"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"IMJS_AUTH_CLIENT_LOGOUT_URI")," - specifies where users can be returned to after logging out. Displayed on application details page as one of ",(0,r.kt)("strong",{parentName:"li"},"Post logout redirect URIs"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"IMJS_AUTH_CLIENT_SCOPES")," - list of accesses granted to the application. Displayed on application details page as ",(0,r.kt)("strong",{parentName:"li"},"Scopes"),".")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Or optionally:")," Register and configure your application manually following instructions in ",(0,r.kt)("a",{parentName:"p",href:"/tutorials/register-and-modify-application/"},"Register and modify an Application")," tutorial.\nMake sure that your application is associated with ",(0,r.kt)("strong",{parentName:"p"},"Transformations API")," and ",(0,r.kt)("strong",{parentName:"p"},"Digital Twin Management")," and has ",(0,r.kt)("inlineCode",{parentName:"p"},"transformations:modify transformations:read imodels:modify")," scopes enabled."))),(0,r.kt)(c,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"2-get-a-token"},"2. Get a token"),(0,r.kt)("p",null,"To make requests to the API, a user token is needed. There are several ways to get it."),(0,r.kt)("h3",{id:"implement-authorization-code-flow-in-the-application"},"Implement Authorization Code Flow in the application"),(0,r.kt)("p",null,"Follow this ",(0,r.kt)("a",{parentName:"p",href:"/apis/overview/authorization/"},"article")," to implement Authorization code workflow in your application."),(0,r.kt)(k,{type:"informational",mdxType:"Alert"},"Here you can use Client ID generated from previous registration step."),(0,r.kt)("h3",{id:"grab-a-user-token-from-api-reference-try-it-out-section"},"Grab a user token from Api reference \u201cTry it out\u201d Section"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Go to ",(0,r.kt)("a",{parentName:"li",href:"/apis/transformations/operations/createfork/"},"Create Configuration")),(0,r.kt)("li",{parentName:"ol"},"Click \u201cTry it out\u201d button."),(0,r.kt)("li",{parentName:"ol"},"On Authorization section select \u201cAuthorizationCode\u201d."),(0,r.kt)("li",{parentName:"ol"},"After popup closes Authorization header with your user token value should be visible."),(0,r.kt)("li",{parentName:"ol"},"Save user token value for this tutorial.")),(0,r.kt)(k,{type:"informational",mdxType:"Alert"},"Use user token to replace JWT_TOKEN dynamic parameter in the next steps.")),(0,r.kt)(c,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"3-create-duplicate-imodel"},"3. Create duplicate iModel"),(0,r.kt)("p",null,"The forked iModel is a duplicate copy which has connection to the main instance. iModel is connected to another one when each element in it has a link to the original\nelement in the main iModel. To create a forked iModel you need to duplicate iModel and then connect it by running CreateFork transformation."),(0,r.kt)("p",null,"You can use iModels API to create exact copy of the main iModel.")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(g,{mdxType:"Title"},"Request Syntax"),(0,r.kt)(T,{language:"http",code:"GET https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000/changesets?$top=1&$orderBy=index%20desc HTTP/1.1",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Request Headers"),(0,r.kt)(T,{language:"http",code:"Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Response Body"),(0,r.kt)(T,{language:"json",code:'{\n  "changesets": [{\n    "id": "LATEST_CHANGESET_ID",\n    "displayName": "2",\n    "description": "Changeset description",\n    "index": 40,\n    "parentId": "PARENT_CHANGESET_ID",\n    "briefcaseId": 1,\n    "fileSize": 1,\n    "state": "fileUploaded",\n    "containingChanges": 10,\n    "creatorId": "00000000-0000-0000-0000-000000000000",\n    "pushDateTime": "0000-00-00T00:00:00.0000000Z",\n    "_links": {\n      "self": {\n        "href": "https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000/changesets/LATEST_CHANGESET_ID"\n      },\n      "creator": {\n        "href": "https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000/users/00000000-0000-0000-0000-000000000000"\n      }\n    }\n  }],\n  "_links": {\n    "self": {\n      "href": "https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000/changesets?$skip=0&$top=1&$orderBy=index%20desc"\n    },\n    "prev": null,\n    "next": {\n      "href": "https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000/changesets?$skip=1&$top=1&$orderBy=index%20desc"\n    }\n  }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"get-imodels-latest-changeset"},"Get iModels latest changeset"),(0,r.kt)("p",null,"To create exact copy of an iModel, first the latest changeset id is required. You can retrieve this by sending GET request to\n",(0,r.kt)("a",{parentName:"p",href:"https://api.bentley.com/imodels/%7BIMODEL_ID%7D/changesets?$top=1&$orderBy=index%20desc"},"https://api.bentley.com/imodels/{IMODEL_ID}/changesets?$top=1&$orderBy=index%20desc")," endpoint. You will need to replace ",(0,r.kt)("inlineCode",{parentName:"p"},"{IMODEL_ID}")," with the id of the main iModel.\nResponse body will contain a single changeset instance with the required id.")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(g,{mdxType:"Title"},"Request Syntax"),(0,r.kt)(T,{language:"http",code:"POST https://api.bentley.com/imodels HTTP/1.1",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Request Headers"),(0,r.kt)(T,{language:"http",code:"Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Request Body"),(0,r.kt)(T,{language:"json",code:'{\n  "projectId": "00000000-0000-0000-0000-000000000000",\n  "name": "COPY_IMODEL_NAME",\n  "template": {\n    "iModelId": "00000000-0000-0000-0000-000000000000",\n    "changesetId": "LATEST_CHANGESET_ID"\n  }\n}',mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Response Body"),(0,r.kt)(T,{language:"json",code:'{\n  "iModel": {\n    "id": "00000000-0000-0000-0000-000000000000",\n    "displayName": "COPY_IMODEL_NAME",\n    "name": "COPY_IMODEL_NAME",\n    "description": null,\n    "createdDateTime": "0000-00-00T00:00:00.0000000Z",\n    "state": "notInitialized",\n    "projectId": "00000000-0000-0000-0000-000000000000",\n    "extent": null,\n    "_links": {\n      "creator": {\n        "href": "https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000/users/00000000-0000-0000-0000-000000000000"\n      },\n      "namedVersions": {\n        "href": "https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000/namedversions"\n      },\n      "changesets": {\n        "href": "https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000/changesets"\n      },\n      "upload": null,\n      "complete": null\n    }\n  }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"duplicate-imodel-using-imodels-api"},"Duplicate iModel using iModels API"),(0,r.kt)("p",null,"iModel can be duplicated by using ",(0,r.kt)("a",{parentName:"p",href:"/apis/imodels/operations/create-imodel/"},"Create iModel")," endpoint in iModels API. You will need to send POST request to\n",(0,r.kt)("a",{parentName:"p",href:"https://api.bentley.com/imodels/"},"https://api.bentley.com/imodels/")," endpoint with filled in body payload with this information:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"projectId")," - id of the project where iModel should be created."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"name")," - name of the duplicate iModel."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"description")," - description of the duplicate iModel."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"template"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"iModelId")," - id of the main iModel."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"changesetId")," - id of the latest changeset. Use ",(0,r.kt)("inlineCode",{parentName:"li"},"LATEST_CHANGESET_ID")," value from the response body of the previous step."))))),(0,r.kt)(c,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"4-run-createfork-transformation"},"4. Run CreateFork transformation")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(g,{mdxType:"Title"},"Request Syntax"),(0,r.kt)(T,{language:"http",code:"POST https://api.bentley.com/transformations/configurations/createfork HTTP/1.1",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Request Headers"),(0,r.kt)(T,{language:"http",code:"Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Request Body"),(0,r.kt)(T,{language:"json",code:'{\n  "transformName": "Example name",\n  "sourceProjectId": "00000000-0000-0000-0000-000000000000",\n  "sourceIModelId": "00000000-0000-0000-0000-000000000000",\n  "targetProjectId": "00000000-0000-0000-0000-000000000000",\n  "targetIModelId": "00000000-0000-0000-0000-000000000000",\n  "comment": "Example comment"\n}',mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Response Body"),(0,r.kt)(T,{language:"json",code:'{\n  "configuration": {\n    "id": "00000000-0000-0000-0000-000000000000",\n    "transformName": "Example name",\n    "comment": "Example comment",\n    "createdDateTime": "0000-00-00T00:00:00.0000000Z",\n    "modifiedDateTime": "0000-00-00T00:00:00.0000000Z",\n    "_links": {\n      "sourceIModel": {\n        "href": "https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000"\n      },\n      "targetIModel": {\n        "href": "https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000"\n      },\n      "sourceProject": {\n        "href": "https://api.bentley.com/projects/00000000-0000-0000-0000-000000000000"\n      },\n      "targetProject": {\n        "href": "https://api.bentley.com/projects/00000000-0000-0000-0000-000000000000"\n      }\n    }\n  }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"create-configuration-for-createfork-transformation"},"Create configuration for CreateFork transformation"),(0,r.kt)("p",null,"After the iModel is duplicated, it needs to be connected to the main iModel. This is done by Create Fork transformation. To run it you first need to create a configuration\nfor it. You can do this by sending POST request to ",(0,r.kt)("a",{parentName:"p",href:"https://api.bentley.com/transformations/configurations/createfork"},"https://api.bentley.com/transformations/configurations/createfork")," endpoint with filled in body payload with\nthis information:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"transformName")," - free form text field so you could name your configuration."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"sourceProjectId")," - projectId of the main iModel."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"sourceIModelId")," - iModelId of the main iModel."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"targetProjectId")," - projectId of the duplicate iModel."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"targetIModelId")," - iModelId of the duplicate iModel."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"comment")," - a comment of the transformation.")),(0,r.kt)("p",null,"You can execute the request in ",(0,r.kt)("a",{parentName:"p",href:"https://developer.bentley.com/apis/transformations/operations/createfork/"},"CreateFork")," page, \u201cTry it out\u201d section."),(0,r.kt)("p",null,"After executing the request, you should save returned configuration Id from the response as it will be needed in several later steps."),(0,r.kt)(k,{type:"informational",mdxType:"Alert"},"Use this configuration id to replace FORKING_CONFIGURATION_ID dynamic parameter in the next steps.")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(g,{mdxType:"Title"},"Request Syntax"),(0,r.kt)(T,{language:"http",code:"POST https://api.bentley.com/transformations/ HTTP/1.1",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Request Headers"),(0,r.kt)(T,{language:"http",code:"Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Request Body"),(0,r.kt)(T,{language:"json",code:'{\n  "configurationId": "FORKING_CONFIGURATION_ID"\n}',mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Response Body"),(0,r.kt)(T,{language:"json",code:'{\n  "transformation": {\n    "errorMessage": "",\n    "processedElementCount": 123,\n    "totalElementCount": 123,\n    "startedDateTime": "0000-00-00T00:00:00.0000000Z",\n    "finishedDateTime": "0000-00-00T00:00:00.0000000Z",\n    "sourceChangeSetId": "1",\n    "lastTargetChangesetPushed": "2",\n    "_links": {\n      "configuration": {\n        "href": "https://dev-api.bentley.com/transformations/configurations/00000000-0000-0000-0000-000000000000"\n      }\n    },\n    "status": "Succeeded",\n    "id": "00000000-0000-0000-0000-000000000000"\n  }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"create-createfork-transformation"},"Create CreateFork transformation"),(0,r.kt)("p",null,"You can create transformation by sending POST request to ",(0,r.kt)("a",{parentName:"p",href:"https://api.bentley.com/transformations"},"https://api.bentley.com/transformations")," endpoint with the payload indicating which configuration should be used.\nThe request is submitting a transformation job based on the configuration Id value that was provided."),(0,r.kt)("p",null,"You can execute the request in ",(0,r.kt)("a",{parentName:"p",href:"/apis/transformations/operations/create-transformation/"},"Create transformation")," page, \u201cTry it out\u201d section."),(0,r.kt)("p",null,"Response indicates the current status of the transformation. After submitting a transformation the status is \u201cCreated\u201d which means that the transformation is enqueued and waiting to start.\nPossible status messages:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Created")," - transformation is created and waiting to be started. The transformation should start automatically, no additional actions are needed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Started")," - transformation is started and waiting to finish."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Succeeded")," - transformation succeeded. You can open the target iModel and inspect the results."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Failed")," - transformation failed. Check the errorMessage node for more information on what happened.")),(0,r.kt)("p",null,"After executing the request, save returned transformation Id from the response.")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(g,{mdxType:"Title"},"Request Syntax"),(0,r.kt)(T,{language:"http",code:"GET https://api.bentley.com/transformations/{savedTransformationId} HTTP/1.1",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Request Headers"),(0,r.kt)(T,{language:"http",code:"Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Response Headers"),(0,r.kt)(T,{language:"http",code:"Content-Type: application/json",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Response Body"),(0,r.kt)(T,{language:"json",code:'{\n  "transformation": {\n    "errorMessage": "",\n    "processedElementCount": 123,\n    "totalElementCount": 123,\n    "startedDateTime": "0000-00-00T00:00:00.0000000Z",\n    "finishedDateTime": "0000-00-00T00:00:00.0000000Z",\n    "sourceChangeSetId": "1",\n    "lastTargetChangesetPushed": "2",\n    "_links": {\n      "configuration": {\n        "href": "https://dev-api.bentley.com/transformations/configurations/00000000-0000-0000-0000-000000000000"\n      }\n    },\n    "status": "Succeeded",\n    "id": "00000000-0000-0000-0000-000000000000"\n  }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"waiting-for-transformation-to-finish"},"Waiting for transformation to finish"),(0,r.kt)("p",null,"Send a GET request to ",(0,r.kt)("a",{parentName:"p",href:"https://api.bentley.com/transformations/%7ByourTransformationId%7D"},"https://api.bentley.com/transformations/{yourTransformationId}")," endpoint to get an updated transformation status.\nYou can execute the request in ",(0,r.kt)("a",{parentName:"p",href:"/apis/transformations/operations/get-transformation/"},"Get transformation")," page, \u201cTry it out\u201d section."),(0,r.kt)("p",null,"Query for the transformation multiple times until the ",(0,r.kt)("strong",{parentName:"p"},"status")," changes from ",(0,r.kt)("strong",{parentName:"p"},"Created")," to ",(0,r.kt)("strong",{parentName:"p"},"Started")," and eventually to ",(0,r.kt)("strong",{parentName:"p"},"Succeeded"),".")),(0,r.kt)(c,{actions:[(0,r.kt)(y,{href:"/tutorials/synchronization-storage-tutorial/",target:"_blank",title:"Synchronize a file from iTwin Storage",buttonText:"Open",icon:(0,r.kt)(M,{mdxType:"ITwinPlatformIcon"}),mdxType:"ActionLinkButton"})],mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"5-modify-forked-imodel"},"5. Modify forked iModel"),(0,r.kt)("p",null,"After Create Fork transformation succeeds, forked iModel is ready to be modified. You must have at least one new changeset pushed to the forked iModel before it can\nbe merged back to the main iModel. There are multiple ways to modify iModel and you can use any of them. If you have no easy way to modify iModel you can follow\n",(0,r.kt)("a",{parentName:"p",href:"/tutorials/synchronization-storage-tutorial/"},"Synchronize a file from iTwin Storage")," tutorial from step 4. You will need to use the forked iModel that was created\nin this tutorial instead of creating a new one and you can reuse the registered application and the access token from this tutorial. That tutorial will allow you\nto connect a new file to the iModel and synchronize it, which will bring new changes to the forked iModel and will modify it in the process.")),(0,r.kt)(c,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"6-run-mergefork-transformation"},"6. Run MergeFork transformation")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(g,{mdxType:"Title"},"Request Syntax"),(0,r.kt)(T,{language:"http",code:"POST https://api.bentley.com/transformations/configurations/mergefork HTTP/1.1",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Request Headers"),(0,r.kt)(T,{language:"http",code:"Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Request Body"),(0,r.kt)(T,{language:"json",code:'{\n  "transformName": "Example name",\n  "sourceProjectId": "00000000-0000-0000-0000-000000000000",\n  "sourceIModelId": "00000000-0000-0000-0000-000000000000",\n  "targetProjectId": "00000000-0000-0000-0000-000000000000",\n  "targetIModelId": "00000000-0000-0000-0000-000000000000",\n  "comment": "Example comment",\n  "transformParameters": {\n    "configurationId": "FORKING_CONFIGURATION_ID"\n  }\n}',mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Response Body"),(0,r.kt)(T,{language:"json",code:'{\n  "configuration": {\n    "id": "00000000-0000-0000-0000-000000000000",\n    "transformName": "Example name",\n    "comment": "Example comment",\n    "createdDateTime": "0000-00-00T00:00:00.0000000Z",\n    "modifiedDateTime": "0000-00-00T00:00:00.0000000Z",\n    "transformParameters": {\n      "_links": {\n        "configuration": {\n          "href": "https://api.bentley.com/transformations/configurations/FORKING_CONFIGURATION_ID"\n        }\n      }\n    },\n    "_links": {\n      "sourceIModel": {\n        "href": "https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000"\n      },\n      "targetIModel": {\n        "href": "https://api.bentley.com/imodels/00000000-0000-0000-0000-000000000000"\n      },\n      "sourceProject": {\n        "href": "https://api.bentley.com/projects/00000000-0000-0000-0000-000000000000"\n      },\n      "targetProject": {\n        "href": "https://api.bentley.com/projects/00000000-0000-0000-0000-000000000000"\n      }\n    }\n  }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"create-configuration-for-mergefork-transformation"},"Create configuration for MergeFork transformation"),(0,r.kt)("p",null,"Once the forked iModel has new changesets it is ready to be merged. Merging the forked iModel back into the main iModel is done by Merge Fork transformation.\nTo run it you first need to create a configuration for it. You can do this by sending POST request to\n",(0,r.kt)("a",{parentName:"p",href:"https://api.bentley.com/transformations/configurations/mergefork"},"https://api.bentley.com/transformations/configurations/mergefork")," endpoint with filled in body payload with this information:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"transformName")," - free form text field so you could name your configuration."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"sourceProjectId")," - projectId of the forked iModel."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"sourceIModelId")," - iModelId of the forked iModel."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"targetProjectId")," - projectId of the main iModel."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"targetIModelId")," - iModelId of the main iModel."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"comment")," - a comment of the transformation.")),(0,r.kt)("p",null,"You can execute the request in ",(0,r.kt)("a",{parentName:"p",href:"https://developer.bentley.com/apis/transformations/operations/mergefork/"},"MergeFork")," page, \u201cTry it out\u201d section."),(0,r.kt)(k,{type:"informational",mdxType:"Alert"},"Source and target iModels are switched in MergeFork configuration. This means that source project and iModel information comes from the forked iModel and target project and iModel information comes from the main iModel.")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(g,{mdxType:"Title"},"Request Syntax"),(0,r.kt)(T,{language:"http",code:"POST https://api.bentley.com/transformations/ HTTP/1.1",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Request Headers"),(0,r.kt)(T,{language:"http",code:"Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Request Body"),(0,r.kt)(T,{language:"json",code:'{\n  "configurationId": "CONFIGURATION_ID_FROM_LAST_STEP"\n}',mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Response Body"),(0,r.kt)(T,{language:"json",code:'{\n  "transformation": {\n    "errorMessage": "",\n    "processedElementCount": 123,\n    "totalElementCount": 123,\n    "startedDateTime": "0000-00-00T00:00:00.0000000Z",\n    "finishedDateTime": "0000-00-00T00:00:00.0000000Z",\n    "sourceChangeSetId": "1",\n    "lastTargetChangesetPushed": "2",\n    "_links": {\n      "configuration": {\n        "href": "https://dev-api.bentley.com/transformations/configurations/00000000-0000-0000-0000-000000000000"\n      }\n    },\n    "status": "Succeeded",\n    "id": "00000000-0000-0000-0000-000000000000"\n  }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"create-mergefork-transformation"},"Create MergeFork transformation"),(0,r.kt)("p",null,"You can create transformation by sending POST request to ",(0,r.kt)("a",{parentName:"p",href:"https://api.bentley.com/transformations"},"https://api.bentley.com/transformations")," endpoint with the payload indicating which configuration should be used.\nThe request is submitting a transformation job based on the configuration Id value that was provided."),(0,r.kt)("p",null,"You can execute the request in ",(0,r.kt)("a",{parentName:"p",href:"/apis/transformations/operations/create-transformation/"},"Create transformation")," page, \u201cTry it out\u201d section."),(0,r.kt)("p",null,"Response indicates the current status of the transformation. After submitting a transformation the status is \u201cCreated\u201d which means that the transformation is enqueued and waiting to start.\nPossible status messages:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Created")," - transformation is created and waiting to be started. The transformation should start automatically, no additional actions are needed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Started")," - transformation is started and waiting to finish."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Succeeded")," - transformation succeeded. You can open target the iModel and inspect the results."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Failed")," - transformation failed. Check the errorMessage node for more information on what happened.")),(0,r.kt)("p",null,"After executing the request, save returned transformation Id from the response.")),(0,r.kt)(c,{subSection:!0,actions:[(0,r.kt)(g,{mdxType:"Title"},"Request Syntax"),(0,r.kt)(T,{language:"http",code:"GET https://api.bentley.com/transformations/{savedTransformationId} HTTP/1.1",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Request Headers"),(0,r.kt)(T,{language:"http",code:"Accept: application/json\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Response Headers"),(0,r.kt)(T,{language:"http",code:"Content-Type: application/json",mdxType:"CodeBlock"}),(0,r.kt)(g,{mdxType:"Title"},"Response Body"),(0,r.kt)(T,{language:"json",code:'{\n  "transformation": {\n    "errorMessage": "",\n    "processedElementCount": 123,\n    "totalElementCount": 123,\n    "startedDateTime": "0000-00-00T00:00:00.0000000Z",\n    "finishedDateTime": "0000-00-00T00:00:00.0000000Z",\n    "sourceChangeSetId": "1",\n    "lastTargetChangesetPushed": "2",\n    "_links": {\n      "configuration": {\n        "href": "https://dev-api.bentley.com/transformations/configurations/00000000-0000-0000-0000-000000000000"\n      }\n    },\n    "status": "Succeeded",\n    "id": "00000000-0000-0000-0000-000000000000"\n  }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h3",{id:"waiting-for-transformation-to-finish-1"},"Waiting for transformation to finish"),(0,r.kt)("p",null,"Send a GET request to ",(0,r.kt)("a",{parentName:"p",href:"https://api.bentley.com/transformations/%7ByourTransformationId%7D"},"https://api.bentley.com/transformations/{yourTransformationId}")," endpoint to get an updated transformation status.\nYou can execute the request in ",(0,r.kt)("a",{parentName:"p",href:"/apis/transformations/operations/get-transformation/"},"Get transformation")," page, \u201cTry it out\u201d section."),(0,r.kt)("p",null,"Query for the transformation multiple times until the ",(0,r.kt)("strong",{parentName:"p"},"status")," changes from ",(0,r.kt)("strong",{parentName:"p"},"Created")," to ",(0,r.kt)("strong",{parentName:"p"},"Started")," and eventually to ",(0,r.kt)("strong",{parentName:"p"},"Succeeded"),"."),(0,r.kt)("p",null,"Go to ",(0,r.kt)("a",{parentName:"p",href:"/my-itwins/"},"My iTwins")," and view the target iModel.")),(0,r.kt)(c,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"7-conclusion"},"7. Conclusion"),(0,r.kt)("p",null,"We have successfully duplicated the main iModel, created a configuration, ran transformation that connected the forked iModel to the main iModel, waited for the transformation\nto complete. Then after modifying the forked iModel we have successfully created a configuration, ran a transformation that merged back the changes to the main\niModel and inspected the results.")),(0,r.kt)(N,{mdxType:"ContinueLearningSection"},(0,r.kt)("h2",{id:"continue-learning"},"Continue learning"),(0,r.kt)(I,{mdxType:"TileList"},(0,r.kt)(b,{name:"Synchronize a file from iTwin Storage",thumbnail:"/images/synchronizationThumbnail.png",description:"Walk-through how to synchronize a file from iTwin Storage to an iModel using Synchronization API.",href:"/tutorials/synchronization-storage-tutorial/",mdxType:"Tile"}),(0,r.kt)(b,{name:"Synchronize a file from Azure Blob Storage",thumbnail:"/images/synchronizationThumbnail.png",description:"Walk-through how to synchronize a file from Azure Blob Storage to an iModel using Synchronization API.",href:"/tutorials/synchronization-blob-tutorial/",mdxType:"Tile"}),(0,r.kt)(b,{name:"Unmap an Azure Blob Storage file from an iModel",thumbnail:"/images/synchronizationThumbnail.png",description:"Walk-through how to unmap an Azure Blob Storage file from an iModel using Synchronization API.",href:"/tutorials/synchronization-storage-tutorial/",mdxType:"Tile"})),(0,r.kt)("h2",{id:"more-resources-that-you-may-like"},"More resources that you may like"),(0,r.kt)(I,{mdxType:"TileList"},(0,r.kt)(x,{title:"CreateFork documentation",href:"/apis/transformations/operations/createfork/",description:"iModel Transformations API CreateFork endpoint documentation.",mdxType:"ResourceTile"}),(0,r.kt)(x,{title:"MergeFork documentation",href:"/apis/transformations/operations/mergefork/",description:"iModel Transformations API MergeFork endpoint documentation.",mdxType:"ResourceTile"}),(0,r.kt)(x,{title:"Transformations API documentation",href:"/apis/transformations/overview/",description:"iModel Transformations API documentation.",mdxType:"ResourceTile"}))))}w.isMDXComponent=!0;var S=function(){return[{id:"introduction",level:2,title:"Introduction",children:[]},{id:"prerequisites",level:2,title:"Prerequisites",children:[]},{id:"understanding-imodel-forking-and-merging",level:2,title:"Understanding iModel Forking and Merging",children:[]},{id:"1-register-an-application",level:2,title:"1. Register an Application",children:[]},{id:"2-get-a-token",level:2,title:"2. Get a token",children:[{id:"implement-authorization-code-flow-in-the-application",level:3,title:"Implement Authorization Code Flow in the application",children:[]},{id:"grab-a-user-token-from-api-reference-try-it-out-section",level:3,title:"Grab a user token from Api reference \u201cTry it out\u201d Section",children:[]}]},{id:"3-create-duplicate-imodel",level:2,title:"3. Create duplicate iModel",children:[{id:"get-imodels-latest-changeset",level:3,title:"Get iModels latest changeset",children:[]},{id:"duplicate-imodel-using-imodels-api",level:3,title:"Duplicate iModel using iModels API",children:[]}]},{id:"4-run-createfork-transformation",level:2,title:"4. Run CreateFork transformation",children:[{id:"create-configuration-for-createfork-transformation",level:3,title:"Create configuration for CreateFork transformation",children:[]},{id:"create-createfork-transformation",level:3,title:"Create CreateFork transformation",children:[]},{id:"waiting-for-transformation-to-finish",level:3,title:"Waiting for transformation to finish",children:[]}]},{id:"5-modify-forked-imodel",level:2,title:"5. Modify forked iModel",children:[]},{id:"6-run-mergefork-transformation",level:2,title:"6. Run MergeFork transformation",children:[{id:"create-configuration-for-mergefork-transformation",level:3,title:"Create configuration for MergeFork transformation",children:[]},{id:"create-mergefork-transformation",level:3,title:"Create MergeFork transformation",children:[]},{id:"waiting-for-transformation-to-finish-1",level:3,title:"Waiting for transformation to finish",children:[]}]},{id:"7-conclusion",level:2,title:"7. Conclusion",children:[]},{id:"continue-learning",level:2,title:"Continue learning",children:[]},{id:"more-resources-that-you-may-like",level:2,title:"More resources that you may like",children:[]}]}}}]);