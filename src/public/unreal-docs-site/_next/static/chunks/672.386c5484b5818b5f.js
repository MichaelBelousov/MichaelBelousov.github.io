"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[672],{50672:function(e,t,i){i.r(t),t.default='\x3c!-- Copyright (c) Bentley Systems, Incorporated. All rights reserved.            --\x3e\n\x3c!-- See LICENSE in the project root for license terms and full copyright notice. --\x3e\n\n# Key features\n\n- Check the quality of a digital twin through schema and data validation\n- Check geometry clashes between design categories in a digital twin\n- Perform advanced logical checks and detect inconsistencies through machine learning enabled validation\n- Define suppression rules for clash detection based on classifications or categories\n\n<div className="feature-tiles">\n    <div className="tile-row centered">\n        <div>\n            <h2>Validate digital twin data</h2>\n            <p>Set up validation rules to ensure correct classification and availability of data in a digital twin. Logically group validation rules into tests and auto-trigger validation tests as new data is introduced to the digital twin.</p>\n        </div>\n        <img src="/documentation/validation/iTwinPlatform_illustrations_Validate_DT_data.svg" alt="Validate digital twin data" title="Validate digital twin data"/>\n    </div>\n    <div className="tile-row-reverse centered">\n        <div>\n            <h2>Detect geometry clashes</h2>\n            <p>Perform clash detection between different disciplines and between different design categories, along with the ability to define schema-based suppression rules. The clash engine also supports features like overlap calculation, surface touching suppression, and reference hierarchy inclusion.</p>\n        </div>\n        <img src="/documentation/validation/iTwinPlatform_illustrations_Detect_Geometry_Clashes.svg" alt="Detect geometry clashes" title="Detect geometry clashes"/>\n    </div>\n</div>\n'}}]);