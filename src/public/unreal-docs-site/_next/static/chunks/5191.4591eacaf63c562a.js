"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5191],{95191:function(e,t,a){a.r(t),t.default="# Data Management\n\nThe Data Management API provides the ability to access and manage the data associated with infrastructure projects including engineering files, reality data, digital component libraries, and iModels.\n\n## Files and Folders\n\nThe Storage API provides the ability to access and manage files that are stored in the cloud and associated with a project. A project includes a root folder which contains the files. Files can be organized in a hierarchical structure with folders. Each folder can include files as well as other subfolders. The Projects API provides the ability to get the root folder for a project.  The Storage API provides the ability to manage the files and folders underneath the root folder.\n\n## Reality Data\n\nReality modeling is the process of capturing the physical reality of an infrastructure asset, creating a representation of it, and maintaining it through continuous surveys. Reality models add real-world digital context to infrastructure projects. The Reality Data API provides the ability to retrieve information about the reality data that is associated with an infrastructure project. \n\n## Digital component libraries\n\nComponents Center is a cloud-based digital component library and catalog management service. It allows users to efficiently manage their digital component libraries while providing their designers with approved, proprietary components as well as manufacturer's content via subscriptions. The geometry and rich data associated with the components are available for use in all phases of the component's lifecycle. The Digital Library API provides the ability to retrieve digital components and catalogs.\n\n## iModels\n\nThe iModels API provides the ability to access and manage information about iModels.  An iModel is a specialized information container for exchanging data associated with the lifecycle of infrastructure assets. iModels were created to facilitate the sharing and distribution of information regardless of the source and format of the information. Project teams use iModels to ensure that information flows easily, completely, and accurately between and within design, construction, and operations environments. iModels are self-describing, geometrically precise, open, portable, and secure. iModels encapsulate component information, business properties, geometry, graphics, and relationships in a format that is open, providing standard interfaces for applications from multiple vendors.\n\n### iModelHub\n\niModelHub is a cloud service that enables alignment, accountability and accessibility of infrastructure digital twins. It is the control center for iModels and is responsible for coordinating concurrent access to iModels as well as changes made to them in a form of ChangeSets. iModelHub's main role is to maintain the sequence of ChangeSets that forms an iModel's timeline. Like an accounting system does for financial transactions, iModelHub holds a ledger of all changes to an iModel. With iModelHub you no longer need to question what might have changed. It stores and manages the record of who did what and when. iModelHub stores the change itself rather than just the result of the change.\n\n### ChangeSets\n\nA ChangeSet represents a group of changes to an iModel. ChangeSets are created whenever a local copy of the iModel is modified and reflect the union of all additions, deletions, and modifications over a period of time. ChangeSets are assigned an identifier when they are uploaded to iModelHub and every ChangeSet stores the identifier of its parent ChangeSet. In this way the chain of ChangeSets for an iModel in iModelHub forms its \"timeline of changes\".\n\n### Named versions\n\nEvery ChangeSet on the timeline creates a new version of the iModel. However, some points on the timeline can represent important milestones or significant events to be saved (for example, for a design review). A Named Version can be used to mark a point on the timeline with a name. Named versions are cached to make them faster to access.\n\n### Thumbnails\n\nA thumbnail is a small image that users can provide for an iModel.\n"}}]);