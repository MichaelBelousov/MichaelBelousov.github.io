"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4746],{54746:function(e,t,n){n.d(t,{Pu:function(){return l},ZP:function(){return b},Jt:function(){return I}});var o=n(159),i=n(91164),a=n(67294),r=n(3905),s=["components"],l=(a.createElement,{title:"Synchronize a file from iTwin Storage",tile:{name:"Synchronize a file from iTwin Storage",description:"Walk-through how to synchronize a file from iTwin Storage to an iModel using Synchronization API.",thumbnail:"/unreal-docs-site/images/synchronizationThumbnail.png",href:"/tutorials/synchronization-tutorial/",durationInMinutes:20,relatedApiIds:["synchronization","imodels","storage"]}}),c=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)}},d=c("Introduction"),p=c("TutorialSection"),u=c("CreateSampleAppButton"),h=c("CodeBlock"),m=c("Alert"),k=c("ContinueLearningSection"),f=c("TileList"),g=c("Tile"),y=c("ResourceTile"),T={metadata:l};function b(e){var t=e.components,n=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,o.Z)({},T,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(d,{skillLevel:"Basic",durationInMinutes:"30",mdxType:"Introduction"},(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"This is a walk-through how to synchronize a file from iTwin Storage to an iModel using Synchronization API. Synchronization API works in project and iModel context. To synchronize a set of files a connection has to be created. Connection is an aggregation of properties like file metadata which is needed for synchronization. Connections can be run on demand which starts a file specified in the connection conversion to an iModel.")),(0,r.kt)(p,{actions:[(0,r.kt)(u,{clientName:"Synchronization tutorial",scopes:["synchronization:read","synchronization:modify","imodels:read","imodels:modify","storage:read"],mdxType:"CreateSampleAppButton"})],mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"1-register-an-application"},"1. Register an Application"),(0,r.kt)("p",null,"You will need to register an application to use the iTwin Platform APIs. You can use the ",(0,r.kt)("strong",{parentName:"p"},"Register")," button to automatically create your first single page application (SPA). This will allow you to configure ",(0,r.kt)("a",{parentName:"p",href:"/apis/overview/authorization/#authorizesinglepageapplicationsspaanddesktopmobileapplicationsnative"},"Authorization Code Flow for your SPA application")," and get the correct access token."),(0,r.kt)("p",null,"Once generated, you will be shown a few lines of code under the button."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"IMJS_AUTH_CLIENT_CLIENT_ID")," - this is the unique identifier for your application. Displayed on application details page as ",(0,r.kt)("strong",{parentName:"li"},"Client ID"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"IMJS_AUTH_CLIENT_REDIRECT_URI")," - specifies where users are redirected after they have chosen whether or not to authenticate your app. Displayed on application details page as one of ",(0,r.kt)("strong",{parentName:"li"},"Redirect URIs"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"IMJS_AUTH_CLIENT_LOGOUT_URI")," - specifies where users can be returned to after logging out. Displayed on application details page as one of ",(0,r.kt)("strong",{parentName:"li"},"Post logout redirect URIs"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"IMJS_AUTH_CLIENT_SCOPES")," - list of accesses granted to the application. Displayed on application details page as ",(0,r.kt)("strong",{parentName:"li"},"Scopes"),".")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Or optionally:")," Register and configure your application manually following instructions in ",(0,r.kt)("a",{parentName:"p",href:"/tutorials/register-and-modify-application/"},"Register and modify an Application")," tutorial.\nMake sure that your application is associated with ",(0,r.kt)("strong",{parentName:"p"},"Synchronization"),", ",(0,r.kt)("strong",{parentName:"p"},"iModels")," and ",(0,r.kt)("strong",{parentName:"p"},"Storage")," APIs and has ",(0,r.kt)("inlineCode",{parentName:"p"},"synchronization:read synchronization:modify imodels:read imodels:modify storage:read")," scopes enabled."))),(0,r.kt)(p,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"2-get-a-token"},"2. Get a token"),(0,r.kt)("p",null,"To make request to API user token is needed. There are several ways to get it."),(0,r.kt)("h3",{id:"implement-authorization-code-flow-in-the-application"},"Implement Authorization Code Flow in the application"),(0,r.kt)("p",null,"Follow this ",(0,r.kt)("a",{parentName:"p",href:"/apis/overview/authorization/"},"article")," to implement Authorization code workflow in your application."),(0,r.kt)("h3",{id:"grab-a-token-from-api-reference-try-it-section"},"Grab a token from Api reference \u201cTry it\u201d Section"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Go to ",(0,r.kt)("a",{parentName:"li",href:"/apis/synchronization/operations/create-connection/"},"Create Connection - Synchronization")),(0,r.kt)("li",{parentName:"ol"},"Click \u201cTry it\u201d button."),(0,r.kt)("li",{parentName:"ol"},"On Authorization section select \u201cAuthorizationCode\u201d."),(0,r.kt)("li",{parentName:"ol"},"After popup closes Authorization header with token value should be visible."),(0,r.kt)("li",{parentName:"ol"},"Save token value for this tutorial."))),(0,r.kt)(p,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"3-create-an-imodel"},"3. Create an iModel"),(0,r.kt)("p",null,"An iModel is a specialized information container for exchanging data associated with the lifecycle of infrastructure assets.\niModels were created to facilitate the sharing and distribution of information regardless of the source and format of the information."),(0,r.kt)("p",null,"iTwin Platform iModels API is based on iModelHub cloud service which enables alignment, accountability and accessibility of infrastructure digital twins.\nIt is the control center for iModels and is responsible for coordinating concurrent access to iModels as well as changes made to them.")),(0,r.kt)(p,{subSection:!0,actions:[(0,r.kt)(h,{language:"http",code:"POST https://api.bentley.com/imodels HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"request"},"Request"),(0,r.kt)("p",null,"An empty iModel is created by sending a HTTP POST message to ",(0,r.kt)("a",{parentName:"p",href:"https://api.bentley.com/imodels/"},"https://api.bentley.com/imodels/")," endpoint with the payload describing the iModel to be created.")),(0,r.kt)(p,{subSection:!0,actions:[(0,r.kt)(h,{language:"json",code:'{\n      "projectId": "PROJECT_ID",\n      "name": "Sun City Renewable-energy Plant",\n      "description": "Overall model of solar farms in Sun City",\n      "extent": {\n          "southWest": {\n            "latitude": 46.13267702834806,\n            "longitude": 7.672120009938448\n          },\n          "northEast": {\n            "latitude": 46.302763954781234,\n            "longitude": 7.835541640797823\n          }\n        }\n    }',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"request-body"},"Request Body"),(0,r.kt)("p",null,"There are two required properties for the create iModel payload."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"name")," - iModel name is required which uniquely identifies the iModel within the Project. ",(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"projectId")," - provides Project identifier that created iModel will belong to. Project identifier is a required property. ",(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"description")," - free form text field so you could give more information about the iModel. ",(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"extent")," - iModels usually are placed at some location on the Earth.\nThis property allows to specify the maximum rectangular area on the Earth which encloses the iModel.\nThe maximum extent is used to help keep your iModel clean.\nWhen new elements are imported, those outside the extent will be flagged for further processing.\nThis extent will also help to zoom to the area of interest in web viewers."),(0,r.kt)(m,{type:"informational",mdxType:"Alert"},"Note that after completing this step, you will be provided with both a PROJECT_ID (i.e. ProjectId) and an iModel_ID which will be required in a later step.")),(0,r.kt)(p,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"4-get-fileid-from-storage-api"},"4. Get fileId from Storage API"),(0,r.kt)("p",null,"iTwin File Storage API store files and folders under some folder. To get root files and folder we can use \u201cGet top level folders and files by project\u201d API.")),(0,r.kt)(p,{subSection:!0,actions:[(0,r.kt)(h,{language:"http",code:"GET https://api.bentley.com/storage/?projectId=PROJECT_ID HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"request-1"},"Request"),(0,r.kt)("p",null,"That can be done by sending a GET ",(0,r.kt)("a",{parentName:"p",href:"https://api.bentley.com/storage/?projectId=PROJECT_ID"},"https://api.bentley.com/storage/?projectId=PROJECT_ID")," request."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Authorization\xa0header with valid Bearer token is required."),(0,r.kt)("li",{parentName:"ol"},"PROJECT_ID where files and folders are stored."))),(0,r.kt)(p,{subSection:!0,actions:[(0,r.kt)(h,{language:"json",code:'{\n    "items": [{\n        "id": "FOLDER_ID",\n        "type": "folder",\n        "displayName": "1",\n        "description": null,\n        "path": "1",\n        "lastModifiedByDisplayName": "Joe User",\n        "createdDateTime": "2019-07-16T08:41:05.6415752Z",\n        "lastModifiedDateTime": "2020-01-07T08:46:47.5422276Z",\n        "parentFolderId": "mCbnk2CSr0K4bAkoDGgNEZgm55Ngkq9CuGwJKAxoDRE",\n        "_links": {\n            "createdBy": {\n                "href": "https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/4ebeaf72-3c42-4734-b41a-485c6c2ecb67"\n            },\n            "lastModifiedBy": {\n                "href": "https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/4ebeaf72-3c42-4734-b41a-485c6c2ecb67"\n            },\n            "parentFolder": {\n                "href": "https://api.bentley.com/storage/folders/mCbnk2CSr0K4bAkoDGgNEZgm55Ngkq9CuGwJKAxoDRE"\n            }\n        }\n    },{\n        "id": "FILE_ID",\n        "type": "file",\n        "displayName": "Test.dgn",\n        "description": null,\n        "path": "Test.dgn",\n        "size": "38400",\n        "lastModifiedByDisplayName": "Joe User",\n        "createdDateTime": "2020-06-23T11:13:42.3498148Z",\n        "lastModifiedDateTime": "2020-07-07T11:46:44.9573652Z",\n        "parentFolderId": "mCbnk2CSr0K4bAkoDGgNEZgm55Ngkq9CuGwJKAxoDRE",\n        "_links": {\n            "createdBy": {\n                "href": "https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/4ebeaf72-3c42-4734-b41a-485c6c2ecb67"\n            },\n            "lastModifiedBy": {\n                "href": "https://api.bentley.com/projects/6959daff-27f5-4b87-96ea-9917daa3a8ff/members/4ebeaf72-3c42-4734-b41a-485c6c2ecb67"\n            },\n            "parentFolder": {\n                "href": "https://api.bentley.com/storage/folders/mCbnk2CSr0K4bAkoDGgNEZgm55Ngkq9CuGwJKAxoDRE"\n            }\n        }\n    }],\n    "_links": {\n        "self": {\n            "href": "https://api.bentley.com/storage?projectId=PROJECT_ID&$skip=0&$top=100"\n        },\n        "prev": {\n            "href": "https://api.bentley.com/storage?projectId=PROJECT_ID&$skip=0&$top=100"\n        },\n        "next": {\n            "href": "https://api.bentley.com/storage?projectId=PROJECT_ID&$skip=100&$top=100"\n        },\n        "folder": {\n            "href": "https://api.bentley.com/storage/folders/mCbnk2CSr0K4bAkoDGgNEZgm55Ngkq9CuGwJKAxoDRE"\n        }\n    }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"response"},"Response"),(0,r.kt)("p",null,"The request response contains a file Id which will be used in next step.")),(0,r.kt)(p,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"5-create-a-connection"},"5. Create a Connection"),(0,r.kt)("p",null,"The synchronization process is based on connections that establish links from design files to iModels. There could be multiple connections for an iModel, and those could be executed on-demand multiple times to synchronize changes. In this step we will be creating such connection.")),(0,r.kt)(p,{subSection:!0,actions:[(0,r.kt)(h,{language:"http",code:"POST\xa0https://api.bentley.com/synchronization/imodels/storageConnections HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"request-2"},"Request"),(0,r.kt)("p",null,"Creating a Connection requires sending a POST request to the synchronization/imodels/storageConnections endpoint."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Authorization\xa0header with valid Bearer token is required."),(0,r.kt)("li",{parentName:"ol"},"IMODEL_ID of created iModel from step 3."),(0,r.kt)("li",{parentName:"ol"},"We will need to specify what file from File Storage should be mapped to a connection. To do that we will need a file id from previous step response."))),(0,r.kt)(p,{subSection:!0,actions:[(0,r.kt)(h,{language:"json",code:'{\n    "displayName": "Connection1",\n    "iModelId": "IMODEL_ID",\n    "sourceFiles": [{\n        "storageFileId": "FILE_ID",\n        "connectorType": "MSTN"\n    }]\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"request-body-1"},"Request Body"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"displayName")," - user facing connection name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"iModelId"),": - iModel Id which should contain created connection"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"sourceFiles")," - information about source files from File Storage",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"storageFileId")," - id of the file from Storage API"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"connectorType")," - connector which file should be processed with identifier. ",(0,r.kt)("a",{parentName:"li",href:"/apis/synchronization/supported-formats/"},"More information.")),(0,r.kt)("li",{parentName:"ul"},"[Optional]"," ",(0,r.kt)("strong",{parentName:"li"},"authenticationStrategy")," - defaults to \u201cUser\u201d and use user refresh token to get access token for long synchronizations. But it can be set to \u201cService\u201d when API is used from server application without user context."))))),(0,r.kt)(p,{subSection:!0,actions:[(0,r.kt)(h,{language:"json",code:'{\n    "connection": {\n        "id": "CONNECTION_ID",\n        "displayName": "connection1",\n        "iModelId": "IMODEL_ID",\n        "projectId": "PROJECT_ID",\n        "_links": {\n            "iModel": {\n                "href": "https://api.bentley.com/imodels/IMODEL_ID"\n            },\n            "project": {\n                "href": "https://api.bentley.com/projects/PROJECT_ID"\n            },\n            "lastRun": null\n        }\n    }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"response-1"},"Response"),(0,r.kt)("p",null,"The request response contains created connection properties values. Id is going to be needed in next step")),(0,r.kt)(p,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"6-store-refresh-token-for-user"},"6. Store refresh token for user"),(0,r.kt)("p",null,"The synchronization process usually takes time and is performed in the background. For that, we need to store the connection owner\u2019s refresh token. You can get it by using Get Authorization Information API. This API will return the current status and a redirect URL where user has to be redirected on the browser if the token has to be renewed."),(0,r.kt)(m,{type:"informational",mdxType:"Alert"},'Note that if connection authenticationStrategy is set to "Service" this step should be skipped.')),(0,r.kt)(p,{subSection:!0,actions:[(0,r.kt)(h,{language:"http",code:"GET https://api.bentley.com/synchronization/imodels/connections/authorizationInformation?redirectUrl=REDIRECT_URL HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"request-3"},"Request"),(0,r.kt)("p",null,"That can be done by sending a GET ",(0,r.kt)("a",{parentName:"p",href:"https://api.bentley.com/synchronization/imodels/connections/authorizationInformation?redirectUrl=REDIRECT_URL"},"https://api.bentley.com/synchronization/imodels/connections/authorizationInformation?redirectUrl=REDIRECT_URL")," request."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Authorization\xa0header with valid Bearer token is required."),(0,r.kt)("li",{parentName:"ol"},"REDIRECT_URL a url of where a user should be redirected after successful token renewal."))),(0,r.kt)(p,{subSection:!0,actions:[(0,r.kt)(h,{language:"json",code:'{\n    "authorizationInformation": {\n        "isUserAuthorized": true,\n        "_links": {\n            "authorizationUrl": {\n                "href": null\n            }\n        }\n    }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"response-if-user-has-a-valid-refresh-token"},"Response if user has a valid refresh token"),(0,r.kt)("p",null,"isUserAuthorized with value true, means that user has a valid refresh token and can run long running synchronizations.")),(0,r.kt)(p,{subSection:!0,actions:[(0,r.kt)(h,{language:"json",code:'{\n    "authorizationInformation": {\n        "isUserAuthorized": false,\n        "_links": {\n            "authorizationUrl": {\n                "href": "https://connect-itwinbridgeportal.bentley.com/authenticate?redirect_url=REDIRECT_URL"\n            }\n        }\n    }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"response-if-user-does-not-have-a-valid-refresh-token"},"Response if user does not have a valid refresh token"),(0,r.kt)("p",null,"isUserAuthorized with value false, means that user does not have valid refresh token and cannot run long running synchronizations. To refresh token user has to be redirected to authorizationUrl from response.")),(0,r.kt)(p,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"7-run-a-connection"},"7. Run a Connection"),(0,r.kt)("p",null,"A Run defines a single Connection synchronization process. It can be initialized manually by sending run start request.")),(0,r.kt)(p,{subSection:!0,actions:[(0,r.kt)(h,{language:"http",code:"POST\xa0https://api.bentley.com/synchronization/imodels/storageConnections/CONNECTION_ID/run HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"request-4"},"Request"),(0,r.kt)("p",null,"Running a connection requires sending a POST request to the synchronization/imodels/connections/{connectionId}/run","[?imodelId]","\xa0endpoint with valid connectionId."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Authorization\xa0header with valid Bearer token is required."),(0,r.kt)("li",{parentName:"ol"},"CONNECTION_ID which should be started for processing. Use the value from previous step response."))),(0,r.kt)(p,{subSection:!0,actions:[(0,r.kt)(h,{language:"http",code:"HTTP/1.1 202 Accepted",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"response-2"},"Response"),(0,r.kt)("p",null,"On successful request, operation returns http status code 202/accepted - the request is accepted for processing and will be executed in the background.\nIf there is already an active run in progress for this connection, new run is being added to the queue.")),(0,r.kt)(p,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"8-get-runs-statuses"},"8. Get runs statuses"),(0,r.kt)("p",null,"A run contains synchronization process status. To get runs history and statuses get request has to be made.")),(0,r.kt)(p,{subSection:!0,actions:[(0,r.kt)(h,{language:"http",code:"POST\xa0https://api.bentley.com/synchronization/imodels/storageConnections/CONNECTION_ID/runs HTTP/1.1\nAuthorization: Bearer JWT_TOKEN\nContent-Type: application/json",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h4",{id:"request-5"},"Request"),(0,r.kt)("p",null,"Getting Run status requires sending a GET request to the synchronization/imodels/storageConnections/{connectionId}/runs\xa0endpoint with valid connectionId."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Authorization\xa0header with valid Bearer token is required."),(0,r.kt)("li",{parentName:"ol"},"CONNECTION_ID which runs we want to get."))),(0,r.kt)(p,{subSection:!0,actions:[(0,r.kt)(h,{language:"json",code:'{\n  "runs":[\n    {\n      "id":"41062244-3e62-42a3-8232-9f2b4d31be16",\n      "state":"Completed",\n      "result":"Success"\n    }\n  ],\n  "_links":{\n    "self":{\n      "href":"https://api.bentley.com/Synchronization/imodels/storageConnections/CONNECTION_ID/runs?$skip=0&$top=100"\n    },\n    "prev":{\n      "href":"https://api.bentley.com/Synchronization/imodels/storageConnections/CONNECTION_ID/runs?$skip=0&$top=100"\n    },\n    "next":{\n      "href":"https://api.bentley.com/Synchronization/imodels/storageConnections/CONNECTION_ID/runs?$skip=100&$top=100"\n    }\n  }\n}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,r.kt)("h5",{id:"response-3"},"Response"),(0,r.kt)("p",null,"At the end of synchronization run state should be \u201cCompleted\u201d and result \u201cSuccess\u201d.")),(0,r.kt)(p,{mdxType:"TutorialSection"},(0,r.kt)("h2",{id:"9-conclusion"},"9. Conclusion"),(0,r.kt)("p",null,"In this tutorial we have gone through a file from iTwin Storage synchronization process:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create an empty iModel"),(0,r.kt)("li",{parentName:"ol"},"Create a connection"),(0,r.kt)("li",{parentName:"ol"},"Run the connection"),(0,r.kt)("li",{parentName:"ol"},"Get run status.")),(0,r.kt)("p",null,"After successful run, design file changes should be in an iModel. Next step could be to create a Named Version.")),(0,r.kt)(k,{mdxType:"ContinueLearningSection"},(0,r.kt)("h2",{id:"continue-learning"},"Continue learning"),(0,r.kt)("p",null,"Congratulations for the completion of your first synchronization! You\u2019ve now know a lot on the subject, but there\u2019s still possibilities to learn more to unleash the platform capabilities."),(0,r.kt)(f,{mdxType:"TileList"},(0,r.kt)(g,{name:"Create iModel Named Version",description:"This quick start is intended to guide you through the steps to create a new iModel Named Version.",href:"/tutorials/create-named-version",mdxType:"Tile"})),(0,r.kt)("h2",{id:"more-resources-that-you-may-like"},"More resources that you may like"),(0,r.kt)(f,{mdxType:"TileList"},(0,r.kt)(y,{title:"Synchronization API documentation",href:"/api-groups/synchronization",description:"An overview and detailed Synchronization API documentation.",mdxType:"ResourceTile"}),(0,r.kt)(y,{title:"Synchronization API code sample",href:"https://github.com/iTwin/synchronization-api-sample-app",description:"A working code sample showing how Synchronization API can be integrated into a React application.",isExternal:!0,mdxType:"ResourceTile"}),(0,r.kt)(y,{title:"Data Management API documentation",href:"/api-groups/data-management/",description:"An overview and detailed Data Management API documentation.",mdxType:"ResourceTile"}))))}b.isMDXComponent=!0;var I=function(){return[{id:"introduction",level:2,title:"Introduction",children:[]},{id:"1-register-an-application",level:2,title:"1. Register an Application",children:[]},{id:"2-get-a-token",level:2,title:"2. Get a token",children:[{id:"implement-authorization-code-flow-in-the-application",level:3,title:"Implement Authorization Code Flow in the application",children:[]},{id:"grab-a-token-from-api-reference-try-it-section",level:3,title:"Grab a token from Api reference \u201cTry it\u201d Section",children:[]}]},{id:"3-create-an-imodel",level:2,title:"3. Create an iModel",children:[]},{id:"4-get-fileid-from-storage-api",level:2,title:"4. Get fileId from Storage API",children:[]},{id:"5-create-a-connection",level:2,title:"5. Create a Connection",children:[]},{id:"6-store-refresh-token-for-user",level:2,title:"6. Store refresh token for user",children:[]},{id:"7-run-a-connection",level:2,title:"7. Run a Connection",children:[]},{id:"8-get-runs-statuses",level:2,title:"8. Get runs statuses",children:[]},{id:"9-conclusion",level:2,title:"9. Conclusion",children:[]},{id:"continue-learning",level:2,title:"Continue learning",children:[]},{id:"more-resources-that-you-may-like",level:2,title:"More resources that you may like",children:[]}]}}}]);