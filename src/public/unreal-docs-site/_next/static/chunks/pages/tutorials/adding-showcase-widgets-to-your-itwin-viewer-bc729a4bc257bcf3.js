(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4379],{22544:function(e,t,n){"use strict";n.d(t,{Pu:function(){return l},ZP:function(){return f},Jt:function(){return y}});var i=n(159),a=n(91164),s=n(67294),o=n(3905),r=["components"],l=(s.createElement,{title:"Adding showcase widgets to your iTwin Viewer",tile:{name:"Adding showcase widgets to your iTwin Viewer",description:"This tutorial will take widgets from the sample showcase and add them into your iTwin Viewer using the `uiProviders` prop.",thumbnail:"/unreal-docs-site/images/view_attributes_ported_results.png",href:"/tutorials/adding-showcase-widgets-to-your-itwin-viewer/",durationInMinutes:30,relatedApiIds:["visualization"],showInFirstSteps:!0,firstStepsSequenceNumber:3}}),p=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)}},u=p("Introduction"),c=p("TutorialSection"),d=p("Title"),m=p("CodeBlock"),w=p("ContinueLearningSection"),h=p("TileList"),k=p("Tile"),g=p("ResourceTile"),v={metadata:l};function f(e){var t=e.components,n=(0,a.Z)(e,r);return(0,o.kt)("wrapper",(0,i.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(u,{skillLevel:"Basic",durationInMinutes:"30",summaryImageSrc:"/unreal-docs-site/images/adding-showcase-widgets-to-your-itwin-viewer-sample.gif",mdxType:"Introduction"},(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"This tutorial will take widgets from the sample showcase and add them to your iTwin Viewer using the ",(0,o.kt)("inlineCode",{parentName:"p"},"uiProviders")," prop.")),(0,o.kt)(c,{mdxType:"TutorialSection"},(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"This tutorial assumes that you already have:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Explored the ",(0,o.kt)("a",{parentName:"li",href:"https://www.itwinjs.org/sample-showcase"},"sample showcase"),"."),(0,o.kt)("li",{parentName:"ul"},"Your own ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/iTwin/viewer"},"local source")," for the iTwin Web Viewer based on the template @itwin/web-viewer",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Instructions for that can be found ",(0,o.kt)("a",{parentName:"li",href:"/tutorials/web-application-quick-start"},"here")))),(0,o.kt)("li",{parentName:"ul"},"Configured your local source to open the \u201cHouse Model\u201d sample iModel.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Instructions to use this sample iModel can be found ",(0,o.kt)("a",{parentName:"li",href:"/tutorials/create-test-imodel-sample"},"here"),"."))),(0,o.kt)("li",{parentName:"ul"},"Understand the concept of a ",(0,o.kt)("a",{parentName:"li",href:"https://www.itwinjs.org/learning/ui/abstract/uiitemsprovider"},"UI Provider")," and adding ",(0,o.kt)("a",{parentName:"li",href:"https://www.itwinjs.org/reference/ui-abstract/uiitemsprovider/uiitemsprovider/"},"widgets"),"."),(0,o.kt)("li",{parentName:"ul"},"Completed ",(0,o.kt)("a",{parentName:"li",href:"/tutorials/itwin-viewer-hello-world"},"\u201cCustomizing the iTwin Viewer\u201d")," tutorial."))),(0,o.kt)(c,{mdxType:"TutorialSection"},(0,o.kt)("h2",{id:"1-understanding-the-sample-showcase"},"1. Understanding the Sample Showcase"),(0,o.kt)("p",null,"We hope you have given the ",(0,o.kt)("a",{parentName:"p",href:"https://www.itwinjs.org/sample-showcase"},"sample showcase")," a tour and enjoyed the many samples provided. You may want to use some of these samples in your own iTwin Viewer, and to do so you\u2019ll first need to understand how the showcase works."),(0,o.kt)("p",null,"If we take a closer look at the files involved in each sample, you\u2019ll notice they all follow the same pattern containing a few important files:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"[SampleName]App.tsx")," - Corresponds to ",(0,o.kt)("inlineCode",{parentName:"li"},"App.tsx")," in the iTwin Viewer template and provides the main ",(0,o.kt)("inlineCode",{parentName:"li"},"Viewer")," component."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"[SampleName]Widget.tsx")," - Defines the ",(0,o.kt)("inlineCode",{parentName:"li"},"UiItemsProvider")," that will be passed into prop ",(0,o.kt)("inlineCode",{parentName:"li"},"uiProviders")," for our sample widget component. This widget is the controller for our samples."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"[SampleName]Api.ts")," - Defines widget functionality that uses the iTwin.js API being showcased."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"[SampleName].scss")," - Defines the styles in our css classes used inside the widget.")),(0,o.kt)("p",null,"Given this pattern, it\u2019s simple to identify the parts required to bring our sample showcase to your iTwin Viewer. The component revolves around the ",(0,o.kt)("inlineCode",{parentName:"p"},"[SampleName]Widget.tsx")," file so we need to copy all the files associated with our custom widgets ",(0,o.kt)("inlineCode",{parentName:"p"},"UiItemsProvider")," and pass it in the ",(0,o.kt)("inlineCode",{parentName:"p"},"Viewer")," component.")),(0,o.kt)(c,{actions:[(0,o.kt)(d,{mdxType:"Title"},"The Viewer component in ViewAttributesApp.tsx file"),(0,o.kt)(m,{language:"jsx",code:'<Viewer\n  iTwinId={process.env.IMJS_ITWIN_ID ?? ""}\n  iModelId={process.env.IMJS_IMODEL_ID ?? ""}\n  authClient={AuthorizationClient.oidcClient}\n  viewportOptions={viewportOptions}\n  onIModelConnected={_oniModelReady}\n  defaultUiConfig={default3DSandboxUi}\n  theme="dark"\n  uiProviders={uiProviders}\n/>',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,o.kt)("h2",{id:"2-example-using-a-sample"},"2. Example using a sample"),(0,o.kt)("p",null,"For this tutorial, we\u2019ll be taking the widget from sample ",(0,o.kt)("a",{parentName:"p",href:"https://www.itwinjs.org/sample-showcase/?group=Viewer&sample=view-attributes-sample&imodel=House+Sample"},"View Attributes")," and adding it into our iTwin Viewer."),(0,o.kt)("p",null,"Starting with our entry file ",(0,o.kt)("inlineCode",{parentName:"p"},"ViewAttributesApp.tsx"),", the ",(0,o.kt)("inlineCode",{parentName:"p"},"Viewer")," component is shown in a code snippet.")),(0,o.kt)(c,{hasTitle:!1,actions:[(0,o.kt)(d,{mdxType:"Title"},"Passing ViewAttributesWidgetProvider to uiProviders"),(0,o.kt)(m,{language:"jsx",code:'import { ViewAttributesWidgetProvider } from "./ViewAttributesWidget";\n...\nconst uiProviders = [new ViewAttributesWidgetProvider()];',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,o.kt)("p",null,"Prop ",(0,o.kt)("inlineCode",{parentName:"p"},"uiProviders")," is passed in as an array that contains the ",(0,o.kt)("inlineCode",{parentName:"p"},"ViewAttributesWidgetProvider"),", imported and defined at the top of the file.")),(0,o.kt)(c,{hasTitle:!1,actions:[(0,o.kt)(d,{mdxType:"Title"},"Lines you need to add in your iTwin Viewer in `App.tsx`"),(0,o.kt)(m,{language:"jsx",code:'... // Import the widget provider\nimport { ViewAttributesWidgetProvider } from "./ViewAttributesWidget";\n... // Construct the widget provider\nconst uiProviders = [new ViewAttributesWidgetProvider()];\n... // A Prop passed into the <Viewer> component\nuiProviders={uiProviders}',mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,o.kt)("p",null,"To sum it up, three lines shown is a code snippet are the only lines you\u2019ll need to add in your iTwin Viewer in ",(0,o.kt)("inlineCode",{parentName:"p"},"App.tsx"),".")),(0,o.kt)(c,{hasTitle:!1,mdxType:"TutorialSection"},(0,o.kt)("p",null,"We now have made all the necessary coding modifications to our iTwin Viewer. We\u2019ll just need to copy the remaining three files to bring our widget over."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ViewAttributesApi.ts")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ViewAttributesWidget.tsx")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ViewAttributes.scss")))),(0,o.kt)(c,{hasTitle:!1,mdxType:"TutorialSection"},(0,o.kt)("p",null,"For this tutorial, these files will be placed directly in our src directory so your file structure should look similar to this:"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"/unreal-docs-site/images/sample_viewer_port_to_itwin_viewer.png",alt:"ViewAttributesStructure"})),(0,o.kt)("p",null,"Running our iTwin Viewer now, you\u2019ll notice the same fully functional widget from the sample showcase in your iTwin Viewer."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"/unreal-docs-site/images/view_attributes_ported_results.png",alt:"ViewAttributesResults"})),(0,o.kt)("p",null,"Feel free to customize these widgets to your liking.")),(0,o.kt)(c,{mdxType:"TutorialSection"},(0,o.kt)("h2",{id:"3-multiple-ways-to-extend-uiproviders"},"3. Multiple ways to extend uiProviders"),(0,o.kt)("p",null,"If you already have a ",(0,o.kt)("inlineCode",{parentName:"p"},"uiProviders")," prop passed in or would like to add more widgets from the sample showcase, the ",(0,o.kt)("inlineCode",{parentName:"p"},"uiProviders")," prop takes in an array of providers. Extending the widget is as simple as appending to your array.")),(0,o.kt)(c,{hasTitle:!1,mdxType:"TutorialSection"},(0,o.kt)("p",null,"You can add to the uiProviders const variable, i.e.:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">const</span> uiProviders <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">ViewAttributesWidgetProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HyerModelingWidgetProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">]</span>\n'}})),(0,o.kt)("p",null,"or ignore the variable completely and pass the array in directly:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Viewer</span></span>\n  <span class="token attr-name">iTwinId</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">IMJS_ITWIN_ID</span> <span class="token operator">??</span> <span class="token string">""</span><span class="token punctuation">}</span></span>\n  <span class="token attr-name">iModelId</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">IMJS_IMODEL_ID</span> <span class="token operator">??</span> <span class="token string">""</span><span class="token punctuation">}</span></span>\n  <span class="token attr-name">authClient</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>AuthorizationClient<span class="token punctuation">.</span>oidcClient<span class="token punctuation">}</span></span>\n  <span class="token attr-name">viewportOptions</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>viewportOptions<span class="token punctuation">}</span></span>\n  <span class="token attr-name">onIModelConnected</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>_oniModelReady<span class="token punctuation">}</span></span>\n  <span class="token attr-name">defaultUiConfig</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>default3DSandboxUi<span class="token punctuation">}</span></span>\n  <span class="token attr-name">theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dark<span class="token punctuation">"</span></span>\n  <span class="token attr-name">uiProviders</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">ViewAttributesWidgetProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HyperModelingWidgetProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n'}}))),(0,o.kt)(c,{hasTitle:!1,mdxType:"TutorialSection"},(0,o.kt)("p",null,"Just remember to copy corresponding files to your source.")),(0,o.kt)(c,{hasTitle:!1,actions:[(0,o.kt)(d,{mdxType:"Title"},"Using an existing UiItemsProvider instead of passing in multiple new ones"),(0,o.kt)(m,{language:"jsx",code:"export class MyCustomUiProvider extends UiItemsProvider {\n  ... // Your custom code\n  public provideWidgets(\n    _stageId: string,\n    _stageUsage: string,\n    location: StagePanelLocation,\n    _section?: StagePanelSection\n  ): ReadonlyArray<AbstractWidgetProps> {\n    const widgets: AbstractWidgetProps[] = [];\n    if (location === StagePanelLocation.Right) {\n      widgets.push({\n        id: 'ViewAttributesWidget',\n        label: 'View Attributes Controls',\n        defaultState: WidgetState.Floating,\n        getWidgetContent: () => <ViewAttributesWidget />, // Don't forget to copy code for the ViewAttributesWidget\n      });\n    }\n  }\n}",mdxType:"CodeBlock"})],mdxType:"TutorialSection"},(0,o.kt)("p",null,"If you\u2019d like to use an existing UiItemsProvider instead of passing in multiple new ones, just add the widget in your ",(0,o.kt)("inlineCode",{parentName:"p"},"provideWigets()")," function along with copying and pasting the react component to your desired location.")),(0,o.kt)(c,{hasTitle:!1,mdxType:"TutorialSection"},(0,o.kt)("p",null,"As you can see, extending your iTwin Viewer with multiple widgets is simple.\nIt\u2019s completely up to you on how you want to structure your directories and components. Feel free to extend as many widgets as you like.")),(0,o.kt)(w,{mdxType:"ContinueLearningSection"},(0,o.kt)("h2",{id:"continue-learning"},"Continue learning"),(0,o.kt)(h,{mdxType:"TileList"},(0,o.kt)(k,{name:"Start building a Viewer App",thumbnail:"/unreal-docs-site/images/retail-tutorial-sample-small.png",description:"This quick start is intended to help you get started with using iTwin Platform visualization components. By the end of this walk-through, you will be able to build and run a web application for viewing an infrastructure digital twin (iTwin).",href:"/tutorials/web-application-quick-start/",mdxType:"Tile"}),(0,o.kt)(k,{name:'Customizing the iTwin Viewer - "The Basics"',thumbnail:"/unreal-docs-site/images/itwin-viewer-hello-world-sample-small.png",description:"This tutorial will take you through the first steps of customizing your iTwin Web Viewer. First you will learn how to add a new user interface component. Later you will customize that component to change the background color of your viewer.",href:"/tutorials/itwin-viewer-hello-world",mdxType:"Tile"})),(0,o.kt)("h2",{id:"more-resources-that-you-may-like"},"More resources that you may like"),(0,o.kt)(h,{mdxType:"TileList"},(0,o.kt)(g,{title:"Create a test iModel from a Bentley provided sample",href:"/tutorials/create-test-imodel-sample",description:"The quickest way to get access to a cloud hosted iModel is by creating an iModel seeded with Bentley provided sample data.",mdxType:"ResourceTile"}),(0,o.kt)(g,{title:"Sample House Model",href:"/tutorials/create-test-imodel-sample/#house-sample",description:"Bentley provided sample of a House for test iModel creation.",mdxType:"ResourceTile"}),(0,o.kt)(g,{title:"UI Provider",href:"https://www.itwinjs.org/reference/ui-abstract/uiitemsprovider/uiitemsprovider/",description:"Describes interface of objects that want to provide UI component to the running IModelApp.",isExternal:!0,mdxType:"ResourceTile"}),(0,o.kt)(g,{title:"View Attributes Sample",href:"https://www.itwinjs.org/sample-showcase/?group=Viewer&sample=view-attributes-sample&imodel=House+Sample",description:"This sample demonstrates the API used to control view attributes.",isExternal:!0,mdxType:"ResourceTile"}),(0,o.kt)(g,{title:"Visit the iTwin Sample Showcase",href:"https://www.itwinjs.org/sample-showcase/",description:"The iTwin Sample Showcase provides many samples demonstrating options for customizing the iTwin viewer.",isExternal:!0,mdxType:"ResourceTile"}))))}f.isMDXComponent=!0;var y=function(){return[{id:"introduction",level:2,title:"Introduction",children:[]},{id:"prerequisites",level:2,title:"Prerequisites",children:[]},{id:"1-understanding-the-sample-showcase",level:2,title:"1. Understanding the Sample Showcase",children:[]},{id:"2-example-using-a-sample",level:2,title:"2. Example using a sample",children:[]},{id:"3-multiple-ways-to-extend-uiproviders",level:2,title:"3. Multiple ways to extend uiProviders",children:[]},{id:"continue-learning",level:2,title:"Continue learning",children:[]},{id:"more-resources-that-you-may-like",level:2,title:"More resources that you may like",children:[]}]}},31389:function(e,t,n){"use strict";n.d(t,{Z:function(){return d}});var i=n(61565),a=n(67294),s=n(94184),o=n.n(s),r=(n(50371),n(73351)),l=n(85893),p=function(e){var t=e.item,n=e.setActiveItem,i=e.className,a=e.activeItem,s=e.prefix;return(0,l.jsx)(l.Fragment,{children:(0,l.jsx)("div",{className:"menuItem-container",children:(0,l.jsx)(r.D,{href:"".concat(null!==s&&void 0!==s?s:"#").concat(t.id),children:(0,l.jsx)("span",{onClick:function(){return n(t.id)},className:"".concat(i," ").concat(t.id===a?"active":""),children:t.title})})})})},u=function(e){var t=e.items,n=e.setActiveItem,i=e.activeItem,a=e.navPrefix;return(0,l.jsx)(l.Fragment,{children:t.map((function(e,t){return(0,l.jsxs)("div",{children:[(0,l.jsx)(p,{item:e,className:"sideMenuItem",setActiveItem:n,activeItem:i,prefix:a},e.id),e.children.map((function(e){return(0,l.jsx)(p,{item:e,className:"sideMenuItem sideMenuSubItem",setActiveItem:n,activeItem:i,prefix:a},e.id)}))]},t)}))})},c=n(71125),d=function(e){var t,n=a.useState(!1),s=(0,i.Z)(n,2),r=s[0],p=s[1],d=a.useState(""),m=(0,i.Z)(d,2),w=m[0],h=m[1],k=a.useState(!1),g=(0,i.Z)(k,2),v=g[0],f=g[1];a.useEffect((function(){var t;e.items.length>0&&h(null!==(t=e.activeItem)&&void 0!==t?t:e.items[0].id)}),[e.activeItem]),a.useEffect((function(){var e=function(){var e=window.location.hash.substring(1,window.location.hash.length);h(e),f(!1)};return window.addEventListener("hashchange",e,!1),function(){window.removeEventListener("hashchange",e,!1)}}),[]),a.useEffect((function(){v&&p(!1)}),[v]);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(c.j,{isOpened:r,onClick:function(){p((function(e){return!e}))}}),(0,l.jsx)("div",{id:"tutorial-side-navigation-pane",className:o()(e.className,"sticky-container",r?"opened":void 0),children:(0,l.jsx)("div",{className:"sideMenu sticky-element",children:(0,l.jsxs)("div",{className:"sideMenu-large",children:[e.header,(0,l.jsx)(u,{items:e.items,setActiveItem:function(e){f(!0),h(e)},activeItem:w,navPrefix:null!==(t=e.navPrefix)&&void 0!==t?t:"#"}),e.actions&&(0,l.jsx)("div",{className:"side-menu-actions",children:e.actions})]})})})]})}},1176:function(e,t,n){"use strict";n(63673),n(67294);var i=n(29e3),a=n(31389),s=n(52203),o=n(85893);t.Z=function(e){return(0,o.jsx)(s.Z,{children:(0,o.jsxs)("div",{id:"page",className:"container tutorial-container",children:[(0,o.jsx)("div",{id:"tutorial-header",children:(0,o.jsx)(i.s,{children:e.tutorial.headline})}),(0,o.jsxs)("div",{id:"tutorial-content",children:[(0,o.jsx)(a.Z,{items:e.tutorial.navigationItems}),(0,o.jsx)("div",{id:"tutorial-content-body",children:e.tutorial.tutorialSteps})]})]})})}},6543:function(e,t,n){"use strict";n.r(t);var i=n(3905),a=n(1176),s=n(55092),o=n(22544),r=(n(67294),n(80989)),l=n(85893);t.default=function(){var e={headline:o.Pu.title,navigationItems:(0,o.Jt)(),tutorialSteps:(0,l.jsx)(i.Zo,{components:s.d,children:(0,l.jsx)(o.ZP,{})})};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(r.d,{title:"".concat(o.Pu.title," - Tutorials | iTwin Platform")}),(0,l.jsx)(a.Z,{tutorial:e})]})}},69458:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tutorials/adding-showcase-widgets-to-your-itwin-viewer",function(){return n(6543)}])},63673:function(){}},function(e){e.O(0,[8273,508,483,229,271,2033,6815,9527,1061,9774,2888,179],(function(){return t=69458,e(e.s=t);var t}));var t=e.O();_N_E=t}]);