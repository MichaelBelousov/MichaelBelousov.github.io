{"version":3,"file":"component---src-components-blog-page-tsx-71d46e6e596f444880bf.js","mappings":"0MAIW,EAAO,2BCIH,SAASA,EAASC,GAC/B,MAAMC,EAAOD,EAAME,KAAKC,eAExB,OACEC,EAAAA,cAACC,EAAAA,EAAM,CAACC,UAAWL,EAAKM,YAAYC,OAClCJ,EAAAA,cAACK,EAAAA,GAAM,KACLL,EAAAA,cAAA,QACEM,IAAI,aACJC,KAAK,0FACLC,YAAY,eAGhBR,EAAAA,cAAA,OAAKS,UAAWC,GACdV,EAAAA,cAAA,UAAKH,EAAKM,YAAYC,OACtBJ,EAAAA,cAAA,UAAKH,EAAKM,YAAYQ,MACtBX,EAAAA,cAAA,OAAKY,wBAAyB,CAAEC,OAAQhB,EAAKiB,SAIrD,C,gLC1BWC,EAAO,6BACPC,EAAU,gCAEVC,EAAW,iCCkBtB,MAlBeC,IACblB,EAAAA,cAAA,cACEA,EAAAA,cAAA,OAAKS,UAAWC,GACdV,EAAAA,cAAA,OAAKS,UAAWC,GACdV,EAAAA,cAACmB,EAAAA,KAAI,CAACV,UAAWC,EAAgBU,GAAG,KAAI,QACxCpB,EAAAA,cAACmB,EAAAA,KAAI,CAACV,UAAWC,EAAgBU,GAAG,SAAQ,UAC5CpB,EAAAA,cAACmB,EAAAA,KAAI,CAACV,UAAWC,EAAgBU,GAAG,OAAM,OAC1CpB,EAAAA,cAACmB,EAAAA,KAAI,CAACV,UAAWC,EAAgBU,GAAG,SAAQ,SAE9CpB,EAAAA,cAAA,OAAKS,UAAWC,EAAAA,OACdV,EAAAA,cAAA,UAAI,mBAGRA,EAAAA,cAAA,Y,UCgBJ,MAtBeqB,IAG6B,IAH5B,UACdnB,EAAS,SACToB,GACqCD,EACrC,MAAMvB,GAAOyB,EAAAA,EAAAA,gBAAe,cAU5B,OACEvB,EAAAA,cAAA,OAAKS,UCzBgB,qCD0BnBT,EAAAA,cAACwB,EAAAA,EAAG,CAACpB,MAAOF,IACZF,EAAAA,cAACkB,EAAM,CAACO,UAAW3B,EAAK4B,KAAKC,aAAavB,QAC1CJ,EAAAA,cAAA,YAAOsB,GACH,C,yDE2DV,IA5EA,SAAa1B,GAAmB,IAADgC,EAAAC,EAAAC,EAC7B,MAAMC,EAA+B,QAApBH,EAAGhC,EAAMmC,mBAAW,IAAAH,EAAAA,EAAI,GACnCI,EAAiB,QAAbH,EAAGjC,EAAMoC,YAAI,IAAAH,EAAAA,EAAI,KACrBI,EAAiB,QAAbH,EAAGlC,EAAMqC,YAAI,IAAAH,EAAAA,EAAI,IACrB,MAAC1B,GAASR,GAEV,KAAE8B,IAASH,EAAAA,EAAAA,gBAAe,YAc1BW,EAAkBH,GAAeL,EAAKC,aAAaI,YAEzD,OACE/B,EAAAA,cAACK,EAAAA,GAAM,CACL8B,eAAgB,CACdH,QAEF5B,MAAOA,EACPgC,cAAa,QAAUV,EAAKC,aAAavB,MACzC6B,KAAM,CACJ,CACEI,KAAK,cACLC,QAASJ,GAEX,CACEK,SAAS,WACTD,QAASlC,GAEX,CACEmC,SAAS,iBACTD,QAASJ,GAEX,CACEK,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASZ,EAAKC,aAAaa,QAE7B,CACEH,KAAK,gBACLC,QAASlC,GAEX,CACEiC,KAAK,sBACLC,QAASJ,IAEXO,OAAOR,IAGf,C","sources":["webpack://mikemikeb-website/./src/components/blog.module.scss","webpack://mikemikeb-website/./src/components/BlogPage.tsx","webpack://mikemikeb-website/./src/components/header.module.scss","webpack://mikemikeb-website/./src/components/header.tsx","webpack://mikemikeb-website/./src/components/layout.tsx","webpack://mikemikeb-website/./src/components/layout.module.scss","webpack://mikemikeb-website/./src/components/seo.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"blog-module--container--a5b3b\";\nexport var inner = \"blog-module--inner--d848f\";\nexport var loader = \"blog-module--loader--8d23c\";\nexport var post = \"blog-module--post--16100\";\nexport var spin = \"blog-module--spin--f8bab\";","import React, { useLayoutEffect } from \"react\"\nimport Layout from \"./layout\"\nimport Helmet from \"react-helmet\"\nimport { graphql } from \"gatsby\"\nimport SEO from \"./seo\"\n\nimport * as styles from \"./blog.module.scss\"\n\nexport default function BlogPost(props: any) {\n  const post = props.data.markdownRemark\n\n  return (\n    <Layout pageTitle={post.frontmatter.title}>\n      <Helmet>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.10/styles/paraiso-dark.min.css\"\n          crossOrigin=\"anonymous\"\n        />\n      </Helmet>\n      <div className={styles.post}>\n        <h1>{post.frontmatter.title}</h1>\n        <h3>{post.frontmatter.date}</h3>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        path\n        date(formatString: \"MMMM D, YYYY\")\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nexport var left = \"header-module--left--fb3c9\";\nexport var navLink = \"header-module--navLink--e54d2\";\nexport var pageWrapper = \"header-module--pageWrapper--3e268\";\nexport var separate = \"header-module--separate--cd165\";","import { Link } from 'gatsby';\nimport React from 'react';\nimport * as styles from './header.module.scss';\n\nconst Header = () => (\n  <header>\n    <div className={styles.separate}>\n      <div className={styles.left}>\n        <Link className={styles.navLink} to=\"/\">Home</Link>\n        <Link className={styles.navLink} to=\"/work\">Resume</Link>\n        <Link className={styles.navLink} to=\"/3d\">Art</Link>\n        <Link className={styles.navLink} to=\"/blog\">Blog</Link>\n      </div>\n      <div className={styles.right}>\n        <h1>Mike Belousov</h1>\n      </div>\n    </div>\n    <hr/>\n  </header>\n);\n\n\nexport default Header;\n\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport SEO from \"./seo\"\nimport * as styles from \"./layout.module.scss\"\n\ninterface LayoutProps {\n  pageTitle: string\n}\n\nconst Layout = ({\n  pageTitle,\n  children,\n}: React.PropsWithChildren<LayoutProps>) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <div className={styles.pageWrapper}>\n      <SEO title={pageTitle} />\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <main>{children}</main>\n    </div>\n  )\n}\nexport default Layout\n","// extracted by mini-css-extract-plugin\nexport var pageWrapper = \"layout-module--pageWrapper--b70ac\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\n\nfunction SEO(props: SEO.Props) {\n  const description = props.description ?? \"\"\n  const lang = props.lang ?? \"en\"\n  const meta = props.meta ?? []\n  const {title} = props\n\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\ndeclare namespace SEO {\n  interface Props {\n    description?: string;\n    lang?: string;\n    meta?: {name: string; content: string}[];\n    title: string;\n  }\n}\n\nexport default SEO\n\n"],"names":["BlogPost","props","post","data","markdownRemark","React","Layout","pageTitle","frontmatter","title","Helmet","rel","href","crossOrigin","className","styles","date","dangerouslySetInnerHTML","__html","html","left","navLink","separate","Header","Link","to","_ref","children","useStaticQuery","SEO","siteTitle","site","siteMetadata","_props$description","_props$lang","_props$meta","description","lang","meta","metaDescription","htmlAttributes","titleTemplate","name","content","property","author","concat"],"sourceRoot":""}