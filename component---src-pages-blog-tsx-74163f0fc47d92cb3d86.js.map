{"version":3,"file":"component---src-pages-blog-tsx-74163f0fc47d92cb3d86.js","mappings":"oRACWA,EAAO,6BACPC,EAAU,gCAEVC,EAAW,iCCkBtB,MAlBeC,IACbC,EAAAA,cAAA,cACEA,EAAAA,cAAA,OAAKC,UAAWC,GACdF,EAAAA,cAAA,OAAKC,UAAWC,GACdF,EAAAA,cAACG,EAAAA,KAAI,CAACF,UAAWC,EAAgBE,GAAG,KAAI,QACxCJ,EAAAA,cAACG,EAAAA,KAAI,CAACF,UAAWC,EAAgBE,GAAG,SAAQ,UAC5CJ,EAAAA,cAACG,EAAAA,KAAI,CAACF,UAAWC,EAAgBE,GAAG,OAAM,OAC1CJ,EAAAA,cAACG,EAAAA,KAAI,CAACF,UAAWC,EAAgBE,GAAG,SAAQ,SAE9CJ,EAAAA,cAAA,OAAKC,UAAWC,EAAAA,OACdF,EAAAA,cAAA,UAAI,mBAGRA,EAAAA,cAAA,Y,UCgBJ,MAtBeK,IAG6B,IAH5B,UACdC,EAAS,SACTC,GACqCF,EACrC,MAAMG,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACET,EAAAA,cAAA,OAAKC,UCzBgB,qCD0BnBD,EAAAA,cAACU,EAAAA,EAAG,CAACC,MAAOL,IACZN,EAAAA,cAACD,EAAM,CAACa,UAAWJ,EAAKK,KAAKC,aAAaH,QAC1CX,EAAAA,cAAA,YAAOO,GACH,C,yDE2DV,IA5EA,SAAaQ,GAAmB,IAADC,EAAAC,EAAAC,EAC7B,MAAMC,EAA+B,QAApBH,EAAGD,EAAMI,mBAAW,IAAAH,EAAAA,EAAI,GACnCI,EAAiB,QAAbH,EAAGF,EAAMK,YAAI,IAAAH,EAAAA,EAAI,KACrBI,EAAiB,QAAbH,EAAGH,EAAMM,YAAI,IAAAH,EAAAA,EAAI,IACrB,MAACP,GAASI,GAEV,KAAEF,IAASJ,EAAAA,EAAAA,gBAAe,YAc1Ba,EAAkBH,GAAeN,EAAKC,aAAaK,YAEzD,OACEnB,EAAAA,cAACuB,EAAAA,GAAM,CACLC,eAAgB,CACdJ,QAEFT,MAAOA,EACPc,cAAa,QAAUZ,EAAKC,aAAaH,MACzCU,KAAM,CACJ,CACEK,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAAShB,GAEX,CACEiB,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASd,EAAKC,aAAae,QAE7B,CACEH,KAAK,gBACLC,QAAShB,GAEX,CACEe,KAAK,sBACLC,QAASL,IAEXQ,OAAOT,IAGf,C,4FC7EWU,EAAW,+BCIP,WAAShB,GACtB,MAAMiB,EAAUhC,EAAAA,SACd,IACEe,EAAMP,KAAKyB,kBAAkBC,MAAMC,QAAO,CAACC,EAAI/B,KAAe,IAAb,KAAEgC,GAAMhC,EACvD,MAAOiC,GAAQD,EAAKE,YAAYC,KAAKC,MAAM,QACrCC,EAAMJ,EAGZ,OAFKF,EAAKO,IAAID,IAAMN,EAAKQ,IAAIF,EAAK,IAClCN,EAAKS,IAAIH,GAAKI,KAAKT,GACZD,CAAI,GACV,IAAIW,MACT,IAGF,OACE/C,EAAAA,cAACgD,EAAAA,EAAM,CAAC1C,UAAU,QACf2C,MAAMC,KAAKlB,EAAQmB,WAAWC,IAAA,IAAEd,EAAMJ,GAAMkB,EAAA,OAC3CpD,EAAAA,cAAA,OAAK0C,IAAKJ,GACPA,EACDtC,EAAAA,cAAA,UACGkC,EAAMmB,KAAI,CAAChB,EAAMK,IAChB1C,EAAAA,cAAA,MAAI0C,IAAKA,GACP1C,EAAAA,cAAA,KAAGsD,KAAMjB,EAAKkB,OAAOC,KAAMvD,UAAWC,GACpCF,EAAAA,cAAA,cAASqC,EAAKE,YAAY5B,YAK9B,IAId,C","sources":["webpack://mikemikeb-website/./src/components/header.module.scss","webpack://mikemikeb-website/./src/components/header.tsx","webpack://mikemikeb-website/./src/components/layout.tsx","webpack://mikemikeb-website/./src/components/layout.module.scss","webpack://mikemikeb-website/./src/components/seo.tsx","webpack://mikemikeb-website/./src/pages/blog.module.scss","webpack://mikemikeb-website/./src/pages/blog.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var left = \"header-module--left--fb3c9\";\nexport var navLink = \"header-module--navLink--e54d2\";\nexport var pageWrapper = \"header-module--pageWrapper--3e268\";\nexport var separate = \"header-module--separate--cd165\";","import { Link } from 'gatsby';\nimport React from 'react';\nimport * as styles from './header.module.scss';\n\nconst Header = () => (\n  <header>\n    <div className={styles.separate}>\n      <div className={styles.left}>\n        <Link className={styles.navLink} to=\"/\">Home</Link>\n        <Link className={styles.navLink} to=\"/work\">Resume</Link>\n        <Link className={styles.navLink} to=\"/3d\">Art</Link>\n        <Link className={styles.navLink} to=\"/blog\">Blog</Link>\n      </div>\n      <div className={styles.right}>\n        <h1>Mike Belousov</h1>\n      </div>\n    </div>\n    <hr/>\n  </header>\n);\n\n\nexport default Header;\n\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport SEO from \"./seo\"\nimport * as styles from \"./layout.module.scss\"\n\ninterface LayoutProps {\n  pageTitle: string\n}\n\nconst Layout = ({\n  pageTitle,\n  children,\n}: React.PropsWithChildren<LayoutProps>) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <div className={styles.pageWrapper}>\n      <SEO title={pageTitle} />\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <main>{children}</main>\n    </div>\n  )\n}\nexport default Layout\n","// extracted by mini-css-extract-plugin\nexport var pageWrapper = \"layout-module--pageWrapper--b70ac\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\n\nfunction SEO(props: SEO.Props) {\n  const description = props.description ?? \"\"\n  const lang = props.lang ?? \"en\"\n  const meta = props.meta ?? []\n  const {title} = props\n\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\ndeclare namespace SEO {\n  interface Props {\n    description?: string;\n    lang?: string;\n    meta?: {name: string; content: string}[];\n    title: string;\n  }\n}\n\nexport default SEO\n\n","// extracted by mini-css-extract-plugin\nexport var blogLink = \"blog-module--blogLink--6573c\";","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport * as styles from './blog.module.scss'\n\nexport default function(props: any) {\n  const perYear = React.useMemo(\n    () =>\n      props.data.allMarkdownRemark.edges.reduce((prev, { node }) => {\n        const [year] = node.frontmatter.date.match(/\\d+$/)\n        const key = year\n        if (!prev.has(key)) prev.set(key, [])\n        prev.get(key).push(node)\n        return prev\n      }, new Map<string, string[]>()),\n    []\n  )\n\n  return (\n    <Layout pageTitle=\"Blog\">\n      {Array.from(perYear.entries(), ([year, edges]) => (\n        <div key={year}>\n          {year}\n          <ul>\n            {edges.map((node, key) => (\n              <li key={key}>\n                <a href={node.fields.slug} className={styles.blogLink}>\n                  <strong>{node.frontmatter.title}</strong>\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ))}\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      limit: 100\n    ) {\n      edges {\n        node {\n          html\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["left","navLink","separate","Header","React","className","styles","Link","to","_ref","pageTitle","children","data","useStaticQuery","SEO","title","siteTitle","site","siteMetadata","props","_props$description","_props$lang","_props$meta","description","lang","meta","metaDescription","Helmet","htmlAttributes","titleTemplate","name","content","property","author","concat","blogLink","perYear","allMarkdownRemark","edges","reduce","prev","node","year","frontmatter","date","match","key","has","set","get","push","Map","Layout","Array","from","entries","_ref2","map","href","fields","slug"],"sourceRoot":""}