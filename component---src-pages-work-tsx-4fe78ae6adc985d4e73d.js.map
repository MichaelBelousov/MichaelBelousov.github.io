{"version":3,"file":"component---src-pages-work-tsx-4fe78ae6adc985d4e73d.js","mappings":"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","sources":["webpack://mikemikeb-website/./src/components/header.module.scss","webpack://mikemikeb-website/./src/components/header.tsx","webpack://mikemikeb-website/./src/components/layout.tsx","webpack://mikemikeb-website/./src/components/layout.module.scss","webpack://mikemikeb-website/./src/components/seo.tsx","webpack://mikemikeb-website/./src/pages/work.tsx","webpack://mikemikeb-website/./src/pages/work.module.scss"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var left = \"header-module--left--fb3c9\";\nexport var navLink = \"header-module--navLink--e54d2\";\nexport var pageWrapper = \"header-module--pageWrapper--3e268\";\nexport var separate = \"header-module--separate--cd165\";","import { Link } from 'gatsby';\nimport React from 'react';\nimport * as styles from './header.module.scss';\n\nconst Header = () => (\n  <header>\n    <div className={styles.separate}>\n      <div className={styles.left}>\n        <Link className={styles.navLink} to=\"/\">Home</Link>\n        <Link className={styles.navLink} to=\"/work\">Resume</Link>\n        <Link className={styles.navLink} to=\"/3d\">Art</Link>\n        <Link className={styles.navLink} to=\"/blog\">Blog</Link>\n      </div>\n      <div className={styles.right}>\n        <h1>Mike Belousov</h1>\n      </div>\n    </div>\n    <hr/>\n  </header>\n);\n\n\nexport default Header;\n\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport SEO from \"./seo\"\nimport * as styles from \"./layout.module.scss\"\n\ninterface LayoutProps {\n  pageTitle: string\n}\n\nconst Layout = ({\n  pageTitle,\n  children,\n}: React.PropsWithChildren<LayoutProps>) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <div className={styles.pageWrapper}>\n      <SEO title={pageTitle} />\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <main>{children}</main>\n    </div>\n  )\n}\nexport default Layout\n","// extracted by mini-css-extract-plugin\nexport var pageWrapper = \"layout-module--pageWrapper--b70ac\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\n\nfunction SEO(props: SEO.Props) {\n  const description = props.description ?? \"\"\n  const lang = props.lang ?? \"en\"\n  const meta = props.meta ?? []\n  const {title} = props\n\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\ndeclare namespace SEO {\n  interface Props {\n    description?: string;\n    lang?: string;\n    meta?: {name: string; content: string}[];\n    title: string;\n  }\n}\n\nexport default SEO\n\n","import React, { useLayoutEffect, useState } from 'react'\nimport * as styles from './work.module.scss'\nimport Layout from '../components/layout'\n\n// TODO: replace with object? can't remember why I stopped using an object element\n\nconst calcHeight = (windowHeight: number) => {}\n\nconst Work = () => {\n  const [height, setHeight] = useState(/*window.innerHeight*/ '7in')\n\n  useLayoutEffect(() => {\n    const resizePDF = () => {}\n    document.addEventListener('resize', resizePDF)\n    return () => document.removeEventListener('resize', resizePDF)\n  }, [])\n\n  return (\n    <Layout pageTitle=\"Work\">\n      <div className={styles.container}>\n        <h3>Michael Belousov's Resume:</h3>\n        <iframe\n          title=\"mike's resume pdf\"\n          className={styles.pdf}\n          src=\"https://docs.google.com/gview?url=http://github.com/MichaelBelousov/resume/raw/master/resume.pdf&embedded=true\"\n          //frameborder=\"0\"\n          style={{ height }}\n        >\n          <p>\n            {' '}\n            You can't see it apparently. My resume as a PDF should be at my\n            github page,\n            <a href=\"http://github.com/MichaelBelousov/resume\">here</a>.\n          </p>\n        </iframe>\n        <p>\n          Here is a non-exhaustive list of tools that I am an\n          advanced user of.\n        </p>\n        <ul>\n          {[\n            'C++',\n            'C',\n            'Python',\n            'Bash',\n            'TypeScript+JavaScript',\n            'Node.js',\n            'Electron',\n            'git',\n            'Rust',\n            'Blender',\n            'GNU/Linux',\n            'React.js',\n            'Vue.js',\n            'Gatsby',\n            'HTML5, CSS, Sass, SVG',\n            'Webpack',\n            'Eslint',\n            'elm-lang',\n            'PostgreSQL',\n            'MySQL',\n            'SQLite',\n            'MongoDB',\n            'Java',\n            'LaTeX',\n            'Gitlab',\n            'Azure',\n            'lex/flex/reflex, yacc/Bison',\n            'LLVM',\n            '.NET, C#',\n            'Zig',\n            'Godot',\n            'Unreal Engine',\n          ].map(s => (\n            <li key={s}>{s}</li>\n          ))}\n        </ul>\n\n        <p>Tools I'd like to spend more time with:</p>\n        <ul>\n          {['Haskell', 'Clojure', 'Svelte', 'Tauri'].map(s => (\n            <li key={s}>{s}</li>\n          ))}\n        </ul>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Work\n","// extracted by mini-css-extract-plugin\nexport var container = \"work-module--container--6017a\";\nexport var pdf = \"work-module--pdf--1900a\";"],"names":["left","navLink","separate","Header","React","className","styles","Link","to","_ref","pageTitle","children","data","useStaticQuery","SEO","title","siteTitle","site","siteMetadata","props","_props$description","_props$lang","_props$meta","description","lang","meta","metaDescription","Helmet","htmlAttributes","titleTemplate","name","content","property","author","concat","Work","height","setHeight","useState","useLayoutEffect","resizePDF","document","addEventListener","removeEventListener","Layout","src","style","href","map","s","key"],"sourceRoot":""}